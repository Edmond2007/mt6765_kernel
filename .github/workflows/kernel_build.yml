name: Redmi 9C NFC NetHunter Kernel Build

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Source Code
      - name: Checkout Source Code
        uses: actions/checkout@v4

      # Step 2: Set up Build Environment
      - name: Set up Build Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y bc bison build-essential cpio \
          flex libncurses-dev python3 python3-pip wget git

      # Step 3: Download and Set Up Clang Toolchain
      - name: Download and Extract Clang Toolchain
        run: |
          mkdir -p toolchains
          curl -LO https://github.com/llvm/llvm-project/releases/download/llvmorg-16.0.0/clang+llvm-16.0.0-x86_64-linux-gnu-ubuntu-20.04.tar.xz
          tar -xf clang+llvm-16.0.0-x86_64-linux-gnu-ubuntu-20.04.tar.xz -C toolchains --strip-components=1
          export PATH=$GITHUB_WORKSPACE/toolchains/bin:$PATH
          echo "PATH=$GITHUB_WORKSPACE/toolchains/bin:$PATH" >> $GITHUB_ENV

      # Step 4: Configure Kernel
      - name: Configure Kernel
        run: |
          export ARCH=arm64
          export CROSS_COMPILE=aarch64-linux-gnu-
          make angelican_defconfig

      # Step 5: Build Kernel
      - name: Build Kernel
        run: |
          export ARCH=arm64
          export CROSS_COMPILE=aarch64-linux-gnu-
          export PATH=$GITHUB_WORKSPACE/toolchains/bin:$PATH
          make -j$(nproc) Image.gz-dtb

      # Step 6: Upload Kernel Artifact
      - name: Upload Kernel Artifact
        uses: actions/upload-artifact@v3
        with:
          name: redmi9c-kernel
          path: arch/arm64/boot/Image.gz-dtb

