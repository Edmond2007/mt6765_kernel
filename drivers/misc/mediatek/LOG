sensors-1.0/accelerometer/mpu6050g/mpu6050.c:#define GSE_LOG(fmt, args...)  
sensors-1.0/accelerometer/mpu6050g/mpu6050.c:#define GSE_LOG(fmt, args...)
sensors-1.0/accelerometer/mpu6050g/mpu6050.c:		GSE_LOG("Sensor power status is newest!\n");
sensors-1.0/accelerometer/mpu6050g/mpu6050.c:		GSE_LOG("set power mode ok %d!\n", databuf[0]);
sensors-1.0/accelerometer/mpu6050g/mpu6050.c:		GSE_LOG("[%08X %08X %08X] => [%5d %5d %5d]\n", data[MPU6050_AXIS_X],
sensors-1.0/accelerometer/mpu6050g/mpu6050.c:					GSE_LOG("add [%2d] [%5d %5d %5d] => [%5d %5d %5d]\n", priv->fir.num,
sensors-1.0/accelerometer/mpu6050g/mpu6050.c:					GSE_LOG("add [%2d] [%5d %5d %5d] => [%5d %5d %5d] : [%5d %5d %5d]\n",
sensors-1.0/accelerometer/mpu6050g/mpu6050.c:	/* GSE_LOG("offesx=%x, y=%x, z=%x",ofs[0],ofs[1],ofs[2]); */
sensors-1.0/accelerometer/mpu6050g/mpu6050.c:	GSE_LOG("OLDOFF: (%+3d %+3d %+3d): (%+3d %+3d %+3d) / (%+3d %+3d %+3d)\n",
sensors-1.0/accelerometer/mpu6050g/mpu6050.c:	GSE_LOG("UPDATE: (%+3d %+3d %+3d)\n",
sensors-1.0/accelerometer/mpu6050g/mpu6050.c:	GSE_LOG("NEWOFF: (%+3d %+3d %+3d): (%+3d %+3d %+3d) / (%+3d %+3d %+3d)\n",
sensors-1.0/accelerometer/mpu6050g/mpu6050.c:	GSE_LOG("%s 0x%x\n", __func__, databuf[0]);
sensors-1.0/accelerometer/mpu6050g/mpu6050.c:		GSE_LOG("[Gsensor] check reset bit");
sensors-1.0/accelerometer/mpu6050g/mpu6050.c:		GSE_LOG("MPU6050 reg=0x%x, data=0x%x\n", (addr + i), buff[i]);
sensors-1.0/accelerometer/mpu6050g/mpu6050.c:		GSE_LOG("gsensor data: %s!\n", buf);
sensors-1.0/accelerometer/mpu6050g/mpu6050.c:		/*GSE_LOG("format use self[0]\n");*/
sensors-1.0/accelerometer/mpu6050g/mpu6050.c:		/*GSE_LOG("format use self[1]\n");*/
sensors-1.0/accelerometer/mpu6050g/mpu6050.c:		/*GSE_LOG("format use self[2]\n");*/
sensors-1.0/accelerometer/mpu6050g/mpu6050.c:		/*GSE_LOG("format use self[3]\n");*/
sensors-1.0/accelerometer/mpu6050g/mpu6050.c:		GSE_LOG("format unknown use\n");
sensors-1.0/accelerometer/mpu6050g/mpu6050.c:	GSE_LOG("format=0x%x\n", format);
sensors-1.0/accelerometer/mpu6050g/mpu6050.c:	GSE_LOG("X diff is %ld\n", abs(nxt[MPU6050_AXIS_X] - prv[MPU6050_AXIS_X]));
sensors-1.0/accelerometer/mpu6050g/mpu6050.c:	GSE_LOG("Y diff is %ld\n", abs(nxt[MPU6050_AXIS_Y] - prv[MPU6050_AXIS_Y]));
sensors-1.0/accelerometer/mpu6050g/mpu6050.c:	GSE_LOG("Z diff is %ld\n", abs(nxt[MPU6050_AXIS_Z] - prv[MPU6050_AXIS_Z]));
sensors-1.0/accelerometer/mpu6050g/mpu6050.c:	/*GSE_LOG("NORMAL:\n");*/
sensors-1.0/accelerometer/mpu6050g/mpu6050.c:		GSE_LOG("Normal:[%5d %5d %5d]\n", prv[idx].raw[MPU6050_AXIS_X],
sensors-1.0/accelerometer/mpu6050g/mpu6050.c:	/*GSE_LOG("SELFTEST:\n");*/
sensors-1.0/accelerometer/mpu6050g/mpu6050.c:		GSE_LOG("SELFTESt: [%5d %5d %5d]\n", nxt[idx].raw[MPU6050_AXIS_X],
sensors-1.0/accelerometer/mpu6050g/mpu6050.c:	GSE_LOG("X: %5d - %5d = %5d\n", avg_nxt[MPU6050_AXIS_X], avg_prv[MPU6050_AXIS_X],
sensors-1.0/accelerometer/mpu6050g/mpu6050.c:	GSE_LOG("Y: %5d - %5d = %5d\n", avg_nxt[MPU6050_AXIS_Y], avg_prv[MPU6050_AXIS_Y],
sensors-1.0/accelerometer/mpu6050g/mpu6050.c:	GSE_LOG("Z: %5d - %5d = %5d\n", avg_nxt[MPU6050_AXIS_Z], avg_prv[MPU6050_AXIS_Z],
sensors-1.0/accelerometer/mpu6050g/mpu6050.c:		GSE_LOG("SELFTEST : PASS\n");
sensors-1.0/accelerometer/mpu6050g/mpu6050.c:		GSE_LOG("selftest: %d => %d\n", atomic_read(&obj->selftest), tmp);
sensors-1.0/accelerometer/mpu6050g/mpu6050.c:		GSE_LOG("len = %2d, idx = %2d\n", obj->fir.num, obj->fir.idx);
sensors-1.0/accelerometer/mpu6050g/mpu6050.c:			GSE_LOG("[%5d %5d %5d]\n", obj->fir.raw[idx][MPU6050_AXIS_X],
sensors-1.0/accelerometer/mpu6050g/mpu6050.c:		GSE_LOG("sum = [%5d %5d %5d]\n", obj->fir.sum[MPU6050_AXIS_X],
sensors-1.0/accelerometer/mpu6050g/mpu6050.c:		GSE_LOG("avg = [%5d %5d %5d]\n", obj->fir.sum[MPU6050_AXIS_X]/len,
sensors-1.0/accelerometer/mpu6050g/mpu6050.c:			GSE_LOG("Set delay parameter value:%d\n", value);
sensors-1.0/accelerometer/mpu6050g/mpu6050.c:				GSE_LOG("Gsensor device have updated!\n");
sensors-1.0/accelerometer/mpu6050g/mpu6050.c:	GSE_LOG("%s ok\n", __func__);
sensors-1.0/accelerometer/mpu6050g/mpu6050.c:	GSE_LOG("%s ok\n", __func__);
sensors-1.0/accelerometer/mpu6050g/mpu6050.c:	GSE_LOG("mpu6050_enable_nodata OK!\n");
sensors-1.0/accelerometer/mpu6050g/mpu6050.c:	GSE_LOG("mpu6050_set_delay (%d)\n", value);
sensors-1.0/accelerometer/mpu6050g/mpu6050.c:	GSE_LOG("mpu6050 acc set delay = (%d) ok.\n", value);
sensors-1.0/accelerometer/mpu6050g/mpu6050.c:	GSE_LOG("%s: OK\n", __func__);
sensors-1.0/gyroscope/mpu6050gy/mpu6050.c:		* FLPLOGD("read gyro data OK: packet_num:%d, [X:%5d, Y:%5d, Z:%5d]\n", i,
sensors-1.0/gyroscope/mpu6050gy/mpu6050.c:		* FLPLOGD("MPU6050 xSum: %5d,  ySum: %5d, zSum: %5d\n", xSum, ySum, zSum);
sensors-1.0/gyroscope/mpu6050gy/mpu6050.c:	GYRO_LOG("mpu6050 gyro set delay = (%d) ok.\n", value);
sensors-1.0/gyroscope/mpu6050gy/mpu6050.c:	GYRO_LOG("gyro set cali:[%5d %5d %5d]\n", cali[MPU6050_AXIS_X],
sensors-1.0/gyroscope/inc/gyroscope.h:#define GYRO_LOG(fmt, args...)	
sensors-1.0/gyroscope/lsm6ds3hgy/lsm6ds3hgy.c:		HWM_LOG("Reg addr=%x regdata=%x\n", addr, regdata);
sensors-1.0/sensor_cal/sensor_cal_file_io.c:#define SENSOR_CAL_LOG(fmt, args...)
sensors-1.0/sensor_cal/sensor_cal_file_io.c:			SENSOR_CAL_LOG("Undefined sensor type\n");
sensors-1.0/biometric/mt6381/ppg_control_lib.c:#if defined(LOG_PPG_CONTROL_ENABLE)
sensors-1.0/biometric/mt6381/ppg_control_lib.c:#endif				/* #if defined(LOG_PPG_CONTROL_ENABLE) */
sensors-1.0/biometric/mt6381/ppg_control_lib.c:#if defined(LOG_PPG_CONTROL_ENABLE)
sensors-1.0/biometric/mt6381/ppg_control_lib.c:#if defined(LOG_PPG_CONTROL_ENABLE)
sensors-1.0/biometric/mt6381/ppg_control_lib_setting.h:/* #define LOG_PPG_CONTROL_ENABLE */
btif/common/mtk_btif_exp.c: *                      BTIF_DISABLE_LOGGER  - disable btif logger
btif/common/mtk_btif_exp.c: *                      BTIF_ENABLE_LOGGER   - enable btif logger
btif/common/mtk_btif_exp.c: *                      BTIF_DUMP_LOG           - dump log logged by btif
btif/common/mtk_btif_exp.c: *                      BTIF_CLR_LOG             - clear btif log buffer
btif/common/mtk_btif_exp.c:	case BTIF_DISABLE_LOGGER:{
btif/common/mtk_btif_exp.c:	case BTIF_ENABLE_LOGGER:{
btif/common/mtk_btif_exp.c:	case BTIF_DUMP_LOG:{
btif/common/mtk_btif_exp.c:	case BTIF_CLR_LOG:{
btif/common/mtk_btif_exp.c:	case BTIF_ENABLE_RT_LOG:
btif/common/mtk_btif_exp.c:	case BTIF_DISABLE_RT_LOG:
btif/common/mtk_btif_exp.c:	case BTIF_DISABLE_LOGGER:{
btif/common/mtk_btif_exp.c:	case BTIF_ENABLE_LOGGER:{
btif/common/mtk_btif_exp.c:	case BTIF_DUMP_LOG:{
btif/common/mtk_btif_exp.c:	case BTIF_CLR_LOG:{
btif/common/mtk_btif_exp.c:	case BTIF_ENABLE_RT_LOG:
btif/common/mtk_btif_exp.c:	case BTIF_DISABLE_RT_LOG:
btif/common/plat_inc/plat_common.h:#define DBG_LOG_STR_SIZE 256
btif/common/plat_inc/plat_common.h:	char temp_sring[DBG_LOG_STR_SIZE];
btif/common/plat_inc/plat_common.h:	vsnprintf(temp_sring, DBG_LOG_STR_SIZE, str, args);
btif/common/plat_inc/plat_common.h:#define BTIF_LOG_LOUD    4
btif/common/plat_inc/plat_common.h:#define BTIF_LOG_DBG     3
btif/common/plat_inc/plat_common.h:#define BTIF_LOG_INFO    2
btif/common/plat_inc/plat_common.h:#define BTIF_LOG_WARN    1
btif/common/plat_inc/plat_common.h:#define BTIF_LOG_ERR     0
btif/common/mtk_btif.c:static int mtk_btif_dbg_lvl = BTIF_LOG_INFO;
btif/common/mtk_btif.c:#define BTIF_IOCTL_LOG_FUNC_CTRL    _IOWR(BTIF_IOC_MAGIC, 4, int)
btif/common/mtk_btif.c:#define BTIF_IOCTL_RT_LOG_CTRL  _IOWR(BTIF_IOC_MAGIC, 5, int)
btif/common/mtk_btif.c:#define BTIF_IOCTL_LOG_DUMP _IOWR(BTIF_IOC_MAGIC, 6, int)
btif/common/mtk_btif.c:	case BTIF_IOCTL_LOG_FUNC_CTRL:
btif/common/mtk_btif.c:	case BTIF_IOCTL_RT_LOG_CTRL:
btif/common/mtk_btif.c:	case BTIF_IOCTL_LOG_DUMP:
btif/common/mtk_btif.c:		if (y > BTIF_LOG_LOUD)
btif/common/mtk_btif.c:			mtk_btif_dbg_lvl = BTIF_LOG_LOUD;
btif/common/mtk_btif.c:		else if (y < BTIF_LOG_ERR)
btif/common/mtk_btif.c:			mtk_btif_dbg_lvl = BTIF_LOG_WARN;
btif/common/mtk_btif.c:	BTIF_LOG_ENTRY_NUM ? in_index : (BTIF_LOG_ENTRY_NUM -
btif/common/mtk_btif.c:					 in_index) % BTIF_LOG_ENTRY_NUM;
btif/common/mtk_btif.c:			out_index %= BTIF_LOG_ENTRY_NUM;
btif/common/mtk_btif.c:	memcpy(p_log_buf->buffer, p_buf, len > BTIF_LOG_SZ ? BTIF_LOG_SZ : len);
btif/common/mtk_btif.c:	    BTIF_LOG_ENTRY_NUM ? BTIF_LOG_ENTRY_NUM : p_log_que->size;
btif/common/mtk_btif.c:	p_log_que->in %= BTIF_LOG_ENTRY_NUM;
btif/common/mtk_btif.c:		len = len > BTIF_LOG_SZ ? BTIF_LOG_SZ : len;
btif/common/mtk_btif.c:	    BTIF_LOG_ENTRY_NUM ? in_index : (BTIF_LOG_ENTRY_NUM -
btif/common/mtk_btif.c:					     in_index) % BTIF_LOG_ENTRY_NUM;
btif/common/mtk_btif.c:	if (out_index + dump_size > BTIF_LOG_ENTRY_NUM) {
btif/common/mtk_btif.c:		int tail_num = BTIF_LOG_ENTRY_NUM - out_index;
btif/common/mtk_btif.c:		p_tx_queue = kmalloc_array(BTIF_LOG_ENTRY_NUM,
btif/common/mtk_btif.c:		p_rx_queue = kmalloc_array(BTIF_LOG_ENTRY_NUM,
btif/common/inc/mtk_btif.h:#ifdef CONFIG_FUCK_MTK_LOG
btif/common/inc/mtk_btif.h:#define BTIF_LOG_ENTRY_NUM 12
btif/common/inc/mtk_btif.h:#define BTIF_LOG_ENTRY_NUM 30
btif/common/inc/mtk_btif.h:#define BTIF_LOG_SZ  16
btif/common/inc/mtk_btif.h:	unsigned char buffer[BTIF_LOG_SZ];
btif/common/inc/mtk_btif_exp.h:	BTIF_DISABLE_LOGGER = 0,
btif/common/inc/mtk_btif_exp.h:	BTIF_ENABLE_LOGGER = BTIF_DISABLE_LOGGER + 1,
btif/common/inc/mtk_btif_exp.h:	BTIF_DUMP_LOG = BTIF_ENABLE_LOGGER + 1,
btif/common/inc/mtk_btif_exp.h:	BTIF_CLR_LOG = BTIF_DUMP_LOG + 1,
btif/common/inc/mtk_btif_exp.h:	BTIF_DUMP_BTIF_REG = BTIF_CLR_LOG + 1,
btif/common/inc/mtk_btif_exp.h:	BTIF_ENABLE_RT_LOG = BTIF_DUMP_BTIF_REG + 1,
btif/common/inc/mtk_btif_exp.h:	BTIF_DISABLE_RT_LOG = BTIF_ENABLE_RT_LOG + 1,
btif/common/inc/mtk_btif_exp.h:	BTIF_DUMP_BTIF_IRQ = BTIF_DISABLE_RT_LOG + 1,
btif/common/inc/mtk_btif_exp.h: *                      BTIF_DISABLE_LOGGER  - disable btif logger
btif/common/inc/mtk_btif_exp.h: *                      BTIF_ENABLE_LOGGER   - enable btif logger
btif/common/inc/mtk_btif_exp.h: *                      BTIF_DUMP_LOG           - dump log logged by btif
btif/common/inc/mtk_btif_exp.h: *                      BTIF_CLR_LOG             - clear btif log buffer
m4u/2.0/m4u.c:	M4ULOG_MID("addr=0x%lx, name=%s, pid=0x%x,", addr, current->comm,
m4u/2.0/m4u.c:		M4ULOG_MID("find vma: 0x%16lx-0x%16lx, flags=0x%lx\n",
m4u/2.0/m4u.c:			M4ULOG_MID(
m4u/2.0/m4u.c:/* M4ULOG_MID("%s va: 0x%lx, vma->vm_start=0x%lx, vma->vm_end=0x%lx\n",*/
m4u/2.0/m4u.c:			M4ULOG_MID(
m4u/2.0/m4u.c:	M4ULOG_LOW(
m4u/2.0/m4u.c:			M4ULOG_MID(" from user space vmalloc, va = 0x%lx", va);
m4u/2.0/m4u.c:			M4ULOG_MID(" from kernel space vmalloc, va = 0x%lx", va);
m4u/2.0/m4u.c:		M4ULOG_MID(
m4u/2.0/m4u.c:		M4ULOG_LOW("%s,mva = 0x%x\n", __func__, mva);
m4u/2.0/m4u.c:	M4ULOG_MID(
m4u/2.0/m4u.c:			M4ULOG_MID(
m4u/2.0/m4u.c:	M4ULOG_MID("%s: larb=%d,module=%s,mva=0x%x, size=%d\n", __func__,
m4u/2.0/m4u.c:			M4ULOG_MID(
m4u/2.0/m4u.c:	M4ULOG_MID(
m4u/2.0/m4u.c:	M4ULOG_LOW(
m4u/2.0/m4u.c:	M4ULOG_LOW("mva_unmap_kernel:mva=0x%x,size=0x%x,va=0x%lx\n", mva,
m4u/2.0/m4u.c:	M4ULOG_HIGH("%s call CMD_M4UTL_INIT, nonsec_pt_pa: 0x%lx\n",
m4u/2.0/m4u.c:	M4ULOG_HIGH("%s ret:0x%x, rsp:0x%x\n",
m4u/2.0/m4u_sec_gp.c:	M4ULOG_HIGH("%s, Notify 0x%x\n", __func__, ctx->m4u_msg->cmd);
m4u/2.0/m4u_sec_gp.c:	M4ULOG_HIGH("%s, get_resp %x\n", __func__, ctx->m4u_msg->cmd);
m4u/2.0/m4u_sec_gp.c:	M4ULOG_HIGH("%s, ta teec_initialize_context\n", __func__);
m4u/2.0/m4u_sec_gp.c:		M4ULOG_HIGH("teec_allocate_shared_memory buf: 0x%p\n",
m4u/2.0/m4u_sec_gp.c:			&gp_ctx->uuid, TEEC_LOGIN_PUBLIC, NULL, NULL, NULL);
m4u/2.0/m4u_sec_gp.c:	M4ULOG_HIGH("%s, open TCI session success\n", __func__);
m4u/2.0/m4u_sec_gp.c:	M4ULOG_HIGH("%s:ta open session success\n", __func__);
m4u/2.0/m4u_pgtable.c:		M4ULOG_LOW("%s: pgd: 0x%lx, pte_va:0x%lx, pte_pa: 0x%lx, value: 0x%x\n",
m4u/2.0/m4u_pgtable.c:		M4ULOG_LOW("m4u pte allocated by others: pgd=0x%p\n", pgd);
m4u/2.0/m4u_pgtable.c:	M4ULOG_LOW("%s: mva: 0x%x, pgd: 0x%lx (0x%lx + 0x%x), pa: 0x%pa, value: 0x%x\n",
m4u/2.0/m4u_pgtable.c:	M4ULOG_LOW("%s: mva: 0x%x, pgd: 0x%lx (0x%lx + 0x%x), pa: 0x%pa, value: 0x%x\n",
m4u/2.0/m4u_pgtable.c:	M4ULOG_LOW("%s: mva: 0x%x, pte: 0x%p (0x%lx + 0x%x), pa: 0x%pa, value: 0x%x\n",
m4u/2.0/m4u_pgtable.c:	M4ULOG_LOW("%s: mva: 0x%x, pte: 0x%p (0x%lx + 0x%x), pa: 0x%pa, value: 0x%x\n",
m4u/2.0/m4u_pgtable.c:		M4ULOG_LOW("mapping: iova 0x%x pa 0x%pa pgsize %lu\n", iova, &paddr, pgsize);
m4u/2.0/m4u_pgtable.c:		M4ULOG_LOW("%s: for_each_sg i: %d, len: %d, mva: %llu\n", __func__, i, len, map_mva);
m4u/2.0/m4u_mva.c:	M4ULOG_HIGH("[M4U_K] dump raw data of mvaGraph:============>\n");
m4u/2.0/m4u_mva.c:		M4ULOG_HIGH("0x%4x: 0x%08x\n", i, mvaGraph[i]);
m4u/2.0/m4u_mva.c:	M4ULOG_HIGH("[M4U_K] mva allocation info dump:====================>\n");
m4u/2.0/m4u_mva.c:	M4ULOG_HIGH("start      size     blocknum    busy\n");
m4u/2.0/m4u_mva.c:		M4ULOG_HIGH("0x%08x  0x%08x  %4d    %d\n", addr, size, nr, is_busy);
m4u/2.0/m4u_mva.c:	M4ULOG_HIGH("\n");
m4u/2.0/m4u_mva.c:	M4ULOG_HIGH("[M4U_K] mva alloc summary: (unit: blocks)========================>\n");
m4u/2.0/m4u_mva.c:	M4ULOG_HIGH("free: %d , alloc: %d, total: %d\n", nr_free, nr_alloc, nr_free + nr_alloc);
m4u/2.0/m4u_mva.c:	M4ULOG_HIGH("[M4U_K] free region fragments in 2^x blocks unit:===============\n");
m4u/2.0/m4u_mva.c:	M4ULOG_HIGH("  0     1     2     3     4     5     6     7     8     9     10    11\n");
m4u/2.0/m4u_mva.c:	M4ULOG_HIGH("%4d  %4d  %4d  %4d  %4d  %4d  %4d  %4d  %4d  %4d  %4d  %4d\n",
m4u/2.0/m4u_mva.c:	M4ULOG_HIGH("[M4U_K] mva alloc dump done=========================<\n");
m4u/2.0/m4u_mva.c:	M4ULOG_MID("m4u_do_mva_alloc_start_from mva:0x%x, startIdx=%d, size = %d, nr= %d\n", mva, startIdx, size, nr);
m4u/2.0/m4u_mva.c:	M4ULOG_MID("region_start: %d, region_end= %d, region= %d, next_region_start= %d, search start: %d\n",
m4u/3.2/m4u.c:	M4ULOG_MID("addr=0x%lx, name=%s, pid=0x%x,",
m4u/3.2/m4u.c:		M4ULOG_MID("find vma: 0x%16lx-0x%16lx, flags=0x%lx\n",
m4u/3.2/m4u.c:			M4ULOG_MID("pa error, pa: 0x%lx\n",
m4u/3.2/m4u.c:			M4ULOG_MID("va: 0x%lx, align: 0x%lx\n",
m4u/3.2/m4u.c:			/* M4ULOG_MID("%s va: 0x%lx, vma->vm_start=0x%lx\n",*/
m4u/3.2/m4u.c:			M4ULOG_MID("vma->vm_end=0x%lx\n",
m4u/3.2/m4u.c:			M4ULOG_MID("alloc_mva VM_PFNMAP");
m4u/3.2/m4u.c:			M4ULOG_MID("va=0x%lx, page_num=0x%x\n",
m4u/3.2/m4u.c:	M4ULOG_LOW(
m4u/3.2/m4u.c:			M4ULOG_MID("from user space vmalloc, va = 0x%lx", va);
m4u/3.2/m4u.c:			M4ULOG_MID(
m4u/3.2/m4u.c:		M4ULOG_LOW("%s,mva = 0x%x, domain=%u\n",
m4u/3.2/m4u.c:	M4ULOG_MID(
m4u/3.2/m4u.c:			M4ULOG_MID("[kernel_va_debug] map va\n");
m4u/3.2/m4u.c:			M4ULOG_MID("mva=0x%x, kernel_va=0x%lx,size=0x%x\n",
m4u/3.2/m4u.c:	M4ULOG_MID(
m4u/3.2/m4u.c:			M4ULOG_MID("[kernel_va_debug] unmap va\n");
m4u/3.2/m4u.c:			M4ULOG_MID("mva=0x%x, kernel_va=0x%lx, size=0x%x\n",
m4u/3.2/m4u.c:	M4ULOG_MID(
m4u/3.2/m4u.c:	M4ULOG_LOW("mva_map_kernel:mva=0x%x,size=0x%x\n",
m4u/3.2/m4u.c:	M4ULOG_LOW("mva_map_kernel:map_va=0x%lx,map_size=0x%x\n",
m4u/3.2/m4u.c:	M4ULOG_LOW("mva_unmap_kernel:mva=0x%x,size=0x%x,va=0x%lx\n",
m4u/3.2/m4u.c:	M4ULOG_HIGH(
m4u/3.2/m4u.c:	M4ULOG_HIGH("%s ret:0x%x, rsp:0x%x\n",
m4u/3.2/m4u_sec_gp.c:	M4ULOG_HIGH("%s, Notify 0x%x\n", __func__, ctx->m4u_msg->cmd);
m4u/3.2/m4u_sec_gp.c:	M4ULOG_HIGH("%s, get_resp %x\n", __func__, ctx->m4u_msg->cmd);
m4u/3.2/m4u_sec_gp.c:	M4ULOG_HIGH("%s, ta teec_initialize_context\n", __func__);
m4u/3.2/m4u_sec_gp.c:		M4ULOG_HIGH(
m4u/3.2/m4u_sec_gp.c:				       TEEC_LOGIN_PUBLIC, NULL, NULL, NULL);
m4u/3.2/m4u_sec_gp.c:	M4ULOG_HIGH("%s, open TCI session success\n", __func__);
m4u/3.2/m4u_sec_gp.c:	M4ULOG_HIGH("%s:ta open session success\n", __func__);
m4u/3.2/m4u_pgtable.c:		M4ULOG_LOW(
m4u/3.2/m4u_pgtable.c:		M4ULOG_LOW("m4u pte allocated by others: pgd=0x%p\n", pgd);
m4u/3.2/m4u_pgtable.c:	M4ULOG_LOW("%s: mva: 0x%x, pgd: 0x%lx (0x%lx + 0x%x)\n",
m4u/3.2/m4u_pgtable.c:	M4ULOG_LOW("pa: 0x%pa, value: 0x%x\n",
m4u/3.2/m4u_pgtable.c:	M4ULOG_LOW("%s: mva: 0x%x, pgd: 0x%lx (0x%lx + 0x%x)\n",
m4u/3.2/m4u_pgtable.c:	M4ULOG_LOW("pa: 0x%pa, value: 0x%x\n",
m4u/3.2/m4u_pgtable.c:	M4ULOG_LOW(
m4u/3.2/m4u_pgtable.c:	M4ULOG_LOW(
m4u/3.2/m4u_pgtable.c:		M4ULOG_LOW("mapping: iova 0x%x pa 0x%pa pgsize %lu\n",
m4u/3.2/m4u_pgtable.c:		M4ULOG_LOW("%s: for_each_sg i: %d, len: %d, mva: %llu\n",
m4u/3.2/m4u_mva.c:	M4ULOG_LOW("%s:start = 0x%x, end = 0x%x nr = %x.\n",
m4u/3.2/m4u_mva.c:		M4ULOG_LOW("input region intersects to ccu region\n");
m4u/3.2/m4u_mva.c:	M4ULOG_HIGH("[M4U_K] dump raw data of mvaGraph:============>\n");
m4u/3.2/m4u_mva.c:			M4ULOG_HIGH("0x%4x: 0x%08x\n", i, mvaGraph[i][j]);
m4u/3.2/m4u_mva.c:	M4ULOG_HIGH(
m4u/3.2/m4u_mva.c:	M4ULOG_HIGH("start      size     blocknum    busy\n");
m4u/3.2/m4u_mva.c:		M4ULOG_HIGH("0x%08x  0x%08x  %4d    %d\n",
m4u/3.2/m4u_mva.c:	M4ULOG_HIGH("\n");
m4u/3.2/m4u_mva.c:	M4ULOG_HIGH(
m4u/3.2/m4u_mva.c:	M4ULOG_HIGH(
m4u/3.2/m4u_mva.c:	M4ULOG_HIGH(
m4u/3.2/m4u_mva.c:	M4ULOG_HIGH(
m4u/3.2/m4u_mva.c:	M4ULOG_HIGH(
m4u/3.2/m4u_mva.c:	M4ULOG_HIGH(
m4u/3.2/m4u_mva.c:		M4ULOG_MID(
m4u/3.2/m4u_mva.c:	M4ULOG_MID(
m4u/3.2/m4u_mva.c:	M4ULOG_MID(
m4u/3.2/m4u_mva.c:	M4ULOG_MID(
m4u/3.2/m4u_mva.c:	M4ULOG_MID(
m4u/3.2/m4u_mva.c:	M4ULOG_MID(
m4u/2.4/m4u.c:	M4U_PRINT_LOG_OR_SEQ(data, "0x%-8x, 0x%-8x, 0x%lx, 0x%-8x, 0x%x,",
m4u/2.4/m4u.c:	M4U_PRINT_LOG_OR_SEQ(data, " %s, 0x%x, 0x%x, 0x%x\n",
m4u/2.4/m4u.c:	M4U_PRINT_LOG_OR_SEQ(seq, "\ndump mva allocated info ========>\n");
m4u/2.4/m4u.c:	M4U_PRINT_LOG_OR_SEQ(seq, "mva_start   mva_end          va      size");
m4u/2.4/m4u.c:	M4U_PRINT_LOG_OR_SEQ(seq,
m4u/2.4/m4u.c:	M4U_PRINT_LOG_OR_SEQ(seq, " dump mva allocated info done ========>\n");
m4u/2.4/m4u.c:	M4ULOG_MID("addr=0x%lx, name=%s, pid=0x%x,", addr, current->comm,
m4u/2.4/m4u.c:		M4ULOG_MID("find vma: 0x%16lx-0x%16lx, flags=0x%lx\n",
m4u/2.4/m4u.c:			M4ULOG_MID
m4u/2.4/m4u.c:			/* M4ULOG_MID("%s va: 0x%lx, */
m4u/2.4/m4u.c:			M4ULOG_MID
m4u/2.4/m4u.c:	M4ULOG_LOW
m4u/2.4/m4u.c:			M4ULOG_MID(" from user space vmalloc, va = 0x%lx", va);
m4u/2.4/m4u.c:			M4ULOG_MID(" from kernel space vmalloc, va = 0x%lx",
m4u/2.4/m4u.c:		M4ULOG_LOW("%s,mva = 0x%x\n", __func__, mva);
m4u/2.4/m4u.c:	M4ULOG_MID("%s: pMvaInfo=0x%p, larb=%d,module=%s,va=0x%lx,",
m4u/2.4/m4u.c:	M4ULOG_MID("sg=0x%p,size=%d,prot=0x%x,flags=0x%x,mva=0x%x\n",
m4u/2.4/m4u.c:			M4ULOG_MID
m4u/2.4/m4u.c:	M4ULOG_MID("m4u_dealloc_mva: larb=%d,module=%s,mva=0x%x, size=%d\n",
m4u/2.4/m4u.c:			M4ULOG_MID
m4u/2.4/m4u.c:	M4ULOG_MID
m4u/2.4/m4u.c:	M4ULOG_LOW
m4u/2.4/m4u.c:	M4ULOG_LOW("mva_unmap_kernel:mva=0x%x,size=0x%x,va=0x%lx\n", mva, size,
m4u/2.4/m4u.c:	M4ULOG_HIGH(
m4u/2.4/m4u_sec_gp.c:	M4ULOG_HIGH("%s, Notify 0x%x\n", __func__, ctx->m4u_msg->cmd);
m4u/2.4/m4u_sec_gp.c:	M4ULOG_HIGH("%s, get_resp %x\n", __func__, ctx->m4u_msg->cmd);
m4u/2.4/m4u_sec_gp.c:	M4ULOG_HIGH("%s, ta teec_initialize_context\n", __func__);
m4u/2.4/m4u_sec_gp.c:		M4ULOG_HIGH(
m4u/2.4/m4u_sec_gp.c:				       TEEC_LOGIN_PUBLIC, NULL, NULL, NULL);
m4u/2.4/m4u_sec_gp.c:	M4ULOG_HIGH("%s, open TCI session success\n", __func__);
m4u/2.4/m4u_sec_gp.c:	M4ULOG_HIGH("%s:ta open session success\n", __func__);
m4u/2.4/m4u_pgtable.c:		M4U_PRINT_LOG_OR_SEQ(data, "va(0x%x)", info->mva);
m4u/2.4/m4u_pgtable.c:		M4U_PRINT_LOG_OR_SEQ(data, "-->pgd(0x%x)",
m4u/2.4/m4u_pgtable.c:			M4U_PRINT_LOG_OR_SEQ(data, "-->pte(0x%x)",
m4u/2.4/m4u_pgtable.c:		M4U_PRINT_LOG_OR_SEQ(data, " invalid\n");
m4u/2.4/m4u_pgtable.c:		M4U_PRINT_LOG_OR_SEQ(data, "mva(0x%x)-->pgd(0x%x)-->",
m4u/2.4/m4u_pgtable.c:		M4U_PRINT_LOG_OR_SEQ(data, "pte(0x%x)-->pa(0x%lx) small\n",
m4u/2.4/m4u_pgtable.c:		M4U_PRINT_LOG_OR_SEQ(data, "mva(0x%x)-->pgd(0x%x)-->",
m4u/2.4/m4u_pgtable.c:		M4U_PRINT_LOG_OR_SEQ(data, "pte(0x%x)-->pa(0x%lx) large\n",
m4u/2.4/m4u_pgtable.c:		M4U_PRINT_LOG_OR_SEQ(data,
m4u/2.4/m4u_pgtable.c:		M4U_PRINT_LOG_OR_SEQ(data,
m4u/2.4/m4u_pgtable.c:	M4U_PRINT_LOG_OR_SEQ(seq, "m4u dump pgtable start ==============>\n");
m4u/2.4/m4u_pgtable.c:	M4U_PRINT_LOG_OR_SEQ(seq, "m4u dump pgtable done ==============>\n");
m4u/2.4/m4u_pgtable.c:		M4ULOG_LOW
m4u/2.4/m4u_pgtable.c:		M4ULOG_LOW("m4u pte allocated by others: pgd=0x%p\n", pgd);
m4u/2.4/m4u_pgtable.c:	M4ULOG_LOW
m4u/2.4/m4u_pgtable.c:	M4ULOG_LOW
m4u/2.4/m4u_pgtable.c:	M4ULOG_LOW
m4u/2.4/m4u_pgtable.c:	M4ULOG_LOW
m4u/2.4/m4u_pgtable.c:		M4ULOG_LOW("mapping: iova 0x%x pa 0x%pa pgsize %lu\n", iova,
m4u/2.4/m4u_pgtable.c:		M4ULOG_LOW("%s: for_each_sg i: %d, len: %d, mva: %llu\n",
m4u/2.4/m4u_mva.c:	M4ULOG_HIGH("[M4U_K] dump raw data of mvaGraph:============>\n");
m4u/2.4/m4u_mva.c:		M4ULOG_HIGH("0x%4x: 0x%08x\n", i, mvaGraph[i]);
m4u/2.4/m4u_mva.c:	M4ULOG_HIGH
m4u/2.4/m4u_mva.c:	M4ULOG_HIGH
m4u/2.4/m4u_mva.c:		M4ULOG_HIGH("0x%08x  0x%08x  0x%08x  %4d   %d   %4d   %8d\n",
m4u/2.4/m4u_mva.c:	M4ULOG_HIGH("\n");
m4u/2.4/m4u_mva.c:	M4ULOG_HIGH
m4u/2.4/m4u_mva.c:	M4ULOG_HIGH("free: %d , alloc: %d, total: %d\n", nr_free, nr_alloc,
m4u/2.4/m4u_mva.c:	M4ULOG_HIGH
m4u/2.4/m4u_mva.c:	M4ULOG_HIGH
m4u/2.4/m4u_mva.c:	M4ULOG_HIGH
m4u/2.4/m4u_mva.c:	M4ULOG_HIGH
m4u/mt6765/m4u_reg.h:#define F_MMU_MTLB_LOGIC_STALL_DCM    F_BIT_SET(14)
m4u/mt6765/m4u_reg.h:#define F_MMU_L2_LOGIC_STALL_DCM    F_BIT_SET(9)
m4u/mt6765/m4u_reg.h:#define F_MMU_MTLB_LOGIC_DCM    F_BIT_SET(6)
m4u/mt6765/m4u_reg.h:#define F_MMU_L2_LOGIC_DCM    F_BIT_SET(1)
m4u/mt6765/m4u_hw.c:	M4ULOG_MID("m4u dump RS information =====>\n");
m4u/mt6765/m4u_hw.c:	M4ULOG_MID("id mva        valid   port-id       pa         pte     larb  w/r  other-status\n");
m4u/mt6765/m4u_hw.c:		M4ULOG_MID("%d: 0x%8x %5d   0x%3x    0x%8x   0x%8x %d     %d  0x%3x\n", i,
m4u/mt6765/m4u_hw.c:	M4ULOG_MID("m4u dump RS information done =====>\n");
m4u/mt6765/m4u_hw.c:	M4ULOG_MID("m4u dump RS information index: %d=====>\n", m4u_slave_id);
m4u/mt6765/m4u_hw.c:	M4ULOG_MID("m4u dump RS information done =====>\n");
m4u/mt6765/m4u_hw.c:	M4ULOG_HIGH("mau_start_monitor [%d], start=0x%x, end=0x%x, write: %d, port_mask=0x%x, larb_mask=0x%x\n",
m4u/mt6765/m4u_hw.c:		M4ULOG_HIGH("mau_assert in set %d\n", mau);
m4u/mt6765/m4u_hw.c:		M4ULOG_HIGH("id=0x%x(%s),addr=0x%x,b32=0x%x\n", assert_id,
m4u/mt6765/m4u_hw.c:		M4ULOG_HIGH
m4u/mt6765/m4u_hw.c:		M4ULOG_MID("mau no assert in set %d\n", mau);
m4u/mt6765/m4u_hw.c:	M4ULOG_HIGH("dump main tlb: m4u %d  ====>\n", m4u_id);
m4u/mt6765/m4u_hw.c:		M4ULOG_HIGH("%d:0x%x:0x%x  ", i, tlb.tag, tlb.desc);
m4u/mt6765/m4u_hw.c:			M4ULOG_HIGH("===\n");
m4u/mt6765/m4u_hw.c:			M4ULOG_HIGH("%d:0x%x:0x%x\n", i, tlb.tag, tlb.desc);
m4u/mt6765/m4u_hw.c:	M4ULOG_HIGH("\n");
m4u/mt6765/m4u_hw.c:	M4ULOG_HIGH("dump pfh_tlb: m4u %d  ====>\n", m4u_id);
m4u/mt6765/m4u_hw.c:			M4ULOG_HIGH
m4u/mt6765/m4u_hw.c:				M4ULOG_HIGH("0x%x:", tlb.desc);
m4u/mt6765/m4u_hw.c:			M4ULOG_HIGH("\n");
m4u/mt6765/m4u_hw.c:	M4ULOG_HIGH("dump victim_tlb: m4u %d  ====>\n", m4u_id);
m4u/mt6765/m4u_hw.c:		M4ULOG_HIGH
m4u/mt6765/m4u_hw.c:			M4ULOG_HIGH
m4u/mt6765/m4u_hw.c:		M4ULOG_MID("warning: can not find available prog pfh reg.\n");
m4u/mt6765/m4u_hw.c:	M4ULOG_MID("m4u_insert_seq_range , module:%s, MVAStart:0x%x, MVAEnd:0x%x\n",
m4u/mt6765/m4u_hw.c:		M4ULOG_MID("too small size, skip to insert! module:%s, MVAStart:0x%x, size:%d\n",
m4u/mt6765/m4u_hw.c:				M4ULOG_HIGH("insert range overlap!: larb=%d,module=%s\n",
m4u/mt6765/m4u_hw.c:				M4ULOG_HIGH
m4u/mt6765/m4u_hw.c:				M4ULOG_HIGH("module=%s, mva_start=0x%x, mva_end=0x%x\n",
m4u/mt6765/m4u_hw.c:				M4ULOG_HIGH
m4u/mt6765/m4u_hw.c:		M4ULOG_MID("warning: can not find available range\n");
m4u/mt6765/m4u_hw.c:		M4ULOG_HIGH("config_port:%s,v%d,s%d\n", m4u_get_port_name(port), virt, sec);
m4u/mt6765/m4u_hw.c:			M4ULOG_HIGH("m4u_config_port error, port=%s, Virtuality=%d, mmu_en=%x (%x, %x)\n",
m4u/mt6765/m4u_hw.c:			M4ULOG_HIGH("warn: larb%d clock %d time: %lld ns\n", larb, on, end - start);
m4u/mt6765/m4u_hw.c:	M4ULOG_HIGH("m4u_config_port: %s, m4u_tee_en:%d, mmu_en: %d -> %d, sec_en:%d -> %d\n",
m4u/mt6765/m4u_hw.c:	M4ULOG_MID("[M4U%d-%d] total:%u, main miss:%u, pfh miss(walk):%u, auto pfh:%u\n",
m4u/mt6765/m4u_priv.h:#define M4U_LOG_LEVEL_HIGH    3
m4u/mt6765/m4u_priv.h:#define M4U_LOG_LEVEL_MID     2
m4u/mt6765/m4u_priv.h:#define M4U_LOG_LEVEL_LOW     1
m4u/mt6765/m4u_priv.h:#define _M4ULOG(level, string, args...)
m4u/mt6765/m4u_priv.h:#define M4ULOG_LOW(string, args...)
m4u/mt6765/m4u_priv.h:#define M4ULOG_MID(string, args...)
m4u/mt6765/m4u_priv.h:#define M4ULOG_HIGH(string, args...)
mtprintk/Kconfig:config LOG_TOO_MUCH_WARNING
mtprintk/Kconfig:	  LOG_TOO_MUCH_WARNING which is used to control whether to
mtprintk/Kconfig:	  LOG_TOO_MUCH_DETECT_COUNT in one second.
mtprintk/Kconfig:config LOG_TOO_MUCH_DETECT_COUNT
mtprintk/Kconfig:	depends on LOG_TOO_MUCH_WARNING
mtprintk/Kconfig:config LOG_TOO_MUCH_DETECT_GAP
mtprintk/Kconfig:	depends on LOG_TOO_MUCH_WARNING
connectivity/wlan/core/gen4m/common/wlan_p2p.c:	DBGLOG(REQ, TRACE, "Command ID = 0x%08X\n", ucCID);
connectivity/wlan/core/gen4m/common/wlan_p2p.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/wlan/core/gen4m/common/wlan_p2p.c:	DBGLOG(REQ, TRACE, "ucCmdSeqNum =%d\n", ucCmdSeqNum);
connectivity/wlan/core/gen4m/common/wlan_p2p.c:	DBGLOG(REQ, INFO, "\n");
connectivity/wlan/core/gen4m/common/wlan_p2p.c:		DBGLOG(REQ, ERROR, "invalid key index: 0x%08lx\n",
connectivity/wlan/core/gen4m/common/wlan_p2p.c:		DBGLOG(REQ, ERROR, "invalid key index: 0x%08lx\n",
connectivity/wlan/core/gen4m/common/wlan_p2p.c:	DBGLOG(INIT, TRACE, "\n");
connectivity/wlan/core/gen4m/common/wlan_p2p.c:		DBGLOG(REQ, WARN, "Invalid length %u\n", u4SetBufferLen);
connectivity/wlan/core/gen4m/common/wlan_p2p.c:		DBGLOG(REQ, WARN, "Invalid power mode %d\n",
connectivity/wlan/core/gen4m/common/wlan_p2p.c:	DBGLOG(INIT, TRACE, "\n");
connectivity/wlan/core/gen4m/common/wlan_p2p.c:	DBGLOG(INIT, INFO, "wlanoidSetP2pSetNetworkAddress (%d)\n",
connectivity/wlan/core/gen4m/common/wlan_p2p.c:		DBGLOG(INIT, INFO, "u4IpAddressCount (%u)\n",
connectivity/wlan/core/gen4m/common/wlan_p2p.c:				DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/common/wlan_p2p.c:		DBGLOG(REQ, WARN, "Invalid MC list length %u\n",
connectivity/wlan/core/gen4m/common/wlan_p2p.c:		DBGLOG(REQ, WARN, "Too many MC addresses\n");
connectivity/wlan/core/gen4m/common/wlan_p2p.c:		DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/common/wlan_p2p.c:	DBGLOG(P2P, TRACE, "Get Service Discovery Request\n");
connectivity/wlan/core/gen4m/common/wlan_p2p.c:	DBGLOG(P2P, TRACE, "Get Service Discovery Response\n");
connectivity/wlan/core/gen4m/common/wlan_p2p.c:			DBGLOG(P2P, TRACE, "Service Discovery Version 2.0\n");
connectivity/wlan/core/gen4m/common/wlan_p2p.c:	DBGLOG(INIT, TRACE, "\n");
connectivity/wlan/core/gen4m/common/wlan_p2p.c:	DBGLOG(INIT, TRACE, "\n");
connectivity/wlan/core/gen4m/common/wlan_p2p.c:	DBGLOG(INIT, TRACE, "\n");
connectivity/wlan/core/gen4m/common/wlan_p2p.c:		DBGLOG(REQ, WARN, "Too short length %ld\n", u4QueryBufferLen);
connectivity/wlan/core/gen4m/common/wlan_p2p.c:	DBGLOG(P2P, INFO, "wlanoidAbortP2pScan\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:	/* INITLOG(("\n")); */
connectivity/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/common/wlan_lib.c:		LOG_SCAN_D2D, SCAN_LOG_MSG_MAX_LEN);
connectivity/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, TRACE, "start.\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, TRACE, "start.\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, TRACE, "start.\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, TRACE, "start.\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, WARN, "load manufacture data fail\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, ERROR, "nicpmSetDriverOwn() failed!\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, ERROR, "halHifSwInfoInit failed!\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, TRACE, "Waiting for Ready bit..\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:					DBGLOG(INIT, WARN,
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, WARN, "Fail reason: %d\n", eFailReason);
connectivity/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, TRACE, "start.\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, TRACE, "start.\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(REQ, WARN, "Fail in nicProcessIST! status [%d]\n",
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, TRACE, "Check ready_bits(=0x%x)\n", ready_bits);
connectivity/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(INIT, INFO, "Ready bit asserted\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(INIT, INFO, "Wi-Fi power off done!\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(INIT, WARN,
connectivity/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(INIT, WARN,
connectivity/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, INFO, "NO Resource:%d\n", ucTC);
connectivity/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, WARN,
connectivity/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, WARN, "nicTxCmd returns error\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:		/* DBGLOG(INIT, INFO, "==> TX CMD QID: %d (Q:%d)\n",
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(INIT, WARN,
connectivity/wlan/core/gen4m/common/wlan_lib.c:					DBGLOG(INIT, WARN,
connectivity/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(OID, INFO,
connectivity/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(P2P, TRACE, "Pending CMD for BSS:%d\n",
connectivity/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(RX, WARN, "IndicatedRfbList num = %u\n", prQueList->u4NumElem);
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(RX, WARN, "Restart ReturnIndicatedRfb Timer (%u)\n",
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(RX, WARN, "No free SwRfb!\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(RX, WARN,
connectivity/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(RX, WARN,
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(REQ, TRACE, "ucCmdSeqNum =%d\n", ucCmdSeqNum);
connectivity/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, INFO, "Using embedded MAC address");
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, INFO, "Using host-supplied MAC address");
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(RSN, INFO, "T1X len=%d\n",
connectivity/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG_LIMITED(TX, INFO,
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG_LIMITED(TX, INFO,
connectivity/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(TX, TRACE,
connectivity/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(SW4, INFO, "%s", aucBuf);
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR, "Not enough memory for aucBuffer\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, WARN, "%s: wait for event failed!\n",
connectivity/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, WARN,
connectivity/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, WARN, "skip unexpected event ID[0x%02x]\n",
connectivity/wlan/core/gen4m/common/wlan_lib.c:#if CFG_ENABLE_CAL_LOG
connectivity/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, TRACE, "RF CAL FAIL  = (%d),BB CAL FAIL  = (%d)\n",
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:	/* DBGLOG(INIT, INFO, ("Acquire Power Ctrl\n")); */
connectivity/wlan/core/gen4m/common/wlan_lib.c:	/* DBGLOG(INIT, INFO, ("Release Power Ctrl\n")); */
connectivity/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, TRACE, "%s: %u\n", __func__, ucEcoVersion);
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(SW4, INFO, "Invalid BssInfo index[%u], skip dump!\n",
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(SW4, INFO, "Invalid BssInfo index[%u], skip dump!\n",
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(SW4, INFO,
connectivity/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(SW4, TRACE,
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, INFO, "Support NIC_CAPABILITY_V2 feature\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, WARN, "%s: event buffer alloc failed!\n",
connectivity/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(INIT, WARN,
connectivity/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(HAL, ERROR,
connectivity/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(INIT, WARN,
connectivity/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(INIT, WARN,
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, TRACE, "IOTAP%d is valid rule\n", ucRuleIdx);
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, TRACE, "IOTAP%d Flag:0x%X Ver:0x%X\n",
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, TRACE, "IOTAP%d OUI:%02X:%02X:%02X\n",
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, TRACE, "IOTAP%d Data:"MACSTR" Mask:"MACSTR"\n",
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, TRACE, "IOTAP%d aBssid:"MACSTR" Mask:"MACSTR"\n",
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, TRACE, "IOTAP%d NSS:%X HT:%X Band:%X Act:%X\n",
connectivity/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, INFO, "IOTAP: Start Parsing Rules\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, INFO, "Invalid Rule IOTAP%d\n", ucCnt);
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, LOUD,
connectivity/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, TRACE, "ucApWpsMode = %u\n", prWifiVar->ucApWpsMode);
connectivity/wlan/core/gen4m/common/wlan_lib.c:					WLAN_TX_STATS_LOG_TIMEOUT);
connectivity/wlan/core/gen4m/common/wlan_lib.c:					WLAN_TX_STATS_LOG_DURATION);
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, TRACE, "get MacAddr fail, use defaul\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(INIT, LOUD,
connectivity/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(INIT, LOUD,
connectivity/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, TRACE, "u2CountryCode=0x%04x\n",
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, LOUD, "get Index(%d) saved key %s\n", ucIdx,
connectivity/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, LOUD, "parse aucValue error u4Ret=%d\n",
connectivity/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, LOUD, "parse aucValue error i4Ret=%d\n",
connectivity/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR, "Set wifi config error key \'%s\'\n",
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR, "Set wifi config error value \'%s\'\n",
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR, "parameter is NULL: %p, %p, %p\n",
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR, "cmdLine >= 512\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR, "parameter is NULL: %p, %p, %p\n",
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR, "cmdLine >= 512\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR, "cfg args wrong\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, INFO, "itemString:");
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, INFO, "%c", cmd_v1.itemString[i]);
connectivity/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, INFO, "\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, INFO, "cmd_v1.itemType = %d\n",
connectivity/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(INIT, WARN,
connectivity/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(INIT, WARN,
connectivity/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, WARN, "size:%d data[%d]=%u, sum=%u\n",
connectivity/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, INFO, "Length = %d itemValue:",
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR, "%d,", cmd_v1.itemValue[i]);
connectivity/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, INFO, "\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/common/wlan_lib.c:					DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR, "pucConfigBuf is NULL\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR, "pucConfigBuf >= 4000\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, INFO, "wlanCfgParse()\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, INFO, "STATE_EOF\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:					DBGLOG(INIT, WARN,
connectivity/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(INIT, WARN,
connectivity/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, INFO, "STATE_NEWLINE\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:					DBGLOG(INIT, WARN,
connectivity/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(INIT, WARN,
connectivity/wlan/core/gen4m/common/wlan_lib.c:						DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, WARN,
connectivity/wlan/core/gen4m/common/wlan_lib.c:						DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/common/wlan_lib.c:					DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, INFO, "cmdV1Header.itemNum:%d\n",
connectivity/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, WARN, "kalIoctl wifiSefCFG fail 0x%x\n",
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, WARN, "kalIoctl wifiSefCFG num:%d X\n",
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR, "pucConfigBuf is NULL\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR, "pucConfigBuf >= 4000\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, INFO, "Init wifi config len %u max entry %u\n",
connectivity/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(TX, INFO, "[%u]N[%u]A[%u]M[%u]T[%u]E[%4u]\n",
connectivity/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, LOUD, "CUR[%u] LAST[%u] TO[%u]\n", rCurTime,
connectivity/wlan/core/gen4m/common/wlan_lib.c:	struct CMD_STATS_LOG rStatsLogCmd;
connectivity/wlan/core/gen4m/common/wlan_lib.c:	kalMemZero(&rStatsLogCmd, sizeof(struct CMD_STATS_LOG));
connectivity/wlan/core/gen4m/common/wlan_lib.c:	rResult = wlanSendSetQueryCmd(prAdapter, CMD_ID_STATS_LOG, TRUE, FALSE,
connectivity/wlan/core/gen4m/common/wlan_lib.c:				      sizeof(struct CMD_STATS_LOG),
connectivity/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(TX, INFO,
connectivity/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG_LIMITED(TX, INFO,
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(REQ, WARN, "%s: unexpected prGlueInfo(0x%p)!\n",
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(REQ, INFO, "mdtim [1]\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(REQ, INFO, "mdtim [2]\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(REQ, INFO, "mdtim [3]\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(REQ, INFO, "wlanNotifyFwSuspend fail\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(REQ, LOUD,
connectivity/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(REQ, LOUD,
connectivity/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(P2P, TRACE, "[ACS] Get safe LTE Channels\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(SCN, TEMP, "Process dirtiness index 1\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(SCN, TEMP, "Process dirtiness index 2, ");
connectivity/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(SCN, TEMP, "BW40\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(SCN, TEMP, "BW40\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(SCN, TEMP, "BW20\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(SCN, TEMP, "BW80\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(SCN, TEMP, "BW160\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(SCN, TEMP, "BW8080\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(SCN, TEMP, "Found an AP(%s), primary ch %d\n",
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(SCN, ERROR, "Invalid ch %u\n", channel);
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(SW4, INFO,
connectivity/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, TRACE, "SpeIdx:%d,D:%d,G=%d,B=%d,Bss=%d\n",
connectivity/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(SW4, INFO, "Use 1x1 due to DBDC blacklist\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(SW4, INFO, "Invalid BssInfo index[%u], skip dump!\n",
connectivity/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, TRACE, "Nss=%d,G=%d,B=%d,Bss=%d\n",
connectivity/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, INFO, "LowLatency(ProbeOn)\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(AIS, INFO, "LowLatency(Connected) event:0x%x\n", u4Events);
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(OID, ERROR, "prAisBssInfo = NULL\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(OID, INFO,
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(OID, INFO,
connectivity/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(OID, INFO,
connectivity/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(OID, INFO,
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(OID, INFO, "Checksum offload: [%llu]\n",
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, INFO, "omega, cmd buffer return fail!");
connectivity/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(OID, INFO, "Remove pending Cmd: CID %d\n", ucCid);
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, INFO, "No decimal part, ori str %s\n",
connectivity/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR, "Parse decimal str %s error, degree %u\n",
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR, "Parse integer str %s error\n",
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, TRACE, "Result 0x%04x\n", *pu2Out);
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(REQ, ERROR, "Failed with status %d\n", rStatus);
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(SW4, ERROR, "not yet connected\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(SW4, ERROR, "prAdapter is null\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(SW4, ERROR, "prStaRecOfAP is null\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(SW4, INFO,
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(SW4, ERROR, "prAdapter is null\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(NIC, ERROR, "kalGetRxRate error\n");
connectivity/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(REQ, INFO, "fgEnForceRTS = %d\n",
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(REQ, TRACE, "Command ID = 0x%08X\n", ucCID);
connectivity/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(REQ, TRACE, "ucCmdSeqNum =%d\n", ucCmdSeqNum);
connectivity/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "bowCmdGetMacStatus, Get preferred channel.\n");
connectivity/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT,
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT,
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT,
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT,
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "prMacStatus->ucNumOfChannel, %x.\n", prMacStatus->ucNumOfChannel);
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT,
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT,
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "prMacStatus->ucAvailability, %x.\n", prMacStatus->ucAvailability);
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "prMacStatus->aucMacAddr, %x:%x:%x:%x:%x:%x.\n",
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "bowCmdSetupConnection.\n");
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "rCmdBtOverWifi Channel Number - 0x%x.\n", rCmdBtOverWifi.ucChannelNum);
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT,
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "rCmdBtOverWifi Beacon interval - 0x%x.\n", rCmdBtOverWifi.u2BeaconInterval);
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "rCmdBtOverWifi Timeout activity - 0x%x.\n", rCmdBtOverWifi.ucTimeoutDiscovery);
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "rCmdBtOverWifi Timeout inactivity - 0x%x.\n", rCmdBtOverWifi.ucTimeoutInactivity);
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "rCmdBtOverWifi Role - 0x%x.\n", rCmdBtOverWifi.ucRole);
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "rCmdBtOverWifi PAL capability - 0x%x.\n", rCmdBtOverWifi.PAL_Capabilities);
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "rCmdBtOverWifi Max Tx power - 0x%x.\n", rCmdBtOverWifi.cMaxTxPower);
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "bowStarting, g_u4LinkCount, %x.\n", g_u4LinkCount);
connectivity/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "bowStarting, cnmTimerInitTimer.\n");
connectivity/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "prBowFsmInfo->u2BeaconInterval, %d.\n", prBowFsmInfo->u2BeaconInterval);
connectivity/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "bowCmdSetupConnection, g_u4LinkCount, %x.\n", g_u4LinkCount);
connectivity/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "kalInitBowDevice, bow0\n");
connectivity/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "bowCmdDestroyConnection, bowCheckIfVaild, not accepted.\n");
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT,
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT,
connectivity/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT,
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "prBowSetPTK->aucPeerAddress, %x:%x:%x:%x:%x:%x.\n",
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT,
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT,
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT,
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "bowCmdShortRangeMode.\n");
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "prBowShortRangeMode->aucPeerAddress, %x:%x:%x:%x:%x:%x.\n",
connectivity/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "bowCmdShortRangeMode, %x.\n", WLAN_STATUS_SUCCESS);
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "prEvent->rHeader.ucEventId, 0x%x\n", prEvent->rHeader.ucEventId);
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "prEvent->rHeader.ucSeqNumber, 0x%x\n", prEvent->rHeader.ucSeqNumber);
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "prEvent->rHeader.u2PayloadLength, 0x%x\n", prEvent->rHeader.u2PayloadLength);
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT,
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT,
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT,
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT,
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "wlanbowCmdEventLinkConnected, g_u4LinkCount, %x.\n", g_u4LinkCount);
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "prEvent->rHeader.ucEventId, 0x%x\n", prEvent->rHeader.ucEventId);
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "prEvent->rHeader.ucSeqNumber, 0x%x\n", prEvent->rHeader.ucSeqNumber);
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "prEvent->rHeader.u2PayloadLength, 0x%x\n", prEvent->rHeader.u2PayloadLength);
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT,
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT,
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "wlanbowCmdEventLinkDisconnected, g_u4LinkCount, %x.\n", g_u4LinkCount);
connectivity/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT,
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "bowStoping.\n");
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "bowStoping, SSID %s.\n", prBowBssInfo->aucSSID);
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "bowStoping, prBowBssInfo->aucBSSID, %x:%x:%x:%x:%x:%x.\n",
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "bowStoping, prBssInfo->aucOwnMacAddr, %x:%x:%x:%x:%x:%x.\n",
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT,
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "bowStopping, g_u4LinkCount, %x.\n", g_u4LinkCount);
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT,
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "BoW Stoping,[%d,%d]\n", g_u4LinkCount, g_u4Beaconing);
connectivity/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "BoW Starting.\n");
connectivity/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "BoW channel granted.\n");
connectivity/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "SSID %s.\n", prBssInfo->aucSSID);
connectivity/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "prBssInfo->aucBSSID, %x:%x:%x:%x:%x:%x.\n",
connectivity/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "prBssInfo->aucOwnMacAddr, %x:%x:%x:%x:%x:%x.\n",
connectivity/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "prAdapter->rWifiVar.aucDeviceAddress, %x:%x:%x:%x:%x:%x.\n",
connectivity/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT,
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "BoW Starting,[%d,%d]\n", g_u4LinkCount, g_u4Beaconing);
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "bowStarting, g_u4LinkCount, %x.\n", g_u4LinkCount);
connectivity/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "bowStarting responder, start scan result searching.\n");
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "bowValidateProbeReq.\n");
connectivity/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "BoW Send Beacon,[%d,%d]\n", g_u4LinkCount, g_u4Beaconing);
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "bowResponderScan.\n");
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "BOW SCAN [REQ:%d]\n", prBowFsmInfo->ucSeqNumOfScanReq + 1);
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "bowResponderScanDone.\n");
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "BOW SCAN [DONE:%d]\n", ucSeqNumOfCompMsg);
connectivity/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "BOW SCAN [CANCELLED:%d]\n", ucSeqNumOfCompMsg);
connectivity/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "Sequence no. of BOW Responder scan done is not matched.\n");
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "End scan result searching.\n");
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "prBowFsmInfo->aucPeerAddress: [" MACSTR "]\n", MAC2STR(prBowFsmInfo->aucPeerAddress));
connectivity/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT,
connectivity/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "Starting to join initiator.\n");
connectivity/wlan/core/gen4m/common/wlan_bow.c:			DBGLOG(BOW, EVENT, "BOW SCAN [CANCEL:%d]\n", prBowFsmInfo->ucSeqNumOfScanReq);
connectivity/wlan/core/gen4m/common/wlan_bow.c:			DBGLOG(BOW, TRACE, "BOW Cancel Scan\n");
connectivity/wlan/core/gen4m/common/wlan_bow.c:				DBGLOG(BOW, TRACE, "Buffer not enough, can not cancel scan.\n");
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "Starting bowResponderJoin.\n");
connectivity/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, LOUD, "JOIN INIT: Try to do Authentication with AuthType == OPEN_SYSTEM.\n");
connectivity/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "bowResponderJoin, SSID %s.\n", prBssDesc->aucSSID);
connectivity/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "bowResponderJoin, SSID %s.\n", prConnSettings->aucSSID);
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "prStaRec->eStaType, %x.\n", prStaRec->eStaType);
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "BoW trigger SAA [" MACSTR "]\n", MAC2STR(prStaRec->aucMacAddr));
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "Start bowfsmRunEventJoinComplete.\n");
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "bowfsmRunEventJoinComplete ptr check\n");
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "prMsgHdr %x\n", prMsgHdr);
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "prAdapter %x\n", prAdapter);
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "prBowFsmInfo %x\n", prBowFsmInfo);
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "prStaRec %x\n", prStaRec);
connectivity/wlan/core/gen4m/common/wlan_bow.c:			DBGLOG(BOW, EVENT, "Finish bowUpdateBssInfoForJOIN.\n");
connectivity/wlan/core/gen4m/common/wlan_bow.c:			DBGLOG(BOW, EVENT, "bowFsmRunEventJoinComplete, qmActivateStaRec.\n");
connectivity/wlan/core/gen4m/common/wlan_bow.c:			DBGLOG(BOW, EVENT, "Start bowfsmRunEventJoinComplete -- Join failed.\n");
connectivity/wlan/core/gen4m/common/wlan_bow.c:			DBGLOG(BOW, EVENT, "BoW trigger SAA REJOIN\n");
connectivity/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, INFO, "Postpone the indication of Disconnect for %d seconds\n",
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "bowRunEventAAATxFail , bssRemoveStaRecFromClientList.\n");
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "BoW AAA TxFail, target state %d\n", prStaRec->ucStaState + 1);
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, STATE, "bowRunEventAAAComplete, cnmStaRecChangeState, STA_STATE_3.\n");
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "BoW AAA complete [" MACSTR "]\n", MAC2STR(prStaRec->aucMacAddr));
connectivity/wlan/core/gen4m/common/wlan_bow.c:			DBGLOG(REQ, WARN, "%s: load manufacture data fail\n", __func__);
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT,
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT,
connectivity/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "bowValidateAssocReq, return wlanbowCmdEventLinkConnected.\n");
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "bowValidateAuth, prBowFsmInfo->aucPeerAddress, %x:%x:%x:%x:%x:%x.\n",
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "bowValidateAuth, prAuthFrame->aucSrcAddr, %x:%x:%x:%x:%x:%x.\n",
connectivity/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "bowValidateAuth, cnmStaRecAlloc.\n");
connectivity/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "bowValidateAuth, cnmStaRecChangeState.\n");
connectivity/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "bowValidateAuth, prStaRec->ucIndex, %x.\n", prStaRec->ucIndex);
connectivity/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "bowValidateAuth, prStaRec->eStaType, %x.\n", prStaRec->eStaType);
connectivity/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "bowValidateAuth, prStaRec->ucBssIndex, %x.\n", prStaRec->ucBssIndex);
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "bowValidateAuth,  fgReplyAuth, %x.\n", fgReplyAuth);
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "Entering bowRunEventChGrant.\n");
connectivity/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "BoW Channel [GIVE UP:%d]\n", ucTokenID);
connectivity/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "[Requested:%d][ucSeqNumOfChReq:%d][eFsmState:%d]\n",
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "BoW Channel [GRANTED:%d].\n", ucTokenID);
connectivity/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "BoW channel [REQUEST:%d], %d, %d.\n",
connectivity/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT,
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "BoW Channel [TIMEOUT]\n");
connectivity/wlan/core/gen4m/common/wlan_bow.c:			DBGLOG(BOW, EVENT,
connectivity/wlan/core/gen4m/common/wlan_bow.c:			DBGLOG(BOW, EVENT,
connectivity/wlan/core/gen4m/common/wlan_bow.c:			DBGLOG(BOW, EVENT,
connectivity/wlan/core/gen4m/common/wlan_bow.c:			DBGLOG(BOW, EVENT,
connectivity/wlan/core/gen4m/common/wlan_bow.c:			DBGLOG(BOW, EVENT,
connectivity/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT,
connectivity/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "GET State [%d]\n", arBowTable[ucBowTableIdx].eState);
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "SET State [%d]\n", arBowTable[ucBowTableIdx].eState);
connectivity/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT,
connectivity/wlan/core/gen4m/common/wlan_bow.c:			DBGLOG(BOW, EVENT,
connectivity/wlan/core/gen4m/common/wlan_bow.c:			DBGLOG(BOW, EVENT,
connectivity/wlan/core/gen4m/common/wlan_bow.c:			DBGLOG(BOW, EVENT,
connectivity/wlan/core/gen4m/common/wlan_bow.c:			DBGLOG(BOW, EVENT,
connectivity/wlan/core/gen4m/common/wlan_bow.c:			DBGLOG(BOW, EVENT,
connectivity/wlan/core/gen4m/common/wlan_bow.c:			DBGLOG(BOW, EVENT,
connectivity/wlan/core/gen4m/common/wlan_bow.c:			DBGLOG(BOW, EVENT,
connectivity/wlan/core/gen4m/common/wlan_bow.c:			DBGLOG(BOW, EVENT,
connectivity/wlan/core/gen4m/common/wlan_bow.c:			DBGLOG(BOW, EVENT, "GET State [%d]\n", arBowTable[idx].eState);
connectivity/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "SET State [%d]\n", eState);
connectivity/wlan/core/gen4m/common/debug.c:		LOG_FUNC("Set ALL DBG module log level to [0x%02x]\n",
connectivity/wlan/core/gen4m/common/debug.c:		LOG_FUNC("Set DBG module[%u] log level to [0x%02x]\n",
connectivity/wlan/core/gen4m/common/debug.c:	uint32_t u4Enable = ENUM_WIFI_LOG_LEVEL_SUPPORT_DISABLE;
connectivity/wlan/core/gen4m/common/debug.c:	case ENUM_WIFI_LOG_LEVEL_VERSION_V1:
connectivity/wlan/core/gen4m/common/debug.c:		case ENUM_WIFI_LOG_MODULE_DRIVER:
connectivity/wlan/core/gen4m/common/debug.c:			u4Enable = ENUM_WIFI_LOG_LEVEL_SUPPORT_ENABLE;
connectivity/wlan/core/gen4m/common/debug.c:		case ENUM_WIFI_LOG_MODULE_FW:
connectivity/wlan/core/gen4m/common/debug.c:			u4Enable = ENUM_WIFI_LOG_LEVEL_SUPPORT_ENABLE;
connectivity/wlan/core/gen4m/common/debug.c:	uint32_t u4Level = ENUM_WIFI_LOG_LEVEL_DEFAULT;
connectivity/wlan/core/gen4m/common/debug.c:	case ENUM_WIFI_LOG_LEVEL_VERSION_V1:
connectivity/wlan/core/gen4m/common/debug.c:	uint32_t u4DriverLevel = ENUM_WIFI_LOG_LEVEL_DEFAULT;
connectivity/wlan/core/gen4m/common/debug.c:	uint32_t u4FwLevel = ENUM_WIFI_LOG_LEVEL_DEFAULT;
connectivity/wlan/core/gen4m/common/debug.c:	if (u4level >= ENUM_WIFI_LOG_LEVEL_NUM)
connectivity/wlan/core/gen4m/common/debug.c:	case ENUM_WIFI_LOG_LEVEL_VERSION_V1:
connectivity/wlan/core/gen4m/common/debug.c:		case ENUM_WIFI_LOG_MODULE_DRIVER:
connectivity/wlan/core/gen4m/common/debug.c:			if (u4level == ENUM_WIFI_LOG_LEVEL_DEFAULT)
connectivity/wlan/core/gen4m/common/debug.c:				u4DriverLogMask = DBG_LOG_LEVEL_DEFAULT;
connectivity/wlan/core/gen4m/common/debug.c:			else if (u4level == ENUM_WIFI_LOG_LEVEL_MORE)
connectivity/wlan/core/gen4m/common/debug.c:				u4DriverLogMask = DBG_LOG_LEVEL_MORE;
connectivity/wlan/core/gen4m/common/debug.c:				u4DriverLogMask = DBG_LOG_LEVEL_EXTREME;
connectivity/wlan/core/gen4m/common/debug.c:		case ENUM_WIFI_LOG_MODULE_FW:
connectivity/wlan/core/gen4m/common/debug.c:			struct CMD_EVENT_LOG_UI_INFO cmd;
connectivity/wlan/core/gen4m/common/debug.c:					sizeof(struct CMD_EVENT_LOG_UI_INFO));
connectivity/wlan/core/gen4m/common/debug.c:					CMD_ID_LOG_UI_INFO,
connectivity/wlan/core/gen4m/common/debug.c:					sizeof(struct CMD_EVENT_LOG_UI_INFO),
connectivity/wlan/core/gen4m/common/debug.c:	wlanDbgGetGlobalLogLevel(ENUM_WIFI_LOG_MODULE_DRIVER, &u4DriverLevel);
connectivity/wlan/core/gen4m/common/debug.c:	wlanDbgGetGlobalLogLevel(ENUM_WIFI_LOG_MODULE_FW, &u4FwLevel);
connectivity/wlan/core/gen4m/common/debug.c:	if ((u4DriverLevel > ENUM_WIFI_LOG_LEVEL_DEFAULT ||
connectivity/wlan/core/gen4m/common/debug.c:			u4FwLevel > ENUM_WIFI_LOG_LEVEL_DEFAULT) &&
connectivity/wlan/core/gen4m/common/debug.c:		DBGLOG(OID, TRACE,
connectivity/wlan/core/gen4m/common/debug.c:	if (u4Module != ENUM_WIFI_LOG_MODULE_DRIVER &&
connectivity/wlan/core/gen4m/common/debug.c:			u4Module != ENUM_WIFI_LOG_MODULE_FW)
connectivity/wlan/core/gen4m/common/debug.c:	if (u4Module != ENUM_WIFI_LOG_MODULE_DRIVER &&
connectivity/wlan/core/gen4m/common/debug.c:			u4Module != ENUM_WIFI_LOG_MODULE_FW)
connectivity/wlan/core/gen4m/common/debug.c:	uint32_t u4DriverLogLevel = ENUM_WIFI_LOG_LEVEL_DEFAULT;
connectivity/wlan/core/gen4m/common/debug.c:	if ((u4Mask & DBG_LOG_LEVEL_EXTREME) == DBG_LOG_LEVEL_EXTREME)
connectivity/wlan/core/gen4m/common/debug.c:		u4DriverLogLevel = ENUM_WIFI_LOG_LEVEL_EXTREME;
connectivity/wlan/core/gen4m/common/debug.c:	else if ((u4Mask & DBG_LOG_LEVEL_MORE) == DBG_LOG_LEVEL_MORE)
connectivity/wlan/core/gen4m/common/debug.c:		u4DriverLogLevel = ENUM_WIFI_LOG_LEVEL_MORE;
connectivity/wlan/core/gen4m/common/debug.c:		u4DriverLogLevel = ENUM_WIFI_LOG_LEVEL_DEFAULT;
connectivity/wlan/core/gen4m/common/debug.c:	wlanDbgSetGlobalLogLevel(ENUM_WIFI_LOG_MODULE_DRIVER, u4DriverLogLevel);
connectivity/wlan/core/gen4m/common/debug.c:#define OLD_LOG_FUNC LOG_FUNC
connectivity/wlan/core/gen4m/common/debug.c:#undef LOG_FUNC
connectivity/wlan/core/gen4m/common/debug.c:#define LOG_FUNC pr_info
connectivity/wlan/core/gen4m/common/debug.c:#define DBG_LOG_BUF_SIZE 128
connectivity/wlan/core/gen4m/common/debug.c:	int8_t aucLogBuffer[DBG_LOG_BUF_SIZE];
connectivity/wlan/core/gen4m/common/debug.c:		LOG_FUNC("Firmware Log Size(%d) is too large, type %d\n",
connectivity/wlan/core/gen4m/common/debug.c:		LOG_FUNC("<FW>%s\n", pucLogContent);
connectivity/wlan/core/gen4m/common/debug.c:		aucLogBuffer[DBG_LOG_BUF_SIZE - 1] = '\0';
connectivity/wlan/core/gen4m/common/debug.c:		LOG_FUNC("%s\n", aucLogBuffer);
connectivity/wlan/core/gen4m/common/debug.c:#undef LOG_FUNC
connectivity/wlan/core/gen4m/common/debug.c:#define LOG_FUNC OLD_LOG_FUNC
connectivity/wlan/core/gen4m/common/debug.c:#undef OLD_LOG_FUNC
connectivity/wlan/core/gen4m/common/dump.c:	LOG_FUNC("DUMP8 ADDRESS: %p, Length: %d\n", pucStartAddr,
connectivity/wlan/core/gen4m/common/dump.c:			LOG_FUNC
connectivity/wlan/core/gen4m/common/dump.c:				LOG_FUNC("(%p) %02x\n", pucStartAddr,
connectivity/wlan/core/gen4m/common/dump.c:				LOG_FUNC("(%p) %02x %02x\n", pucStartAddr,
connectivity/wlan/core/gen4m/common/dump.c:				LOG_FUNC("(%p) %02x %02x %02x\n",
connectivity/wlan/core/gen4m/common/dump.c:				LOG_FUNC("(%p) %02x %02x %02x %02x\n",
connectivity/wlan/core/gen4m/common/dump.c:				LOG_FUNC("(%p) %02x %02x %02x %02x  %02x\n",
connectivity/wlan/core/gen4m/common/dump.c:				LOG_FUNC
connectivity/wlan/core/gen4m/common/dump.c:				LOG_FUNC
connectivity/wlan/core/gen4m/common/dump.c:				LOG_FUNC
connectivity/wlan/core/gen4m/common/dump.c:				LOG_FUNC
connectivity/wlan/core/gen4m/common/dump.c:				LOG_FUNC
connectivity/wlan/core/gen4m/common/dump.c:				LOG_FUNC
connectivity/wlan/core/gen4m/common/dump.c:				LOG_FUNC
connectivity/wlan/core/gen4m/common/dump.c:				LOG_FUNC
connectivity/wlan/core/gen4m/common/dump.c:				LOG_FUNC
connectivity/wlan/core/gen4m/common/dump.c:				LOG_FUNC
connectivity/wlan/core/gen4m/common/dump.c:	LOG_FUNC("\n");
connectivity/wlan/core/gen4m/common/dump.c:	LOG_FUNC("DUMP32 ADDRESS: %p, Length: %d\n", pu4StartAddr,
connectivity/wlan/core/gen4m/common/dump.c:		LOG_FUNC("pu4StartAddr is not at DW boundary.\n");
connectivity/wlan/core/gen4m/common/dump.c:			LOG_FUNC("(%p) %02x------\n", pu4StartAddr, pucAddr[0]);
connectivity/wlan/core/gen4m/common/dump.c:			LOG_FUNC("(%p) %02x%02x----\n", pu4StartAddr,
connectivity/wlan/core/gen4m/common/dump.c:			LOG_FUNC("(%p) %02x%02x%02x--\n", pu4StartAddr,
connectivity/wlan/core/gen4m/common/dump.c:			LOG_FUNC("(%p) %08x %08x %08x %08x\n",
connectivity/wlan/core/gen4m/common/dump.c:				LOG_FUNC("(%p) ------%02x\n",
connectivity/wlan/core/gen4m/common/dump.c:				LOG_FUNC("(%p) ----%02x%02x\n", pu4StartAddr,
connectivity/wlan/core/gen4m/common/dump.c:				LOG_FUNC("(%p) --%02x%02x%02x\n", pu4StartAddr,
connectivity/wlan/core/gen4m/common/dump.c:				LOG_FUNC("(%p) %08x\n", pu4StartAddr,
connectivity/wlan/core/gen4m/common/dump.c:				LOG_FUNC("(%p) %08x ------%02x\n", pu4StartAddr,
connectivity/wlan/core/gen4m/common/dump.c:				LOG_FUNC("(%p) %08x ----%02x%02x\n",
connectivity/wlan/core/gen4m/common/dump.c:				LOG_FUNC("(%p) %08x --%02x%02x%02x\n",
connectivity/wlan/core/gen4m/common/dump.c:				LOG_FUNC("(%p) %08x %08x\n", pu4StartAddr,
connectivity/wlan/core/gen4m/common/dump.c:				LOG_FUNC("(%p) %08x %08x ------%02x\n",
connectivity/wlan/core/gen4m/common/dump.c:				LOG_FUNC("(%p) %08x %08x ----%02x%02x\n",
connectivity/wlan/core/gen4m/common/dump.c:				LOG_FUNC("(%p) %08x %08x --%02x%02x%02x\n",
connectivity/wlan/core/gen4m/common/dump.c:				LOG_FUNC("(%p) %08x %08x %08x\n",
connectivity/wlan/core/gen4m/common/dump.c:				LOG_FUNC("(%p) %08x %08x %08x ------%02x\n",
connectivity/wlan/core/gen4m/common/dump.c:				LOG_FUNC("(%p) %08x %08x %08x ----%02x%02x\n",
connectivity/wlan/core/gen4m/common/dump.c:				LOG_FUNC("(%p) %08x %08x %08x --%02x%02x%02x\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, INFO, "setApUapsdEnable: %d, ucBssIdx: %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, TRACE, "Network type in use: %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, INFO, "New network type: %d mode\n", eNewNetworkType);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, INFO, "Not support network type: %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, INFO, "Unknown network type: %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "Unknown network type: %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, WARN,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, WARN, "didn't support Scan in test mode\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, LOUD, "ucBssIndex %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, WARN,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, WARN,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, WARN, "didn't support Scan in test mode\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, WARN,
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, TRACE, "ScanEX\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, WARN,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, WARN, "didn't support Scan in test mode\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, WARN,
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, LOUD, "ucBssIndex %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, ERROR, "Fail in allocating AisAbortMsg.\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, ERROR, "Fail in allocating AisAbortMsg.\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(SCN, INFO, "ucBssIndex %d, SSID %s\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, ERROR, "Fail in allocating AisAbortMsg.\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, WARN, "SsidLen [%d] is invalid!\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, WARN, "Bssid or ssid is invalid!\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(INIT, INFO, "wrong bssid " MACSTR "to connect\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:				DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, INFO, "No Bssid set\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(INIT, INFO, "DisBySsid\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:				DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "Invalid length %u\n", u4QueryBufferLen);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, TRACE, "Null SSID\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, TRACE, "Invalid mode value %d\n", eOpMode);
connectivity/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(REQ, TRACE, "Mode value %d unallowed\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(RSN, LOUD, "ucBssIndex %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, LOUD, "ucBssIndex %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, TRACE, "Invalid auth mode %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RSN, TRACE, "New auth mode: open\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RSN, TRACE, "New auth mode: shared\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RSN, TRACE, "New auth mode: auto-switch\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RSN, TRACE, "New auth mode: WPA\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RSN, TRACE, "New auth mode: WPA PSK\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RSN, TRACE, "New auth mode: WPA None\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RSN, TRACE, "New auth mode: WPA2\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RSN, TRACE, "New auth mode: WPA2 PSK\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RSN, INFO, "New auth mode: SAE\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RSN, TRACE, "New auth mode: unknown (%d)\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:				DBGLOG(RSN, TRACE,
connectivity/wlan/core/gen4m/common/wlan_oid.c:				DBGLOG(RSN, TRACE,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, TRACE, "Invalid privacy filter %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/common/wlan_oid.c:				DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, TRACE, "Invalid reload option %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, LOUD, "ucBssIndex %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, ERROR, "Error, invalid WEP key ID: %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, LOUD, "ucBssIndex %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, INFO, "Set: Dump PARAM_KEY_INDEX content\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, INFO, "Index : %u\n", u4KeyId);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, ERROR, "Invalid WEP key index: %u\n", u4KeyId);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, ERROR, "invalid WEP key ID %u\n", u4KeyId);
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(RSN, TRACE, "wlanoidSetAddKey\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RSN, WARN,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RSN, WARN,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RSN, WARN, "Invalid key material length (%d)\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, INFO, "BSS Info not exist !!\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(RSN, TRACE, "ucCmdSeqNum = %d\n", ucCmdSeqNum);
connectivity/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/common/wlan_oid.c:				DBGLOG(RSN, INFO, "AP mode set BIP\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:					DBGLOG(RSN, TRACE,
connectivity/wlan/core/gen4m/common/wlan_oid.c:					DBGLOG(RSN, TRACE,
connectivity/wlan/core/gen4m/common/wlan_oid.c:				DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(RSN, INFO, "BIP BC wtbl index:%d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:					DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/common/wlan_oid.c:					DBGLOG(RSN, INFO, "AP REC\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:					DBGLOG(RSN, INFO, "!AP && !STA REC\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:					DBGLOG(RSN, ERROR,
connectivity/wlan/core/gen4m/common/wlan_oid.c:					DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(RSN, INFO, "AddKey cmd to wlan index %d: (BSS = %d) " MACSTR
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RSN, INFO, "wepkey(%d, %d), BMCWlan(%d, %d)\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RSN, WARN, "invalid prCmdKey->ucKeyId(%d)\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RSN, INFO, "Remove bip key Index : 0x%08x\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(RSN, INFO, "PARAM_REMOVE_KEY: BSSID(" MACSTR
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(RSN, INFO, "WlanIdx = %d\n", prBssInfo->wepkeyWlanIdx);
connectivity/wlan/core/gen4m/common/wlan_oid.c:					DBGLOG(RSN, ERROR,
connectivity/wlan/core/gen4m/common/wlan_oid.c:					DBGLOG(RSN, ERROR,
connectivity/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(RSN, ERROR, "ucWlanIndex = %d, wepUsed = %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RSN, ERROR, "Check the case set unicast default key!");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(RSN, TRACE,
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, ERROR, "Unknown Encryption Status Setting:%d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, LOUD, "ucBssIndex %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, INFO, "ENCRYPTION_STATUS %d\n", eEewEncrypt);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RSN, INFO, "Disable Encryption\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RSN, INFO, "Enable Encryption1\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RSN, INFO, "Enable Encryption2\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RSN, INFO, "Enable Encryption3\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RSN, INFO, "Unacceptible encryption status: %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "Invalid length %u\n", u4QueryBufferLen);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "Invalid length %u\n", u4QueryBufferLen);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "Invalid length %u\n", u4SetBufferLen);
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, LOUD, "ucBssIndex %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "Too short length %u\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(REQ, TRACE,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "Too short length %u\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, INFO, "RSSI trigger: %d dBm\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "Too short length %u\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, WARN,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, WARN, "Too short length %u\n", u4QueryBufferLen);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "Invalid length %u\n", u4QueryBufferLen);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "Invalid length %u\n", u4SetBufferLen);
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, LOUD, "ucBssIndex %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(REQ, TRACE,
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, INFO, "u4SetBufferLen = %d\n", u4SetBufferLen);
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, INFO, "address=%d\n", rCmdSetAccessEfuse.u4Address);
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, INFO, "address=%d\n", rCmdSetAccessEfuse.u4Address);
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, INFO, "pu4QueryInfoLen = %d\n", pu4QueryInfoLen);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, TRACE, "ucCmdSeqNum =%d\n", ucCmdSeqNum);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(RFTEST, INFO, "%s\n", __func__);
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(RFTEST, INFO, "%s\n", __func__);
connectivity/wlan/core/gen4m/common/wlan_oid.c:#if CFG_SUPPORT_CAL_RESULT_BACKUP_TO_HOST_DBGLOG
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "Reason = %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "Action = %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "NeedResp = %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "FragNum = %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "RomRam = %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "ThermalValue = %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "Address = 0x%08x\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "Length = %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "RemainLength = %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/common/wlan_oid.c:#if CFG_SUPPORT_CAL_RESULT_BACKUP_TO_HOST_DBGLOG
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "Reason = %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "Action = %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "NeedResp = %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "FragNum = %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "RomRam = %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "ThermalValue = %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "Address = 0x%08x\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "Length = %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "RemainLength = %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/common/wlan_oid.c:#if CFG_SUPPORT_CAL_RESULT_BACKUP_TO_HOST_DBGLOG
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "Reason = %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "Action = %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "NeedResp = %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "FragNum = %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "RomRam = %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "ThermalValue = %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "Address = 0x%08x\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "Length = %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "RemainLength = %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/common/wlan_oid.c:#if CFG_SUPPORT_CAL_RESULT_BACKUP_TO_HOST_DBGLOG
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "Reason = %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "Action = %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "NeedResp = %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "FragNum = %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "RomRam = %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "ThermalValue = %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "Address = 0x%08x\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "Length = %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "RemainLength = %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:#if CFG_SUPPORT_CAL_RESULT_BACKUP_TO_HOST_DBGLOG
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, TRACE, "MCR Write: Offset = %#08x, Data = %#08x\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, LOUD, "\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, TRACE, "DRV MCR Read: Offset = %#08x, Data = %#08x\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, LOUD, "\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, TRACE, "DRV MCR Write: Offset = %#08x, Data = %#08x\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, LOUD, "\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, LOUD, "\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(OID, INFO,
connectivity/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(INIT, INFO, "--- Enable LPDVT [%d] ---\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(OID, INFO,
connectivity/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(OID, INFO, "disable tx ampdu status %u\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RSN, INFO, "802.11w test 0x%x\n", u2SubId);
connectivity/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(HAL, INFO, "set smt fixed rate: %u\n", u4Data);
connectivity/wlan/core/gen4m/common/wlan_oid.c:				DBGLOG(SCN, INFO,
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, LOUD, "\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, LOUD, "\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, TRACE, "Default firmware setting %d item\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, TRACE, "%s with %s\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, LOUD, "\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, TRACE,
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, TRACE, "Nss [%u], Dbdc [%u]\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, TRACE,
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, LOUD, "\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, WARN, "Custom OID interface version: %#08X\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "Invalid MC list length %u\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "Too many MC addresses\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, INFO,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, WARN, "Too short length %u\n", u4QueryBufferLen);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, INFO,
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, INFO,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "u4SetBufferLen < sizeof(uint32_t)\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, TRACE, "New packet filter: %#08x\n", u4NewPacketFilter);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(REQ, WARN, "some flags we don't support\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, TRACE, "[MC debug] u4OsPacketFilter=0x%x\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, TRACE,
connectivity/wlan/core/gen4m/common/wlan_oid.c:	/* WARNLOG(("Ready to transition to D3\n")); */
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, INFO, "Set Power State: D0\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, INFO, "Set Power State: D1\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, INFO, "Set Power State: D2\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, INFO, "Set Power State: D3\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, LOUD, "\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, LOUD, "\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "Invalid length %u\n", u4SetBufferLen);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, LOUD, "ucBssIndex %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, ERROR, "Fail in creating AisAbortMsg.\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, LOUD, "ucBssIndex %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, TRACE, "Invalid Beacon Interval = %u\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, INFO, "Set beacon interval: %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, LOUD, "\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		/* DBGLOG(INIT, INFO, ("%s: u4IPv4AddrCount (%lu)\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:				DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, ERROR, "Invalid data. QueryBufferLen: %ld.\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, ERROR, "Invalid data. SetBufferLen: %ld.\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(RFTEST, INFO, "Set AT_CMD BufferLen = %d, AT Index = %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(RFTEST, INFO, "Set AT_CMD BufferLen = %d, AT Index = %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, WARN, "Chip resetting, skip\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, TRACE, "ucCmdSeqNum =%d\n", ucCmdSeqNum);
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, LOUD, "\r\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, LOUD, "ucBssIndex %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(SEC, TRACE,
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(SEC, TRACE,
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(SEC, TRACE,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, LOUD, "ucBssIndex %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG_MEM8(REQ, TRACE, (uint8_t *) pvSetBuffer, 560);
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, TRACE, "CK Key(%d):\r\n", (uint8_t) prNewKey->u4LenWPICK);
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, TRACE, "PN:\r\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, LOUD, "\r\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, LOUD, "\r\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, LOUD, "\r\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, LOUD, "\r\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, LOUD, "\r\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(REQ, ERROR, "NVRAM Read Failed: index=%#x.\r\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, INFO, "EEPROM size =%d\r\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, LOUD, "\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, ERROR, "NVRAM Write Failed.\r\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, LOUD, "\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, LOUD, "\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, LOUD, "\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		/* WARNLOG(("Invalid length %ld\n", u4SetBufferLen)); */
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "Invalid length %u\n", u4QueryBufferLen);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "Invalid length %lu\n", u4QueryBufferLen);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		/* DBGLOG(INIT, INFO, (KERN_WARNING DRV_NAME
connectivity/wlan/core/gen4m/common/wlan_oid.c:		/* DBGLOG(INIT, INFO, (KERN_WARNING DRV_NAME
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "Fail to set antenna because of ACPI_D3\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		/* DBGLOG(INIT, INFO, (KERN_WARNING DRV_NAME
connectivity/wlan/core/gen4m/common/wlan_oid.c:		/* DBGLOG(INIT, INFO, (KERN_WARNING DRV_NAME
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "Invalid length %lu\n", u4QueryBufferLen);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		/* DBGLOG(INIT, INFO, (KERN_WARNING DRV_NAME"PTA = 1\r\n")); */
connectivity/wlan/core/gen4m/common/wlan_oid.c:		/* DBGLOG(INIT, INFO, (KERN_WARNING DRV_NAME"PTA = 0\r\n")); */
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		/* DBGLOG(INIT, INFO, (KERN_WARNING DRV_NAME"Set Pta= 0\r\n"));
connectivity/wlan/core/gen4m/common/wlan_oid.c:		/* DBGLOG(INIT, INFO, (KERN_WARNING DRV_NAME"Set Pta= 1\r\n"));
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, LOUD, "\r\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, ERROR, "prCmd not available\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, INFO, "c2GLegacyStaPwrOffset=%d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, INFO, "c2GHotspotPwrOffset=%d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, INFO, "c2GP2pPwrOffset=%d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, INFO, "c2GBowPwrOffset=%d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, INFO, "c5GLegacyStaPwrOffset=%d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, INFO, "c5GHotspotPwrOffset=%d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, INFO, "c5GP2pPwrOffset=%d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, INFO, "c5GBowPwrOffset=%d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, INFO, "ucConcurrencePolicy=%d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, INFO, "acTxPwrLimit2G[%d]=%d\n", i,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, INFO, "acTxPwrLimit5G[%d]=%d\n", i,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, TRACE, "[%d] 0x%X, len %u, remain len %u\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, LOUD, "\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, TRACE, "Dump 0x%X, len %u\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "Invalid length %u\n", u4SetBufferLen);
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(P2P, INFO, "Set P2P(%u) enable[%u] mode[%u]\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(P2P, ERROR, "P2P interface mode(%u) is wrong\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:				DBGLOG(OID, INFO,
connectivity/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(P2P, ERROR, "P2P Launch Failed\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, INFO, "wlanoidSetGtkRekeyData\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RSN, WARN,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, INFO, "ucCmdSeqNum = %d\n", ucCmdSeqNum);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "scnFsmSchedScanRequest failure !!\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "scnFsmSchedScanStopRequest failed.\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, WARN, "[Puff]wlanoidResetBAScoreboard\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(SCN, TRACE, "[BATCH] command=%s, len=%u\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(SCN, TRACE, "[BATCH] invalid len %d\n", u4SetBufferLen);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(SCN, TRACE, "XXX Start Batch Scan XXX\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(SCN, TRACE,
connectivity/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(SCN, TRACE, "[BATCH] Parse RTT fail. head=%s\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(SCN, TRACE,
connectivity/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(SCN, TRACE, "[BATCH] Parse CHANNEL fail(1)\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(SCN, TRACE, "[BATCH] Parse CHANNEL fail(2)\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		 *         DBGLOG(SCN, TRACE, "[BATCH] Parse fail: tokens=%d,
connectivity/wlan/core/gen4m/common/wlan_oid.c:					DBGLOG(SCN, TRACE,
connectivity/wlan/core/gen4m/common/wlan_oid.c:				DBGLOG(SCN, TRACE,
connectivity/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(SCN, TRACE, "Scanning Channel:%d, freq: %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(SCN, TRACE,
connectivity/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(SCN, TRACE, "[BATCH] CHANNELS = %s\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(SCN, TRACE, "[BATCH] CHANNEL list\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:				DBGLOG(SCN, TRACE, "[BATCH] %s, %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(SCN, TRACE, "XXX Stop Batch Scan XXX\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(SCN, TRACE, "XXX Get Batch Scan Result (%d) XXX\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(SEC, TRACE, "HS20 IE sz %u\n", u4SetBufferLen);
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, LOUD, "ucBssIndex %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, LOUD, "\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "Too short length %u\n", u4QueryBufferLen);
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(RSN, INFO, "index = %d\n", prHwWlanInfo->u4Index);
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, LOUD, "\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "Too short length %u\n", u4QueryBufferLen);
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(RSN, INFO, "index = %d\n", prHwMibInfo->u4Index);
connectivity/wlan/core/gen4m/common/wlan_oid.c:	struct CMD_FW_LOG_2_HOST_CTRL *prFwLog2HostCtrl;
connectivity/wlan/core/gen4m/common/wlan_oid.c:	*pu4SetInfoLen = sizeof(struct CMD_FW_LOG_2_HOST_CTRL);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/common/wlan_oid.c:	} else if (u4SetBufferLen < sizeof(struct CMD_FW_LOG_2_HOST_CTRL)) {
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "Too short length %d\n", u4SetBufferLen);
connectivity/wlan/core/gen4m/common/wlan_oid.c:	prFwLog2HostCtrl = (struct CMD_FW_LOG_2_HOST_CTRL *)pvSetBuffer;
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, INFO, "McuDest %d, LogType %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:				CMD_ID_FW_LOG_2_HOST,
connectivity/wlan/core/gen4m/common/wlan_oid.c:				sizeof(struct CMD_FW_LOG_2_HOST_CTRL),
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, WARN, "Too short length %u\n", u4SetBufferLen);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, ERROR,
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, INFO, "enable=%d, index=%d\r\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, INFO, "%x dbm\n", rCmdSetTxTargetPower.ucTxTargetPwr);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR, "prCmdRddOnOffCtrl is NULL");
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, INFO, "DFS ctrl: %.d, RDD index: %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR, "prCmdRddOnOffCtrl is NULL");
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, INFO, "DFS ctrl: %.d, Radar Detect Mode: %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR, "NCHO roam trigger invalid %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, TRACE, "NCHO roam trigger is %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, ERROR, "NCHO no enough memory\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR, "NCHO roam delta invalid %d\n", *pi4Param);
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, TRACE, "NCHO roam delta is %d\n", *pi4Param);
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, TRACE, "NCHO roam delta is %d\n", *pParam);
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, TRACE, "NCHO roam scan period is %d\n", *pParam);
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, TRACE, "NCHO roam scan period is %d\n", *pParam);
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, TRACE, "NCHO roam scan channel num is %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR, "NCHO roam scan control invalid %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, TRACE, "NCHO roam scan control is %d\n", *pParam);
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, TRACE, "NCHO roam scan control is %d\n", *pParam);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR, "NCHO scan channel time invalid %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, TRACE, "NCHO scan channel time is %d\n", *pParam);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, ERROR, "NCHO no enough memory\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR, "NCHO scan home time invalid %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, TRACE, "NCHO cmd is %s\n", acCmd);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, TRACE, "NCHO scan home time is %d\n", *pParam);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, ERROR, "NCHO no enough memory\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR, "NCHO scan home away time invalid %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, TRACE, "NCHO cmd is %s\n", acCmd);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, TRACE, "NCHO scan home away is %d\n", *pParam);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, ERROR, "NCHO no enough memory\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR, "NCHO scan Nprobes invalid %d\n", *pParam);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, TRACE, "NCHO Nprobes is %d\n", *pParam);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, ERROR, "NCHO no enough memory\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, TRACE, "NCHO send ncho action frame start\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, TRACE, "NCHO send action frame end\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR, "NCHO wes mode invalid %d\n", *pParam);
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, TRACE, "NCHO WES mode is %d\n", *pParam);
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, TRACE, "NCHO Wes mode is %d\n", *pParam);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR, "NCHO wes mode invalid %d\n", *pParam);
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, INFO, "NCHO enabled:%d ,band:%d,status:%d\n"
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, TRACE, "NCHO band is %d\n", *pParam);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR, "NCHO DFS scan mode invalid %d\n", *pParam);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, TRACE, "NCHO DFS scan mode is %d\n", *pParam);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, ERROR, "NCHO no enough memory\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, LOUD, "\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR, "NCHO DFS scan mode invalid %d\n", *pParam);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, INFO, "NCHO enable is %d\n", *pParam);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, ERROR, "NCHO no enough memory\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, ERROR, "Buffer is NULL\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, INFO, "Fw Params: %s\n", (uint8_t *)pvSetBuffer);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, INFO, "enable tdls ps %d\n", rTdlsPs.ucIsEnablePs);
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, INFO, "Set SER CMD[%d]\n", u4CmdId);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, ERROR, "Error SER CMD\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, INFO, "RoamingPoily= %d, conn policy= [%d] -> [%d]\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, ERROR,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, WARN, "FT: FT Ies length is 0\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, ERROR,
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, INFO,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, WARN, "FT: failed to allocate Join Req Msg\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, INFO, "FT: continue to do auth/assoc, Ft Request %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, ERROR, "didn't connected any Access Point\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, ERROR, "No Memory\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, INFO, "Send Neighbor Request, SSID=%s\n", pucSSID);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, INFO, "Not connected yet\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, INFO,
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, INFO, "Send BssTransitionManagementQuery, Reason %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, INFO, "WMM AC is not supported\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, INFO, "wrong operation %s\n", pucCmd);
connectivity/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(OID, ERROR, "Parse %s error\n", pucItem);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, ERROR, "AisBssInfo is NULL!\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, INFO,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, ERROR, "pvBuffer is NULL\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, INFO, "Simulate beacon timeout!!!\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, ERROR, "IT type %s is not supported\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:				DBGLOG(OID, ERROR,
connectivity/wlan/core/gen4m/common/wlan_oid.c:				DBGLOG(OID, ERROR, "not a hex char %c\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, INFO, "Dump IT packet, len %d\n", j);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, ERROR, "packet length %d less than mac header 24\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, ERROR, "Not supported Fw Event IT type %s\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, ERROR, "pvBuffer is NULL\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, TRACE, "wlanoidSetOshareMode\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:	struct PARAM_WIFI_LOG_LEVEL_UI *pparam;
connectivity/wlan/core/gen4m/common/wlan_oid.c:	pparam = (struct PARAM_WIFI_LOG_LEVEL_UI *) pvQueryBuffer;
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, INFO, "version: %d, module: %d, enable: %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:	*pu4QueryInfoLen = sizeof(struct PARAM_WIFI_LOG_LEVEL_UI);
connectivity/wlan/core/gen4m/common/wlan_oid.c:	struct PARAM_WIFI_LOG_LEVEL *pparam;
connectivity/wlan/core/gen4m/common/wlan_oid.c:	pparam = (struct PARAM_WIFI_LOG_LEVEL *) pvQueryBuffer;
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, INFO, "version: %d, module: %d, level: %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:	*pu4QueryInfoLen = sizeof(struct PARAM_WIFI_LOG_LEVEL_UI);
connectivity/wlan/core/gen4m/common/wlan_oid.c:	struct PARAM_WIFI_LOG_LEVEL *pparam;
connectivity/wlan/core/gen4m/common/wlan_oid.c:	pparam = (struct PARAM_WIFI_LOG_LEVEL *) pvSetBuffer;
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, INFO, "version: %d, module: %d, level: %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, INFO, "Set SW AMSDU Num: %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, INFO, "Set SW AMSDU max Size: %d\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, ERROR, "prAisBssInfo = NULL\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, INFO, "LowLatency(oid) event:0x%x\n", u4Events);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, ERROR,
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, INFO, "bss index=%d\n", ucBssIdx);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, ERROR, "invalid bss index: %u\n", ucBssIdx);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, ERROR, "invalid BssInfo: %p, %u\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, INFO,
connectivity/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, INFO, "wifi type=[%s](%d), phyType=%u\n",
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, ERROR, "prPwrCtrlParam is NULL\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:					DBGLOG(OID, ERROR,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, ERROR, "prAdapter is NULL\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, ERROR, "pu4QueryInfoLen is NULL\n");
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "Invalid length %lu\n", u4QueryBufferLen);
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, ERROR,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, WARN,
connectivity/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "SAE-confirm failed with bssid:" MACSTR "\n",
connectivity/wlan/core/gen4m/include/config.h:#define CFG_ENABLE_CAL_LOG		1
connectivity/wlan/core/gen4m/include/config.h:#define CFG_ENABLE_PER_STA_STATISTICS_LOG 1
connectivity/wlan/core/gen4m/include/config.h:#define CFG_SUPPORT_CAL_RESULT_BACKUP_TO_HOST_DBGLOG		0
connectivity/wlan/core/gen4m/include/config.h:#define CFG_SUPPORT_CAL_RESULT_BACKUP_TO_HOST_DBGLOG		0
connectivity/wlan/core/gen4m/include/wlan_oid.h:struct PARAM_WIFI_LOG_LEVEL_UI {
connectivity/wlan/core/gen4m/include/wlan_oid.h:struct PARAM_WIFI_LOG_LEVEL {
connectivity/wlan/core/gen4m/include/wlan_oid.h:enum ENUM_WIFI_LOG_LEVEL_VERSION_T {
connectivity/wlan/core/gen4m/include/wlan_oid.h:	ENUM_WIFI_LOG_LEVEL_VERSION_V1 = 1,
connectivity/wlan/core/gen4m/include/wlan_oid.h:	ENUM_WIFI_LOG_LEVEL_VERSION_NUM
connectivity/wlan/core/gen4m/include/wlan_oid.h:enum ENUM_WIFI_LOG_LEVEL_T {
connectivity/wlan/core/gen4m/include/wlan_oid.h:	ENUM_WIFI_LOG_LEVEL_DEFAULT = 0,
connectivity/wlan/core/gen4m/include/wlan_oid.h:	ENUM_WIFI_LOG_LEVEL_MORE,
connectivity/wlan/core/gen4m/include/wlan_oid.h:	ENUM_WIFI_LOG_LEVEL_EXTREME,
connectivity/wlan/core/gen4m/include/wlan_oid.h:	ENUM_WIFI_LOG_LEVEL_NUM
connectivity/wlan/core/gen4m/include/wlan_oid.h:enum ENUM_WIFI_LOG_MODULE_T {
connectivity/wlan/core/gen4m/include/wlan_oid.h:	ENUM_WIFI_LOG_MODULE_DRIVER = 0,
connectivity/wlan/core/gen4m/include/wlan_oid.h:	ENUM_WIFI_LOG_MODULE_FW,
connectivity/wlan/core/gen4m/include/wlan_oid.h:	ENUM_WIFI_LOG_MODULE_NUM,
connectivity/wlan/core/gen4m/include/wlan_oid.h:enum ENUM_WIFI_LOG_LEVEL_SUPPORT_T {
connectivity/wlan/core/gen4m/include/wlan_oid.h:	ENUM_WIFI_LOG_LEVEL_SUPPORT_DISABLE = 0,
connectivity/wlan/core/gen4m/include/wlan_oid.h:	ENUM_WIFI_LOG_LEVEL_SUPPORT_ENABLE,
connectivity/wlan/core/gen4m/include/wlan_oid.h:	ENUM_WIFI_LOG_LEVEL_SUPPORT_NUM
connectivity/wlan/core/gen4m/include/mgmt/scan.h:#define SCAN_LOG_PREFIX_MAX_LEN		(16)
connectivity/wlan/core/gen4m/include/mgmt/scan.h:#define SCAN_LOG_MSG_MAX_LEN		(500)
connectivity/wlan/core/gen4m/include/mgmt/scan.h:#define SCAN_LOG_BUFF_SIZE		(200)
connectivity/wlan/core/gen4m/include/mgmt/scan.h:enum ENUM_SCAN_LOG_PREFIX {
connectivity/wlan/core/gen4m/include/mgmt/scan.h:	LOG_SCAN_REQ_K2D = 0,		/* 0 */
connectivity/wlan/core/gen4m/include/mgmt/scan.h:	LOG_SCAN_REQ_D2F,
connectivity/wlan/core/gen4m/include/mgmt/scan.h:	LOG_SCAN_RESULT_F2D,
connectivity/wlan/core/gen4m/include/mgmt/scan.h:	LOG_SCAN_RESULT_D2K,
connectivity/wlan/core/gen4m/include/mgmt/scan.h:	LOG_SCAN_DONE_F2D,
connectivity/wlan/core/gen4m/include/mgmt/scan.h:	LOG_SCAN_DONE_D2K,		/* 5 */
connectivity/wlan/core/gen4m/include/mgmt/scan.h:	LOG_SCHED_SCAN_REQ_START_K2D,
connectivity/wlan/core/gen4m/include/mgmt/scan.h:	LOG_SCHED_SCAN_REQ_START_D2F,
connectivity/wlan/core/gen4m/include/mgmt/scan.h:	LOG_SCHED_SCAN_REQ_STOP_K2D,
connectivity/wlan/core/gen4m/include/mgmt/scan.h:	LOG_SCHED_SCAN_REQ_STOP_D2F,
connectivity/wlan/core/gen4m/include/mgmt/scan.h:	LOG_SCHED_SCAN_DONE_F2D,	/* 10 */
connectivity/wlan/core/gen4m/include/mgmt/scan.h:	LOG_SCHED_SCAN_DONE_D2K,
connectivity/wlan/core/gen4m/include/mgmt/scan.h:	LOG_SCAN_ABORT_REQ_K2D,
connectivity/wlan/core/gen4m/include/mgmt/scan.h:	LOG_SCAN_ABORT_REQ_D2F,
connectivity/wlan/core/gen4m/include/mgmt/scan.h:	LOG_SCAN_ABORT_DONE_D2K,
connectivity/wlan/core/gen4m/include/mgmt/scan.h:	LOG_SCAN_D2D,
connectivity/wlan/core/gen4m/include/mgmt/scan.h:	LOG_SCAN_MAX
connectivity/wlan/core/gen4m/include/mgmt/scan.h:struct SCAN_LOG_ELEM_BSS {
connectivity/wlan/core/gen4m/include/mgmt/scan.h:struct SCAN_LOG_CACHE {
connectivity/wlan/core/gen4m/include/mgmt/scan.h:	struct SCAN_LOG_ELEM_BSS arBSSListBufFW[SCAN_LOG_BUFF_SIZE];
connectivity/wlan/core/gen4m/include/mgmt/scan.h:	struct SCAN_LOG_ELEM_BSS arBSSListBufCFG[SCAN_LOG_BUFF_SIZE];
connectivity/wlan/core/gen4m/include/mgmt/scan.h:	struct SCAN_LOG_CACHE rScanLogCache;
connectivity/wlan/core/gen4m/include/mgmt/scan.h:extern const char aucScanLogPrefix[][SCAN_LOG_PREFIX_MAX_LEN];
connectivity/wlan/core/gen4m/include/mgmt/scan.h:#if DBG_DISABLE_ALL_LOG
connectivity/wlan/core/gen4m/include/mgmt/scan.h:#else /* DBG_DISABLE_ALL_LOG */
connectivity/wlan/core/gen4m/include/mgmt/scan.h:		LOG_FUNC("[%u]SCANLOG:(SCN " #_Clz ") %s " _Fmt, \
connectivity/wlan/core/gen4m/include/mgmt/scan.h:#endif /* DBG_DISABLE_ALL_LOG */
connectivity/wlan/core/gen4m/include/mgmt/scan.h:	struct SCAN_LOG_ELEM_BSS *prListBuf,
connectivity/wlan/core/gen4m/include/mgmt/scan.h:	enum ENUM_SCAN_LOG_PREFIX prefix,
connectivity/wlan/core/gen4m/include/mgmt/scan.h:void scanLogCacheFlushBSS(struct LINK *prList, enum ENUM_SCAN_LOG_PREFIX prefix,
connectivity/wlan/core/gen4m/include/mgmt/scan.h:void scanLogCacheFlushAll(struct SCAN_LOG_CACHE *prScanLogCache,
connectivity/wlan/core/gen4m/include/mgmt/scan.h:	enum ENUM_SCAN_LOG_PREFIX prefix, const uint16_t logBufLen);
connectivity/wlan/core/gen4m/include/mgmt/p2p_role.h:#if	CFG_ENABLE_PER_STA_STATISTICS_LOG
connectivity/wlan/core/gen4m/include/mgmt/p2p_role.h:#if	CFG_ENABLE_PER_STA_STATISTICS_LOG
connectivity/wlan/core/gen4m/include/nic_cmd_event.h:	EXT_CMD_ID_FW_LOG_2_HOST = 0x13,
connectivity/wlan/core/gen4m/include/nic_cmd_event.h:	CMD_ID_LOG_UI_INFO = 0x8D,	/* 0x8D (Set / Query) */
connectivity/wlan/core/gen4m/include/nic_cmd_event.h:	CMD_ID_FW_LOG_2_HOST,	/* 0xc5 (Set) */
connectivity/wlan/core/gen4m/include/nic_cmd_event.h:	CMD_ID_STATS_LOG = 0xCB,	/* 0xcb (Set) */
connectivity/wlan/core/gen4m/include/nic_cmd_event.h:	EVENT_ID_LOG_UI_INFO = 0x8D,
connectivity/wlan/core/gen4m/include/nic_cmd_event.h:#define EXT_EVENT_ID_FW_LOG_2_HOST 0x13
connectivity/wlan/core/gen4m/include/nic_cmd_event.h:struct CMD_FW_LOG_2_HOST_CTRL {
connectivity/wlan/core/gen4m/include/nic_cmd_event.h:struct CMD_STATS_LOG {
connectivity/wlan/core/gen4m/include/nic_cmd_event.h:struct CMD_EVENT_LOG_UI_INFO {
connectivity/wlan/core/gen4m/include/chips/pse.h:#define PSE_LOGICAL_RST (1 << 1)
connectivity/wlan/core/gen4m/include/wlan_lib.h:#define WIFI_FEATURE_LOGGER             (0x20000)
connectivity/wlan/core/gen4m/include/wlan_lib.h:#define WLAN_TX_STATS_LOG_TIMEOUT			30000
connectivity/wlan/core/gen4m/include/wlan_lib.h:#define WLAN_TX_STATS_LOG_DURATION			1500
connectivity/wlan/core/gen4m/include/wlan_lib.h:	DEBUG_MSG_ID_FWLOG = 0x02,
connectivity/wlan/core/gen4m/include/pwr_mgt.h:#define LP_OWN_BACK_FAILED_LOG_SKIP_MS  2000
connectivity/wlan/core/gen4m/include/nic/nic_tx.h:		DBGLOG(TX, TRACE, \
connectivity/wlan/core/gen4m/include/nic/connac_reg.h:#define DPMA_HIF_LOGIC_RESET_MASK               (0x1 << 4)
connectivity/wlan/core/gen4m/include/nic/hal.h:				DBGLOG(HAL, ERROR, \
connectivity/wlan/core/gen4m/include/nic/hal.h:				DBGLOG(HAL, ERROR, \
connectivity/wlan/core/gen4m/include/nic/hal.h:		DBGLOG(HAL, WARN, "ignore HAL_MCR_RD access! 0x%x\n", \
connectivity/wlan/core/gen4m/include/nic/hal.h:				DBGLOG(HAL, ERROR, \
connectivity/wlan/core/gen4m/include/nic/hal.h:				DBGLOG(HAL, ERROR, \
connectivity/wlan/core/gen4m/include/nic/hal.h:		DBGLOG(HAL, WARN, "ignore HAL_MCR_WR access! 0x%x: 0x%x\n", \
connectivity/wlan/core/gen4m/include/nic/hal.h:			DBGLOG(HAL, ERROR, "HAL_PORT_RD access fail! 0x%x\n", \
connectivity/wlan/core/gen4m/include/nic/hal.h:		DBGLOG(HAL, WARN, "ignore HAL_PORT_RD access! 0x%x\n", \
connectivity/wlan/core/gen4m/include/nic/hal.h:			DBGLOG(HAL, ERROR, "HAL_PORT_WR access fail! 0x%x\n", \
connectivity/wlan/core/gen4m/include/nic/hal.h:		DBGLOG(HAL, WARN, "ignore HAL_PORT_WR access! 0x%x\n", \
connectivity/wlan/core/gen4m/include/nic/hal.h:			DBGLOG(HAL, ERROR, "HAL_BYTE_WR access fail! 0x%x\n", \
connectivity/wlan/core/gen4m/include/nic/hal.h:		DBGLOG(HAL, WARN, "ignore HAL_BYTE_WR access! 0x%x\n", \
connectivity/wlan/core/gen4m/include/nic/hal.h:			DBGLOG(HAL, ERROR, \
connectivity/wlan/core/gen4m/include/nic/hal.h:		DBGLOG(HAL, WARN, \
connectivity/wlan/core/gen4m/include/nic/hal.h:			DBGLOG(INIT, INFO, \
connectivity/wlan/core/gen4m/include/nic/hal.h:			DBGLOG(INIT, INFO, \
connectivity/wlan/core/gen4m/include/nic/hal.h:		DBGLOG(INIT, INFO, "Mailbox: 0x%x\n", u4Value); \
connectivity/wlan/core/gen4m/include/nic/adapter.h:#if	CFG_ENABLE_PER_STA_STATISTICS_LOG
connectivity/wlan/core/gen4m/include/debug.h:#define DBG_DISABLE_ALL_LOG             0
connectivity/wlan/core/gen4m/include/debug.h:#define DBG_LOG_LEVEL_DEFAULT \
connectivity/wlan/core/gen4m/include/debug.h:#define DBG_LOG_LEVEL_MORE \
connectivity/wlan/core/gen4m/include/debug.h:	(DBG_LOG_LEVEL_DEFAULT | \
connectivity/wlan/core/gen4m/include/debug.h:#define DBG_LOG_LEVEL_EXTREME \
connectivity/wlan/core/gen4m/include/debug.h:	(DBG_LOG_LEVEL_MORE | \
connectivity/wlan/core/gen4m/include/debug.h:	DBG_MODULE_NUM		/* Notice the XLOG check */
connectivity/wlan/core/gen4m/include/debug.h: * syntax does not support  #define LOG_FUNC(x,...)
connectivity/wlan/core/gen4m/include/debug.h:#define LOG_FUNC                kalPrint
connectivity/wlan/core/gen4m/include/debug.h:#define LOG_FUNC_LIMITED	kalPrintLimited
connectivity/wlan/core/gen4m/include/debug.h:#if DBG_DISABLE_ALL_LOG
connectivity/wlan/core/gen4m/include/debug.h:#define DBGLOG(_Module, _Class, _Fmt)
connectivity/wlan/core/gen4m/include/debug.h:#define DBGLOG_LIMITED(_Module, _Class, _Fmt)
connectivity/wlan/core/gen4m/include/debug.h:#define DBGLOG_MEM8(_Module, _Class, _StartAddr, _Length)
connectivity/wlan/core/gen4m/include/debug.h:#define DBGLOG_MEM32(_Module, _Class, _StartAddr, _Length)
connectivity/wlan/core/gen4m/include/debug.h:#define DBGLOG(_Mod, _Clz, _Fmt, ...)
connectivity/wlan/core/gen4m/include/debug.h:#define DBGLOG_LIMITED(_Mod, _Clz, _Fmt, ...)
connectivity/wlan/core/gen4m/include/debug.h:#define TOOL_PRINTLOG(_Mod, _Clz, _Fmt, ...)
connectivity/wlan/core/gen4m/include/debug.h:#define DBGLOG_MEM8(_Mod, _Clz, _Adr, _Len)
connectivity/wlan/core/gen4m/include/debug.h:#define DBGLOG_MEM32(_Mod, _Clz, _Adr, _Len)
connectivity/wlan/core/gen4m/include/debug.h:	LOG_FUNC("alloate memory failed at %s:%d\n", __FILE__, __LINE__); \
connectivity/wlan/core/gen4m/include/debug.h:	LOG_FUNC("alloate memory failed at %s:%d\n", __FILE__, __LINE__); \
connectivity/wlan/core/gen4m/include/debug.h:	LOG_FUNC("alloate memory failed at %s:%d\n", __FILE__, __LINE__); \
connectivity/wlan/core/gen4m/include/debug.h:/* LOG function for print to buffer */
connectivity/wlan/core/gen4m/include/debug.h:/* If buffer pointer is NULL, redirect to normal DBGLOG */
connectivity/wlan/core/gen4m/include/debug.h:#define LOGBUF(_pucBuf, _maxLen, _curLen, _Fmt, ...)
connectivity/wlan/core/gen4m/include/debug.h:#define log_dbg			DBGLOG
connectivity/wlan/core/gen4m/include/debug.h:#define log_limited_dbg		DBGLOG_LIMITED
connectivity/wlan/core/gen4m/include/debug.h:#define log_fw_dbg		DBGFWLOG
connectivity/wlan/core/gen4m/include/debug.h:#define log_mem8_dbg		DBGLOG_MEM8
connectivity/wlan/core/gen4m/include/debug.h:#define log_mem32_dbg		DBGLOG_MEM32
connectivity/wlan/core/gen4m/include/debug.h:#define log_tool_dbg		TOOL_PRINTLOG
connectivity/wlan/core/gen4m/mgmt/assoc.c:	DBGLOG(SAA, LOUD,
connectivity/wlan/core/gen4m/mgmt/assoc.c:			DBGLOG(SAA, INFO,
connectivity/wlan/core/gen4m/mgmt/assoc.c:		DBGLOG(SAA, TRACE, "Use default listen interval\n");
connectivity/wlan/core/gen4m/mgmt/assoc.c:			DBGLOG(P2P, TRACE, "Function Linker Lost.\n");
connectivity/wlan/core/gen4m/mgmt/assoc.c:		DBGLOG(SAA, WARN,
connectivity/wlan/core/gen4m/mgmt/assoc.c:			DBGLOG(P2P, TRACE, "Function Linker Lost.\n");
connectivity/wlan/core/gen4m/mgmt/assoc.c:	DBGLOG_MEM8(SAA, INFO, pucBuffer, cp - pucBuffer);
connectivity/wlan/core/gen4m/mgmt/assoc.c:		DBGLOG(SAA, WARN, "Invalid AssocRsp length!");
connectivity/wlan/core/gen4m/mgmt/assoc.c:	DBGLOG(SAA, LOUD, "prSwRfb->u2PayloadLength = %d\n",
connectivity/wlan/core/gen4m/mgmt/assoc.c:			DBGLOG(SEC, TRACE,
connectivity/wlan/core/gen4m/mgmt/assoc.c:		DBGLOG(SAA, INFO,
connectivity/wlan/core/gen4m/mgmt/assoc.c:					DBGLOG(SAA, INFO,
connectivity/wlan/core/gen4m/mgmt/assoc.c:						DBGLOG(SAA, INFO,
connectivity/wlan/core/gen4m/mgmt/assoc.c:	DBGLOG(RSN, INFO, "assocSendDisAssocFrame\n");
connectivity/wlan/core/gen4m/mgmt/assoc.c:		DBGLOG(SAA, WARN, "No PKT_INFO_T for sending DisAssoc.\n");
connectivity/wlan/core/gen4m/mgmt/assoc.c:			DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/mgmt/assoc.c:	DBGLOG(SAA, INFO, "ucTxSeqNum=%d ucStaRecIndex=%d u2ReasonCode=%d\n",
connectivity/wlan/core/gen4m/mgmt/assoc.c:		DBGLOG(SAA, LOUD, "Invalid DisAssoc packet length!");
connectivity/wlan/core/gen4m/mgmt/assoc.c:		DBGLOG(SAA, LOUD,
connectivity/wlan/core/gen4m/mgmt/assoc.c:			DBGLOG(RSN, TRACE,
connectivity/wlan/core/gen4m/mgmt/assoc.c:						DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/assoc.c:			DBGLOG(SAA, WARN,
connectivity/wlan/core/gen4m/mgmt/assoc.c:					DBGLOG(SAA, LOUD,
connectivity/wlan/core/gen4m/mgmt/assoc.c:		DBGLOG(AAA, WARN,
connectivity/wlan/core/gen4m/mgmt/assoc.c:	DBGLOG(SAA, INFO,
connectivity/wlan/core/gen4m/mgmt/scan_fsm.c:		DBGLOG(SCN, INFO, "Include BSSID %pM in probe request\n",
connectivity/wlan/core/gen4m/mgmt/scan_fsm.c:		LOG_SCAN_REQ_D2F, SCAN_LOG_MSG_MAX_LEN);
connectivity/wlan/core/gen4m/mgmt/scan_fsm.c:			scanlog_dbg(LOG_SCAN_ABORT_REQ_D2F, INFO, "Scan Abort#%u to Q: isExtCh=%u",
connectivity/wlan/core/gen4m/mgmt/scan_fsm.c:		scanlog_dbg(LOG_SCAN_DONE_F2D, INFO, "scnEventScanDone Version%u!size of ScanDone%zu,ucCompleteChanCount[%u],ucCurrentState%u, u4ScanDurBcnCnt[%u],Seq[%u]\n",
connectivity/wlan/core/gen4m/mgmt/scan_fsm.c:			LOG_SCAN_DONE_F2D, SCAN_LOG_MSG_MAX_LEN);
connectivity/wlan/core/gen4m/mgmt/scan_fsm.c:		scanlog_dbg(LOG_SCAN_DONE_F2D, INFO, "Old scnEventScanDone Version\n");
connectivity/wlan/core/gen4m/mgmt/scan_fsm.c:		scanlog_dbg(LOG_SCHED_SCAN_DONE_F2D, INFO, "scnEventSchedScanDone seq %u\n",
connectivity/wlan/core/gen4m/mgmt/scan_fsm.c:		scanlog_dbg(LOG_SCHED_SCAN_DONE_F2D, INFO, "Unexpected SCHEDSCANDONE event: Seq = %u, Current State = %d\n",
connectivity/wlan/core/gen4m/mgmt/scan_fsm.c:		scanlog_dbg(LOG_SCHED_SCAN_REQ_START_D2F, INFO, "sched scan action = %d\n",
connectivity/wlan/core/gen4m/mgmt/scan_fsm.c:		scanlog_dbg(LOG_SCHED_SCAN_REQ_STOP_D2F, INFO, "sched scan action = %d\n",
connectivity/wlan/core/gen4m/mgmt/cnm.c:	DBGLOG(CNM, INFO, "cnmCsaDoneEvent.\n");
connectivity/wlan/core/gen4m/mgmt/cnm.c:		DBGLOG(CNM, WARN, "Receive duplicate cnmCsaDoneEvent.\n");
connectivity/wlan/core/gen4m/mgmt/cnm.c:		DBGLOG(P2P, ERROR, "prGlueInfo is NULL\n");
connectivity/wlan/core/gen4m/mgmt/cnm.c:		DBGLOG(P2P, WARN,
connectivity/wlan/core/gen4m/mgmt/cnm.c:		DBGLOG(P2P, WARN,
connectivity/wlan/core/gen4m/mgmt/cnm.c:			DBGLOG(P2P, WARN,
connectivity/wlan/core/gen4m/mgmt/cnm.c:	DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/mgmt/cnm.c:		DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/mgmt/cnm.c:		DBGLOG(CNM, INFO,
connectivity/wlan/core/gen4m/mgmt/cnm.c:			DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/cnm.c:		DBGLOG(CNM, INFO,
connectivity/wlan/core/gen4m/mgmt/cnm.c:		DBGLOG(CNM, INFO, "[CSA]BssIdx=%d,CurCH=%d\n",
connectivity/wlan/core/gen4m/mgmt/cnm.c:			DBGLOG(CNM, INFO, "[CSA]BssIdx=%d,NewCH=%d\n",
connectivity/wlan/core/gen4m/mgmt/cnm.c:			DBGLOG(CNM, INFO,
connectivity/wlan/core/gen4m/mgmt/cnm.c:		DBGLOG(CNM, WARN,
connectivity/wlan/core/gen4m/mgmt/cnm.c:		DBGLOG(CNM, INFO, "Pending for TxQuota[%d] Update!\n", u2Port);
connectivity/wlan/core/gen4m/mgmt/cnm.c:		DBGLOG(CNM, INFO, "Update TxQuota[%d]=%d!\n",
connectivity/wlan/core/gen4m/mgmt/cnm.c:	DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/cnm.c:		DBGLOG(P2P, WARN, "glue info is not active\n");
connectivity/wlan/core/gen4m/mgmt/cnm.c:		DBGLOG(P2P, WARN, "p2p glue info is not active\n");
connectivity/wlan/core/gen4m/mgmt/cnm.c:		DBGLOG(P2P, WARN, "Incorrect role index");
connectivity/wlan/core/gen4m/mgmt/cnm.c:		DBGLOG(P2P, WARN,
connectivity/wlan/core/gen4m/mgmt/cnm.c:		DBGLOG(CNM, INFO, "SetOpTRx invalid param,B[%d]\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/cnm.c:		DBGLOG(CNM, INFO, "GetOpTRx invalid param\n");
connectivity/wlan/core/gen4m/mgmt/cnm.c:	DBGLOG(CNM, INFO,
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:		DBGLOG(SAA, STATE, "[SAA]TRANSITION: [%s] -> [%s]\n",
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:			DBGLOG(SAA, TRACE,
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:				DBGLOG(SAA, INFO,
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:			DBGLOG(SAA, ERROR, "Unknown AA STATE\n");
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:		DBGLOG(SAA, ERROR, "[%s]prStaRec is NULL\n", __func__);
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:		DBGLOG(SAA, ERROR, "[%s]prAdapter is NULL\n", __func__);
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:		DBGLOG(SAA, ERROR, "Invalid case in %s.\n", __func__);
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:	DBGLOG(SAA, LOUD, "EVENT-START: Trigger SAA FSM.\n");
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:		DBGLOG(SAA, ERROR,
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:		DBGLOG(SAA, ERROR,
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:		DBGLOG(SAA, ERROR, "EVENT-START: Reentry of SAA Module.\n");
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:		DBGLOG(RLM, TRACE, "STA 40mAllowed=%d\n",
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:		DBGLOG(SAA, ERROR, "No Sta Record or it is not in use\n");
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:		DBGLOG(SAA, ERROR,
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:	DBGLOG(SAA, TRACE, "Continue to do auth/assoc\n");
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:		DBGLOG(SAA, INFO,
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:	DBGLOG(SAA, LOUD, "EVENT-TIMER: TX REQ TIMEOUT, Current Time = %d\n",
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:	DBGLOG(SAA, LOUD, "EVENT-TIMER: RX RESP TIMEOUT, Current Time = %d\n",
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:		DBGLOG(SAA, WARN,
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:				DBGLOG(SAA, INFO,
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:					DBGLOG(SAA, INFO,
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:				DBGLOG(SAA, INFO,
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:		DBGLOG(SAA, WARN,
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:				DBGLOG(SAA, INFO,
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:				DBGLOG(SAA, ERROR, "Unknown BSSID\n");
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:	DBGLOG(SAA, INFO, "Rx Deauth frame ,DA[" MACSTR "] SA[" MACSTR
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:			DBGLOG(SAA, WARN,
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:					DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:			DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:			DBGLOG(RSN, INFO, "RXM: Drop unprotected Mgmt frame\n");
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:			DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:	DBGLOG(SAA, INFO,
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:			DBGLOG(SAA, WARN,
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:					DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:		DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:		DBGLOG(RSN, INFO, "RXM: Drop unprotected Mgmt frame\n");
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:		DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:	DBGLOG(SAA, LOUD, "EVENT-ABORT: Stop SAA FSM.\n");
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:		DBGLOG(SAA, LOUD,
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:		DBGLOG(SAA, WARN,
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:	DBGLOG(JOIN, EVENT, "JOIN EVENT: JOIN TIMEOUT\n");
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:	DBGLOG(JOIN, INFO, "Target BSS[%s]'s PhyType = %s\n",
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:	DBGLOG(JOIN, INFO, "Target BSS's Channel = %d, Band = %d\n",
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:	DBGLOG(JOIN, INFO, "Current BSS's Channel = %d, Band = %d\n",
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:		DBGLOG(JOIN, INFO, "Hidden SSID! - Update SSID : %s\n",
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:	DBGLOG(JOIN, INFO,
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:	DBGLOG(JOIN, INFO,
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:	DBGLOG(JOIN, INFO,
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:	DBGLOG(JOIN, INFO, "prBssInfo->fgUseShortSlotTime = %d\n",
connectivity/wlan/core/gen4m/mgmt/saa_fsm.c:		DBGLOG(JOIN, INFO, "prStaRec->ucCurrRate1Index = %d\n",
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:			DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:#if CFG_ENABLE_PER_STA_STATISTICS_LOG
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:			DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, INFO, "->p2pRoleFsmUninit()\n");
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:#if CFG_ENABLE_PER_STA_STATISTICS_LOG
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, INFO, "->p2pFsmUninit()\n");
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:				DBGLOG(P2P, STATE,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:				DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:			DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR, "prAdapter shouldn't be NULL!\n");
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR, "prStaRec shouldn't be NULL!\n");
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, INFO, "Deauth TX Complete!\n");
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, WARN,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, WARN,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:			DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:			DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:			DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, TRACE, "RX Deauth\n");
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:						DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:					DBGLOG(P2P, INFO, "deauth reason=6\n");
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, TRACE, "Deauth Reason:%d\n", u2ReasonCode);
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, TRACE, "RX Disassoc\n");
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:					DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:				DBGLOG(P2P, INFO, "deauth reason=6\n");
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:			DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, TRACE, "p2pRoleFsmRunEventStartAP\n");
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, WARN,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, TRACE, "RxNSS[%u]TxNss[%u].\n",
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:			DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:			DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, INFO, "p2pRoleFsmRunEventDelIface\n");
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR, "prGlueInfo shouldn't be NULL!\n");
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, TRACE, "under deauth procedure, Quit.\n");
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, INFO, "p2pRoleFsmRunEventDfsCac\n");
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, INFO, "Role(%d) Set channel at CH(%d)\n",
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, INFO, "p2pRoleFsmRunEventRadarDet\n");
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, INFO, "p2pRoleFsmRunEventSetNewChannel\n");
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, TRACE, "p2pRoleFsmRunEventCsaDone\n");
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, TRACE, "p2pFsmRunEventConnectionRequest\n");
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:				DBGLOG(P2P, TRACE, "GO's StaRec is NULL\n");
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:				DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:			DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:				DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:					DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR, "prJoinCompMsg->prStaRec is NULL!\n");
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:				DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR, "prP2pRoleFsmInfo is NULL!");
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, TRACE, "p2pDevFsmRunEventScanRequest\n");
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:			DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, TRACE, "prP2pRoleFsmInfo is NULL\n");
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, TRACE, "P2P Role Scan Done Event\n");
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:				DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:				DBGLOG(P2P, WARN, "query safe chn fail.\n");
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR, "prP2pRoleFsmInfo is NULL!\n");
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, TRACE, "P2P Run Event Role Channel Grant\n");
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, WARN,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:				DBGLOG(P2P, WARN,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:			DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:				DBGLOG(P2P, WARN,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:			DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, TRACE, "Update ACL Entry ucBssIdx = %d\n", ucBssIdx);
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:			DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, WARN,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, TRACE, "p2pRoleFsmRunEventBeaconUpdate\n");
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:			DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:			DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, INFO, "Update NoA param, count=%d, ucBssIdx=%d\n",
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:#if CFG_ENABLE_PER_STA_STATISTICS_LOG
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR, "prAdapter=NULL || prP2pRoleFsmInfo=NULL\n");
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR, "prP2pBssInfo=NULL\n");
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR, "prQueryStaStatistics=NULL\n");
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:			DBGLOG(P2P, ERROR, "Invalid OPMode=%d\n",
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:				DBGLOG(P2P, ERROR, "prClientList=NULL\n");
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, INFO, "Overwrite channel duration from %d to %d\n",
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:			DBGLOG(P2P, WARN,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, WARN, "Unknown state (%s) for offchannel-tx.\n",
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, INFO, "fgNeedOffchnlTx: %d\n", fgNeedOffchnlTx);
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, INFO, "idx=%d, ht=%d, ht40=%d, vht=%d, bw=%d, m=%d, c=%d",
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:			DBGLOG(REQ, INFO, "[%d] band=%d, ch=%d\n", i,
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, INFO, "acs trim scan list, [%d]=%d %d\n",
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, INFO, "acs chnl mask=[0x%08x][0x%08x][0x%08x]\n",
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR, "alloc scan req. fail\n");
connectivity/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, INFO, "Cancel current ACS scan.\n");
connectivity/wlan/core/gen4m/mgmt/aaa_fsm.c:	DBGLOG(SAA, LOUD, "EVENT-START: Trigger SAA FSM\n");
connectivity/wlan/core/gen4m/mgmt/aaa_fsm.c:		DBGLOG(SAA, ERROR,
connectivity/wlan/core/gen4m/mgmt/aaa_fsm.c:		DBGLOG(SAA, ERROR, "EVENT-START: Reentry of SAA Module.\n");
connectivity/wlan/core/gen4m/mgmt/aaa_fsm.c:	DBGLOG(AAA, LOUD,
connectivity/wlan/core/gen4m/mgmt/aaa_fsm.c:		DBGLOG(AAA, ERROR,
connectivity/wlan/core/gen4m/mgmt/aaa_fsm.c:		DBGLOG(AAA, ERROR,
connectivity/wlan/core/gen4m/mgmt/aaa_fsm.c:		DBGLOG(AAA, INFO,
connectivity/wlan/core/gen4m/mgmt/aaa_fsm.c:					DBGLOG(AAA, TRACE,
connectivity/wlan/core/gen4m/mgmt/aaa_fsm.c:						DBGLOG(AAA, INFO,
connectivity/wlan/core/gen4m/mgmt/aaa_fsm.c:					DBGLOG(AAA, WARN,
connectivity/wlan/core/gen4m/mgmt/aaa_fsm.c:			DBGLOG(AAA, TRACE,
connectivity/wlan/core/gen4m/mgmt/aaa_fsm.c:		DBGLOG(AAA, INFO,
connectivity/wlan/core/gen4m/mgmt/aaa_fsm.c:			DBGLOG(AAA, ERROR,
connectivity/wlan/core/gen4m/mgmt/aaa_fsm.c:		DBGLOG(AAA, TRACE,
connectivity/wlan/core/gen4m/mgmt/aaa_fsm.c:			DBGLOG(AAA, WARN,
connectivity/wlan/core/gen4m/mgmt/aaa_fsm.c:				DBGLOG(AAA, INFO, "AP send SAQ\n");
connectivity/wlan/core/gen4m/mgmt/aaa_fsm.c:						DBGLOG(AAA, INFO,
connectivity/wlan/core/gen4m/mgmt/aaa_fsm.c:	DBGLOG(AAA, INFO,
connectivity/wlan/core/gen4m/mgmt/aaa_fsm.c:	DBGLOG(AAA, TRACE, "TxDone ucStaState:%d, eAuthAssocState:%d\n",
connectivity/wlan/core/gen4m/mgmt/aaa_fsm.c:	DBGLOG(AAA, TRACE, "TxDone end ucStaState:%d, eAuthAssocState:%d\n",
connectivity/wlan/core/gen4m/mgmt/aaa_fsm.c:	DBGLOG(JOIN, EVENT, "JOIN EVENT: ABORT\n");
connectivity/wlan/core/gen4m/mgmt/aaa_fsm.c:	DBGLOG(JOIN, EVENT, "JOIN EVENT: JOIN TIMEOUT\n");
connectivity/wlan/core/gen4m/mgmt/aaa_fsm.c:	DBGLOG(JOIN, INFO, "Target BSS[%s]'s PhyType = %s\n",
connectivity/wlan/core/gen4m/mgmt/aaa_fsm.c:	DBGLOG(JOIN, INFO,
connectivity/wlan/core/gen4m/mgmt/aaa_fsm.c:	DBGLOG(JOIN, INFO,
connectivity/wlan/core/gen4m/mgmt/aaa_fsm.c:		DBGLOG(JOIN, INFO,
connectivity/wlan/core/gen4m/mgmt/aaa_fsm.c:	DBGLOG(JOIN, INFO,
connectivity/wlan/core/gen4m/mgmt/aaa_fsm.c:	DBGLOG(JOIN, INFO,
connectivity/wlan/core/gen4m/mgmt/aaa_fsm.c:	DBGLOG(JOIN, INFO,
connectivity/wlan/core/gen4m/mgmt/aaa_fsm.c:	DBGLOG(JOIN, INFO,
connectivity/wlan/core/gen4m/mgmt/aaa_fsm.c:		DBGLOG(JOIN, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_role_state.c:	DBGLOG(P2P, TRACE, "stop role idle timer.\n");
connectivity/wlan/core/gen4m/mgmt/p2p_role_state.c:					DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_role_state.c:				DBGLOG(P2P, ERROR, "No prP2pDevFsmInfo ptr\n");
connectivity/wlan/core/gen4m/mgmt/p2p_role_state.c:					DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/mgmt/p2p_role_state.c:		DBGLOG(P2P, TRACE, "Start a join init timer\n");
connectivity/wlan/core/gen4m/mgmt/p2p_role_state.c:				DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_role_state.c:		DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_role_state.c:		DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_role_state.c:		DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/mgmt/p2p_role_state.c:		DBGLOG(P2P, WARN,
connectivity/wlan/core/gen4m/mgmt/hem_mbox.c:		DBGLOG(CNM, LOUD, "DO MSG [%d]\n", prMsg->eMsgId); \
connectivity/wlan/core/gen4m/mgmt/hem_mbox.c:	    DBGLOG(CNM, ERROR, "NULL fptr for MSG [%d]\n", prMsg->eMsgId); \
connectivity/wlan/core/gen4m/mgmt/hem_mbox.c:		DBGLOG(CNM, ERROR, "prMsg is NULL\n");
connectivity/wlan/core/gen4m/mgmt/hem_mbox.c:		DBGLOG(CNM, ERROR, "prAdapter is NULL\n");
connectivity/wlan/core/gen4m/mgmt/hem_mbox.c:			DBGLOG(CNM, ERROR, "prMsg is NULL\n");
connectivity/wlan/core/gen4m/mgmt/p2p_scan.c:		DBGLOG(P2P, TRACE, "Skip beacon [" MACSTR "][%s][ch %d]\n",
connectivity/wlan/core/gen4m/mgmt/p2p_scan.c:		DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_scan.c:		DBGLOG(P2P, LOUD,
connectivity/wlan/core/gen4m/mgmt/p2p_scan.c:		DBGLOG(P2P, LOUD,
connectivity/wlan/core/gen4m/mgmt/p2p_scan.c:			DBGLOG(P2P, LOUD,
connectivity/wlan/core/gen4m/mgmt/p2p_scan.c:				DBGLOG(P2P, LOUD,
connectivity/wlan/core/gen4m/mgmt/p2p_scan.c:				DBGLOG(P2P, LOUD, "Ignore mismatch BSSID.\n");
connectivity/wlan/core/gen4m/mgmt/p2p_scan.c:				DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_scan.c:				DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_scan.c:				DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_scan.c:				DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_scan.c:				DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:	DBGLOG(RLM, TRACE, "eRegChannelListMap=%d, u2CountryCode=0x%04x\n",
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, TRACE, "ucRegChannelListIndex=%d\n",
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:					DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:						DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, ERROR, "%s, invalid channel count.\n", __func__);
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, ERROR, "Alloc cmd buffer failed\n");
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:	DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, ERROR, "Alloc cmd buffer failed\n");
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, ERROR, "Alloc cmd buffer failed\n");
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:	DBGLOG(RLM, TRACE, "u2CountryCode=0x%04x\n",
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:						DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, WARN, "Rf20: CentralCh=%d\n", ucCenterCh);
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, WARN, "Rf20: UpperCh=%d\n", ucUpperChannel);
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, WARN, "Rf20: LowerCh=%d\n", ucLowerChannel);
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, WARN, "Rf80/160C: CentralCh=%d\n",
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, WARN, "Rf160NC: CentralCh1=%d\n",
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, WARN, "Rf160NC: CentralCh2=%d\n",
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, ERROR, "Wrong BW =%d\n", eChannelWidth);
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, WARN, "Rf: B=%d, W=%d\n",
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:				DBGLOG(RLM, WARN, "Rf: PriOffSet=%d, W=%d\n",
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:				DBGLOG(RLM, WARN,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:				DBGLOG(RLM, WARN,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, WARN,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, WARN,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:	DBGLOG(RLM, INFO, "%s(); country_code = 0x%x\n",
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, WARN,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, WARN,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:				DBGLOG(RLM, WARN,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:				DBGLOG(RLM, LOUD,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, LOUD,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, LOUD, "Domain: Full search down\n");
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, TRACE,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:				DBGLOG(RLM, LOUD,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, TRACE, "Domain: Default Table no Repetiton.\n");
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:						DBGLOG(RLM, LOUD,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:					DBGLOG(RLM, LOUD,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:				DBGLOG(RLM, LOUD,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:				DBGLOG(RLM, LOUD,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:	DBGLOG(RLM, INFO, "rlmDomainSendPwrLimitCmd_V2()\n");
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR, "Domain: no buf to send cmd\n");
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, INFO, "active n_channels=%d, band=%d\n",
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, ERROR, "pcContent is null\n");
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, ERROR, "parse scenario name error: %s\n",
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, ERROR, "parse scenario sub index error: %s\n",
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, ERROR,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, ERROR, "parse applied way error: %s\n",
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, ERROR,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, ERROR, "parse operation error: %s\n",
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, TRACE, "%s\n", pcContTmp);
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, TRACE, "%x\n", u2countryCode);
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, WARN, "parse country code error: %s",
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, ERROR,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, ERROR,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, ERROR,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:					DBGLOG(RLM, ERROR,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:					DBGLOG(RLM, ERROR,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:					DBGLOG(RLM, ERROR,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR, "parse CCK error, %s\n",
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR, "parse HT20L error, %s\n",
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR, "parse HT20H error, %s\n",
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR, "parse HT40L error, %s\n",
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR, "parse HT40H error, %s\n",
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, INFO, "Tx Power Ctrl List=[%s], Size=[%d]",
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, TRACE, "Tx Power Ctrl List=[%s], Size=[%d]",
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, TRACE,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:				DBGLOG(RLM, TRACE,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR, "kalMemAlloc fail: %d\n", u4MemSize);
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, ERROR, "Domain: Alloc cmd buffer failed\n");
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:	DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, TRACE,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, TRACE,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, ERROR, "Domain: illegal power limit table\n");
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, ERROR,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR, "Invalid old state = %d\n",
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, ERROR,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, INFO, "%s():  trasntion to state = %x (old = %x)\n",
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, ERROR, "%s(): ERROR. file = null.\n", __func__);
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:		LOGBUF(buf, ((int32_t)buf_size), buf_written, "DISABLED ");
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:		LOGBUF(buf, ((int32_t)buf_size), buf_written,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:		LOGBUF(buf, ((int32_t)buf_size), buf_written, "RADAR ");
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:		LOGBUF(buf, ((int32_t)buf_size), buf_written, "NO_HT40PLUS ");
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:		LOGBUF(buf, ((int32_t)buf_size), buf_written, "NO_HT40MINUS ");
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:		LOGBUF(buf, ((int32_t)buf_size), buf_written, "NO_80MHZ ");
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:		LOGBUF(buf, ((int32_t)buf_size), buf_written, "NO_160MHZ ");
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, ERROR, "%s():  ERROR. pWiphy = NULL.\n", __func__);
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:				DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:				DBGLOG(RLM, ERROR,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, WARN,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:	DBGLOG(RLM, ERROR,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:	DBGLOG(RLM, INFO, "    Set as default WW.\n");
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, ERROR, "[WARNING!!] RLM unexpected case.\n");
connectivity/wlan/core/gen4m/mgmt/qosmap.c:		DBGLOG(INIT, WARN,
connectivity/wlan/core/gen4m/mgmt/qosmap.c:		DBGLOG(INIT, WARN,
connectivity/wlan/core/gen4m/mgmt/qosmap.c:		DBGLOG(INIT, WARN, "can't alloc qosmap\n");
connectivity/wlan/core/gen4m/mgmt/qosmap.c:	DBGLOG(INIT, INFO, "QosMapSet DSCP Exception number: %d\n", dscpExcNum);
connectivity/wlan/core/gen4m/mgmt/qosmap.c:		/* DBGLOG(INIT, WARN, "qosmap type: %d\n", type); */
connectivity/wlan/core/gen4m/mgmt/qosmap.c:		DBGLOG(INIT, WARN, "WRONG QosMapSet info, cant get UP\n");
connectivity/wlan/core/gen4m/mgmt/p2p_dev_state.c:			DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/mgmt/p2p_dev_state.c:			DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/mgmt/p2p_dev_state.c:		DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/mgmt/p2p_dev_state.c:		DBGLOG(P2P, WARN,
connectivity/wlan/core/gen4m/mgmt/p2p_rlm_obss.c:	DBGLOG(RLM, INFO, "Send 20/40 coexistence rsp frame!\n");
connectivity/wlan/core/gen4m/mgmt/roaming_fsm.c:	DBGLOG(ROAMING, INFO,
connectivity/wlan/core/gen4m/mgmt/roaming_fsm.c:	DBGLOG(ROAMING, LOUD,
connectivity/wlan/core/gen4m/mgmt/roaming_fsm.c:	DBGLOG(ROAMING, LOUD,
connectivity/wlan/core/gen4m/mgmt/roaming_fsm.c:	DBGLOG(ROAMING, LOUD,
connectivity/wlan/core/gen4m/mgmt/roaming_fsm.c:	DBGLOG(ROAMING, LOUD,
connectivity/wlan/core/gen4m/mgmt/roaming_fsm.c:		DBGLOG(ROAMING, INFO, "Request driver roaming");
connectivity/wlan/core/gen4m/mgmt/roaming_fsm.c:		DBGLOG(ROAMING, WARN, "ais specific bss info is NULL\n");
connectivity/wlan/core/gen4m/mgmt/roaming_fsm.c:			DBGLOG(ROAMING, INFO,
connectivity/wlan/core/gen4m/mgmt/roaming_fsm.c:				DBGLOG(ROAMING, INFO, "Need Scan\n");
connectivity/wlan/core/gen4m/mgmt/roaming_fsm.c:			DBGLOG(ROAMING, WARN, "Target BssDesc is NULL\n");
connectivity/wlan/core/gen4m/mgmt/roaming_fsm.c:		DBGLOG(ROAMING, STATE,
connectivity/wlan/core/gen4m/mgmt/roaming_fsm.c:				DBGLOG(ROAMING, TRACE,
connectivity/wlan/core/gen4m/mgmt/roaming_fsm.c:				DBGLOG(ROAMING, LOUD,
connectivity/wlan/core/gen4m/mgmt/roaming_fsm.c:				DBGLOG(ROAMING, LOUD,
connectivity/wlan/core/gen4m/mgmt/roaming_fsm.c:				DBGLOG(ROAMING, LOUD,
connectivity/wlan/core/gen4m/mgmt/roaming_fsm.c:	DBGLOG(ROAMING, EVENT,
connectivity/wlan/core/gen4m/mgmt/roaming_fsm.c:	DBGLOG(ROAMING, EVENT,
connectivity/wlan/core/gen4m/mgmt/roaming_fsm.c:			DBGLOG(ROAMING, INFO, "ucRCPI %u\n",
connectivity/wlan/core/gen4m/mgmt/roaming_fsm.c:			DBGLOG(ROAMING, INFO, "ucPER %u\n",
connectivity/wlan/core/gen4m/mgmt/roaming_fsm.c:	DBGLOG(ROAMING, EVENT,
connectivity/wlan/core/gen4m/mgmt/roaming_fsm.c:	DBGLOG(ROAMING, STATE,
connectivity/wlan/core/gen4m/mgmt/roaming_fsm.c:	DBGLOG(ROAMING, EVENT,
connectivity/wlan/core/gen4m/mgmt/roaming_fsm.c:	DBGLOG(ROAMING, LOUD,
connectivity/wlan/core/gen4m/mgmt/roaming_fsm.c:		DBGLOG(ROAMING, TRACE,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(INIT, WARN,
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(INIT, WARN,
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, WARN, "Apply Nss:%d as RxStbcNss in HT Cap",
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, WARN,
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, TRACE,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, ERROR, "prAdapter is NULL, return!");
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, ERROR, "prBssInfo is NULL, return!");
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, ERROR, "prStaRec is NULL, return!");
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, TRACE,
connectivity/wlan/core/gen4m/mgmt/rlm.c:	DBGLOG(RLM, TRACE, "rlmFillVhtOpNotificationIE(%d) %u %u\n",
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, INFO, "Set VHT Cap BFEE STS CAP=%d\n",
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, TRACE, "Set VHT Cap BFEE STS CAP=%d\n",
connectivity/wlan/core/gen4m/mgmt/rlm.c:/* DBGLOG(RLM, INFO, "VhtCapInfo=%x\n", prVhtCap->u4VhtCapInfo); */
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:				DBGLOG(RLM, WARN,
connectivity/wlan/core/gen4m/mgmt/rlm.c:				DBGLOG(RLM, WARN,
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, TRACE, "null prVhtCap, assume RxNss=1\n");
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RFTEST, INFO, "RLM CMD : Get Thermal Temp from FW.\n");
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RFTEST, INFO, "RLM CMD : Trigger FW Do All Cal.\n");
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RFTEST, INFO, "Thermal Temp = %d\n",
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RFTEST, INFO, "RLM CMD : Print Cal Data in FW (%s).\n",
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RFTEST, INFO, "RLM CMD : Send Cal Data to FW (%s).\n",
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RFTEST, INFO, "Step 1 : Get Thermal Temp from FW.\n");
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RFTEST, INFO, "Step 1 : Return Failure.\n");
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RFTEST, INFO, "Step 2 : Return Failure.\n");
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RFTEST, INFO, "Step 3 : Return Failure.\n");
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RFTEST, INFO, "Step 4 : Trigger FW Do Full Cal.\n");
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RFTEST, INFO, "Step 4 : Return Failure.\n");
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RFTEST, INFO, "======== Normal Wi-Fi Enable........\n");
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RFTEST, INFO, "Step 0 : Sent Rom Cal data to FW.\n");
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RFTEST, INFO, "Step 0 : Return Failure.\n");
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RFTEST, INFO, "Step 1 : Sent Ram Cal data to FW.\n");
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RFTEST, INFO, "Step 1 : Return Failure.\n");
connectivity/wlan/core/gen4m/mgmt/rlm.c:				DBGLOG(RLM, WARN,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		 * DBGLOG(RLM, WARN, "support 2ss\n");
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, WARN, "support (2Nss) and (80+80)\n");
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, WARN,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO, "Decreasse the BW to (%d)\n", ucMaxBandwidth);
connectivity/wlan/core/gen4m/mgmt/rlm.c:						DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:					DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO, "Modify ChannelWidth (%d) and Extend (%d)\n",
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO, "Unsupport BW setting, back to VHT20_40\n");
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, INFO, "[Ch] BW=%d, s1=%d, s2=%d\n",
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, INFO, "[Ch] Count=%d\n",
connectivity/wlan/core/gen4m/mgmt/rlm.c:					DBGLOG(RLM, EVENT,
connectivity/wlan/core/gen4m/mgmt/rlm.c:					DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:					DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:					DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, INFO, "[Channel Switch] SCO [%d]->[%d]\n",
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, INFO, "Update OpMode to 0x%x",
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:				DBGLOG(RLM, LOUD,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, EVENT, "[Ch] TxAllowed = TRUE\n");
connectivity/wlan/core/gen4m/mgmt/rlm.c:	DBGLOG(RLM, TRACE, "Ch : SwitchIE = %d\n", g_fgHasChannelSwitchIE);
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO, "Ch : DFS has Appeared\n");
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, WARN,
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, WARN,
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, WARN,
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, WARN,
connectivity/wlan/core/gen4m/mgmt/rlm.c:				DBGLOG(RLM, WARN,
connectivity/wlan/core/gen4m/mgmt/rlm.c:				DBGLOG(RLM, WARN,
connectivity/wlan/core/gen4m/mgmt/rlm.c:				DBGLOG(RLM, WARN,
connectivity/wlan/core/gen4m/mgmt/rlm.c:				DBGLOG(RLM, WARN,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, TRACE,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:					DBGLOG(RLM, WARN,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO, "N=%d closed\n", prCmdBody->ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, WARN, "No buf for sync RLM params (Net=%d)\n",
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, WARN, "rlmSyncOperationParams set cmd fail\n");
connectivity/wlan/core/gen4m/mgmt/rlm.c:	DBGLOG(RLM, TRACE, "ucDialogToken %d ucTransPwr %d ucLinkMargin %d\n",
connectivity/wlan/core/gen4m/mgmt/rlm.c:	DBGLOG(RLM, TRACE,
connectivity/wlan/core/gen4m/mgmt/rlm.c:	DBGLOG(RLM, INFO, "[Mgt Action]rlmProcessSpecMgtAction\n");
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO, "[Mgt Action] Measure Request\n");
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO, "[Mgt Action] Measure Report\n");
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, TRACE,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO, "[Mgt Action] TPC Request\n");
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO, "[Mgt Action] TPC Report\n");
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, TRACE,
connectivity/wlan/core/gen4m/mgmt/rlm.c:					DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:				DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:					DBGLOG(RLM, LOUD,
connectivity/wlan/core/gen4m/mgmt/rlm.c:					DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:						DBGLOG(RLM, EVENT,
connectivity/wlan/core/gen4m/mgmt/rlm.c:						DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:					DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:					DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:				DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, WARN,
connectivity/wlan/core/gen4m/mgmt/rlm.c:	DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, WARN,
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, WARN,
connectivity/wlan/core/gen4m/mgmt/rlm.c:					DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:					DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:					DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, WARN, "%s: unexpected VHT channel width: %d\n",
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, WARN, "%s: unexpected Bss OP BW: %d\n", __func__,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, WARN, "%s: unexpected VHT channel width: %d\n",
connectivity/wlan/core/gen4m/mgmt/rlm.c:				DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO, "Update OP RxNss[%d]\n",
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO, "Update OP TxNss[%d]\n",
connectivity/wlan/core/gen4m/mgmt/rlm.c:	DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:	DBGLOG(RLM, INFO, "RxNss[%d] TxNss[%d]\n",
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:	DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO, "Intend to change BSS[%d] to BW[%d]\n",
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO, "Intend to change BSS[%d] to RxNss[%d]\n",
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO, "Intend to change BSS[%d] to TxNss[%d]\n",
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:					DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:					DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:					DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:					DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:				DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:				DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:				DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:				DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, WARN,
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:				DBGLOG(RLM, WARN,
connectivity/wlan/core/gen4m/mgmt/rlm.c:					DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:				DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, WARN,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, WARN,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, WARN,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, WARN,
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, WARN,
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, WARN,
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, WARN,
connectivity/wlan/core/gen4m/mgmt/rlm.c:	DBGLOG(RLM, INFO, "OP change done for BSS[%d] IsSuccess[%d]\n",
connectivity/wlan/core/gen4m/mgmt/rlm.c:	DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:	DBGLOG(RLM, TRACE,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO, "RRM: Rm has been stopped\n");
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, WARN,
connectivity/wlan/core/gen4m/mgmt/rlm.c:				DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:				DBGLOG(RLM, WARN, "IeSze:0x%x, FrmLen:0x%x\n",
connectivity/wlan/core/gen4m/mgmt/rlm.c:					DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, ERROR, "No memory\n");
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, WARN,
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:	DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, ERROR, "RRM: Rm Packet length %d is too short\n",
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, ERROR, "RRM: Abnormal RM IE length is %d\n",
connectivity/wlan/core/gen4m/mgmt/rlm.c:				DBGLOG(RLM, ERROR,
connectivity/wlan/core/gen4m/mgmt/rlm.c:				DBGLOG(RLM, ERROR,
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, ERROR,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, ERROR,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO, "RRM: StaRec is NULL, ignore request\n");
connectivity/wlan/core/gen4m/mgmt/rlm.c:	DBGLOG(RLM, INFO, "RRM: RM Request From %pM, DialogToken %d\n",
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO, "RRM: ignore lower precedence rm request\n");
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO, "RRM: Old RM is on-going, cancel it first\n");
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, ERROR,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, ERROR,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, ERROR,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO, "RRM: report frame length is too short, %d\n",
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO, "RRM: ais bss info is NULL\n");
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO, "RRM: StaRec of Ais is NULL\n");
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:	DBGLOG(RLM, INFO, "RRM: frame length %d\n",
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, TRACE, "LM: Disable Tx Power Limit\n");
connectivity/wlan/core/gen4m/mgmt/rlm.c:	DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, ERROR, "[RRM] No memory\n");
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm.c:				DBGLOG(RLM, TRACE,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO, "BCN REQ: channel %d, valid %d\n",
connectivity/wlan/core/gen4m/mgmt/rlm.c:				DBGLOG(RLM, ERROR,
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, TRACE,
connectivity/wlan/core/gen4m/mgmt/rlm.c:	DBGLOG(RLM, TRACE,
connectivity/wlan/core/gen4m/mgmt/rlm.c:	DBGLOG(RLM, INFO, "BCN REQ: band %d, hw channel %d, ds %d, ht %d\n",
connectivity/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/auth.c:	DBGLOG(SAA, LOUD, "Send Auth Frame\n");
connectivity/wlan/core/gen4m/mgmt/auth.c:		DBGLOG(SAA, WARN, "No PKT_INFO_T for sending Auth Frame.\n");
connectivity/wlan/core/gen4m/mgmt/auth.c:		DBGLOG(SAA, WARN, "No PKT_INFO_T for sending Auth Frame.\n");
connectivity/wlan/core/gen4m/mgmt/auth.c:	DBGLOG(SAA, INFO,
connectivity/wlan/core/gen4m/mgmt/auth.c:		DBGLOG(SAA, WARN,
connectivity/wlan/core/gen4m/mgmt/auth.c:		DBGLOG(SAA, WARN, "=== Dump Rx Auth ===\n");
connectivity/wlan/core/gen4m/mgmt/auth.c:		DBGLOG_MEM8(SAA, WARN, prAuthFrame, prSwRfb->u2PacketLen);
connectivity/wlan/core/gen4m/mgmt/auth.c:		DBGLOG(SAA, WARN,
connectivity/wlan/core/gen4m/mgmt/auth.c:		DBGLOG(SAA, WARN,
connectivity/wlan/core/gen4m/mgmt/auth.c:		DBGLOG(SAA, WARN,
connectivity/wlan/core/gen4m/mgmt/auth.c:	DBGLOG(RSN, INFO, "authSendDeauthFrame\n");
connectivity/wlan/core/gen4m/mgmt/auth.c:		DBGLOG(SAA, INFO,
connectivity/wlan/core/gen4m/mgmt/auth.c:		DBGLOG(SAA, WARN, "Not to send Deauth, invalid data!\n");
connectivity/wlan/core/gen4m/mgmt/auth.c:			DBGLOG(SAA, WARN, "No unused DEAUTH_INFO_T !\n");
connectivity/wlan/core/gen4m/mgmt/auth.c:		DBGLOG(SAA, WARN,
connectivity/wlan/core/gen4m/mgmt/auth.c:			DBGLOG(SAA, INFO,
connectivity/wlan/core/gen4m/mgmt/auth.c:			DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/mgmt/auth.c:	DBGLOG(SAA, INFO, "ucTxSeqNum=%d ucStaRecIndex=%d u2ReasonCode=%d\n",
connectivity/wlan/core/gen4m/mgmt/auth.c:		DBGLOG(SAA, ERROR,
connectivity/wlan/core/gen4m/mgmt/auth.c:		DBGLOG(SAA, LOUD,
connectivity/wlan/core/gen4m/mgmt/auth.c:		DBGLOG(P2P, WARN,
connectivity/wlan/core/gen4m/mgmt/tkip_mic.c:	DBGLOG(RSN, LOUD,
connectivity/wlan/core/gen4m/mgmt/tkip_mic.c:	DBGLOG(RSN, LOUD,
connectivity/wlan/core/gen4m/mgmt/tkip_mic.c:		DBGLOG(RSN, INFO, "pucPayload is NULL, drop this packet");
connectivity/wlan/core/gen4m/mgmt/tkip_mic.c:	DBGLOG(RSN, LOUD, "Before TKIP MSDU Decapsulate:\n");
connectivity/wlan/core/gen4m/mgmt/tkip_mic.c:	DBGLOG(RSN, LOUD, "MIC key:\n");
connectivity/wlan/core/gen4m/mgmt/tkip_mic.c:	/* DBGLOG_MEM8(RSN, LOUD, pucMicKey, 8); */
connectivity/wlan/core/gen4m/mgmt/tkip_mic.c:	/* DBGLOG(RSN, LOUD, ("TKIP MIC:\n")); */
connectivity/wlan/core/gen4m/mgmt/tkip_mic.c:	/* DBGLOG_MEM8(RSN, LOUD, pucMic1, 8); */
connectivity/wlan/core/gen4m/mgmt/tkip_mic.c:	/* DBGLOG(RSN, LOUD, ("TKIP MIC':\n")); */
connectivity/wlan/core/gen4m/mgmt/tkip_mic.c:	/* DBGLOG_MEM8(RSN, LOUD, aucMic2, 8); */
connectivity/wlan/core/gen4m/mgmt/tkip_mic.c:	DBGLOG(RSN, LOUD, "After TKIP MSDU Decapsulate:\n");
connectivity/wlan/core/gen4m/mgmt/tkip_mic.c:	DBGLOG(RSN, LOUD, "Frame body: (length = %u)\n",
connectivity/wlan/core/gen4m/mgmt/tkip_mic.c:	/* DBGLOG_MEM8(RSN, LOUD, pucFrameBody, u2FrameBodyLen); */
connectivity/wlan/core/gen4m/mgmt/tkip_mic.c:		DBGLOG(RSN, INFO, "pucPayload is NULL, drop this packet");
connectivity/wlan/core/gen4m/mgmt/tkip_mic.c:	DBGLOG(RSN, LOUD, "Before TKIP MSDU Decapsulate:\n");
connectivity/wlan/core/gen4m/mgmt/tkip_mic.c:	DBGLOG(RSN, LOUD, "MIC key:\n");
connectivity/wlan/core/gen4m/mgmt/tkip_mic.c:	/* DBGLOG_MEM8(RSN, LOUD, pucMicKey, 8); */
connectivity/wlan/core/gen4m/mgmt/tkip_mic.c:		DBGLOG(RX, ERROR, "MIC SW DEC1\n");
connectivity/wlan/core/gen4m/mgmt/tkip_mic.c:		DBGLOG(RX, ERROR, "MIC SW DEC2\n");
connectivity/wlan/core/gen4m/mgmt/tkip_mic.c:	/* DBGLOG(RSN, LOUD, ("TKIP MIC:\n")); */
connectivity/wlan/core/gen4m/mgmt/tkip_mic.c:	/* DBGLOG_MEM8(RSN, LOUD, pucMic1, 8); */
connectivity/wlan/core/gen4m/mgmt/tkip_mic.c:	/* DBGLOG(RSN, LOUD, ("TKIP MIC':\n")); */
connectivity/wlan/core/gen4m/mgmt/tkip_mic.c:	/* DBGLOG_MEM8(RSN, LOUD, aucMic2, 8); */
connectivity/wlan/core/gen4m/mgmt/tkip_mic.c:	DBGLOG(RSN, LOUD, "After TKIP MSDU Decapsulate:\n");
connectivity/wlan/core/gen4m/mgmt/tkip_mic.c:	DBGLOG(RSN, LOUD, "Frame body: (length = %u)\n",
connectivity/wlan/core/gen4m/mgmt/tkip_mic.c:	/* DBGLOG_MEM8(RSN, LOUD, pucFrameBody, u2FrameBodyLen); */
connectivity/wlan/core/gen4m/mgmt/wmm.c:	DBGLOG(WMM, TRACE, "wmm init done\n");
connectivity/wlan/core/gen4m/mgmt/wmm.c:	DBGLOG(WMM, TRACE, "wmm uninit done\n");
connectivity/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, ERROR, "prStaRec NULL %d, prTsParam NULL %d\n",
connectivity/wlan/core/gen4m/mgmt/wmm.c:	DBGLOG(WMM, INFO, "Tspec Action to AP=" MACSTR "\n",
connectivity/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, ERROR, "Failed to allocate msdu info\n");
connectivity/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, INFO, "Wrong TS info\n");
connectivity/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, INFO, "Update TS TIMEOUT for TID %d\n",
connectivity/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, INFO, "ADD TS TIMEOUT for TID %d\n",
connectivity/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, INFO,
connectivity/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, INFO, "prWmmInfo is null %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/wmm.c:	DBGLOG(WMM, INFO, "Ac=%d, MediumTime=%d PhyRate=%u Uapsd 0x%02x\n",
connectivity/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, INFO, "prWmmInfo is null\n");
connectivity/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, INFO,
connectivity/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, INFO, "Invalid TID %d\n", ucTid);
connectivity/wlan/core/gen4m/mgmt/wmm.c:	DBGLOG(WMM, TRACE, "TID %d, State %d, Oper %d\n", ucTid,
connectivity/wlan/core/gen4m/mgmt/wmm.c:			DBGLOG(WMM, INFO, "Lack of Tspec Param\n");
connectivity/wlan/core/gen4m/mgmt/wmm.c:			DBGLOG(WMM, INFO, "Del Ts %d in setuping state\n",
connectivity/wlan/core/gen4m/mgmt/wmm.c:			DBGLOG(WMM, ERROR, "ADD TS is rejected, status=%d\n",
connectivity/wlan/core/gen4m/mgmt/wmm.c:				DBGLOG(WMM, INFO,
connectivity/wlan/core/gen4m/mgmt/wmm.c:	DBGLOG(WMM, INFO, "Status %d\n", rTxDoneStatus);
connectivity/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, INFO, "++++++++ dump data \"%s\" p=%p len=%d\n",
connectivity/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, INFO, "++++++ dump data p=%p, len=%d\n", prAddr,
connectivity/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, INFO, "%s\n", buf);
connectivity/wlan/core/gen4m/mgmt/wmm.c:	DBGLOG(WMM, INFO, "%s\n", buf);
connectivity/wlan/core/gen4m/mgmt/wmm.c:	DBGLOG(WMM, INFO, "====== end dump data\n");
connectivity/wlan/core/gen4m/mgmt/wmm.c:	DBGLOG(WMM, INFO, "[%d] Query TSM statistics, tid = %d\n",
connectivity/wlan/core/gen4m/mgmt/wmm.c:	DBGLOG(WMM, INFO, "%p , aci %d, duration %d\n", prTsmReq,
connectivity/wlan/core/gen4m/mgmt/wmm.c:			DBGLOG(WMM, ERROR, "prAisBssInfo is NULL\n");
connectivity/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, WARN, "Duration is %d, Trigger Condition %d\n",
connectivity/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, INFO, "No station record found for %pM\n",
connectivity/wlan/core/gen4m/mgmt/wmm.c:			DBGLOG(WMM, INFO,
connectivity/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, INFO, "%p tid %d, aci %d, duration %d\n", prTsmReq,
connectivity/wlan/core/gen4m/mgmt/wmm.c:	DBGLOG(WMM, INFO, "enabled=%d, tid=%d\n", rTsmStatistics.ucEnabled,
connectivity/wlan/core/gen4m/mgmt/wmm.c:	DBGLOG(WMM, INFO, "[%d] Action=%d\n",
connectivity/wlan/core/gen4m/mgmt/wmm.c:			DBGLOG(WMM, INFO,
connectivity/wlan/core/gen4m/mgmt/wmm.c:					DBGLOG(WMM, INFO,
connectivity/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, INFO, "found 802.11 Tspec Information Element\n");
connectivity/wlan/core/gen4m/mgmt/wmm.c:	DBGLOG(WMM, INFO, "TsId=%d, TrafficType=%d, PSB=%d, MediumTime=%d\n",
connectivity/wlan/core/gen4m/mgmt/wmm.c:	DBGLOG(WMM, ERROR,
connectivity/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, ERROR, "prAisBssInfo is NULL\n");
connectivity/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, ERROR, "unexpected Tsm statistic event, tid %d\n",
connectivity/wlan/core/gen4m/mgmt/wmm.c:	DBGLOG(WMM, INFO, "tid %d, aci %d\n", prCurrentTsmReq->prTsmReq->ucTID,
connectivity/wlan/core/gen4m/mgmt/wmm.c:			DBGLOG(WMM, INFO,
connectivity/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, INFO,
connectivity/wlan/core/gen4m/mgmt/wmm.c:			DBGLOG(WMM, INFO,
connectivity/wlan/core/gen4m/mgmt/wmm.c:			DBGLOG(WMM, ERROR, "i is %d !!", i);
connectivity/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, INFO, "prWmmInfo is null %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, INFO,
connectivity/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, TRACE, "AC %d, can dq %d\n", ucAc,
connectivity/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, INFO, "AC %d, Remain %u, DeqNum %d\n", ucAc,
connectivity/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, INFO,
connectivity/wlan/core/gen4m/mgmt/wmm.c:	DBGLOG(WMM, INFO, "Timeout, trigger to do ACM dequeue\n");
connectivity/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:			DBGLOG(INIT, INFO, "Set p2p dev mac to " MACSTR "\n",
connectivity/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:		DBGLOG(P2P, INFO, "->p2pFsmUninit()\n");
connectivity/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:		DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:		DBGLOG(P2P, ERROR, "prP2pDevFsmInfo is NULL!\n");
connectivity/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:				DBGLOG(P2P, STATE,
connectivity/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:				DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:		DBGLOG(P2P, TRACE, "p2pDevFsmRunEventScanRequest\n");
connectivity/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:			DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:				DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:		DBGLOG(P2P, TRACE, "p2pDevFsmRunEventScanAbort\n");
connectivity/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:			DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:			DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:			DBGLOG(P2P, WARN, "uninitialized p2p Dev fsm\n");
connectivity/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:		DBGLOG(P2P, TRACE, "p2pDevFsmRunEventChannelRequest\n");
connectivity/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:					/* DBGLOG(P2P, TRACE, */
connectivity/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:		DBGLOG(P2P, TRACE, "p2pDevFsmRunEventChannelAbort\n");
connectivity/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:		DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:		DBGLOG(P2P, ERROR, "Memory allocate failed.\n");
connectivity/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:		DBGLOG(P2P, INFO, "Overwrite channel duration from %d to %d\n",
connectivity/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:		DBGLOG(P2P, INFO, "Extended channel duration from %d to %d\n",
connectivity/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:		DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:			DBGLOG(P2P, WARN,
connectivity/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:	DBGLOG(P2P, INFO, "fgNeedOffchnlTx: %d\n", fgNeedOffchnlTx);
connectivity/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:			DBGLOG(P2P, WARN,
connectivity/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:			DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:			DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:		DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/wapi.c:		DBGLOG(SEC, TRACE, "WAPI IE length too short (length=%d)\n",
connectivity/wlan/core/gen4m/mgmt/wapi.c:		DBGLOG(SEC, TRACE, "Unsupported WAPI IE version: %d\n",
connectivity/wlan/core/gen4m/mgmt/wapi.c:			DBGLOG(SEC, TRACE,
connectivity/wlan/core/gen4m/mgmt/wapi.c:			DBGLOG(SEC, TRACE,
connectivity/wlan/core/gen4m/mgmt/wapi.c:			DBGLOG(SEC, TRACE,
connectivity/wlan/core/gen4m/mgmt/wapi.c:			DBGLOG(SEC, TRACE,
connectivity/wlan/core/gen4m/mgmt/wapi.c:			DBGLOG(SEC, TRACE,
connectivity/wlan/core/gen4m/mgmt/wapi.c:			DBGLOG(SEC, TRACE,
connectivity/wlan/core/gen4m/mgmt/wapi.c:	DBGLOG(SEC, LOUD,
connectivity/wlan/core/gen4m/mgmt/wapi.c:			DBGLOG(SEC, LOUD,
connectivity/wlan/core/gen4m/mgmt/wapi.c:		DBGLOG(SEC, LOUD,
connectivity/wlan/core/gen4m/mgmt/wapi.c:			DBGLOG(SEC, LOUD,
connectivity/wlan/core/gen4m/mgmt/wapi.c:		DBGLOG(SEC, LOUD,
connectivity/wlan/core/gen4m/mgmt/wapi.c:	DBGLOG(SEC, LOUD, "WAPI: cap: 0x%04x\n", prWapiInfo->u2WapiCap);
connectivity/wlan/core/gen4m/mgmt/wapi.c:			DBGLOG(SEC, TRACE, "-- No Protected BSS\n");
connectivity/wlan/core/gen4m/mgmt/wapi.c:		DBGLOG(SEC, TRACE,
connectivity/wlan/core/gen4m/mgmt/wapi.c:		DBGLOG(SEC, TRACE,
connectivity/wlan/core/gen4m/mgmt/wapi.c:		DBGLOG(SEC, TRACE, "Cannot support any AKM suites\n");
connectivity/wlan/core/gen4m/mgmt/wapi.c:	DBGLOG(SEC, TRACE,
connectivity/wlan/core/gen4m/mgmt/wapi.c:	DBGLOG(SEC, TRACE, "Selected AKM suite: %02x-%02x-%02x-%02x\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:		DBGLOG(SW4, INFO, "TC %u\n", i);
connectivity/wlan/core/gen4m/mgmt/swcr.c:		DBGLOG(SW4, INFO, "Max %u Free %u\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:		DBGLOG(SW4, INFO,
connectivity/wlan/core/gen4m/mgmt/swcr.c:		DBGLOG(SW4, INFO,
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "BMC or unknown TxQueue Len %u\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "Pending %d\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "Pending Security %d\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:			DBGLOG(SW4, INFO,
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, " rFreeSwRfbList %u\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, " rReceivedRfbList %u\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, " rIndicatedRfbList %u\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, " ucNumIndPacket %u\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, " ucNumRetainedPacket %u\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "Mac address: " MACSTR " Rcpi %u\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO,
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO,
connectivity/wlan/core/gen4m/mgmt/swcr.c:		DBGLOG(SW4, INFO, "TC %u Queue Len %u\n", i,
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "BmpDeliveryAC %x\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "BmpTriggerAC  %x\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "UapsdSpSupproted  %u\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "IsQoS  %u\n", prStaRec->fgIsQoS);
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "AssocId %u\n", prStaRec->u2AssocId);
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "fgIsInPS %u\n", prStaRec->fgIsInPS);
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "ucFreeQuota %u\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "ucFreeQuotaForDelivery %u\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "ucFreeQuotaForNonDelivery %u\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "IsQmmSup  %u\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "IsUapsdSup  %u\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "AvailabaleDeliverPkts  %u\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "BmpDeliverPktsAC  %u\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "BmpBufferAC  %u\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "BmpNonDeliverPktsAC  %u\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:			DBGLOG(SW4, INFO, "RxReorder fgIsValid: %u\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:			DBGLOG(SW4, INFO, "RxReorder Tid: %u\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:			DBGLOG(SW4, INFO,
connectivity/wlan/core/gen4m/mgmt/swcr.c:			DBGLOG(SW4, INFO, "RxReorder WinStart: %u\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:			DBGLOG(SW4, INFO, "RxReorder WinEnd: %u\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:			DBGLOG(SW4, INFO, "RxReorder WinSize: %u\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "SSID %s\n", prBssInfo->aucSSID);
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "OWN " MACSTR "\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "BSSID " MACSTR "\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "eNetworkType %u\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "ucBssIndex %u\n", prBssInfo->ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "eConnectionState %u\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "eCurrentOPMode %u\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "fgIsQBSS %u\n", prBssInfo->fgIsQBSS);
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "fgIsShortPreambleAllowed %u\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "fgUseShortPreamble %u\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "fgUseShortSlotTime %u\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "ucNonHTBasicPhyType %x\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "u2OperationalRateSet %x\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "u2BSSBasicRateSet %x\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "ucPhyTypeSet %x\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "rStaRecOfClientList %d\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "u2CapInfo %x\n", prBssInfo->u2CapInfo);
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "u2ATIMWindow %x\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "u2AssocId %x\n", prBssInfo->u2AssocId);
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "ucDTIMPeriod %x\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "ucDTIMCount %x\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "fgIsNetAbsent %x\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "eBand %d\n", prBssInfo->eBand);
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "ucPrimaryChannel %d\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "ucHtOpInfo1 %d\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "ucHtOpInfo2 %d\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "ucHtOpInfo3 %d\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "fgErpProtectMode %d\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "eHtProtectMode %d\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "eGfOperationMode %d\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "eRifsOperationMode %d\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "fgObssErpProtectMode %d\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "eObssHtProtectMode %d\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "eObssGfProtectMode %d\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "fgObssRifsOperationMode %d\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "fgAssoc40mBwAllowed %d\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "fg40mBwAllowed %d\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "eBssSCO %d\n", prBssInfo->eBssSCO);
connectivity/wlan/core/gen4m/mgmt/swcr.c:			/* DBGLOG(SW4, INFO,("SWCTRL_RX_FILTER:
connectivity/wlan/core/gen4m/mgmt/swcr.c:			DBGLOG(INIT, INFO, "u4Len:%d bufSize:%d u4NumIPv4:%d\n",
connectivity/wlan/core/gen4m/mgmt/swcr.c:				DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/mgmt/swcr.c:				DBGLOG(SW4, INFO, "QM:DBG %u %u\n", i,
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, LOUD, "\n");
connectivity/wlan/core/gen4m/mgmt/swcr.c:		DBGLOG(SW4, WARN,
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "index %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/swcr.c:		DBGLOG(SW4, INFO, "prBeacon allocation fail\n");
connectivity/wlan/core/gen4m/mgmt/swcr.c:		DBGLOG(SW4, INFO,
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO,
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, LOUD, "Read %u Index %u\n", ucRead, ucIndex);
connectivity/wlan/core/gen4m/mgmt/swcr.c:		DBGLOG(SW4, INFO, "prStaRec is NULL, ucOpt0:%d\n", ucOpt0);
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "Read %u Index %u\n", ucRead, ucIndex);
connectivity/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, TRACE, "%u addr 0x%x data 0x%x\n", ucRead,
connectivity/wlan/core/gen4m/mgmt/swcr.c:			DBGLOG(SW4, INFO, "TX0\n"
connectivity/wlan/core/gen4m/mgmt/swcr.c:			DBGLOG(SW4, INFO, "TX1\n"
connectivity/wlan/core/gen4m/mgmt/swcr.c:			DBGLOG(SW4, INFO, "RX0\n"
connectivity/wlan/core/gen4m/mgmt/swcr.c:			DBGLOG(SW4, INFO, "RX1\n"
connectivity/wlan/core/gen4m/mgmt/swcr.c:			DBGLOG(SW4, INFO, "PWR\n"
connectivity/wlan/core/gen4m/mgmt/swcr.c:			DBGLOG(SW4, INFO, "ARM\n"
connectivity/wlan/core/gen4m/mgmt/swcr.c:			DBGLOG(SW4, INFO, "BB\n"
connectivity/wlan/core/gen4m/mgmt/bss.c:			DBGLOG(BSS, INFO,
connectivity/wlan/core/gen4m/mgmt/bss.c:			DBGLOG(BSS, WARN,
connectivity/wlan/core/gen4m/mgmt/bss.c:			DBGLOG(BSS, INFO,
connectivity/wlan/core/gen4m/mgmt/bss.c:		DBGLOG(BSS, WARN, "No PKT_INFO_T for sending Null Frame.\n");
connectivity/wlan/core/gen4m/mgmt/bss.c:		DBGLOG(BSS, WARN, "No PKT_INFO_T for sending Null Frame.\n");
connectivity/wlan/core/gen4m/mgmt/bss.c:	/* DBGLOG(INIT, LOUD, ("\n")); */
connectivity/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(INIT, LOUD, "\n");
connectivity/wlan/core/gen4m/mgmt/bss.c:		DBGLOG(BSS, WARN, "No PKT_INFO_T for sending %s.\n",
connectivity/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(BSS, INFO, "Init BSS[%u] Client List\n", prBssInfo->ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/bss.c:			DBGLOG(BSS, WARN,
connectivity/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(BSS, INFO,
connectivity/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(BSS, INFO,
connectivity/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(BSS, INFO,
connectivity/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(SW4, INFO, "Dump BSS[%u] Client List NUM[%u]\n",
connectivity/wlan/core/gen4m/mgmt/bss.c:			DBGLOG(SW4, INFO, "[%2u] is NULL STA_REC\n", ucCount);
connectivity/wlan/core/gen4m/mgmt/bss.c:		DBGLOG(SW4, INFO, "[%2u] STA[%u] [" MACSTR "]\n", ucCount,
connectivity/wlan/core/gen4m/mgmt/bss.c:		DBGLOG(SW4, INFO, "BSS[%u] Client List NUM[%u] ERR\n",
connectivity/wlan/core/gen4m/mgmt/bss.c:			DBGLOG(SW4, INFO,
connectivity/wlan/core/gen4m/mgmt/bss.c:			DBGLOG(SW4, INFO, "BSS[%u] Client List NULL PTR ERR\n",
connectivity/wlan/core/gen4m/mgmt/bss.c:		DBGLOG(SW4, INFO,
connectivity/wlan/core/gen4m/mgmt/bss.c:				DBGLOG(BSS, LOUD,
connectivity/wlan/core/gen4m/mgmt/bss.c:				DBGLOG(BSS, LOUD,
connectivity/wlan/core/gen4m/mgmt/bss.c:				DBGLOG(BSS, LOUD,
connectivity/wlan/core/gen4m/mgmt/bss.c:				DBGLOG(BSS, LOUD,
connectivity/wlan/core/gen4m/mgmt/bss.c:		DBGLOG(BSS, LOUD,
connectivity/wlan/core/gen4m/mgmt/bss.c:			DBGLOG(AIS, ERROR, "Can't send Merge Msg\n");
connectivity/wlan/core/gen4m/mgmt/bss.c:			DBGLOG(BSS, INFO,
connectivity/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(BSS, INFO,
connectivity/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(BSS, INFO,
connectivity/wlan/core/gen4m/mgmt/bss.c:		DBGLOG(SW4, INFO, "Invalid BssInfo index[%u], skip dump!\n",
connectivity/wlan/core/gen4m/mgmt/bss.c:		DBGLOG(SW4, INFO, "Invalid BssInfo index[%u], skip dump!\n",
connectivity/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(SW4, INFO, "OWNMAC[" MACSTR "] BSSID[" MACSTR "] SSID[%s]\n",
connectivity/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(SW4, INFO,
connectivity/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(SW4, INFO,
connectivity/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(SW4, INFO, "MaxBw[%u] OpRxNss[%u] OpTxNss[%u]\n",
connectivity/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(SW4, INFO, "QBSS[%u] CapInfo[0x%04x] AID[%u]\n",
connectivity/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(SW4, INFO,
connectivity/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(SW4, INFO, "PhyTypeSet: Basic[0x%02x] NonHtBasic[0x%02x]\n",
connectivity/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(SW4, INFO, "RateSet: BssBasic[0x%04x] Operational[0x%04x]\n",
connectivity/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(SW4, INFO, "ATIMWindow[%u] DTIM Period[%u] Count[%u]\n",
connectivity/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(SW4, INFO,
connectivity/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(SW4, INFO,
connectivity/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(SW4, INFO,
connectivity/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(SW4, INFO,
connectivity/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(SW4, INFO, "======== Dump Connected Client ========\n");
connectivity/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(SW4, INFO, "NumOfClient[%u]\n",
connectivity/wlan/core/gen4m/mgmt/bss.c:		DBGLOG(SW4, INFO, "STA[%u] [" MACSTR "]\n",
connectivity/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(SW4, INFO, "============== Dump Done ==============\n");
connectivity/wlan/core/gen4m/mgmt/bss.c:		DBGLOG(BSS, INFO, "GetRxNss Param Error!\n");
connectivity/wlan/core/gen4m/mgmt/bss.c:		DBGLOG(BSS, INFO, "GetIotApAction Param Error!\n");
connectivity/wlan/core/gen4m/mgmt/bss.c:				DBGLOG(BSS, TRACE,
connectivity/wlan/core/gen4m/mgmt/bss.c:		DBGLOG(BSS, INFO, MACSTR" is IOTAP:%d Act:%d\n",
connectivity/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(BSS, TRACE, MACSTR" is NOT IOTAP\n",
connectivity/wlan/core/gen4m/mgmt/privacy.c:		DBGLOG_LIMITED(RSN, WARN,
connectivity/wlan/core/gen4m/mgmt/privacy.c:			DBGLOG(RSN, WARN,
connectivity/wlan/core/gen4m/mgmt/privacy.c:	DBGLOG(RSN, TRACE,
connectivity/wlan/core/gen4m/mgmt/privacy.c:			DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/mgmt/privacy.c:				DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/mgmt/privacy.c:		DBGLOG(RSN, TRACE, "Unknown encryption setting %d\n",
connectivity/wlan/core/gen4m/mgmt/privacy.c:		DBGLOG(RSN, ERROR, "sta is not in use\n");
connectivity/wlan/core/gen4m/mgmt/privacy.c:			DBGLOG(RSN, TRACE,
connectivity/wlan/core/gen4m/mgmt/privacy.c:				DBGLOG(RSN, TRACE,
connectivity/wlan/core/gen4m/mgmt/privacy.c:					DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/mgmt/privacy.c:		DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/mgmt/privacy.c:	DBGLOG(RSN, WARN,
connectivity/wlan/core/gen4m/mgmt/privacy.c:	DBGLOG(RSN, TRACE, "secPrivacyFreeForEntry %d", ucEntry);
connectivity/wlan/core/gen4m/mgmt/privacy.c:			DBGLOG(RSN, INFO, "Free STA entry (%d)!\n", entry);
connectivity/wlan/core/gen4m/mgmt/privacy.c:	DBGLOG(RSN, TRACE, "remove all the key related with BSS!");
connectivity/wlan/core/gen4m/mgmt/privacy.c:				DBGLOG(RSN, TRACE,
connectivity/wlan/core/gen4m/mgmt/privacy.c:				DBGLOG(RSN, TRACE,
connectivity/wlan/core/gen4m/mgmt/privacy.c:				DBGLOG(RSN, TRACE,
connectivity/wlan/core/gen4m/mgmt/privacy.c:		DBGLOG(RSN, TRACE,
connectivity/wlan/core/gen4m/mgmt/privacy.c:		DBGLOG(RSN, ERROR,
connectivity/wlan/core/gen4m/mgmt/privacy.c:	/* DBGLOG(RSN, TRACE, ("secGetStaIdxByWlanIdx=%d "MACSTR" used=%d\n",
connectivity/wlan/core/gen4m/mgmt/privacy.c:		DBGLOG(RSN, LOUD,
connectivity/wlan/core/gen4m/mgmt/privacy.c:			DBGLOG(RSN, LOUD,
connectivity/wlan/core/gen4m/mgmt/privacy.c:	DBGLOG(RSN, LOUD, "Return default index\n");
connectivity/wlan/core/gen4m/mgmt/privacy.c:	DBGLOG(RSN, TRACE, "The Wlan index\n");
connectivity/wlan/core/gen4m/mgmt/privacy.c:			DBGLOG(RSN, TRACE,
connectivity/wlan/core/gen4m/mgmt/privacy.c:				DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/mgmt/privacy.c:			DBGLOG(RSN, INFO, "secPostUpdateAddr at [%d] " MACSTR
connectivity/wlan/core/gen4m/mgmt/privacy.c:		DBGLOG(RX, INFO,
connectivity/wlan/core/gen4m/mgmt/privacy.c:		DBGLOG(RX, TRACE,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(SW1, INFO, "->aisFsmInit(%d)\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(SW1, INFO, "-> realloc(%d)\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, ERROR,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(SW1, INFO, "->aisFsmUninit(%d)\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, ERROR,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:			DBGLOG(AIS, LOUD,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:			DBGLOG(AIS, LOUD,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:			DBGLOG(AIS, ERROR,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD, "JOIN INIT: AUTH TYPE = %d for Roaming\n",
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:				DBGLOG(AIS, INFO,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, ERROR,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, ERROR, "Can't trigger SAA FSM\n");
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, INFO,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, ERROR,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, ERROR, "Can't trigger SAA FSM\n");
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, ERROR,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, ERROR, "Can't abort SAA FSM\n");
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, STATE, "[%d] aisFsmStateAbort_SCAN\n",
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, ERROR, "Can't abort SCN FSM\n");
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, ERROR,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, STATE, "[AIS%d] TRANSITION: [%s] -> [%s]\n",
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:				DBGLOG(AIS, INFO,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:				DBGLOG(AIS, STATE,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:					DBGLOG(AIS, STATE,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:						DBGLOG(AIS, INFO,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:						DBGLOG(ROAMING, INFO,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:						DBGLOG(AIS, INFO,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:			DBGLOG(AIS, LOUD,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:				DBGLOG(AIS, ERROR, "Can't trigger SCAN FSM\n");
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:				DBGLOG(AIS, INFO,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:					DBGLOG(AIS, INFO,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:				DBGLOG(AIS, TRACE,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:				DBGLOG(AIS, ERROR, "Can't indicate CNM\n");
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:			DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:				DBGLOG(AIS, ERROR, "Can't indicate CNM\n");
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "[%d] EVENT-SCAN DONE: Current Time = %u\n",
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, WARN, "prAisBssInfo is NULL, and then return\n");
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, INFO, "ScanDone %u, status(%d) native req(%u)\n",
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, WARN,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, INFO,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, STATE,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, STATE,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:				DBGLOG(AIS, INFO,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:					DBGLOG(AIS, INFO,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:						DBGLOG(AIS, ERROR,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, INFO,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, INFO,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, EVENT,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, INFO,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, INFO,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n",
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, STATE,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, WARN, "EVENT- JOIN TIMEOUT\n");
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, INFO,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(SCN, TRACE,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:					DBGLOG(SCN, WARN,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(SCN, WARN, "Scan Request dropped. (state: %d)\n",
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(SCN, TRACE, "[AIS%d] eCurrentState=%d, fgIsScanReqIssued=%d\n",
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:					DBGLOG(SCN, WARN,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, INFO,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(SCN, WARN, "Scan Request dropped. (state: %d)\n",
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, INFO, "Start JOIN Timer!");
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:			DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:			DBGLOG(AIS, ERROR, "Can't release Channel to CNM\n");
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, EVENT, "aisBssBeaconTimeout\n");
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, EVENT, "aisBssLinkDown\n");
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, EVENT, "aisDeauthXmitComplete\n");
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, WARN,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:			DBGLOG(ROAMING, INFO,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, EVENT, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:			DBGLOG(AIS, WARN, "prStaRecOfAP is in use %d\n",
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, WARN,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:				DBGLOG(AIS, INFO, "Remove req=%d\n", eReqType);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, ERROR, "Can't generate new message\n");
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, INFO, "eCurrentState=%d, eReqType=%d, u4NumElem=%d\n",
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, INFO, "aisFsmFlushRequest %d\n",
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, TRACE,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, ERROR, "channel request buffer allocate fails.\n");
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, ERROR, "Allocate TX request buffer fails.\n");
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(REQ, INFO, "Use offchannel to TX.\n");
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(REQ, TRACE, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:			DBGLOG(REQ, ERROR,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, WARN,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, STATE, "CURRENT State: [%s]\n",
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:			DBGLOG(AIS, ERROR, "Mgmt Frame TX Fail, Status:%d.\n",
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:			DBGLOG(AIS, INFO,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:				DBGLOG(AIS, TRACE, "NCHO action frame tx done");
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, INFO, __STR_FMT__);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, ERROR, "bss descriptor is NULL\n");
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, INFO, "update blacklist for " MACSTR
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, INFO, "update blacklist for " MACSTR
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, WARN, "No memory to allocate\n");
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, INFO, "Add " MACSTR " to black List\n",
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, INFO, "Remove " MACSTR " from blacklist\n",
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, TRACE, MACSTR " is not in blacklist\n",
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:			DBGLOG(AIS, INFO, "Remove Timeout %pM from blacklist\n",
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, INFO, "Remove disappeared blacklist %s " MACSTR,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, WARN, "Msg Header is NULL\n");
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, INFO, "Transition Type: %d\n", eTransType);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:			DBGLOG(AIS, ERROR, "Target Bss Desc is NULL\n");
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, INFO,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:			DBGLOG(AIS, WARN, "Truncated neighbor report\n");
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, INFO,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:			DBGLOG(AIS, LOUD,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, TRACE, "RSN IE length too short (length=%d)\n",
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, TRACE, "Unsupported RSN IE version: %d\n",
connectivity/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, TRACE,
connectivity/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, TRACE,
connectivity/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, TRACE,
connectivity/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, TRACE,
connectivity/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, TRACE,
connectivity/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, TRACE,
connectivity/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, TRACE,
connectivity/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, TRACE,
connectivity/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, TRACE,
connectivity/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, LOUD,
connectivity/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, LOUD,
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, LOUD,
connectivity/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, LOUD, "RSN: AKM suite [%d]: 0x%x\n", i,
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, LOUD, "RSN: AKM suite: 0x%x (default)\n",
connectivity/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, LOUD, "RSN cap: 0x%04x\n", prRsnInfo->u2RsnCap);
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, TRACE, "WPA IE length too short (length=%d)\n",
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, TRACE, "Unsupported WPA IE version: %d\n",
connectivity/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, TRACE,
connectivity/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, TRACE,
connectivity/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, TRACE,
connectivity/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, TRACE,
connectivity/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, TRACE,
connectivity/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, TRACE,
connectivity/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, LOUD, "WPA: version %d, group key cipher suite 0x%x\n",
connectivity/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, LOUD,
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, LOUD,
connectivity/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, LOUD,
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, LOUD,
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, LOUD, "WPA: RSN cap: 0x%04x\n",
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, WARN, "Break by GroupKey s=0x%x k=0x%x\n",
connectivity/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, WARN, "Break by PairwisKey s=0x%x k=0x%x\n",
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, WARN, "Don't check AuthKeyMgtSuite with SAE\n");
connectivity/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, WARN, "Break by AuthKey s=0x%x k=0x%x\n",
connectivity/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, TRACE, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO, "-- Skip the Protected BSS check\n");
connectivity/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, INFO, "-- No Protected BSS\n");
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO, "-- Protected BSS but No need\n");
connectivity/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, INFO, "-- Protected BSS\n");
connectivity/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, WARN,
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO, "-- WEP-only legacy BSS\n");
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, TRACE,
connectivity/wlan/core/gen4m/mgmt/rsn.c:				DBGLOG(RSN, TRACE, "Cannot join CCMP BSS\n");
connectivity/wlan/core/gen4m/mgmt/rsn.c:				DBGLOG(RSN, TRACE,
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, TRACE, "Cannot support any AKM suites\n");
connectivity/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, TRACE,
connectivity/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, TRACE,
connectivity/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, WARN,
connectivity/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, WARN,
connectivity/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, TRACE,
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, TRACE,
connectivity/wlan/core/gen4m/mgmt/rsn.c:				DBGLOG(RSN, TRACE,
connectivity/wlan/core/gen4m/mgmt/rsn.c:				DBGLOG(RSN, TRACE, "RSN_AUTH_MFP - MFPC\n");
connectivity/wlan/core/gen4m/mgmt/rsn.c:				DBGLOG(RSN, TRACE,
connectivity/wlan/core/gen4m/mgmt/rsn.c:				DBGLOG(RSN, ERROR, "prStaRec is NULL!");
connectivity/wlan/core/gen4m/mgmt/rsn.c:				DBGLOG(RSN, INFO, "BSSID " MACSTR
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, TRACE, "RSN with CCMP-PSK\n");
connectivity/wlan/core/gen4m/mgmt/rsn.c:				DBGLOG(RSN, INFO, "STA SHA256 support\n");
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO, "Start blocking traffic!\n");
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO, "First TKIP MIC error!\n");
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, TRACE, "[%d] Generate " MACSTR
connectivity/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, TRACE, "[%d] Del " MACSTR " pmkid\n",
connectivity/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, WARN, "Del " MACSTR " pmkid but mismatch\n",
connectivity/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, INFO, "[%d] Flush Pmkid total:%d\n",
connectivity/wlan/core/gen4m/mgmt/rsn.c:				DBGLOG(RSN, INFO, "AP-STA PMF capable\n");
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO, "association SA Query timed out\n");
connectivity/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, ERROR, "prAisBssInfo is NULL");
connectivity/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, INFO, "MFP: Start Sa Query\n");
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO, "MFP: unassociated AP!\n");
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO, "MFP: u4SaQueryCount count =%d\n",
connectivity/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO, "Set MSDU_OPT_PROTECTED_FRAME");
connectivity/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, INFO, "Set SA Query timer %d (%d Tu)",
connectivity/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO, "Set MSDU_OPT_PROTECTED_FRAME\n");
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, INFO, "Reply to pending SA Query received\n");
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, ERROR, "Empty prBssInfo\n");
connectivity/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, INFO, "security change, open->privacy\n");
connectivity/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, INFO, "security change, WEP->open\n");
connectivity/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, INFO, "security change, WEP->WPA/WPA2\n");
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO, "security change, WPA->%s\n",
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO, "security change, WPA2->%s\n",
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, WARN, "unknowned eAuthMode=%d\n", eAuthMode);
connectivity/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, TRACE, "WPS: Building WPS IE for (Re)Association Response");
connectivity/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, ERROR, "PMF policy violation for case 4\n");
connectivity/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, ERROR, "PMF policy violation for case 7\n");
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, ERROR, "PMF Connection\n");
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO, "rsnPmfGenerateTimeoutIE TRUE\n");
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO, "association SA Query timed out\n");
connectivity/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, INFO, "MFP: AP Start Sa Query timer\n");
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, INFO, "SAQ transaction id:%d\n",
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO, "SAQ Set MSDU_OPT_PROTECTED_FRAME\n");
connectivity/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, INFO, "AP Set SA Query timer %d (%d Tu)\n",
connectivity/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, INFO, "rsnApStartSaQuery\n");
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, WARN, "fail with NULL prStaRec\n");
connectivity/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, ERROR, "drop SAQ req CM/CLM=1\n");
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO, "AP SAQ resp set FC PF bit\n");
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO, "AP SAQ resp set MSDU_OPT_PROTECTED_FRAME\n");
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO, "rsnApSaQueryAction: prStaRec is NULL");
connectivity/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, TRACE,
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO, "AP Reply to SA Query received\n");
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, WARN,
connectivity/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, WARN,
connectivity/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, WARN,
connectivity/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, WARN,
connectivity/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, WARN,
connectivity/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, WARN,
connectivity/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, TRACE,
connectivity/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, TRACE,
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, WARN,
connectivity/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, TRACE, "RSN: AKM suite [%d]: 0x%x\n", i
connectivity/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, WARN, "No AKM found, using default (802.1X)\n");
connectivity/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, TRACE, "RSN cap: 0x%04x\n", prOsenInfo->u2RsnCap);
connectivity/wlan/core/gen4m/mgmt/p2p_rlm.c:			DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_rlm.c:	DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_rlm.c:			DBGLOG(P2P, WARN,
connectivity/wlan/core/gen4m/mgmt/wnm.c:	DBGLOG(WNM, TRACE, "WNM action frame: %d from " MACSTR "\n",
connectivity/wlan/core/gen4m/mgmt/wnm.c:		DBGLOG(RX, INFO,
connectivity/wlan/core/gen4m/mgmt/wnm.c:	DBGLOG(WNM, TRACE, "WNM: wnmReportTimingMeas: u4ToD %x u4ToA %x", u4ToD,
connectivity/wlan/core/gen4m/mgmt/wnm.c:	DBGLOG(WNM, LOUD, "WNM: EVENT-TX DONE: Current Time = %ld\n",
connectivity/wlan/core/gen4m/mgmt/wnm.c:	DBGLOG(WNM, TRACE,
connectivity/wlan/core/gen4m/mgmt/wnm.c:	DBGLOG(WNM, TRACE,
connectivity/wlan/core/gen4m/mgmt/wnm.c:	DBGLOG(WNM, TRACE,
connectivity/wlan/core/gen4m/mgmt/wnm.c:	DBGLOG(WNM, INFO,
connectivity/wlan/core/gen4m/mgmt/wnm.c:	DBGLOG(WNM, INFO, "BTM: Query Frame Tx Done, Status %d\n",
connectivity/wlan/core/gen4m/mgmt/wnm.c:	DBGLOG(WNM, INFO, "BTM: Response Frame Tx Done Status %d\n",
connectivity/wlan/core/gen4m/mgmt/wnm.c:		DBGLOG(WNM, INFO, "BTM: No station record found\n");
connectivity/wlan/core/gen4m/mgmt/wnm.c:		DBGLOG(WNM, WARN,
connectivity/wlan/core/gen4m/mgmt/wnm.c:		DBGLOG(WNM, WARN, "BTM: Msg Hdr is NULL\n");
connectivity/wlan/core/gen4m/mgmt/wnm.c:			DBGLOG(WNM, WARN,
connectivity/wlan/core/gen4m/mgmt/wnm.c:	DBGLOG(WNM, INFO,
connectivity/wlan/core/gen4m/mgmt/tdls.c:		DBGLOG(TDLS, ERROR, "prBssInfo %d is NULL!\n"
connectivity/wlan/core/gen4m/mgmt/tdls.c:	DBGLOG(TDLS, INFO, "u4SetBufferLen=%d", u4SetBufferLen);
connectivity/wlan/core/gen4m/mgmt/tdls.c:	DBGLOG(TDLS, INFO, "prCmd->ucActionCode=%d, prCmd->ucDialogToken=%d",
connectivity/wlan/core/gen4m/mgmt/tdls.c:		DBGLOG(TDLS, INFO, "default=%d", prCmd->ucActionCode);
connectivity/wlan/core/gen4m/mgmt/tdls.c:	DBGLOG(TDLS, INFO, "rResult=%d", rResult);
connectivity/wlan/core/gen4m/mgmt/tdls.c:		DBGLOG(TDLS, ERROR, "prBssInfo %d is NULL!\n"
connectivity/wlan/core/gen4m/mgmt/tdls.c:	DBGLOG(TDLS, INFO, "prCmd->oper=%d, u4SetBufferLen=%d",
connectivity/wlan/core/gen4m/mgmt/tdls.c:		DBGLOG(TDLS, ERROR, "prBssInfo %d is NULL!\n"
connectivity/wlan/core/gen4m/mgmt/tdls.c:		DBGLOG(TDLS, ERROR, "prBssInfo %d is NULL!\n"
connectivity/wlan/core/gen4m/mgmt/tdls.c:		DBGLOG(TDLS, ERROR, "prBssInfo %d is NULL!\n"
connectivity/wlan/core/gen4m/mgmt/tdls.c:	DBGLOG(TDLS, INFO, "wlanHardStartXmit, u4PktLen=%d", u4PktLen);
connectivity/wlan/core/gen4m/mgmt/tdls.c:		DBGLOG(TDLS, ERROR, "prBssInfo %d is NULL!\n"
connectivity/wlan/core/gen4m/mgmt/tdls.c:		DBGLOG(TDLS, ERROR, "prBssInfo %d is NULL!\n"
connectivity/wlan/core/gen4m/mgmt/tdls.c:			DBGLOG(TDLS, ERROR, "prBssInfo %d is NULL!\n"
connectivity/wlan/core/gen4m/mgmt/tdls.c:			DBGLOG(TDLS, ERROR, "prBssInfo %d is NULL!\n"
connectivity/wlan/core/gen4m/mgmt/tdls.c:	DBGLOG(TDLS, INFO, "TdlsexEventHandle\n");
connectivity/wlan/core/gen4m/mgmt/tdls.c:		DBGLOG(TDLS, INFO, "TDLS_HOST_EVENT_TEAR_DOWN\n");
connectivity/wlan/core/gen4m/mgmt/tdls.c:		DBGLOG(TDLS, INFO,
connectivity/wlan/core/gen4m/mgmt/tdls.c:		DBGLOG(TDLS, INFO,
connectivity/wlan/core/gen4m/mgmt/tdls.c:	DBGLOG(TDLS, INFO, "\n\n u2ReasonCode = %u\n\n",
connectivity/wlan/core/gen4m/mgmt/tdls.c:	DBGLOG(TDLS, INFO, "TdlsHandleTxDoneStatus=%d, fgIsWaitForTxDone=%d",
connectivity/wlan/core/gen4m/mgmt/p2p_fsm.c:		DBGLOG(P2P, ERROR, "can not get bss info by bssIdx: %d",
connectivity/wlan/core/gen4m/mgmt/p2p_fsm.c:				DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_fsm.c:	DBGLOG(P2P, TRACE, "bss[%d %d], role: %d, use_role_if: %d\n",
connectivity/wlan/core/gen4m/mgmt/p2p_fsm.c:		DBGLOG(P2P, TRACE, "P2P Run Event Channel Grant\n");
connectivity/wlan/core/gen4m/mgmt/p2p_fsm.c:	DBGLOG(P2P, TRACE, "p2pFsmRunEventNetDeviceRegister\n");
connectivity/wlan/core/gen4m/mgmt/p2p_fsm.c:	DBGLOG(P2P, TRACE, "p2pFsmRunEventUpdateMgmtFrame\n");
connectivity/wlan/core/gen4m/mgmt/p2p_fsm.c:	DBGLOG(P2P, INFO, "p2pFsmRunEventWfdSettingUpdate\n");
connectivity/wlan/core/gen4m/mgmt/p2p_fsm.c:		DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_fsm.c:#if CFG_ENABLE_PER_STA_STATISTICS_LOG
connectivity/wlan/core/gen4m/mgmt/p2p_fsm.c:		DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_fsm.c:	DBGLOG(P2P, TRACE, "P2P Scan Done Event\n");
connectivity/wlan/core/gen4m/mgmt/scan.c: * of enum ENUM_SCAN_LOG_PREFIX
connectivity/wlan/core/gen4m/mgmt/scan.c:const char aucScanLogPrefix[][SCAN_LOG_PREFIX_MAX_LEN] = {
connectivity/wlan/core/gen4m/mgmt/scan.c:	"[SCN:100:K2D]",	/* LOG_SCAN_REQ_K2D */
connectivity/wlan/core/gen4m/mgmt/scan.c:	"[SCN:200:D2F]",	/* LOG_SCAN_REQ_D2F */
connectivity/wlan/core/gen4m/mgmt/scan.c:	"[SCN:300:F2D]",	/* LOG_SCAN_RESULT_F2D */
connectivity/wlan/core/gen4m/mgmt/scan.c:	"[SCN:400:D2K]",	/* LOG_SCAN_RESULT_D2K */
connectivity/wlan/core/gen4m/mgmt/scan.c:	"[SCN:500:F2D]",	/* LOG_SCAN_DONE_F2D */
connectivity/wlan/core/gen4m/mgmt/scan.c:	"[SCN:600:D2K]",	/* LOG_SCAN_DONE_D2K */
connectivity/wlan/core/gen4m/mgmt/scan.c:	"[SCN:700:K2D]",	/* LOG_SCHED_SCAN_REQ_START_K2D */
connectivity/wlan/core/gen4m/mgmt/scan.c:	"[SCN:800:D2F]",        /* LOG_SCHED_SCAN_REQ_START_D2F */
connectivity/wlan/core/gen4m/mgmt/scan.c:	"[SCN:750:K2D]",	/* LOG_SCHED_SCAN_REQ_STOP_K2D */
connectivity/wlan/core/gen4m/mgmt/scan.c:	"[SCN:850:D2F]",	/* LOG_SCHED_SCAN_REQ_STOP_D2F */
connectivity/wlan/core/gen4m/mgmt/scan.c:	"[SCN:900:F2D]",	/* LOG_SCHED_SCAN_DONE_F2D */
connectivity/wlan/core/gen4m/mgmt/scan.c:	"[SCN:1000:D2K]",	/* LOG_SCHED_SCAN_DONE_D2K */
connectivity/wlan/core/gen4m/mgmt/scan.c:	"[SCN:1100:K2D]",	/* LOG_SCAN_ABORT_REQ_K2D */
connectivity/wlan/core/gen4m/mgmt/scan.c:	"[SCN:1200:D2F]",	/* LOG_SCAN_ABORT_REQ_D2F */
connectivity/wlan/core/gen4m/mgmt/scan.c:	"[SCN:1300:D2K]",	/* LOG_SCAN_ABORT_DONE_D2K */
connectivity/wlan/core/gen4m/mgmt/scan.c:	"[SCN:0:D2D]",		/* LOG_SCAN_D2D */
connectivity/wlan/core/gen4m/mgmt/scan.c:	""			/* LOG_SCAN_MAX */
connectivity/wlan/core/gen4m/mgmt/scan.c:		DBGLOG(SCN, ERROR,
connectivity/wlan/core/gen4m/mgmt/scan.c:		DBGLOG(SCN, WARN,
connectivity/wlan/core/gen4m/mgmt/scan.c:		DBGLOG(SCN, WARN, "IE is truncated!\n");
connectivity/wlan/core/gen4m/mgmt/scan.c:		DBGLOG(SCN, LOUD,
connectivity/wlan/core/gen4m/mgmt/scan.c:		DBGLOG(SCN, LOUD,
connectivity/wlan/core/gen4m/mgmt/scan.c:				DBGLOG(SCN, TRACE,
connectivity/wlan/core/gen4m/mgmt/scan.c:			DBGLOG(SCN, LOUD,
connectivity/wlan/core/gen4m/mgmt/scan.c:		DBGLOG(SCN, LOUD,
connectivity/wlan/core/gen4m/mgmt/scan.c:		scanlog_dbg(LOG_SCAN_DONE_D2K, INFO, "0 Bss is found, %d, %d, %d, %d\n",
connectivity/wlan/core/gen4m/mgmt/scan.c:	slen = min(slen + 1, SCAN_LOG_MSG_MAX_LEN); /* 1 for null end*/
connectivity/wlan/core/gen4m/mgmt/scan.c:		scanlog_dbg(LOG_SCAN_DONE_D2K, INFO, "Can't allocate memory\n");
connectivity/wlan/core/gen4m/mgmt/scan.c:				scanlog_dbg(LOG_SCAN_DONE_D2K, INFO,
connectivity/wlan/core/gen4m/mgmt/scan.c:				scanlog_dbg(LOG_SCAN_DONE_D2K, INFO,
connectivity/wlan/core/gen4m/mgmt/scan.c:			scanlog_dbg(LOG_SCAN_DONE_D2K, INFO,
connectivity/wlan/core/gen4m/mgmt/scan.c:			scanlog_dbg(LOG_SCAN_DONE_D2K, INFO, "%s", strbuf);
connectivity/wlan/core/gen4m/mgmt/scan.c:#define TEMP_LOG_TEMPLATE "Report " MACSTR " SSID[%s %u] eBSSType[%d] " \
connectivity/wlan/core/gen4m/mgmt/scan.c:				log_dbg(SCN, TRACE, TEMP_LOG_TEMPLATE,
connectivity/wlan/core/gen4m/mgmt/scan.c:#undef TEMP_LOG_TEMPLATE
connectivity/wlan/core/gen4m/mgmt/scan.c:		scanlog_dbg(LOG_SCAN_REQ_K2D, INFO, "Can't allocate memory\n");
connectivity/wlan/core/gen4m/mgmt/scan.c:#define TEMP_LOG_TEMPLATE \
connectivity/wlan/core/gen4m/mgmt/scan.c:	scanlog_dbg(LOG_SCAN_REQ_D2F, INFO, TEMP_LOG_TEMPLATE,
connectivity/wlan/core/gen4m/mgmt/scan.c:#undef TEMP_LOG_TEMPLATE
connectivity/wlan/core/gen4m/mgmt/scan.c:		LOG_SCAN_RESULT_F2D,
connectivity/wlan/core/gen4m/mgmt/scan.c:	struct SCAN_LOG_ELEM_BSS *prListBuf,
connectivity/wlan/core/gen4m/mgmt/scan.c:	enum ENUM_SCAN_LOG_PREFIX prefix,
connectivity/wlan/core/gen4m/mgmt/scan.c:	struct SCAN_LOG_ELEM_BSS *pSavedBss = NULL;
connectivity/wlan/core/gen4m/mgmt/scan.c:	struct SCAN_LOG_ELEM_BSS *pBss = NULL;
connectivity/wlan/core/gen4m/mgmt/scan.c:		rLinkEntry, struct SCAN_LOG_ELEM_BSS) {
connectivity/wlan/core/gen4m/mgmt/scan.c:	if (prList->u4NumElem < SCAN_LOG_BUFF_SIZE) {
connectivity/wlan/core/gen4m/mgmt/scan.c:	kalMemZero(pBss, sizeof(struct SCAN_LOG_ELEM_BSS));
connectivity/wlan/core/gen4m/mgmt/scan.c:void scanLogCacheFlushBSS(struct LINK *prList, enum ENUM_SCAN_LOG_PREFIX prefix,
connectivity/wlan/core/gen4m/mgmt/scan.c:	struct SCAN_LOG_ELEM_BSS *pBss = NULL;
connectivity/wlan/core/gen4m/mgmt/scan.c:				pBss, struct SCAN_LOG_ELEM_BSS *);
connectivity/wlan/core/gen4m/mgmt/scan.c:			if (prefix != LOG_SCAN_D2D)
connectivity/wlan/core/gen4m/mgmt/scan.c:			pBss, struct SCAN_LOG_ELEM_BSS *);
connectivity/wlan/core/gen4m/mgmt/scan.c:		if (prefix != LOG_SCAN_D2D)
connectivity/wlan/core/gen4m/mgmt/scan.c:void scanLogCacheFlushAll(struct SCAN_LOG_CACHE *prScanLogCache,
connectivity/wlan/core/gen4m/mgmt/scan.c:	enum ENUM_SCAN_LOG_PREFIX prefix, const uint16_t logBufLen)
connectivity/wlan/core/gen4m/mgmt/scan.c:		DBGLOG(RLM, WARN, "[Epigram] pucBuf is NULL, skip!\n");
connectivity/wlan/core/gen4m/mgmt/scan.c:		DBGLOG(RLM, WARN, "[Epigram] prBssDesc is NULL, skip!\n");
connectivity/wlan/core/gen4m/mgmt/rlm_obss.c:	DBGLOG(RLM, INFO, "OBSS Scan Done (NetIdx=%d, Mode=%d)\n",
connectivity/wlan/core/gen4m/mgmt/rlm_obss.c:		DBGLOG(RLM, WARN, "OBSS Scan Done (NetIdx=%d) -- Aborted!!\n",
connectivity/wlan/core/gen4m/mgmt/rlm_obss.c:		DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/mgmt/rlm_obss.c:		DBGLOG(RLM, INFO, "Set OBSS timer (NetIdx=%d, %d sec)\n",
connectivity/wlan/core/gen4m/mgmt/rlm_obss.c:			DBGLOG(RLM, INFO, "WFD is running. Stop OBSS scan.\n");
connectivity/wlan/core/gen4m/mgmt/rlm_obss.c:		DBGLOG(RLM, WARN,
connectivity/wlan/core/gen4m/mgmt/rlm_obss.c:		DBGLOG(RLM, WARN, "No buf for OBSS scan (NetIdx=%d)!!\n",
connectivity/wlan/core/gen4m/mgmt/rlm_obss.c:	DBGLOG(RLM, INFO, "Timeout to trigger OBSS scan (NetIdx=%d)!!\n",
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, LOUD,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, TRACE, "P2P Cancel Scan\n");
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, TRACE, "Create station record fail\n");
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, TRACE, "Allocation Join Message Fail\n");
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, TRACE, "Target BSS NULL\n");
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, WARN, "Assoc BSSID " MACSTR "\n",
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, TRACE, "Mgmt Frame TX Done.\n");
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:	DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:	DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, INFO, "Found WFD IE, SA: " MACSTR
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:	DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:	DBGLOG(P2P, INFO, "eConnState: %d, eType: %d\n",
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, TRACE, "TX Probe Resposne Frame\n");
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, TRACE, "p2pFuncStopComplete\n");
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, TRACE, "p2pFuncStartGO:\n");
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, TRACE, "GO SSID:%s\n", prBssInfo->aucSSID);
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, TRACE, "Phy type: 0x%x\n", prBssInfo->ucPhyTypeSet);
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, TRACE, "p2pFuncStopGO\n");
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, WARN,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:					DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:					DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, TRACE, "P2P Release Channel\n");
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:	DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:	DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, ERROR, "prBssInfo shouldn't be NULL!\n");
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:	DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, WARN, "p2p glue info is not active\n");
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, WARN,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, WARN,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:	DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, INFO, "-----Radar Detected Event-----\n");
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, INFO, "Regulation domain: FCC\n");
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, INFO, "Regulation domain: ETSI\n");
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, INFO, "Regulation domain: JP\n");
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, INFO, "Radar Content:\n");
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, INFO, "start time    pulse width    PRI\n");
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, INFO, "%-10d    %-11d    -\n"
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, INFO, "%-10d    %-11d    %d\n"
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, INFO, "%-10d    %-11d    -\n"
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, INFO, "%-10d    %-11d    %d\n"
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:	DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:	DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(BSS, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(BSS, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:	DBGLOG(BSS, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:	DBGLOG(P2P, TRACE, "p2pValidate Authentication Frame\n");
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, WARN,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, WARN,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, WARN, "PMF Connction, return false\n");
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, WARN,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, WARN, "in black list.\n");
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, WARN, "p2p action frames are pending, drop it.\n");
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:	DBGLOG(P2P, INFO, "Buffer the p2p action frame.\n");
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, WARN, "Allocate buffer fail.\n");
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, ERROR, "Invalid parameter.\n");
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, TRACE, "Action: oui: 0x%x\n", u4OUI);
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:				/* DBGLOG(P2P, TRACE, ("SSID update\n")); */
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:					DBGLOG(P2P, TRACE, "Support Rate IE\n");
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:					DBGLOG_MEM8(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:					DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:					DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:					DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:					DBGLOG(P2P, TRACE, "ERP IE.\n");
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:					DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:					DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:					DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:					DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, TRACE, "RSN IE\n");
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:					DBGLOG(RSN, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:						DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(RSN, ERROR,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, TRACE, "Ex Support Rate IE\n");
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:					DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:					DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:					DBGLOG(P2P, TRACE, "HT OP IE\n");
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:					DBGLOG_MEM8(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:					DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:					DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, TRACE, "Vender Specific IE\n");
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, TRACE, "WPA IE in supplicant\n");
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, TRACE, "WPS IE in supplicant\n");
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, TRACE, "WMM IE in supplicant\n");
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, TRACE, "P2P IE in supplicant\n");
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, LOUD, "Checking Attribute Length.\n");
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, LOUD,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, WARN,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, WARN,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:					DBGLOG(P2P, WARN,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, ERROR, "prStaRec of ucStaRecIndex %d is NULL!\n",
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, TRACE, "Generate NULL P2P IE for Assoc Rsp.\n");
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, TRACE, "Legacy device, no P2P IE.\n");
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:	DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:	DBGLOG(P2P, INFO, "Clean queued p2p action frame.\n");
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, WARN, "Not support concurrent STA + SAP\n");
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, WARN, "STA has invalid band\n");
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, WARN, "SAP is not active\n");
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, WARN, "SAP is not active\n");
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, WARN, "SAP has invalid band\n");
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, INFO, "[SCC] Choose a channel\n");
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, WARN, "STA is not connected\n");
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, INFO, "[SCC] Keep StaCH(%d)\n", ucStaChannelNum);
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:	DBGLOG(P2P, TRACE, "Check done\n");
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:	DBGLOG(P2P, INFO, "iftype: %d\n", eIftype);
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:	DBGLOG(P2P, INFO, "ucNumOfChannel: %d, eBand: %d\n", ucNumOfChannel,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:	DBGLOG(P2P, INFO, "acs chnl mask=[0x%08x][0x%08x][0x%08x]\n",
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, INFO, "idx: %u, ch: %u, d: %d\n",
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, WARN,
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, WARN, "No chosed channel, use default channel %d\n",
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, ERROR, "Not support 80+80 bw.\n");
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:	DBGLOG(P2P, INFO, "bss index: %d, policy: %d\n", ucBssIdx, ePolicy);
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, WARN, "invalid policy for channel switch: %d\n",
connectivity/wlan/core/gen4m/mgmt/p2p_func.c:	DBGLOG(CNM, INFO, "ucBssIndex = %d\n", prBssInfo->ucBssIndex);
connectivity/wlan/core/gen4m/chips/connac2x2/connac2x2.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/chips/connac2x2/connac2x2.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/chips/connac2x2/connac2x2.c:	DBGLOG(HAL, INFO, "Conn2ap axi gals bus info: 0x%08x\n", u4Value);
connectivity/wlan/core/gen4m/chips/connac2x2/connac2x2.c:	DBGLOG(HAL, INFO, "Conn2ap mux4to1 debug info: 0x%08x\n", u4Value);
connectivity/wlan/core/gen4m/chips/connac2x2/connac2x2.c:	DBGLOG(HAL, INFO, "Conn_hif_off bus busy info: 0x%08x\n", u4Value);
connectivity/wlan/core/gen4m/chips/connac2x2/connac2x2.c:	DBGLOG(HAL, INFO, "Conn_hif_on misc info: 0x%08x\n", u4Value);
connectivity/wlan/core/gen4m/chips/connac2x2/connac2x2.c:	DBGLOG(HAL, INFO, "Conn_on_host debug flag: 0x%08x\n", u4Value);
connectivity/wlan/core/gen4m/chips/connac2x2/connac2x2.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/chips/common/cmm_asic_connac.c:	DBGLOG(HAL, TRACE, "Check sleep mode DummyReg[0x%x]\n", u4Value);
connectivity/wlan/core/gen4m/chips/common/cmm_asic_connac.c:	DBGLOG(HAL, TRACE, "Weakup from sleep mode\n");
connectivity/wlan/core/gen4m/chips/common/cmm_asic_connac.c:		DBGLOG(HAL, INFO, "Force to read RX event\n");
connectivity/wlan/core/gen4m/chips/common/cmm_asic_connac.c:	DBGLOG(HAL, INFO, "%s ---->\n", __func__);
connectivity/wlan/core/gen4m/chips/common/cmm_asic_connac.c:		DBGLOG(HAL, INFO, "%s: 0x%08x = 0x%08x\n", __func__,
connectivity/wlan/core/gen4m/chips/common/cmm_asic_connac.c:		DBGLOG(HAL, ERROR,
connectivity/wlan/core/gen4m/chips/common/cmm_asic_connac.c:		DBGLOG(HAL, INFO, "%s:: 0x%08x = 0x%08x\n",
connectivity/wlan/core/gen4m/chips/common/cmm_asic_connac.c:			DBGLOG(HAL, ERROR, "%s:: PDMA Tx idle~\n", __func__);
connectivity/wlan/core/gen4m/chips/common/cmm_asic_connac.c:		DBGLOG(HAL, ERROR, "%s:: PDMA Tx busy.....\n", __func__);
connectivity/wlan/core/gen4m/chips/common/cmm_asic_connac.c:		DBGLOG(HAL, ERROR,
connectivity/wlan/core/gen4m/chips/common/cmm_asic_connac.c:		DBGLOG(HAL, ERROR,
connectivity/wlan/core/gen4m/chips/common/cmm_asic_connac.c:		DBGLOG(HAL, INFO, "%s <----\n", __func__);
connectivity/wlan/core/gen4m/chips/common/cmm_asic_connac.c:	DBGLOG(HAL, INFO, "%s <----\n", __func__);
connectivity/wlan/core/gen4m/chips/common/cmm_asic_connac.c:				DBGLOG(HAL, ERROR,
connectivity/wlan/core/gen4m/chips/common/cmm_asic_connac.c:			DBGLOG(HAL, ERROR,
connectivity/wlan/core/gen4m/chips/common/cmm_asic_connac.c:			DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/chips/common/cmm_asic_connac.c:		u4Value |= DPMA_HIF_LOGIC_RESET_MASK;
connectivity/wlan/core/gen4m/chips/common/cmm_asic_connac.c:		u4Value &= ~DPMA_HIF_LOGIC_RESET_MASK;
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, INFO, "date[%s] version[%s]\n",
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:	DBGLOG(INIT, INFO, "date[%s]\n", aucBuffer);
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, ERROR, "ioremap failed\n");
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:	DBGLOG(INIT, INFO, "feature_set %d\n",
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:	DBGLOG(INIT, INFO, "Compressed Check INFORMATION %d\n",
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, INFO, "Compressed FW\n");
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:			DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:			DBGLOG(INIT, INFO, "DL BLOCK[%u]  COMlen[%u] CRC[%u]\n",
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:				DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:				DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:					DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:			DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, ERROR, "Alloc CMD buffer failed\n");
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, WARN, "Wait patch semaphore response fail\n");
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, ERROR, "prInitEvent is NULL\n");
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, WARN, "Unexpected EVENT ID, get 0x%0x\n",
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, WARN, "Unexpected SeqNum %d, %d\n",
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:			DBGLOG(INIT, WARN,
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:			DBGLOG(INIT, WARN,
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:			DBGLOG(INIT, WARN, "Patch status check timeout!!\n");
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:				DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, INFO, "PATCH FINISH EVT failed\n");
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, INFO, "PATCH FINISH EVT success!!\n");
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:				DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, ERROR, "Alloc CMD buffer failed\n");
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:				DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:				DBGLOG(INIT, ERROR, "prInitEvent is NULL\n");
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, ERROR, "Alloc CMD buffer failed\n");
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:					DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:						DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:				DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:	DBGLOG(INIT, INFO, "FW_START CMD send, waiting for RSP\n");
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, INFO, "FW_START EVT failed\n");
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, INFO, "FW_START EVT success!!\n");
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:				DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:	DBGLOG(INIT, INFO, "FW_START CMD send, waiting for RSP\n");
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, INFO, "FW_START EVT failed\n");
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, INFO, "FW_START EVT success!!\n");
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, INFO, "date[%s] version[%s]\n",
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:	DBGLOG(INIT, INFO, "date[%s] version[%s]\n",
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, WARN, "FW[%u] load error!\n", eDlIdx);
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, WARN, "FW[%u] load error!\n", eDlIdx);
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, WARN, "Get tailer info error!\n");
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:	DBGLOG_LIMITED(INIT, INFO, "FW download Start\n");
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, WARN, "Without downlaod firmware Ops\n");
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:	DBGLOG_LIMITED(INIT, INFO, "FW download End\n");
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:	DBGLOG(INIT, INFO, "Patch download start\n");
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, WARN, "FW[%u] load error!\n",
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, INFO, "No need to download patch\n");
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:	DBGLOG(INIT, INFO, "Patch download end[%d].\n", u4Status);
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, WARN, "FW[%u] load error!\n",
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:	DBGLOG(INIT, INFO, "Release info tag[%u] len[%u]\n",
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, LOUD, "Release info tag[%u] len[%u] padding[%u]\n",
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:			DBGLOG(INIT, WARN, "Not support release info tag[%u]\n",
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:			 DBGLOG(INIT, WARN, "ioremap_nocache failed.\n");
connectivity/wlan/core/gen4m/chips/common/fw_dl.c:	DBGLOG(INIT, INFO, "Release manifest: %s\n",
connectivity/wlan/core/gen4m/chips/mt7668/mt7668.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/chips/mt7668/mt7668.c:	DBGLOG(HAL, TRACE, "%s [0x%08x]\n", __func__, IntMask.word);
connectivity/wlan/core/gen4m/chips/mt7668/mt7668.c:	DBGLOG(HAL, TRACE, "%s\n", __func__);
connectivity/wlan/core/gen4m/chips/mt7668/mt7668.c:	DBGLOG(INIT, INFO, "PMIC SPI clock switch = %s\n",
connectivity/wlan/core/gen4m/chips/mt6632/mt6632.c:	DBGLOG(HAL, TRACE, "%s [0x%08x]\n", __func__, IntMask.word);
connectivity/wlan/core/gen4m/chips/mt6632/mt6632.c:	DBGLOG(HAL, TRACE, "%s\n", __func__);
connectivity/wlan/core/gen4m/chips/mt6632/mt6632.c:	DBGLOG(INIT, INFO, "PMIC SPI clock switch = %s\n",
connectivity/wlan/core/gen4m/chips/connac/connac.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(REQ, INFO, "ATE_AGENT iwpriv SetATE\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(REQ, INFO, "ATE_AGENT iwpriv SetATE - ATESTART\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(REQ, INFO, "ATE_AGENT iwpriv SetATE - ICAPSTART\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(REQ, INFO, "ATE_AGENT iwpriv SetATE - ATESTOP\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(REQ, INFO, "ATE_AGENT iwpriv SetATE - TXFRAME\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(REQ, INFO, "ATE_AGENT iwpriv SetATE - TXSTOP\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(REQ, INFO, "ATE_AGENT iwpriv SetATE - RXFRAME\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(REQ, INFO, "ATE_AGENT iwpriv SetATE - RXSTOP\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "ATE_AGENT iwpriv SetDa\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "ATE_AGENT iwpriv SetSa\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(REQ, INFO, "ATE_AGENT iwpriv SetChannel\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(REQ, INFO, "ATE_AGENT iwpriv SetTxPower0\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(REQ, INFO, "ATE_AGENT iwpriv SetTxGi\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(REQ, INFO, "ATE_AGENT iwpriv SetSystemBW\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(REQ, INFO, "ATE_AGENT iwpriv SetTxMode\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(REQ, INFO, "ATE_AGENT iwpriv SetTxLength\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(REQ, INFO, "ATE_AGENT iwpriv SetTxCount\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(REQ, INFO, "ATE_AGENT iwpriv SetTxMcs\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(REQ, INFO, "ATE_AGENT iwpriv SetIpg\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(REQ, INFO, "ATE_AGENT iwpriv SetAntSwp\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_TxBfProfileTag_InValid\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_TxBfProfileTag_PfmuIdx\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_TxBfProfileTag_BfType\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_TxBfProfileTag_DBW\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_TxBfProfileTag_SuMu\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_TxBfProfileTag_Mem\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_TxBfProfileTag_Matrix\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_TxBfProfileTag_SNR\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_TxBfProfileTag_SmartAnt\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_TxBfProfileTag_SeIdx\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_TxBfProfileTag_RmsdThrd\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_TxBfProfileTag_McsThrd\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_TxBfProfileTag_TimeOut\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_TxBfProfileTag_DesiredBW\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_TxBfProfileTag_DesiredNc\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_TxBfProfileTag_DesiredNr\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_TxBfProfileTagWrite\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_TxBfProfileTagRead\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_TxBfProfileDataRead\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "TxBfProfileDataWrite\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_TxBfProfilePnRead\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "TxBfProfilePnWrite\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_Trigger_Sounding_Proc\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_Stop_Sounding_Proc\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "TxBfTxApply\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "TxBfManualAssoc\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "TxBfPfmuMemAlloc\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "TxBfPfmuMemRelease\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR, "TxBfPfmuMemRelease ucWlanId = %d",
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "DevInfoUpdate\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "BssInfoUpdate\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_StaRecCmmUpdate\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_StaRecBfUpdate\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		 *DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_MUGetInitMCS\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR, "Test\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_MUCalInitMCS\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_MUCalLQ\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_MUGetLQ\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	 * DBGLOG(RFTEST, ERROR, "Set_MUGetLQ prInBuf = %s, u4Type = %x",
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_MUSetSNROffset\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_MUSetZeroNss\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_MUSetSpeedUpLQ\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_MUSetMUTable\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	/* DBGLOG(RFTEST, ERROR, "Set_MUSetMUTable prInBuf = %s, */
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_MUSetGroup\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_MUGetQD\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_MUSetEnable\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_MUSetGID_UP\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_MUTriggerTx\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_TxBfProfileSwTagWrite\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:			DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(REQ, INFO, "ATE_AGENT iwpriv WriteEfuse, buf: %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(REQ, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(REQ, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(REQ, ERROR, "Cac time < 0, Invalid data\n");
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(REQ, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(REQ, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR, "ATE_AGENT iwpriv this_char = %s\n",
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, INFO, "ATE_AGENT iwpriv this_char = %s\n",
connectivity/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(REQ, INFO, "ATE_AGENT iwpriv cmd = %s, value = %s\n",
connectivity/wlan/core/gen4m/os/linux/gl_bow.c:	DBGLOG(BOW, INFO, "Register for character device to communicate with 802.11 PAL.\n");
connectivity/wlan/core/gen4m/os/linux/gl_bow.c:	DBGLOG(BOW, INFO, "Unregister character device for communicating with 802.11 PAL.\n");
connectivity/wlan/core/gen4m/os/linux/gl_bow.c:	DBGLOG(BOW, INFO, "BoW EVENT read.\n");
connectivity/wlan/core/gen4m/os/linux/gl_bow.c:	DBGLOG(BOW, EVENT, "AMP driver CMD buffer size : %d.\n", size);
connectivity/wlan/core/gen4m/os/linux/gl_bow.c:		DBGLOG(BOW, EVENT, "AMP write content : 0x%x.\n", aucBuffer[i]);
connectivity/wlan/core/gen4m/os/linux/gl_bow.c:	DBGLOG(BOW, EVENT, "BoW CMD write.\n");
connectivity/wlan/core/gen4m/os/linux/gl_bow.c:	DBGLOG(BOW, EVENT, "AMP write content payload length : %d.\n", prCmd->rHeader.u2PayloadLength);
connectivity/wlan/core/gen4m/os/linux/gl_bow.c:	DBGLOG(BOW, EVENT, "AMP write content header length : %d.\n", sizeof(struct BT_OVER_WIFI_COMMAND_HEADER));
connectivity/wlan/core/gen4m/os/linux/gl_bow.c:		DBGLOG(BOW, EVENT, "Wrong CMD total length.\n");
connectivity/wlan/core/gen4m/os/linux/gl_bow.c:/* DBGLOG(BOW, EVENT, ("bow_ampc_pol, POLLOUT | POLLWRNORM, %x\n", retval)); */
connectivity/wlan/core/gen4m/os/linux/gl_bow.c:/* DBGLOG(BOW, EVENT, ("bow_ampc_pol, POLLIN | POLLRDNORM, %x\n", retval)); */
connectivity/wlan/core/gen4m/os/linux/gl_bow.c:	DBGLOG(BOW, INFO, "in %s\n", __func__);
connectivity/wlan/core/gen4m/os/linux/gl_bow.c:	DBGLOG(BOW, INFO, "in %s\n", __func__);
connectivity/wlan/core/gen4m/os/linux/gl_bow.c:		DBGLOG(BOW, EVENT, "[bow] no space for event: %d/%d\n", u4EventSize, u4AvailSize);
connectivity/wlan/core/gen4m/os/linux/gl_bow.c:	DBGLOG(BOW, EVENT, "kalGetBowState.\n");
connectivity/wlan/core/gen4m/os/linux/gl_bow.c:			DBGLOG(BOW, EVENT,
connectivity/wlan/core/gen4m/os/linux/gl_bow.c:			DBGLOG(BOW, EVENT,
connectivity/wlan/core/gen4m/os/linux/gl_bow.c:	DBGLOG(BOW, EVENT, "kalSetBowState, aucPeerAddress, %x:%x:%x:%x:%x:%x.\n",
connectivity/wlan/core/gen4m/os/linux/gl_bow.c:			DBGLOG(BOW, EVENT,
connectivity/wlan/core/gen4m/os/linux/gl_bow.c:			DBGLOG(BOW, EVENT,
connectivity/wlan/core/gen4m/os/linux/gl_bow.c:	DBGLOG(BOW, EVENT, "kalGetBowAvailablePhysicalLinkCount, ucLinkCount, %c.\n", ucLinkCount);
connectivity/wlan/core/gen4m/os/linux/gl_bow.c:		DBGLOG(INIT, WARN, "Invalid Ether packet length: %lu\n", u4PacketLen);
connectivity/wlan/core/gen4m/os/linux/gl_bow.c:		DBGLOG(BOW, TRACE, "GLUE_FLAG_HALT skip tx\n");
connectivity/wlan/core/gen4m/os/linux/gl_bow.c:		DBGLOG(BOW, INFO, "Invalid BOW frame, skip Tx\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO, "mtk_vif_destructor\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, TRACE, "%s: u4Idx=%d\n", __func__, u4Idx);
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, ERROR, "can't alloc prNewNetDevice\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, ERROR, "can't alloc prWdev\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, ERROR, "can't alloc prSwitchModeMsg\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, ERROR, "can't alloc prMsgActiveBss\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, INFO, "type: %d, name = %s, netdev: 0x%p\n",
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, TRACE, "mtk_p2p_cfg80211_add_iface 456\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(INIT, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, TRACE, "register_netdev OK\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, TRACE, "NL80211_IFTYPE_P2P_CLIENT.\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, TRACE, "NL80211_IFTYPE_STATION.\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, TRACE, "NL80211_IFTYPE_AP.\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, TRACE, "NL80211_IFTYPE_P2P_GO not AP.\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, TRACE, "Other type :%d .\n", type);
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(INIT, WARN, "unable to alloc msg\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO, "mtk_p2p_cfg80211_del_iface\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(INIT, WARN, "unable to alloc msg\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(RSN, TRACE, "mtk_p2p_cfg80211_add_key\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(RSN, WARN, "key_len [%d] is invalid!\n",
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(RSN, INFO, "not support this func\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(RSN, TRACE, "mtk_p2p_cfg80211_del_key\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(RSN, TRACE, "mtk_p2p_cfg80211_set_default_key\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(RSN, INFO, "mtk_p2p_cfg80211_set_mgmt_key, kid:%d\n", key_index);
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, TRACE, "mtk_p2p_cfg80211_get_station\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, WARN, "bss is not active\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, WARN, "not yet connected\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, TRACE, "mtk_p2p_cfg80211_scan.\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, TRACE, "Device Port Scan.\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, TRACE, "Generating scan request message.\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:				DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, TRACE, "Finish channel list.\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, TRACE, "Finish SSID list:%d.\n", request->n_ssids);
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, TRACE, "Finish IE Buffer.\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO, "mtk_p2p_cfg80211_abort_scan\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(REQ, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, TRACE, "mtk_p2p_cfg80211_set_wiphy_params\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO, "not support now\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO, "not support now\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO, "%s: not support now\n", __func__);
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, TRACE, "%s: not support now\n", __func__);
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, TRACE, "mtk_p2p_cfg80211_set_power_mgmt ps=%d.\n", enabled);
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(REQ, WARN, "set_power_mgmt error:%x\n", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, INFO, "inactivity_timeout: %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, INFO, "pri: %d, s1: %d, s2: %d, bw: %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, INFO, "!!! no CH def!!!\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, TRACE, "mtk_p2p_cfg80211_start_radar_detection.\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, TRACE, "mtk_p2p_cfg80211_channel_switch.\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, ERROR, "get role index fail.\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:				DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, INFO, "ucRoleIdx: %d, ucBssIdx: %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, TRACE, "mtk_p2p_cfg80211_change_beacon.\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, INFO, "mtk_p2p_cfg80211_stop_ap.\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:				DBGLOG(P2P, WARN, "timeout\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:				DBGLOG(P2P, INFO, "complete\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, TRACE, "mtk_p2p_cfg80211_deauth.\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, TRACE, "mtk_p2p_cfg80211_disassoc.\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, TRACE, "mtk_p2p_cfg80211_remain_on_channel\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, ERROR, "Allocate TX req msg fails.\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, ERROR, "Allocate TX packet fails.\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:#define TEMP_LOG_TEMPLATE "netdev: %p, bssIdx: %d, band: %d, chan: %d, " \
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, INFO, TEMP_LOG_TEMPLATE,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:#undef TEMP_LOG_TEMPLATE
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, INFO, "bssIdx: %d, cookie: 0x%llx\n",
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO, "%s\n", __func__);
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, TRACE, "CTS protection no change\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, TRACE, "CTS protection disable.\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, TRACE, "CTS protection enable\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, TRACE, "CTS protection unknown\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, TRACE, "Short prreamble no change\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, TRACE, "Short prreamble disable.\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, TRACE, "Short prreamble enable\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, TRACE, "Short prreamble unknown\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:				DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:				DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:				DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, ERROR, "wiphy=%p, ndev=%p.\n", wiphy, ndev);
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, TRACE, "NL80211_IFTYPE_P2P_CLIENT.\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:				DBGLOG(P2P, TRACE, "NL80211_IFTYPE_STATION.\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, TRACE, "NL80211_IFTYPE_AP.\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:				DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, TRACE, "Other type :%d .\n", type);
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, INFO, "mtk_p2p_cfg80211_set_channel.\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, TRACE, "mtk_p2p_cfg80211_set_bitrate_mask\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, TRACE, "netdev: 0x%p, frame_type: 0x%x, reg: %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:				DBGLOG(P2P, WARN, "wireless dev match fail!\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:				DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:				DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:				DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:				DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:				DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, TRACE, "It is in interrupt level\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO, "mtk_p2p_cfg80211_testmode_cmd\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:				DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, INFO, "NFC: Polling\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, TRACE, "mtk_p2p_cfg80211_testmode_cmd\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, ERROR, "data is NULL\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:				DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, INFO, "NFC: Polling\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, ERROR, "data is NULL or len is 0\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO, "NL80211_ATTR_TESTDATA, idx=%d value=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, WARN, "len [%d] is invalid!\n",
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:				DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:				DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, ERROR, "data is NULL\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO, "NL80211_ATTR_TESTDATA, idx=%u value=%u\n",
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(REQ, WARN, "set_noa error:%x\n", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:				DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, INFO, "SET OPPS[%d]: %d\n", ucBssIdx, value);
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:				DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO, "mtk_p2p_cfg80211_testmode_wfd_update_cmd\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO, "WFD Enable:%x\n", prParams->WfdEnable);
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO, "WFD Device Info:%x\n", prParams->WfdDevInfo);
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO, "WFD Control Port:%x\n", prParams->WfdControlPort);
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO, "WFD Extend Capability:%x\n", prParams->WfdExtendCap);
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO, "WFD Video Port:%x\n", prParams->WfdVideoPort);
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO, "WFD Audio Port:%x\n", prParams->WfdAudioPort);
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO, "WFD Flag:%x\n", prParams->WfdFlag);
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO, "WFD Policy:%x\n", prParams->WfdPolicy);
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO, "WFD State:%x\n", prParams->WfdState);
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO, "WFD Advanced Flag:%x\n", prParams->WfdAdvanceFlag);
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO, "WFD Sigma mode:%x\n", prParams->WfdSigmaMode);
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, TRACE, "--> %s()\n", __func__);
connectivity/wlan/core/gen4m/os/linux/gl_p2p_init.c:		DBGLOG(INIT, INFO, "%s: P2P is not enabled, SKIP!\n", __func__);
connectivity/wlan/core/gen4m/os/linux/gl_p2p_init.c:		DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_init.c:		DBGLOG(P2P, INFO, "p2p is already registered\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_init.c:		DBGLOG(P2P, ERROR, "Launch failed\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_init.c:	DBGLOG(P2P, TRACE, "Launch success, fgIsP2PRegistered TRUE\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_init.c:		DBGLOG(INIT, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_init.c:		DBGLOG(INIT, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_init.c:		DBGLOG(P2P, INFO, "p2p is not registered\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_init.c:	DBGLOG(P2P, INFO, "fgIsP2PRegistered FALSE\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_init.c:		DBGLOG(INIT, INFO, "Unregister gprP2pRoleWdev[%d]\n", idx);
connectivity/wlan/core/gen4m/os/linux/platform.c:		/* DBGLOG(REQ, INFO, ("netdev_event: device is empty.\n")); */
connectivity/wlan/core/gen4m/os/linux/platform.c:		/* DBGLOG(REQ, INFO, ("netdev_event: xxx\n")); */
connectivity/wlan/core/gen4m/os/linux/platform.c:		DBGLOG(REQ, INFO, "netdev_event: prGlueInfo is empty.\n");
connectivity/wlan/core/gen4m/os/linux/platform.c:		/* DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/platform.c:		DBGLOG(REQ, INFO, "net6dev_event: device is empty.\n");
connectivity/wlan/core/gen4m/os/linux/platform.c:		DBGLOG(REQ, INFO, "net6dev_event: xxx\n");
connectivity/wlan/core/gen4m/os/linux/platform.c:		DBGLOG(REQ, INFO, "netdev_event: prGlueInfo is empty.\n");
connectivity/wlan/core/gen4m/os/linux/platform.c:		DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/platform.c:		DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/platform.c:		DBGLOG(INIT, INFO, "[nvram_read] : failed to open!!\n");
connectivity/wlan/core/gen4m/os/linux/platform.c:			DBGLOG(INIT, INFO, "[nvram_read] : f_op is NULL!!\n");
connectivity/wlan/core/gen4m/os/linux/platform.c:					DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/platform.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/platform.c:		DBGLOG(INIT, INFO, "[nvram_write] : failed to open!!\n");
connectivity/wlan/core/gen4m/os/linux/platform.c:			DBGLOG(INIT, INFO, "[nvram_write] : f_op is NULL!!\n");
connectivity/wlan/core/gen4m/os/linux/platform.c:					DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/platform.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:		DBGLOG(INIT, INFO, "%s(): Set UNSUPPORTED Mode = %d.\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:		DBGLOG(INIT, INFO, "%s(): Get UNKNOWN Mode.\n", __func__);
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:			DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:		DBGLOG(INIT, INFO, "[wifi] no memory for scan list:%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:			DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:			DBGLOG(INIT, INFO, "[wifi] larger buf:%d result:%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:		DBGLOG(INIT, INFO, "[wifi] strange scan result count:%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:			/* ToDo:: DBGLOG */
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:			DBGLOG(INIT, INFO, "######set disassoc failed\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:			DBGLOG(INIT, INFO, "######set assoc ok\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:		DBGLOG(INIT, INFO, "set to acpi d3(0)\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:		DBGLOG(INIT, INFO, "set to acpi d0\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:			DBGLOG(INIT, INFO, "wlanoidSetAddWep fail 0x%x\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:			DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:			DBGLOG(INIT, INFO, "IW_AUTH_WAPI_ENABLED :%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, "IW_AUTH_WAPI_ENABLED :%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:		DBGLOG(REQ, ERROR, "prIWEncExt is NULL!\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:				DBGLOG(INIT, INFO, "remove key error:%x\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:					DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:					DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:					DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:				DBGLOG(INIT, INFO, "key length %x\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:				DBGLOG(INIT, INFO, "key error\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:				DBGLOG(INIT, INFO, "key index error:0x%x\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:				DBGLOG(REQ, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:			DBGLOG(INIT, INFO, "add key error:%x\n", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:		DBGLOG(REQ, ERROR, "Set country code error: %x\n", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(REQ, INFO, "CMD:0x%x\n", i4Cmd);
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:			DBGLOG(INIT, INFO, "MLME buffer strange:%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:				DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:				DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:			DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:					DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:			DBGLOG(INIT, INFO, "add pmkid error:%x\n", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:			DBGLOG(INIT, INFO, "flush pmkid error:%x\n", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(REQ, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext.c:		DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/plat/mt6768/plat_priv.c:	DBGLOG(SW4, TRACE, "enter kalGetCpuBoostThreshold\n");
connectivity/wlan/core/gen4m/os/linux/plat/mt6779/plat_priv.c:	DBGLOG(SW4, TRACE, "enter kalGetCpuBoostThreshold\n");
connectivity/wlan/core/gen4m/os/linux/plat/mt6779/plat_priv.c:				DBGLOG(SW4, WARN, "set uclamp Rx failed\n");
connectivity/wlan/core/gen4m/os/linux/plat/mt6779/plat_priv.c:				DBGLOG(SW4, WARN, "set uclamp Hif failed\n");
connectivity/wlan/core/gen4m/os/linux/plat/mt6779/plat_priv.c:				DBGLOG(SW4, WARN, "set uclamp Tx failed\n");
connectivity/wlan/core/gen4m/os/linux/include/gl_rst.h:	DBGLOG(INIT, INFO, "DO NOT support chip reset\n")
connectivity/wlan/core/gen4m/os/linux/include/gl_rst.h:	DBGLOG(INIT, INFO, "DO NOT support chip reset\n")
connectivity/wlan/core/gen4m/os/linux/include/gl_kal.h:		DBGLOG(INIT, INFO, "0x%p(%ld) allocated (%s:%s)\n", \
connectivity/wlan/core/gen4m/os/linux/include/gl_wext_priv.h:#define OID_IPC_WIFI_LOG_UI                             0xFFA0CC01
connectivity/wlan/core/gen4m/os/linux/include/gl_wext_priv.h:#define OID_IPC_WIFI_LOG_LEVEL                          0xFFA0CC02
connectivity/wlan/core/gen4m/os/linux/include/gl_vendor.h:	LOGGER_START_LOGGING = ANDROID_NL80211_SUBCMD_DEBUG_RANGE_START,
connectivity/wlan/core/gen4m/os/linux/include/gl_vendor.h:	LOGGER_GET_VER,
connectivity/wlan/core/gen4m/os/linux/include/gl_vendor.h:	LOGGER_DRIVER_MEM_DUMP,
connectivity/wlan/core/gen4m/os/linux/include/gl_vendor.h:enum LOGGER_ATTRIBUTE {
connectivity/wlan/core/gen4m/os/linux/include/gl_vendor.h:	LOGGER_ATTRIBUTE_DRIVER_VER,
connectivity/wlan/core/gen4m/os/linux/include/gl_vendor.h:	LOGGER_ATTRIBUTE_FW_VER
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "set infrastructure mode error:%x\n",
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(RSN, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(INIT, INFO, "--> %s()\n", __func__);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(RSN, WARN, "wlan is halt, skip key deletion\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(RSN, TRACE, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(RSN, WARN, "remove key error:%x\n", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(RSN, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, TRACE, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "not yet connected\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "last link speed\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, TRACE, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "not yet connected\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(REQ, WARN, "last link speed\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "not yet connected\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, TRACE, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "not yet connected\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(REQ, WARN, "unable to retrieve rssi\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, TRACE, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, ERROR, "prAdapter->fgIcapMode == TRUE\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, ERROR, "prGlueInfo->prAdapter is NULL");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, ERROR, "prGlueInfo->prScanRequest != NULL\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, ERROR, "alloc scan request fail\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:				DBGLOG(REQ, TRACE, "i=%d, wildcard scan\n", i);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:				DBGLOG(REQ, TRACE, "SCN_SSID_MAX_NUM\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, ERROR, "request->n_ssids:%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:				DBGLOG(REQ, WARN, "Wrong Channel[%d] freq=%u\n",
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:				DBGLOG(REQ, WARN, "UNKNOWN Band %d(chnl=%u)\n",
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:#define TEMP_LOG_TEMPLATE "n_ssid=(%u->%u) n_channel(%u==>%u) " \
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, TEMP_LOG_TEMPLATE,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:#undef TEMP_LOG_TEMPLATE
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "scan error:%x\n", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, TRACE, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	scanlog_dbg(LOG_SCAN_ABORT_REQ_K2D, INFO, "mtk_cfg80211_abort_scan\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, ERROR, "wlanoidAbortScan fail 0x%x\n", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, ERROR, "ndev is NULL\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "Reject this connecting request\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "[wlan%d] mtk_cfg80211_connect %p %zu\n",
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(RSN, INFO, "[wlan] cipher pairwise (%x)\n",
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(REQ, WARN, "invalid cipher pairwise (%d)\n",
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(REQ, WARN, "invalid cipher group (%d)\n",
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, INFO, "n_akm_suites=%x, akm_suites=%x",
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:				DBGLOG(REQ, WARN, "invalid Akm Suite (%d)\n",
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:				DBGLOG(REQ, WARN, "invalid Akm Suite (%d)\n",
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "u4WpaVersion=%d, u4AuthAlg=%d",
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(REQ, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:				DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(RSN, INFO, "Found non-wfa vendor ie (len=%u)\n",
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	/* DBGLOG(REQ, INFO, ("MFP=%d\n", prWpaInfo->u4Mfp)); */
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "set auth mode error:%x\n", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "set encryption mode error:%x\n",
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(REQ, WARN, "Too long key length (%u)\n",
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(INIT, INFO, "wlanoidSetAddWep fail 0x%x\n",
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "set SSID:%x\n", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(REQ, WARN, "set BSSID:%x\n", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(REQ, WARN, "set SSID:%x\n", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(OID, INFO, "SAE-confirm failed with: %d\n", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "disassociate error:%x\n", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "set SSID:%x\n", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "disassociate error:%x\n", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "%d: enabled=%d, timeout=%d, fgTIMPresend=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "set_power_mgmt error:%x\n", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, TRACE, "mtk_cfg80211_set_pmksa " MACSTR " pmk\n",
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(INIT, INFO, "add pmkid error:%x\n", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, TRACE, "mtk_cfg80211_del_pmksa " MACSTR "\n",
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(INIT, INFO, "add pmkid error:%x\n", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(INIT, INFO, "flush pmkid error:%x\n", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(RSN, INFO, "ucBssIndex = %d, size(%d)\n",
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(INIT, INFO, "set GTK rekey data error:%x\n",
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(INIT, TRACE, "mtk_cfg80211_mgmt_frame_register\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:				DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:				DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:				DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:				DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:				DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(INIT, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:#define TEMP_LOG_TEMPLATE "bssIdx: %d, band: %d, chan: %d, offchan: %d, " \
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(P2P, INFO, TEMP_LOG_TEMPLATE,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:#undef TEMP_LOG_TEMPLATE
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(P2P, INFO, "cookie: 0x%llx, ucBssIndex = %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(INIT, INFO, "Cmd Type (%d)\n", prParams->CmdType);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(REQ, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:				DBGLOG(REQ, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(REQ, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(INIT, TRACE, "%s data or len is invalid\n", __func__);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(INIT, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(QM, ERROR, "prParams is NULL, data=%p, len=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(QM, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(QM, ERROR, "allocate skb failed:%x\n", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(QM, TRACE, "Get [" MACSTR "] STA statistics\n",
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(QM, TRACE, "%s allocate prBugReport failed\n",
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(QM, TRACE, "%s allocate skb failed\n", __func__);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(INIT, INFO, "query statistics error:%x\n", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(INIT, INFO, "query statistics error:%x\n", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(INIT, INFO, "--> %s()\n", __func__);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, ERROR, "mtk_cfg80211_testmode_cmd null data\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(INIT, TRACE, "params index=%x\n", prParams->index);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, TRACE, "prParams->index=%d, status=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, TRACE, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		scanlog_dbg(LOG_SCHED_SCAN_REQ_START_K2D, INFO, "ssid(%d)match(%d)ch(%u)f(%u)rssi(%d)\n",
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		scanlog_dbg(LOG_SCHED_SCAN_REQ_START_K2D, INFO, "--> %s()\n",
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, ERROR, "prGlueInfo->prAdapter is NULL");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(SCN, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(SCN, ERROR, "request == NULL\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(SCN, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(SCN, WARN, "request->n_match_sets(%d) > %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(SCN, WARN, "request->n_ssids(%d) > %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(SCN, ERROR, "prSchedScanRequest kalMemAlloc fail\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(SCN, TRACE, "ssids : (%d)[%s]\n",
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:				DBGLOG(SCN, TRACE, "ignore null ssid(%d)\n", i);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(SCN, TRACE, "match : (%d)[%s]\n", i,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:				DBGLOG(SCN, TRACE, "ignore null ssid(%d)\n", i);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(SCN, ERROR, "pucIE kalMemAlloc fail\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(SCN, ERROR, "pucChannels kalMemAlloc fail\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "scheduled scan error:%x\n", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, TRACE, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	scanlog_dbg(LOG_SCHED_SCAN_REQ_STOP_K2D, INFO, "--> %s()\n", __func__);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "scheduled scan error:%x\n", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:				/* DBGLOG(REQ, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "set BSSID:%x\n", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	/* DBGLOG(QM, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(QM, TRACE, "%s allocate skb failed:%x\n", __func__,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(QM, WARN, "CONFIG_NL80211_TESTMODE not enabled\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "rStatus: %x", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "ucBssIndex = %d, oper=%d",
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "rStatus: %x", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "ucBssIndex = %d, oper=%d",
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(TDLS, INFO, "NL80211_TDLS_DISABLE_LINK, kalMsleep(20)");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "not support tdls\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(REQ, INFO, "cmd=%s, ssid len %u, ssid=%s\n", cmd,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, INFO, "cmd=%s, osharemode=%u\n", cmd,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "not support OSHAREMOD\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(RLM, INFO, "regd_state_machine: SET_BY_USER\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(RLM, INFO, "regd_state_machine: SET_BY_DRIVER\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(RLM, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(RLM, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(RLM, WARN, "Regulatory rule is updated by IE.\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(RLM, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(RLM, INFO, "%s()\n", __func__);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(RLM, WARN, "wlan is halt, skip reg callback\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(RLM, ERROR, "pWiphy = NULL!\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(RLM, ERROR, "Use base wiphy to update (p=%p)\n",
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:				DBGLOG(RLM, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:				DBGLOG(RLM, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(RLM, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(RLM, INFO, "Set by user to NEW country code\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(RLM, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(RLM, ERROR, "---> WARNING.\n ");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:				DBGLOG(RLM, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(RLM, INFO, "g_mtk_regd_control.alpha2 = 0x%x\n",
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(RLM, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(RLM, ERROR, "prGlueInfo is NULL!\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(RLM, ERROR, "prAdapter is NULL!\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "mtk_cfg80211_suspend\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "mtk_cfg80211_resume\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(SCN, INFO, "pending %d sched scan results\n", i);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "ndev is NULL\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, LOUD,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(INIT, ERROR, "There is no free gprP2pRoleWdev.\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(INIT, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "STA doesn't support this function\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "STA doesn't support this function\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "STA doesn't support this function\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, WARN, "P2P is not supported\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, WARN, "P2P is not supported\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(P2P, INFO, "ndev=%p, new type=%d\n", ndev, type);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "ndev is NULL\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, INFO, "ndev type is not changed (%d)\n", type);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(INIT, ERROR, "prP2pInfo is NULL\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(INIT, ERROR, "resource invalid, u4DeviceNum=%d\n"
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(INIT, ERROR, "mtk_init_ap_role FAILED\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(INIT, ERROR, "mtk_uninit_ap_role FAILED\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, WARN, "STA don't support this function\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "P2P/AP don't support this function\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "P2P/AP don't support this function\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "P2P/AP don't support this function\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "P2P/AP don't support this function\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "P2P/AP don't support this function\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "P2P/AP don't support this function\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "P2P/AP don't support this function\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "P2P/AP don't support this function\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "P2P/AP don't support this function\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "P2P/AP don't support this function\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "STA doesn't support this function\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "STA doesn't support this function\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "STA doesn't support this function\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "STA doesn't support this function\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "STA doesn't support this function\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "STA doesn't support this function\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "STA doesn't support this function\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "STA doesn't support this function\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG_LIMITED(REQ, TRACE, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG_LIMITED(REQ, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(OID, INFO, "FT: update Ft IE failed\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(OID, INFO, "FT: 802.11R is not enabled\n");
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:				DBGLOG(AIS, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_cfg80211.c:				DBGLOG(AIS, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, TRACE, "data_len=%d, iftype=%d\n", data_len, wdev->iftype);
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, TRACE, "Get channel list for band: %d\n", band);
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:			DBGLOG(REQ, TRACE, "skip channels[%d]=%d, country=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:			DBGLOG(REQ, TRACE, "channels[%d] = %d\n", j,
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, INFO, "Get channel list for band: %d, num_channels=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "Allocate skb failed\n");
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, INFO, "Set country code: %c%c\n", country[0],
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "Set country code error: %x\n", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "Allocate skb failed\n");
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, INFO, "Get the number of blacklist=%d data_len=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:				DBGLOG(REQ, ERROR, "No found blacklist BSS="
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:				DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:				DBGLOG(REQ, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, INFO, "FWK set FWRoamingEnable = %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, TRACE, "vendor command\r\n");
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "%s allocate skb failed:%x\n",
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "%s kalMemAlloc pRadioStat failed\n",
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, TRACE, "%s allocate skb failed:%x\n", __func__,
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, INFO, "%s()\n", __func__);
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, INFO, "Vendor Set Band value=%d\r\n", setBand);
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, TRACE, "vendor command: data_len=%d\r\n",
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "%s nla_parse_nested failed\n",
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, TRACE, "vendor command: data_len=%d\r\n",
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "%s nla_parse_nested failed\n",
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, TRACE, "prPkt->pIpPkt=0x%02x%02x%02x%02x\n",
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, TRACE, "%02x%02x%02x%02x, %02x%02x%02x%02x\n",
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, TRACE, "%02x%02x%02x%02x\n",
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, TRACE, "dstMAC=%02x:%02x:%02x:%02x:%02x:%02x\n",
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, TRACE, "vendor command: data_len=%d\r\n",
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, INFO, "enable=%d, index=%d\r\n",
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:	if (attrlist->nla_type == LOGGER_ATTRIBUTE_DRIVER_VER) {
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, TRACE, "Get driver version len: %d\n", u2Len);
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:	} else if (attrlist->nla_type == LOGGER_ATTRIBUTE_FW_VER) {
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:			DBGLOG(REQ, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, TRACE, "Get version(%d)=[%s]\n", u2CopySize, aucVersionBuf);
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "Allocate skb failed\n");
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, TRACE, "vendor command rssi=%d\r\n", rssi);
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "%s allocate skb failed\n", __func__);
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "Allocate skb failed\n");
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "nla_put_nohdr failed\n");
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, TRACE, "supported feature set=0x%llx\n", u8FeatureSet);
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "invalid scenario index: %u\n", u4Scenario);
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "Allocate skb failed\n");
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "nla_put_nohdr failed\n");
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, INFO, "rStatus=0x%x\n", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "Invalid ATTR.\n");
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, INFO, "type: %d\n", type);
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "Only support p2p gc/go type.\n");
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "get preferred freq list failed.\n");
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(P2P, INFO, "num. of preferred freq list = %d\n", num_freq_list);
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(P2P, INFO, "dump preferred freq list[%d] = %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "Allocate skb failed.\n");
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "put iface into skb failed.\n");
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "put freq list into skb failed.\n");
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "Invalid net device private\n");
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "wlanoidGetLinkQualityInfo error\n");
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "allocate skb failed\n");
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "nla_put_nohdr failed: len=%u, ptr=%p\n",
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "input data null.\n");
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "get glue structure fail.\n");
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "get role index fail.\n");
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "parse acs attr fail.\n");
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "attr hw_mode failed.\n");
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:				DBGLOG(REQ, ERROR, "allocate ch_list fail.\n");
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:				DBGLOG(REQ, ERROR, "allocate ch_list fail.\n");
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "channel list count can NOT be 0\n");
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "allocate msg acs req. fail.\n");
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "unsupport width: %d.\n", ch_width);
connectivity/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, INFO, "Dump feature flags[%d]=0x%x.\n", i,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, INFO, "QA_AGENT copy_to_user() fail in %s\n",
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT ToDoFunction\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_OpenAdapter\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_CloseAdapter\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_StartTx\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_StartTx TxCount = %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_StartTx TxLength = %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_StartTxExt\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_StartTxContiTx\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_StartTxCarrier\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_StartRx\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_StopTx\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_StopContiTx\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_StopTxCarrier\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_StopRx\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_SetTxPath\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_SetRxPath\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_SetRxPath Value : %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_SetTxIPG u4Aifs : %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_SetTxPower0\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HAQ_SetTxPower1\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_SetOnOff\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_AntennaSel\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_SetChannel\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_SetPreamble Mode = %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_SetRate\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_SetNss\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_SetSystemBW\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_SetSystemBW BW = %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_SetAutoResponder\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_SetTssiOnOff\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_LowPower\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, ERROR, "prGlueInfo or prAdapter is NULL\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, ERROR, "prChipInfo is NULL\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "HQA_GetAntSwapCapability [%d]\n",
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "Band = %d, Ant = %d\n", u4Band, u4Ant);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_ResetTxRxCounter\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_GetStatistics\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_GetRxOKData\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_GetRxOKOther\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_GetRxAllPktCount\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_GetTxTransmitted\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_GetHwCounter\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_CalibrationOperation\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "u4Item : 0x%08x, u4Band_idx : %u\n",
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "rRfATInfo.u4FuncData : 0x%08x\n",
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "u4band_idx : %d, u4FAGC_Path : %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "Offset = 0x%08x\n", u4Offset);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, INFO, "Address = 0x%08x, Result = 0x%08x\n",
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, " Offset = 0x%08x, Value = 0x%08x\n",
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "Offset = 0x%08x, Len = 0x%08x\n",
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, " WfSel  = %u, Offset = 0x%08x, Length = %u\n",
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(INIT, INFO, "QA_AGENT HQA_ReadEEPROM\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(INIT, INFO, "u4Value = %x\n", u4Value);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(INIT, INFO, "QA_AGENT HQA_ReadEEPROM\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(INIT, INFO, "QA_AGENT HQA_WriteEEPROM\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(INIT, ERROR, "u4Index [%d] overrun\n", u4Index);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(INIT, INFO, "Offset : %u, Len : %u\n", Offset, Len);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(INIT, INFO, "Address : %d\n", rAccessEfuseInfo.u4Address);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(INIT, INFO, "QA_AGENT HQA_ReadBulkEEPROM Efuse Mode\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:			DBGLOG(INIT, INFO, "kal fail\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:			DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:			DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:			DBGLOG(INIT, INFO, "u4Loop=%d  u4Value=%x\n",
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(INIT, INFO, "Offset : %x, Len : %u\n", Offset, Len);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:			DBGLOG(INIT, INFO, "u4Loop=%d  u4Value=%x\n",
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:			DBGLOG(INIT, INFO, "Direct EEPROM buffer, offset=%x\n",
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:			DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:				DBGLOG(INIT, INFO, "Wr,u4Index=%x,Buffer=%x\n",
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:				DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:				DBGLOG(INIT, INFO, "Buffer[0] >> 8 & 0xff=%x\n"
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:					DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:				DBGLOG(INIT, INFO, " Loop=%d  aucData=%x\n",
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:			DBGLOG(INIT, INFO, "Going for e-Fuse\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_CheckEfuseMode\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(INIT, INFO, "QA_AGENT HQA_GetFreeEfuseBlock\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_GetEfuseBlockNr\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_WriteEFuseFromBuffer\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "u4Channel : %u, u4Band : %u, u4Ch_Band : %u\n",
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "Type : %u, Enable : %u, Band : %u\n",
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, WARN, "Type [%d] not support\n", Type);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, ERROR, "GlueInfo or prAdpater is NULL\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, ERROR, "Connac chip doesn't support\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "BandIdx = 0x%08x\n", i4BandIdx);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "Control = 0x%08x\n", i4Control);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "AntIndex = 0x%08x\n", i4AntIndex);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "ToneType = 0x%08x\n", i4ToneType);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "ToneFreq = 0x%08x\n", i4ToneFreq);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "DcOffsetI = 0x%08x\n", i4DcOffsetI);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "DcOffsetQ = 0x%08x\n", i4DcOffsetQ);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "Band = 0x%08x\n", i4Band);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "RF_Power = 0x%08x\n", i4RF_Power);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "Digi_Power = 0x%08x\n", i4Digi_Power);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:			DBGLOG(RFTEST, INFO, "QA_AGENT HT/VHT rate : %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_GetTXInfo\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_GetCfgOnOff\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_ReadTempReferenceValue\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_SetSideBandOption\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_GetFWInfo\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_StartContinousTx\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_SetSTBC\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_SetDPD\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_GetRxStatisticsAll\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_StartContiTxTone\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_StopContiTxTone\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_CalibrationTestMode\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_eFusePhysicalWrite\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_eFusePhysicalRead\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_eFuseLogicalRead\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_eFuseLogicalWrite\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_GetRxSNR\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:			DBGLOG(RFTEST, INFO, "u2Addr = %x\n",
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:			DBGLOG(RFTEST, INFO, "ucValue = %x\n",
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_FFT\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_SetTxTonePower\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:			DBGLOG(RFTEST, INFO, "QA_AGENT HT/VHT rate : %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, INFO, "mps_setting Case %d (Power : %d)\n",
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_MPSStart\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_MPSStop\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_MPSSetNss u4Len : %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_SetAIFS SlotTime = %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_SetAIFS SifsTime = %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_CheckEfuseModeType\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_CheckEfuseNativeModeType\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_RDDStartExt\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "[RDD DUMP START]\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_RDDStopExt\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "[RDD DUMP END]\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "Band : %d, OwnMacIdx : %d\n", Band, OwnMacIdx);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "addr1:%02x:%02x:%02x:%02x:%02x:%02x\n",
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "prReCalInfo->u4Count = [%d]\n",
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:			DBGLOG(RFTEST, INFO, "CalAddr[%d] = [0x%08x]\n",
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_TxBfProfileTagInValid\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_TxBfProfileTagBfType\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_TxBfProfileTagBw\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_TxBfProfileTagSuMu\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_TxBfProfileTagMatrix\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_TxBfProfileTagSnr\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_TxBfProfileTagSmtAnt\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_TxBfProfileTagSeIdx\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_TxBfProfileTagWrite\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_TxBfProfileTagRead\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_StaRecCmmUpdate\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_StaRecBfUpdate\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_BFProfileDataRead\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_BFProfileDataWrite\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_BFSounding\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_TXBFSoundingStop\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_TxBfTxApply\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_ManualAssoc\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_MUGetInitMCS\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_MUCalInitMCS\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_MUCalLQ\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_MUGetLQ\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_MUSetSNROffset\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_MUSetZeroNss\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_MUSetSpeedUpLQ\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_MUSetMUTable\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_MUSetGroup\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_MUGetQD\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_MUSetEnable\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_MUSetGID_UP\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_MUTriggerTx\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "u4Control = %d\n", u4Control);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:			DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, WARN, "Platform doesn't support WMT, no EMI address\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_CapWiFiSpectrum Wait!!!!!!!!!!!!\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "prICapInfo->au4ICapDumpIndex[%d][%c] = %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "u4MaxTxCount = %d\n", u4MaxTxCount);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, INFO, "Wrong Setting for POR Cal\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT hqa_start_tx_ext pwr : %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT hqa_start_tx_ext ibf : %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT hqa_start_tx_ext ebf : %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT hqa_start_tx_ext gi : %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT hqa_start_tx_ext nss : %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, INFO, "QA_AGENT HT/VHT rate : %d\n", u4Rate);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_iBFInit\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_iBFSetValue\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_iBFGetStatus\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_iBFChanProfUpdate\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_iBFProfileRead\n");
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_IRRSetADC ext_id : %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_IRRSetADC u4BW : %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_IRRSetADC u4Sx : %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_IRRSetADC u4Band : %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_IRRSetTTG ext_id : %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_IRRSetTTG u4Band : %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT hqa_ext_cmds index : %d\n", u4Idx);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, INFO, "cmd idx %d is not supported\n", u4Idx);
connectivity/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, INFO, "QA_AGENT ATEMagicNum Error!!!\n");
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	ATE_LOG_RXV = 1,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	ATE_LOG_RDD,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	ATE_LOG_RE_CAL,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	ATE_LOG_TYPE_NUM,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	ATE_LOG_RXINFO,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	ATE_LOG_TXDUMP,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	ATE_LOG_TEST,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	ATE_LOG_OFF,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	ATE_LOG_ON,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	ATE_LOG_DUMP,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	ATE_LOG_CTRL_NUM,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK SetATE = %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK SetATE = %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK SetATE = %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK SetATE = %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK SetATE = %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK SetATE = %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK SetATE = %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK SetATE = %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK SetChannel=%d, Freq=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK SetPreamble=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK SetSystemBW=%d\n", u4BW);
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK SetTxLength=%d\n", u4TxLength);
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK SetTxCount=%d\n", u4TxCount);
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK SetTxIPG=%d\n", u4TxIPG);
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "SetTxPower0=0x%02x\n", u4TxPower0);
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:		DBGLOG(RFTEST, INFO, "Negative Power =0x%02x\n", u4TxPower0);
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK SetPerPacketBW=%d\n", u4BW);
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK PrimarySetting=%d\n", u4PrimaryCh);
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK SetTxGi=%d\n", u4SetTxGi);
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK u4Tx_path=%d\n", u4Tx_path);
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK rule=%d, len =0x%x\n",
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK u4Stbc=%d\n", u4Stbc);
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK u4Nss=%d\n", u4VhtNss);
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK SetRate=0x%08x\n", u4Rate);
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK SetEncodeMode=%d\n", u4Ldpc);
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK SetiBFEnable=%d\n", u4iBF);
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK SeteBFEnable=%d\n", u4eBF);
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK MT_ATELogOnOff\n");
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	case ATE_LOG_RXV:
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:		       "QA_ATE_HOOK MT_ATELogOnOff : ATE_LOG_RXV\n\n");
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	case ATE_LOG_RDD:
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:		       "QA_ATE_HOOK MT_ATELogOnOff : ATE_LOG_RDD\n\n");
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	case ATE_LOG_RE_CAL:
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:		       "QA_ATE_HOOK MT_ATELogOnOff : ATE_LOG_RE_CAL\n\n");
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	case ATE_LOG_RXINFO:
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:		       "QA_ATE_HOOK MT_ATELogOnOff : ATE_LOG_RXINFO\n\n");
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	case ATE_LOG_TXDUMP:
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:		       "QA_ATE_HOOK MT_ATELogOnOff : ATE_LOG_TXDUMP\n\n");
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	case ATE_LOG_TEST:
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:		       "QA_ATE_HOOK MT_ATELogOnOff : ATE_LOG_TEST\n\n");
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	if ((u4On_off == ATE_LOG_DUMP) && (u4Type == ATE_LOG_RXV)) {
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:			DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:			DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:		TOOL_PRINTLOG(RFTEST, ERROR, "[LOG DUMP START]\n");
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:					TOOL_PRINTLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:				TOOL_PRINTLOG(RFTEST, ERROR, "[RXVD%d]%08x\n",
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:					TOOL_PRINTLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:		TOOL_PRINTLOG(RFTEST, ERROR, "[LOG DUMP END]\n");
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:		DBGLOG(RFTEST, INFO, "Get RX Vector Total count = %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:		DBGLOG(RFTEST, ERROR, "Get RX Vector Total Size Error!!\n");
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:			DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK MT_ATEResetTXRXCounter\n");
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK MT_ATESetDBDCBandIndex\n");
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK MT_ATESetBand\n");
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK MT_ATESetTxToneType\n");
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK MT_ATESetTxToneBW\n");
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK MT_ATESetTxToneDCOffset\n");
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK MT_ATESetDBDCTxTonePower\n");
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK MT_ATEDBDCTxTone\n");
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK MT_ATESetMacHeader\n");
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK MT_ATE_IRRSetADC\n");
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK MT_ATE_IRRSetRxGain\n");
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK MT_ATE_IRRSetTTG\n");
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK MT_ATE_IRRSetTrunOnTTG\n");
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK MT_ATE_TMRSetting\n");
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK MT_ATEMPSSetSeqData\n");
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK MT_ATEMPSSetPayloadLength\n");
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK MT_ATEMPSSetPacketCount\n");
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK MT_ATEMPSSetPowerGain\n");
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK MT_ATEMPSSetNss\n");
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK MT_ATEMPSSetPerpacketBW\n");
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK SetATE = %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK SetATE = %s\n", prInBuf);
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(INIT, INFO, "QA_AGENT HQA_WriteBulkEEPROM  Read\n");
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:		DBGLOG(INIT, INFO, "u4Index [%d] overrun\n", u4Index);
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:		DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:		DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(INIT, INFO, "Set Tx Target Power= %x dbm\n", ucTxTargetPower);
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:		DBGLOG(RFTEST, ERROR, "prGlueInfo is NULL\n");
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(INIT, INFO, "QA_AGENT Set RDD Report - Band: %d\n", ucDbdcIdx);
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(INIT, INFO, "QA_AGENT Set Radar Detect Mode: %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR, "ucWlanId = 0x%08x\n", ucWlanId);
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR, "ucPfmuIdx = 0x%08x\n", profileIdx);
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR, "TxBfSounding : ucSuMu = 0x%08x\n",
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR, "TxBfSounding : ucNumSta = 0x%08x\n",
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR, "TxBfSounding : ucWLan0 = 0x%08x\n",
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR, "TxBfSounding : ucWLan1 = 0x%08x\n",
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR, "TxBfSounding : ucWLan2 = 0x%08x\n",
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR, "TxBfSounding : ucWLan3 = 0x%08x\n",
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR, "TxBfSoundingStop\n");
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR, "ucWlanId = 0x%08x\n", ucWlanId);
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR, "g_prGlueInfo_proc is null\n");
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:			DBGLOG(INIT, ERROR, "wrong char[%d] 0x%x\n",
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR, "g_prGlueInfo_proc is null\n");
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR, "g_prGlueInfo_proc is null\n");
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR, "g_prGlueInfo_proc is null\n");
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR, "g_prGlueInfo_proc is null\n");
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR, "g_prGlueInfo_proc is null\n");
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, INFO, "failed to read roam params\n");
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR, "g_prGlueInfo_proc is null\n");
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, INFO, "failed to set roam params: %s\n",
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR, "g_prGlueInfo_proc is null\n");
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, INFO, "failed set country code: %s\n",
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, WARN, "copy_to_user error\n");
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR, "g_prGlueInfo_proc is null\n");
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, WARN, "copy_from_user error\n");
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, INFO, "u4CoreNum:%d, u4CoreFreq:%d\n", u4CoreNum,
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:	DBGLOG(INIT, WARN, "parameter format should be ForceEnable:0 or 1\n");
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, INFO, "error to sprintf time\n");
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, INFO, "error to sprintf %s\n", pucFwt);
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:			DBGLOG(INIT, ERROR, "prAisSpecBssInfo is NULL\n");
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:			DBGLOG(INIT, ERROR, "prAisSpecBssInfo is NULL\n");
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:			DBGLOG(INIT, ERROR, "prBtm is NULL\n");
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:			DBGLOG(INIT, ERROR, "prStaRec is NULL\n");
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:			DBGLOG(INIT, ERROR, "prMsg is NULL\n");
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR, "g_prGlueInfo_proc is null\n");
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:			DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:			DBGLOG(INIT, WARN, "copy_to_user error\n");
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, INFO, "exit WR:%lld, RD:%lld\n", i8WrStatusPos,
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:			DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:			DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:	DBGLOG(INIT, TRACE, "Read %u bytes\n", u4CopySize);
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, WARN, "copy_to_user error\n");
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR, "g_prGlueInfo_proc is null\n");
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, WARN, "copy_from_user error\n");
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR, "Unable to create /proc entry %s/n",
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR, "Unable to create /proc entry %s/n",
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:	DBGLOG(INIT, TRACE, "[%s]\n", __func__);
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR, "Unable to create /proc entry mcr\n\r");
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR, "Unable to create /proc entry SetCAM\n\r");
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR, "Unable to create /proc entry country\n\r");
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR, "copy to user failed\n");
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR, "g_prGlueInfo_proc is null\n");
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR, "copy from user failed\n");
connectivity/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR, "Unable to create /proc entry cfg\n\r");
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:	DBGLOG(INIT, INFO, "WCIR_CHIP_ID = 0x%x, chip_id = 0x%x\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			DBGLOG(HAL, ERROR, "Chip No Ack\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			DBGLOG(HAL, ERROR, "CONN_HIF_ON_DBGCR01[0x%x]\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			       LP_OWN_BACK_FAILED_LOG_SKIP_MS);
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			      MSEC_TO_SYSTIME(LP_OWN_BACK_FAILED_LOG_SKIP_MS))
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		       LP_OWN_BACK_FAILED_LOG_SKIP_MS);
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:	DBGLOG(INIT, TRACE, "DRIVER OWN Start\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:	DBGLOG_LIMITED(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		DBGLOG(INIT, STATE, "Skip FW OWN due to pending INT\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		DBGLOG_LIMITED(INIT, INFO, "FW OWN:%u\n", fgResult);
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:	DBGLOG(HAL, TRACE,
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			DBGLOG(HAL, TRACE,
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			DBGLOG(HAL, WARN,
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:	DBGLOG(HAL, INFO, "Msdu Token Init: Tot[%u] Used[%u]\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:	DBGLOG(HAL, INFO, "Msdu Token Uninit: Tot[%u] Used[%u]\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		DBGLOG(HAL, INFO, "No more free MSDU token, Used[%u]\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:	DBGLOG_LIMITED(HAL, TRACE,
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		DBGLOG(HAL, INFO, "MSDU token is full, Used[%u]\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		DBGLOG(HAL, ERROR, "Return unuse token[%u]\n", u4TokenNum);
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		DBGLOG_LIMITED(HAL, TRACE,
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		DBGLOG_LIMITED(HAL, TRACE,
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		DBGLOG(HAL, ERROR, "Get address error!\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			DBGLOG(RX, WARN, "No More RFB for P[%u]\n", u4Port);
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		DBGLOG_LIMITED(RX, LOUD, "ucPacketType = %u, ucSecMode = %u\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		DBGLOG(HAL, ERROR, "TxDescRing[%d] allocation failed\n", u4Num);
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:	DBGLOG(HAL, TRACE, "TxDescRing[%p]: total %lu bytes allocated\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:	DBGLOG(HAL, TRACE, "TxRing[%d]: total %d entry allocated\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		DBGLOG(HAL, ERROR, "\n\n\nRxDescRing allocation failed!!\n\n\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:	DBGLOG(HAL, TRACE, "RxDescRing[%p]: total %lu bytes allocated\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:	DBGLOG(HAL, TRACE, "Rx[%d] Ring: total %d entry allocated\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			DBGLOG(HAL, ERROR, "AllocTxRing[%d] fail\n", u4Num);
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		DBGLOG(HAL, ERROR, "AllocRxRing[0] fail\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		DBGLOG(HAL, ERROR, "AllocRxRing[1] fail\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			DBGLOG(HAL, TRACE,
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:	DBGLOG(HAL, INFO, "==>  DMABusy, GloCfg=0x%x\n", GloCfg.word);
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		DBGLOG(HAL, TRACE, "-->TX_RING_%d[0x%x]: Base=0x%x, Cnt=%d!\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		DBGLOG(HAL, TRACE, "-->RX_RING_%d[0x%x]: Base=0x%x, Cnt=%d\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:	DBGLOG_LIMITED(HAL, TRACE,
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		DBGLOG(HAL, ERROR, "Error TxCpuIdx[%u]\n", prTxRing->TxCpuIdx);
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		DBGLOG(HAL, ERROR, "Error TxCpuIdx[%u]\n", prTxRing->TxCpuIdx);
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:	DBGLOG_LIMITED(HAL, TRACE,
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:	DBGLOG(HAL, LOUD, "Tx Data: Msdu[0x%p], TokFree[%u] TxDone[%u]\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		DBGLOG(HAL, ERROR, "Write MSDU acquire token fail\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		DBGLOG(HAL, WARN,
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			DBGLOG(HAL, ERROR, "Write AMSDU acquire token fail\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:	DBGLOG(HAL, LOUD, "Amsdu num:%d tx byte: %d\n", u4Num, u2Size);
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		DBGLOG(HAL, ERROR, "prAdapter or prGlueInfo is NULL\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:	DBGLOG(HAL, ERROR, "SER timer Timeout\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:	DBGLOG(HAL, INFO, "Set Driver Ser\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:	DBGLOG(HAL, INFO, "Start SER timer\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			DBGLOG(HAL, ERROR, "SER CurStat=%u Event=%x\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			DBGLOG(HAL, INFO, "SER(L) Host re-initialize PDMA\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			DBGLOG(HAL, INFO, "SER(M) Host enable PDMA\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			DBGLOG(HAL, ERROR, "SER CurStat=%u Event=%x\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			DBGLOG(HAL, ERROR, "SER CurStat=%u Event=%x\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			DBGLOG(HAL, INFO, "SER(T) Host re-initialize BCN\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			DBGLOG(HAL, ERROR, "SER re-entry CurStat=%u Event=%x\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			DBGLOG(HAL, ERROR, "SER CurStat=%u Event=%x\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		DBGLOG(HAL, ERROR, "SER CurStat=%u Event=%x!!!\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:	DBGLOG(INIT, INFO, "Power off Wi-Fi!\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/kal_pdma.c:		DBGLOG(HAL, ERROR, "Not exist CR read[0x%08x]\n", u4Register);
connectivity/wlan/core/gen4m/os/linux/hif/common/kal_pdma.c:			DBGLOG(HAL, ERROR,
connectivity/wlan/core/gen4m/os/linux/hif/common/kal_pdma.c:				DBGLOG(HAL, ERROR,
connectivity/wlan/core/gen4m/os/linux/hif/common/kal_pdma.c:		DBGLOG(HAL, ERROR, "Not exist CR read[0x%08x]\n", u4Register);
connectivity/wlan/core/gen4m/os/linux/hif/common/kal_pdma.c:			DBGLOG(HAL, ERROR,
connectivity/wlan/core/gen4m/os/linux/hif/common/kal_pdma.c:		DBGLOG(HAL, ERROR, "Not exist CR write[0x%08x] value[0x%08x]\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/kal_pdma.c:			DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/kal_pdma.c:		DBGLOG(HAL, WARN,
connectivity/wlan/core/gen4m/os/linux/hif/common/kal_pdma.c:		DBGLOG(HAL, WARN,
connectivity/wlan/core/gen4m/os/linux/hif/common/kal_pdma.c:		DBGLOG(HAL, ERROR, "Error TxCpuIdx[%u]\n", prTxRing->TxCpuIdx);
connectivity/wlan/core/gen4m/os/linux/hif/common/kal_pdma.c:		DBGLOG(HAL, ERROR, "kmalloc() TX_CMD_REQ error\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/kal_pdma.c:		DBGLOG(HAL, WARN,
connectivity/wlan/core/gen4m/os/linux/hif/common/kal_pdma.c:		DBGLOG(RX, LOUD, "u4TcpUdpIpCksStatus[0x%02x]\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:			DBGLOG(HAL, ERROR,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "Dump fail u2Port[%u] u4Idx[%u]\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	LOGBUF(pucBuf, u4Max, u4Len, "\n------<Dump HIF Status>------\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		LOGBUF(pucBuf, u4Max, u4Len,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		LOGBUF(pucBuf, u4Max, u4Len,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	LOGBUF(pucBuf, u4Max, u4Len, "MSDU Tok: Free[%u] Used[%u]\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	LOGBUF(pucBuf, u4Max, u4Len, "Pending QLen Normal[%u] Sec[%u]\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	LOGBUF(pucBuf, u4Max, u4Len, "---------------------------------\n\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "TokenId[%u] timeout[sec:%ld, usec:%ld]\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:			DBGLOG_MEM32(HAL, INFO, prToken->prPacket, 64);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Tx Contents\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\n\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Rx Contents\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\n\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "WPDMA HOST_INT:0x%08x = 0x%08x\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "WPDMA GLOBAL_CFG:0x%08x = 0x%08x\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "WPDMA CONN_HIF_RST:0x%08x = 0x%08x\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "WPDMA MCU2HOST_SW_INT_STA:0x%08x = 0x%08x\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Tx Ring configuration\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "%10s%12s%18s%10s%10s%10s\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "%s\n", buf);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Rx Ring configuration\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "%10s%12s%18s%10s%10s%10s\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "%s\n", buf);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "%s\n", buf);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "Dump PDMA Tx Ring[%u]\n", i);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "Dump PDMA Rx Ring[%u]\n", i);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "PDMA busy status:0x%08x = 0x%08x\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "CONN_HIF busy status:0x%08x = 0x%08x\n\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "PDMA core dbg");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "Set:0x%02x, result = 0x%08x\n", i, u4Value);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Set:0x%04x, pdma axi dbg:0x%08x",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Set:0x%04x, gals axi dbg:0x%08x",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Set:0x%04x, mcu axi dbg:0x%08x",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "rbus dbg");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "Set[19:16]:0x%02x, result = 0x%08x\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "PSE Configuration Info:\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\tGC(0x82068000): 0x%08x\n", value);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\tINT_STS(0x82068024): 0x%08x\n", value);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\tINT_ERR_STS(0x82068028): 0x%08x\n", value);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\tPacket Buffer Control(0x82068014): 0x%08x\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\t\tAvailable Total Page=%d pages\n", pg_num);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "PSE Page Flow Control:\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "PSE Queue Empty Status:\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Nonempty Q info:\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:				DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:				DBGLOG(HAL, INFO, "\tHIF Q0: ");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:				DBGLOG(HAL, INFO, "\tHIF  Q1: ");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:				DBGLOG(HAL, INFO, "\tLMAC TX Q: ");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:				DBGLOG(HAL, INFO, "\tRLS Q: ");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:			DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "PSE_PEEK_CR_%u[0x%08x/0x%08x]\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "PSE_ENQ_%u[0x%08x/0x%08x]\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "PSE_DEQ_%u[0x%08x/0x%08x]\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "PLE Configuration Info:\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\tGC(0x82060000): 0x%08x\n", value);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\tINT_STS(0x82060024): 0x%08x\n", value);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\tINT_ERR_STS(0x82060028): 0x%08x\n", value);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\tQUEUE_CMD_ERR_STS(0x82060550): 0x%08x\n", value);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "PLE Page Flow Control:\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:				DBGLOG(HAL, INFO, "\tNonempty AC%d Q of STA#:",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:					DBGLOG(HAL, INFO, "%d ",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Nonempty Q info:\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:				DBGLOG(HAL, INFO, "\t%s: ",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:			DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:				DBGLOG(HAL, INFO, "\tSTA%d AC%d: ",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:				DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:				DBGLOG(HAL, INFO, " ctrl = %s",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "PLE_PEEK_CR_%u[0x%08x/0x%08x]\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Host CSR Configuration Info:\n\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Get 0x87654321: 0x%08x = 0x%08x\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Driver own info: 0x%08x = 0x%08x\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "RGU Info: 0x%08x = 0x%08x\n", HOST_CSR_RGU, u4Value);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "HIF_BUSY / CIRQ / WFSYS_ON info: 0x%08x = 0x%08x\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Pinmux/mon_flag info: 0x%08x = 0x%08x\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Bit[5] mcu_pwr_stat: 0x%08x = 0x%08x\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Bit[15] fw_own_stat: 0x%08x = 0x%08x\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "WF Mailbox[0]: 0x%08x = 0x%08x\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "MCU Mailbox[1]: 0x%08x = 0x%08x\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "BT Mailbox[2]: 0x%08x = 0x%08x\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "GPS Mailbox[3]: 0x%08x = 0x%08x\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Conn_cfg_on info: 0x%08x = 0x%08x\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Bit[17]/[16], Get HCLK info: 0x%08x = 0x%08x\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Dma scheduler info:\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "DMASHDL Ctrl Signal(0x5000A018): 0x%08x\n", value);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\tple_txd_gt_max_size_flag_clr(BIT0) = %d\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\thif_ask_sub_ena(BIT16) = %d\n", hif_ask_sub_ena);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\tple_sub_ena(BIT17) = %d\n", ple_sub_ena);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\tple_add_int_refill_ena(BIT29) = %d\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\tpdma_add_int_refill_ena(BIT30) = %d\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\tpktin_int_refill(BIT31)_ena = %d\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "DMASHDL ERR FLAG CTRL(0x5000A09c): 0x%08x\n", value);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "DMASHDL Status_RD(0x5000A100): 0x%08x\n", value);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "Group %d info:", groupidx);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:			DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:			DBGLOG(HAL, INFO, ", mismatch!");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\tMapping Qidx: 0x%x",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\nCounter Check:\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, ", mismatch!");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, ", mismatch(reserved pages in PLE)");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\tThe used pages of group15=0x%03x", pse_src_cnt);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, ", mismatch!");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, ", mismatch!");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "DMASHDL: no counter mismatch\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "0x82072644: 0x%08x\n", value);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "0x82072654: 0x%08x\n", value);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Print 0x820F3190 5*20 times\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:			DBGLOG(HAL, INFO, "0x820F3190: 0x%08x\n", value);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "slot idle: 0x820FD020: 0x%08x\n", value);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "queue empty: 0x82060220: 0x%08x\n", value);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "TXV count: 0x820F4124 = %08x\n", value);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "0x%08x: 0x%08x\n", j, value);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "0x%08x: 0x%08x\n", j, value);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Dump CR: 0x820F409C = %08x\n", value);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Dump CR: 0x820F409C = %08x\n", value);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Dump CR: 0x820F3080	= %08x\n", value);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Dump ARB CR: 820F3000~820F33FF\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "0x%08x: 0x%08x\n", index, value);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Dump AGG CR: 820F000~820F21FF\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "0x%08x: 0x%08x\n", index, value);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Dump TRB\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "write flag = 0x%08x, 0x820f0024: 0x%08x\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Dump ARB\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "0x802f3190: 0x%08x\n", value);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "0x820f0024: 0x%08x\n", value);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "0x820f20d0: 0x%08x\n", value);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "0x820f20d4: 0x%08x\n", value);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:			DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "write flag = 0x%08x, 0x820f0024: 0x%08x\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "write flag = 0x%08x, 0x820f0024: 0x%08x\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Dump AGG\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "write flag = 0x%08x, 0x820f0024: 0x%08x\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Dump DMA\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "write flag = 0x%08x, 0x820f0024: 0x%08x\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Dump TMAC\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "write flag = 0x%08x, 0x820f0024: 0x%08x\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Dump fid=%d PSE payload\n", fid);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Dump fid=%d PLE TXD\n", fid);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "TMAC_TXD Fields:\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\tTMAC_TXD_0:\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\t\tPortID=%d(%s)\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\t\tQueID=0x%x(%s %s)\n", txd_0->q_idx,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\t\tTxByteCnt=%d\n", txd_0->TxByteCount);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\t\tIpChkSumOffload=%d\n", txd_0->IpChkSumOffload);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\t\tUdpTcpChkSumOffload=%d\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\t\tEthTypeOffset=%d\n", txd_0->EthTypeOffset);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\tTMAC_TXD_1:\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\t\twlan_idx=%d\n", txd_1->wlan_idx);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\t\tHdrFmt=%d(%s)\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\t\tHdrInfo=0x%x\n", txd_1->hdr_info);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\t\tRsvd=0x%x\n", txd_1->hdr_info);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\t\tHeader Len=%d(WORD)\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\t\tEOSP=%d, AMS=%d\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\t\tTxDFormatType=%d(%s format)\n", txd_1->ft,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\t\ttxd_len=%d page(%d DW)\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\t\tUNxV=%d\n", txd_1->UNxV);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\t\tamsdu=%d\n", txd_1->amsdu);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\t\tTID=%d\n", txd_1->tid);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\t\tpkt_ft=%d(%s)\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\t\town_mac=%d\n", txd_1->OwnMacAddr);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\tTMAC_TXD_2:\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\tsub_type=%d\n", txd_2->sub_type);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\tfrm_type=%d\n", txd_2->frm_type);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\tNDP=%d\n", txd_2->ndp);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\tNDPA=%d\n", txd_2->ndpa);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\tSounding=%d\n", txd_2->sounding);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\tRTS=%d\n", txd_2->rts);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\tbc_mc_pkt=%d\n", txd_2->bc_mc_pkt);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\tBIP=%d\n", txd_2->bip);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\tDuration=%d\n", txd_2->duration);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\tHE(HTC Exist)=%d\n", txd_2->htc_vld);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\tFRAG=%d\n", txd_2->frag);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\tReamingLife/MaxTx time=%d\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\tpwr_offset=%d\n", txd_2->pwr_offset);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\tba_disable=%d\n", txd_2->ba_disable);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\ttiming_measure=%d\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\tfix_rate=%d\n", txd_2->fix_rate);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\tTMAC_TXD_3:\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\tNoAck=%d\n", txd_3->no_ack);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\tPF=%d\n", txd_3->protect_frm);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\ttx_cnt=%d\n", txd_3->tx_cnt);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\tremain_tx_cnt=%d\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\tsn=%d\n", txd_3->sn);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\tpn_vld=%d\n", txd_3->pn_vld);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\tsn_vld=%d\n", txd_3->sn_vld);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\tTMAC_TXD_4:\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\tpn_low=0x%x\n", txd_4->pn_low);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\tTMAC_TXD_5:\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\ttx_status_2_host=%d\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\ttx_status_2_mcu=%d\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\ttx_status_fmt=%d\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:			DBGLOG(HAL, INFO, "\t\tpid=%d\n", txd_5->pid);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:			DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\tpwr_mgmt=0x%x\n", txd_5->pwr_mgmt);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\tpn_high=0x%x\n", txd_5->pn_high);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:			DBGLOG(HAL, INFO, "\tTMAC_TXD_6:\n");
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:			DBGLOG(HAL, INFO, "\t\tfix_rate_mode=%d\n",
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:			DBGLOG(HAL, INFO, "\t\tGI=%d(%s)\n", txd_6->gi,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:			DBGLOG(HAL, INFO, "\t\tldpc=%d(%s)\n", txd_6->ldpc,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:			DBGLOG(HAL, INFO, "\t\tTxBF=%d\n", txd_6->TxBF);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:			DBGLOG(HAL, INFO, "\t\ttx_rate=0x%x\n", txd_6->tx_rate);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:			DBGLOG(HAL, INFO, "\t\tant_id=%d\n", txd_6->ant_id);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:			DBGLOG(HAL, INFO, "\t\tdyn_bw=%d\n", txd_6->dyn_bw);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:			DBGLOG(HAL, INFO, "\t\tbw=%d\n", txd_6->bw);
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:				DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/pcie/pcie.c:		DBGLOG(HAL, INFO, "No glue info in mtk_pci_interrupt()\n");
connectivity/wlan/core/gen4m/os/linux/hif/pcie/pcie.c:		DBGLOG(HAL, INFO, "GLUE_FLAG_HALT skip INT\n");
connectivity/wlan/core/gen4m/os/linux/hif/pcie/pcie.c:		DBGLOG(INIT, INFO, "pci_enable_device failed!\n");
connectivity/wlan/core/gen4m/os/linux/hif/pcie/pcie.c:	DBGLOG(INIT, INFO, "pci_enable_device done!\n");
connectivity/wlan/core/gen4m/os/linux/hif/pcie/pcie.c:		DBGLOG(INIT, INFO, "pfWlanProbe fail!call pfWlanRemove()\n");
connectivity/wlan/core/gen4m/os/linux/hif/pcie/pcie.c:	DBGLOG(INIT, INFO, "mtk_pci_probe() done(%d)\n", ret);
connectivity/wlan/core/gen4m/os/linux/hif/pcie/pcie.c:	DBGLOG(INIT, INFO, "pfWlanRemove done\n");
connectivity/wlan/core/gen4m/os/linux/hif/pcie/pcie.c:	DBGLOG(INIT, INFO, "mtk_pci_remove() done\n");
connectivity/wlan/core/gen4m/os/linux/hif/pcie/pcie.c:		DBGLOG(INIT, INFO, "set DMA mask failed!errno=%d\n", ret);
connectivity/wlan/core/gen4m/os/linux/hif/pcie/pcie.c:		DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/pcie/pcie.c:	DBGLOG(INIT, INFO, "ioremap for device %s, region 0x%lX @ 0x%lX\n",
connectivity/wlan/core/gen4m/os/linux/hif/pcie/pcie.c:		DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/pcie/pcie.c:		DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/pcie/pcie.c:		DBGLOG(INIT, INFO, "%s null pvData\n", __func__);
connectivity/wlan/core/gen4m/os/linux/hif/pcie/pcie.c:		DBGLOG(INIT, INFO, "%s no glue info\n", __func__);
connectivity/wlan/core/gen4m/os/linux/hif/pcie/pcie.c:		DBGLOG(HAL, ERROR, "can't allocate rx %lu size packet\n",
connectivity/wlan/core/gen4m/os/linux/hif/pcie/pcie.c:		DBGLOG(HAL, ERROR, "sk_buff dma mapping error!\n");
connectivity/wlan/core/gen4m/os/linux/hif/pcie/pcie.c:		DBGLOG(HAL, ERROR, "KAL_DMA_MAP_SINGLE() error!\n");
connectivity/wlan/core/gen4m/os/linux/hif/pcie/pcie.c:		DBGLOG(HAL, ERROR, "KAL_DMA_MAP_SINGLE() error!\n");
connectivity/wlan/core/gen4m/os/linux/hif/pcie/pcie.c:		DBGLOG(HAL, ERROR, "KAL_DMA_MAP_SINGLE() error!\n");
connectivity/wlan/core/gen4m/os/linux/hif/pcie/pcie.c:		DBGLOG(HAL, ERROR, "KAL_DMA_MAP_SINGLE() error!\n");
connectivity/wlan/core/gen4m/os/linux/hif/pcie/pcie.c:		DBGLOG(HAL, ERROR, "KAL_DMA_MAP_SINGLE() error!\n");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/include/hif.h:#define CFG_SDIO_INT_LOG_CNT            8
connectivity/wlan/core/gen4m/os/linux/hif/sdio/include/hif.h:struct SDIO_INT_LOG_T {
connectivity/wlan/core/gen4m/os/linux/hif/sdio/include/hif.h:	struct SDIO_INT_LOG_T arIntLog[CFG_SDIO_INT_LOG_CNT];
connectivity/wlan/core/gen4m/os/linux/hif/sdio/include/hif.h:struct SDIO_INT_LOG_T *halGetIntLog(IN struct ADAPTER *prAdapter, IN uint32_t u4Idx);
connectivity/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		DBGLOG(HAL, ERROR, "sdio probe error: %x driver data not found!\n", prFunc->card_id);
connectivity/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:	DBGLOG(HAL, STATE, "==>\n");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		if (wait > LP_OWN_BACK_FAILED_LOG_SKIP_MS) {
connectivity/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:			DBGLOG(HAL, ERROR, "Timeout !!\n");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:			DBGLOG(HAL, STATE, "\n Entered SDIO Supsend ");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		DBGLOG(HAL, ERROR, "sdio_set_host_pm_flags err %d\n", ret);
connectivity/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:	DBGLOG(HAL, STATE, "<==\n");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:	DBGLOG(HAL, STATE, "==>\n");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		DBGLOG(HAL, ERROR, "CCCR 0x%X read fail (%d).\n", SDIO_CCCR_IRQ_EXT, ret);
connectivity/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		DBGLOG(HAL, ERROR, "No Async-IRQ capability.\n");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		DBGLOG(INIT, INFO, "Async-IRQ enabled already.\n");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		DBGLOG(HAL, ERROR, "CCCR 0x%X write fail (%d).\n", SDIO_CCCR_IRQ_EXT, ret);
connectivity/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		DBGLOG(HAL, ERROR, "CCCR 0x%X write fail (%d).\n", SDIO_CCCR_IRQ_EXT, ret);
connectivity/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		DBGLOG(HAL, ERROR, "glBusInit() Error at enabling SDIO 1-BIT data mode.\n");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		DBGLOG(HAL, INFO, "glBusInit() SDIO 1-BIT data mode is working.\n");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		DBGLOG(HAL, ERROR, "Async-IRQ auto-enable fail.\n");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		DBGLOG(INIT, INFO, "Async-IRQ is enabled.\n");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:			/* DBGLOG(HAL, ERROR,
connectivity/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		DBGLOG(HAL, ERROR, "sdio_readl() reports error: %x retry: %u\n", ret, ucRetryCount);
connectivity/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:				DBGLOG(HAL, ERROR, "ERROR! kalDevRegRead_mac():register address mis-match");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:				DBGLOG(HAL, ERROR, "(u4Register = 0x%08x, reported register = 0x%08x)\n",
connectivity/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:			DBGLOG(HAL, ERROR, "ERROR: kalDevRegRead_mac(): response timeout\n");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:			/* DBGLOG(HAL, ERROR,
connectivity/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		DBGLOG(HAL, ERROR, "sdio_writel() reports error: %x retry: %u\n", ret, ucRetryCount);
connectivity/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:				DBGLOG(HAL, ERROR, "ERROR! kalDevRegWrite_mac():register address mis-match");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:				DBGLOG(HAL, ERROR, "(u4Register = 0x%08x, reported register = 0x%08x)\n",
connectivity/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:			DBGLOG(HAL, ERROR, "ERROR: kalDevRegWrite_mac(): response timeout\n");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		DBGLOG(HAL, ERROR, "\n");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		DBGLOG(HAL, ERROR, "\nSDIO BUS ERROR: ");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		DBGLOG(HAL, ERROR, "sdio_readsb() reports error: %d\n", ret);
connectivity/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		DBGLOG(HAL, ERROR, "\n");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		DBGLOG(HAL, ERROR, "\n");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		DBGLOG(HAL, ERROR, "\nSDIO BUS ERROR: ");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		DBGLOG(HAL, ERROR, "sdio_writesb() reports error: %d\n", ret);
connectivity/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		DBGLOG(HAL, ERROR, "\n");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		DBGLOG(INTR, WARN, "Un-handled HISR %#lx, HISR = %#lx (HIER:0x%lx)\n",
connectivity/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		DBGLOG(HAL, ERROR, "sdio_writeb() reports error: %x\n", ret);
connectivity/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		DBGLOG(HAL, ERROR, "Command TX buffer underflow!\n");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	DBGLOG(INIT, TRACE, "Chip ID: 0x%lx\n", u4CIR & WCIR_CHIP_ID);
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	DBGLOG(INIT, TRACE, "Revision ID: 0x%lx\n", ((u4CIR & WCIR_REVISION_ID) >> 16));
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:			DBGLOG(RX, ERROR, "Packet length over buffer! Dump Response buffer, length = 0x%x\n",
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:				DBGLOG(RX, ERROR, "Timeout! %d - %d = %d\n", u4Current, u4Time, (u4Current-u4Time));
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:				DBGLOG(RX, ERROR, "Timeout! %d - %d = %d\n",
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	DBGLOG(INIT, TRACE, "DRIVER OWN\n");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:					      MSEC_TO_SYSTIME(LP_OWN_BACK_FAILED_LOG_SKIP_MS))) {
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:				DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:				DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:				DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:				       "Skip LP own back failed log for next %ums\n", LP_OWN_BACK_FAILED_LOG_SKIP_MS);
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:						DBGLOG(NIC, WARN,
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:		DBGLOG(INIT, INFO, "halSetDriverOwn:: Check ready_bits(=0x%x)\n", ready_bits);
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:				DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:				DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:					"Skip waiting CR4 ready for next %ums\n", LP_OWN_BACK_FAILED_LOG_SKIP_MS);
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:						DBGLOG(NIC, WARN,
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	DBGLOG(NIC, INFO, "DRIVER OWN %d, %d, DSLP %s, count %d\n",
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:		DBGLOG(INIT, STATE, "FW OWN Skipped due to pending INT\n");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:		DBGLOG(INIT, INFO, "FW OWN\n");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	DBGLOG(TX, TRACE, "TxDone result, FFA[%u] AC[%u:%u:%u:%u] CPU[%u]\n",
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	DBGLOG(TX, TRACE, "TxDone Page count, TC[%u:%u:%u:%u:%u]\n",
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:		DBGLOG(TX, ERROR, "Tx Done INT result, FFA[%u] AC[%u:%u:%u:%u] CPU[%u]\n",
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	DBGLOG(TX, LOUD, "TCQ Status Free Page <<PSE>>:Buf[%u:%u, %u:%u, %u:%u, %u:%u, %u:%u]\n",
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:		DBGLOG(TX, LOUD, "TCQ Status Free Page <<PLE>>:Buf[%u:%u, %u:%u, %u:%u, %u:%u, %u:%u]\n",
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:			DBGLOG(TX, ERROR, "Tx Done INT result, FFA[%u] AC[%u:%u:%u:%u] CPU[%u]\n",
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	DBGLOG(EMU, TRACE, "MCR_WTSR0: 0x%x, MCR_WTSR1: 0x%x\n", au4TxCount[0], au4TxCount[1]);
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	DBGLOG(RX, TRACE, "pucBuf= 0x%x, prRxStatus= 0x%x\n", pucBuf, prRxStatus);
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:			DBGLOG(RX, ERROR, "Read RX Packet Lentgh Error\n");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:			DBGLOG(RX, ERROR, "No RX packet\n");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:		DBGLOG(RX, TRACE, "RX%d: u4PktLen = %d\n", rxNum, u4PktLen);
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:			DBGLOG(RX, ERROR, "Read u4PktLen = %d, prHifRxHdr->u2PacketLen: %d\n",
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:		DBGLOG(RX, TRACE, "ucPacketType = %d\n", prSwRfb->ucPacketType);
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:		DBGLOG(RX, TRACE, "u4TcpUdpIpCksStatus[0x%02x]\n", prSwRfb->u4TcpUdpIpCksStatus);
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:			DBGLOG(RX, TRACE, "No More RFB\n");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:			DBGLOG(RX, TRACE, "halRxFillRFB failed\n");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:		DBGLOG(RX, TRACE, "u4HwAppendDW = 0x%x\n", u4HwAppendDW);
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:		DBGLOG(RX, TRACE, "u2PacketLen = 0x%x\n", HAL_RX_STATUS_GET_RX_BYTE_CNT(prRxStatus));
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	/* DBGLOG(RX, TRACE, ("u2RxLength = %d\n", u2RxLength)); */
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:			DBGLOG(RX, ERROR, "Read RX Packet Lentgh Error\n");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:		/* DBGLOG(RX, TRACE, ("u4PktLen = %d\n", u4PktLen)); */
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:		/* DBGLOG(RX, TRACE, ("ucPacketType = %d\n", prSwRfb->ucPacketType)); */
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:			DBGLOG(RX, ERROR, "Packet Length = %lu\n", u4PktLen);
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:			DBGLOG(RX, TRACE, "Read RX Packet Lentgh Error (%lu)\n", u4PktLen);
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:		DBGLOG(RX, TRACE, "u4TcpUdpIpCksStatus[0x%02x]\n", prSwRfb->u4TcpUdpIpCksStatus);
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:				DBGLOG(RX, TRACE, "No More RFB\n");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:				DBGLOG(RX, TRACE, "nicRxEnhanceRxReadBuffer failed\n");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:			DBGLOG(RX, TRACE, "[%s] No free Rx buffer\n", __func__);
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:				DBGLOG(RX, ERROR, "[%s] RxLength == 0\n", __func__);
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:				DBGLOG(RX, ERROR, "[%s] Request_len(%d) >= Available_len(%d)\n",
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "\n");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "------<Dump SDIO Status>------\n");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "Coalescing buffer size[%u] Rx Cnt[%u/%u] DeAgg[%u] UF Cnt[%u]\n",
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "Pkt cnt Tx[%u] RxP0[%u] RxP1[%u] Tx/Rx ratio[%u.%u]\n",
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "Tx pkt/wt[%u.%u] pkt/kick[%u.%u] cmd/wt[%u.%u]\n",
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "Rx P0 pkt/rd[%u.%u] P1 pkt/rd[%u.%u]\n",
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "Tx done pending cnt HIF_TXC00~04[%u, %u, %u, %u, %u]\n",
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "Tx done pending cnt HIF_TXC05~09[%u, %u, %u, %u, %u]\n",
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "Tx done pending cnt HIF_TXC10~15[%u, %u, %u, %u, %u, %u]\n",
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "Tx done counter/int:\n");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "AC00~03[%u.%u, %u.%u, %u.%u, %u.%u]\n",
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "AC10~13[%u.%u, %u.%u, %u.%u, %u.%u]\n",
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "AC20~23[%u.%u, %u.%u, %u.%u, %u.%u] FFA,CPU[%u.%u, %u.%u]\n",
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "Pending pkt/int[%u.%u] kick/int[%u.%u] rx_enh/sts[%u.%u]\n",
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "Tx cp_t/pkt[%u.%uus] free/pkt[%u.%uus]\n",
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "Rx P0 cp_t/pkt[%u.%uus] avg read[%u.%uus]\n",
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "INT rd_sts/sts[%u.%uus] tx_sts/sts[%u.%uus]\n",
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "---------------------------------\n");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	for (u4Idx = 0; u4Idx < CFG_SDIO_INT_LOG_CNT; u4Idx++) {
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:		struct SDIO_INT_LOG_T *prIntLog = &prHifInfo->arIntLog[u4Idx];
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:		LOGBUF(pucBuf, u4Max, u4Len, "INT IDX[%u] STS[0x%08x] FG[0x%08x] Rx Pkt[%u] Sts0/1[%u:%u]\n",
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:			LOGBUF(pucBuf, u4Max, u4Len, "RxDAggLen[");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:				LOGBUF(pucBuf, u4Max, u4Len, "%4u:", prIntLog->au2RxPktLen[ucPktIdx]);
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:			LOGBUF(pucBuf, u4Max, u4Len, "]\n");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:			LOGBUF(pucBuf, u4Max, u4Len, "RxDAggSn [");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:				LOGBUF(pucBuf, u4Max, u4Len, "0x%08x: ", prIntLog->au4RxPktInfo[ucPktIdx]);
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:			LOGBUF(pucBuf, u4Max, u4Len, "]\n");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:			LOGBUF(pucBuf, u4Max, u4Len, "Rx0StsLen[");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:				LOGBUF(pucBuf, u4Max, u4Len, "%4u:", prIntSts->rRxInfo.u.au2Rx0Len[ucPktIdx]);
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:			LOGBUF(pucBuf, u4Max, u4Len, "]\n");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:			LOGBUF(pucBuf, u4Max, u4Len, "Rx1StsLen[");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:				LOGBUF(pucBuf, u4Max, u4Len, "%4u:", prIntSts->rRxInfo.u.au2Rx1Len[ucPktIdx]);
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:			LOGBUF(pucBuf, u4Max, u4Len, "]\n");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "---------------------------------\n");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	DBGLOG(HAL, ERROR, "halReadN9RegisterByMailBox >> interested address is not correct.\n");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	DBGLOG(HAL, ERROR, "halReadN9RegisterByMailBox >> get response failure.\n");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:					DBGLOG(HAL, ERROR, "halWriteN9RegisterByMailBox >> ");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:					DBGLOG(HAL, ERROR, "interested address is not correct.\n");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	DBGLOG(HAL, ERROR, "halWriteN9RegisterByMailBox >> get response failure.\n");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:		DBGLOG(HAL, ERROR, "Could not allocate %d bytes for interrupt response.\n",
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:			DBGLOG(HAL, ERROR, "Rx coalescing alloc failed!\n");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	LOG_FUNC("[%s][wifi][Firmware] Assert at \"%s\" #%ld\n\n", NIC_NAME, aucAssertFile, line);
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	DBGFWLOG(INIT, ERROR, "MailBox Status = 0x%08X, 0x%08X\n", u4MailBoxStatus0, u4MailBoxStatus1);
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	DBGLOG(REQ, WARN, "INT status[0x%08x]\n", u4IntStatus);
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	struct SDIO_INT_LOG_T *prIntLog;
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	for (u4Idx = 0; u4Idx < CFG_SDIO_INT_LOG_CNT; u4Idx++) {
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:		DBGLOG(INTR, ERROR, "INT IDX[%u] STS[0x%08x] FG[0x%08x] Rx Pkt[%u] Sts0/1[%u:%u]\n",
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	DBGLOG(INTR, ERROR, "---------------------------------\n");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	struct SDIO_INT_LOG_T *prIntLog;
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	ucLogEntry = prHifInfo->u4IntLogIdx % CFG_SDIO_INT_LOG_CNT;
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	kalMemZero(prIntLog, sizeof(struct SDIO_INT_LOG_T));
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:struct SDIO_INT_LOG_T *halGetIntLog(IN struct ADAPTER *prAdapter, IN uint32_t u4Idx)
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	return &prHifInfo->arIntLog[u4Idx % CFG_SDIO_INT_LOG_CNT];
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:		DBGLOG(REQ, WARN, "Skip all SDIO Rx due to Rx underflow error!\n");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:		DBGLOG(RX, INFO, "Wake up by Rx\n");
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:		DBGLOG(SW4, WARN, "u4IntrBits: 0x%08x\n", u4IntrBits);
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	struct SDIO_INT_LOG_T *prIntLog;
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:			DBGLOG(RX, TRACE, "u4TcpUdpIpCksStatus[0x%02x]\n", prSwRfb->u4TcpUdpIpCksStatus);
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:		DBGLOG(INIT, WARN, "SWPCDBGR 0x%08X\n", u4Data);
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	DBGLOG(REQ, WARN, "WASR:0x%x, WCIR:0x%x, WHLPCR:0x%x, WHIER:0x%x, D2HRM0R:0x%x, D2HRM1R:0x%x\n",
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	DBGLOG(REQ, WARN, "CCCR %02x %02x %02x %02x %02x %02x %02x %02x\n",
connectivity/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:		DBGLOG(NIC, ERROR, "Missing Tx done[%u:%u:%u:%u:%u]\n",
connectivity/wlan/core/gen4m/os/linux/hif/axi/axi.c:	DBGLOG(INIT, TRACE, "driver.name = %s\n", prPlatDev->id_entry->name);
connectivity/wlan/core/gen4m/os/linux/hif/axi/axi.c:		DBGLOG(INIT, INFO, "pfWlanProbe fail!\n");
connectivity/wlan/core/gen4m/os/linux/hif/axi/axi.c:	DBGLOG(INIT, TRACE, "hifAxiProbe() done(%d)\n", ret);
connectivity/wlan/core/gen4m/os/linux/hif/axi/axi.c:	DBGLOG(INIT, TRACE, "pfWlanRemove done\n");
connectivity/wlan/core/gen4m/os/linux/hif/axi/axi.c:	DBGLOG(INIT, TRACE, "hifAxiRemove() done\n");
connectivity/wlan/core/gen4m/os/linux/hif/axi/axi.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/axi/axi.c:	DBGLOG(INIT, INFO, "dma_supported=%d, dma_mask=%llx\n",
connectivity/wlan/core/gen4m/os/linux/hif/axi/axi.c:		DBGLOG(INIT, INFO, "set DMA mask failed! errno=%d\n", ret);
connectivity/wlan/core/gen4m/os/linux/hif/axi/axi.c:		DBGLOG(INIT, ERROR, "WIFI-OF: get wifi device node fail\n");
connectivity/wlan/core/gen4m/os/linux/hif/axi/axi.c:		DBGLOG(INIT, ERROR, "WIFI-OF: of_address_to_resource fail\n");
connectivity/wlan/core/gen4m/os/linux/hif/axi/axi.c:		DBGLOG(INIT, ERROR, "CSRBaseAddress not iounmap!\n");
connectivity/wlan/core/gen4m/os/linux/hif/axi/axi.c:#define LOG_TEMP "ioremap failed for device %s, region 0x%X @ 0x" PRIx64 "\n"
connectivity/wlan/core/gen4m/os/linux/hif/axi/axi.c:		DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/axi/axi.c:			LOG_TEMP,
connectivity/wlan/core/gen4m/os/linux/hif/axi/axi.c:#undef LOG_TEMP
connectivity/wlan/core/gen4m/os/linux/hif/axi/axi.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/axi/axi.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/axi/axi.c:			DBGLOG(INIT, ERROR, "TxDesc[%u] alloc fail\n", u4Idx);
connectivity/wlan/core/gen4m/os/linux/hif/axi/axi.c:		DBGLOG(INIT, ERROR, "RxDesc[0] alloc fail\n");
connectivity/wlan/core/gen4m/os/linux/hif/axi/axi.c:		DBGLOG(INIT, ERROR, "RxDesc[1] alloc fail\n");
connectivity/wlan/core/gen4m/os/linux/hif/axi/axi.c:			DBGLOG(INIT, ERROR, "TxCmdBuf[%u] alloc fail\n", u4Idx);
connectivity/wlan/core/gen4m/os/linux/hif/axi/axi.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/hif/axi/axi.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/hif/axi/axi.c:			DBGLOG(INIT, ERROR, "MsduBuf[%u] alloc fail\n", u4Idx);
connectivity/wlan/core/gen4m/os/linux/hif/axi/axi.c:	DBGLOG(INIT, INFO, "grMem.u4Offset[0x%x]\n", grMem.u4Offset);
connectivity/wlan/core/gen4m/os/linux/hif/axi/axi.c:		DBGLOG(HAL, INFO, "No glue info in mtk_axi_interrupt()\n");
connectivity/wlan/core/gen4m/os/linux/hif/axi/axi.c:		DBGLOG(HAL, INFO, "GLUE_FLAG_HALT skip INT\n");
connectivity/wlan/core/gen4m/os/linux/hif/axi/axi.c:	DBGLOG(INIT, INFO, "mtk_axi_probe() done\n");
connectivity/wlan/core/gen4m/os/linux/hif/axi/axi.c:	DBGLOG(INIT, INFO, "platform_driver_register ret = %d\n", ret);
connectivity/wlan/core/gen4m/os/linux/hif/axi/axi.c:	DBGLOG(INIT, INFO, "bus_type = %s\n", mtk_axi_driver.driver.bus->name);
connectivity/wlan/core/gen4m/os/linux/hif/axi/axi.c:	DBGLOG(INIT, INFO, "platform_device_alloc ret = %d\n", ret);
connectivity/wlan/core/gen4m/os/linux/hif/axi/axi.c:	DBGLOG(INIT, INFO, "platform_device_add ret = %d\n", ret);
connectivity/wlan/core/gen4m/os/linux/hif/axi/axi.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/hif/axi/axi.c:	DBGLOG(INIT, INFO, "glBusSetIrq: request_irq num(%d)\n",
connectivity/wlan/core/gen4m/os/linux/hif/axi/axi.c:		DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/hif/axi/axi.c:		DBGLOG(INIT, INFO, "%s null pvData\n", __func__);
connectivity/wlan/core/gen4m/os/linux/hif/axi/axi.c:		DBGLOG(INIT, INFO, "%s no glue info\n", __func__);
connectivity/wlan/core/gen4m/os/linux/hif/axi/axi.c:		DBGLOG(RX, ERROR, "Rx Data too large[%u]\n", u4Size);
connectivity/wlan/core/gen4m/os/linux/hif/axi/axi.c:		DBGLOG(HAL, ERROR, "can't allocate rx %u size packet\n",
connectivity/wlan/core/gen4m/os/linux/hif/axi/axi.c:		DBGLOG(HAL, ERROR, "sk_buff dma mapping error!\n");
connectivity/wlan/core/gen4m/os/linux/hif/axi/axi.c:		DBGLOG(HAL, ERROR, "KAL_DMA_MAP_SINGLE() error!\n");
connectivity/wlan/core/gen4m/os/linux/hif/axi/axi.c:		DBGLOG(HAL, ERROR, "KAL_DMA_MAP_SINGLE() error!\n");
connectivity/wlan/core/gen4m/os/linux/hif/axi/axi.c:		DBGLOG(HAL, ERROR, "KAL_DMA_MAP_SINGLE() error!\n");
connectivity/wlan/core/gen4m/os/linux/hif/axi/axi.c:		DBGLOG(HAL, ERROR, "KAL_DMA_MAP_SINGLE() error!\n");
connectivity/wlan/core/gen4m/os/linux/hif/axi/axi.c:		DBGLOG(HAL, ERROR, "KAL_DMA_MAP_SINGLE() error!\n");
connectivity/wlan/core/gen4m/os/linux/hif/usb/include/hif.h:#define SW_RFB_LOG_LIMIT_MS             (5000)
connectivity/wlan/core/gen4m/os/linux/hif/usb/usb.c:	DBGLOG(HAL, EVENT, "mtk_usb_probe()\n");
connectivity/wlan/core/gen4m/os/linux/hif/usb/usb.c:	DBGLOG(HAL, EVENT, "wlan_probe()\n");
connectivity/wlan/core/gen4m/os/linux/hif/usb/usb.c:		DBGLOG(HAL, ERROR, "wlan_probe() failed\n");
connectivity/wlan/core/gen4m/os/linux/hif/usb/usb.c:	DBGLOG(HAL, STATE, "mtk_usb_disconnect()\n");
connectivity/wlan/core/gen4m/os/linux/hif/usb/usb.c:	DBGLOG(HAL, STATE, "mtk_usb_disconnect() done\n");
connectivity/wlan/core/gen4m/os/linux/hif/usb/usb.c:	DBGLOG(HAL, STATE, "mtk_usb_suspend()\n");
connectivity/wlan/core/gen4m/os/linux/hif/usb/usb.c:			DBGLOG(HAL, EVENT, "enter WOW flow\n");
connectivity/wlan/core/gen4m/os/linux/hif/usb/usb.c:				DBGLOG(HAL, ERROR, "pre_suspend timeout\n");
connectivity/wlan/core/gen4m/os/linux/hif/usb/usb.c:	DBGLOG(HAL, STATE, "mtk_usb_suspend() done!\n");
connectivity/wlan/core/gen4m/os/linux/hif/usb/usb.c:	DBGLOG(HAL, STATE, "mtk_usb_resume()\n");
connectivity/wlan/core/gen4m/os/linux/hif/usb/usb.c:		DBGLOG(HAL, ERROR, "VendorRequest FeatureSetResume ERROR: %x\n", (unsigned int)ret);
connectivity/wlan/core/gen4m/os/linux/hif/usb/usb.c:		DBGLOG(HAL, EVENT, "leave WOW flow\n");
connectivity/wlan/core/gen4m/os/linux/hif/usb/usb.c:	DBGLOG(HAL, STATE, "mtk_usb_resume() done!\n");
connectivity/wlan/core/gen4m/os/linux/hif/usb/usb.c:	DBGLOG(HAL, STATE, "mtk_usb_reset_resume()\n");
connectivity/wlan/core/gen4m/os/linux/hif/usb/usb.c:	DBGLOG(HAL, STATE, "mtk_usb_reset_resume done!()\n");
connectivity/wlan/core/gen4m/os/linux/hif/usb/usb.c:		DBGLOG(REQ, ERROR, "BUG: mtk_usb_vendor_request is called from invalid context\n");
connectivity/wlan/core/gen4m/os/linux/hif/usb/usb.c:		DBGLOG(REQ, ERROR, "BUG: mtk_usb_bulk_in_msg is called from invalid context\n");
connectivity/wlan/core/gen4m/os/linux/hif/usb/usb.c:			DBGLOG(HAL, WARN, "usb_bulk_msg(IN=%d) Warning. Data is not completed. (receive %d/%u)\n",
connectivity/wlan/core/gen4m/os/linux/hif/usb/usb.c:	DBGLOG(HAL, ERROR, "usb_bulk_msg(IN=%d) Fail. Error code = %d.\n", InEp, ret);
connectivity/wlan/core/gen4m/os/linux/hif/usb/usb.c:		DBGLOG(REQ, ERROR, "BUG: mtk_usb_intr_in_msg is called from invalid context\n");
connectivity/wlan/core/gen4m/os/linux/hif/usb/usb.c:			DBGLOG(HAL, WARN, "usb_interrupt_msg(IN=%d) Warning. Data is not completed. (receive %d/%u)\n",
connectivity/wlan/core/gen4m/os/linux/hif/usb/usb.c:	DBGLOG(HAL, ERROR, "usb_interrupt_msg(IN=%d) Fail. Error code = %d.\n", InEp, ret);
connectivity/wlan/core/gen4m/os/linux/hif/usb/usb.c:		DBGLOG(REQ, ERROR, "BUG: mtk_usb_bulk_out_msg is called from invalid context\n");
connectivity/wlan/core/gen4m/os/linux/hif/usb/usb.c:			DBGLOG(HAL, ERROR, "usb_bulk_msg(OUT=%d) Warning. Data is not completed. (send %d/%u)\n", OutEp,
connectivity/wlan/core/gen4m/os/linux/hif/usb/usb.c:	DBGLOG(HAL, ERROR, "usb_bulk_msg(OUT=%d) Fail. Error code = %d.\n", OutEp, ret);
connectivity/wlan/core/gen4m/os/linux/hif/usb/usb.c:			DBGLOG(HAL, ERROR, "usb_alloc_urb() reports error\n");
connectivity/wlan/core/gen4m/os/linux/hif/usb/usb.c:	DBGLOG(HAL, STATE, "USB Device speed: %x [%u]\n",
connectivity/wlan/core/gen4m/os/linux/hif/usb/usb.c:	DBGLOG(HAL, INFO, "Event EP Type: %x\n", prHifInfo->eEventEpType);
connectivity/wlan/core/gen4m/os/linux/hif/usb/usb.c:			DBGLOG(HAL, ERROR, "kmalloc() reports error\n");
connectivity/wlan/core/gen4m/os/linux/hif/usb/usb.c:			DBGLOG(HAL, ERROR, "kmalloc() reports error\n");
connectivity/wlan/core/gen4m/os/linux/hif/usb/usb.c:				DBGLOG(HAL, ERROR, "kmalloc() reports error\n");
connectivity/wlan/core/gen4m/os/linux/hif/usb/usb.c:		DBGLOG(INIT, INFO, "USB Tx URB INIT Tc[%u] cnt[%u] len[%u]\n", ucTc, i,
connectivity/wlan/core/gen4m/os/linux/hif/usb/usb.c:			DBGLOG(HAL, ERROR, "kmalloc() reports error\n");
connectivity/wlan/core/gen4m/os/linux/hif/usb/usb.c:			DBGLOG(HAL, ERROR, "kmalloc() reports error\n");
connectivity/wlan/core/gen4m/os/linux/hif/usb/usb.c:			DBGLOG(HAL, ERROR, "kmalloc() reports error\n");
connectivity/wlan/core/gen4m/os/linux/hif/usb/usb.c:			DBGLOG(HAL, ERROR, "usb_control_msg() status: %x retry: %u\n", (unsigned int)ret, ucRetryCount);
connectivity/wlan/core/gen4m/os/linux/hif/usb/usb.c:		DBGLOG(HAL, ERROR, "usb_readl() reports error: %x retry: %u\n", ret, ucRetryCount);
connectivity/wlan/core/gen4m/os/linux/hif/usb/usb.c:		DBGLOG(HAL, INFO, "Get CR[0x%08x] value[0x%08x]\n", u4Register, *pu4Value);
connectivity/wlan/core/gen4m/os/linux/hif/usb/usb.c:			DBGLOG(HAL, ERROR, "usb_control_msg() status: %x retry: %u\n", (unsigned int)ret, ucRetryCount);
connectivity/wlan/core/gen4m/os/linux/hif/usb/usb.c:		DBGLOG(HAL, ERROR, "usb_writel() reports error: %x retry: %u\n", ret, ucRetryCount);
connectivity/wlan/core/gen4m/os/linux/hif/usb/usb.c:		DBGLOG(HAL, INFO, "Set CR[0x%08x] value[0x%08x]\n", u4Register, u4Value);
connectivity/wlan/core/gen4m/os/linux/hif/usb/usb.c:			DBGLOG(HAL, WARN, "usb_interrupt_msg(IN=%d) Warning. Data is not completed. (receive %d/%u)\n",
connectivity/wlan/core/gen4m/os/linux/hif/usb/usb.c:			DBGLOG(HAL, WARN, "usb_bulk_msg(IN=%d) Warning. Data is not completed. (receive %d/%u)\n",
connectivity/wlan/core/gen4m/os/linux/hif/usb/usb.c:		DBGLOG(HAL, ERROR, "kalDevPortRead reports error: invalid port %x\n", u2Port);
connectivity/wlan/core/gen4m/os/linux/hif/usb/usb.c:		DBGLOG(HAL, ERROR, "usb_readsb() reports error: %x\n", ret);
connectivity/wlan/core/gen4m/os/linux/hif/usb/usb.c:			DBGLOG(HAL, WARN, "usb_bulk_msg(OUT=%d) Warning. Data is not completed. (receive %d/%u)\n",
connectivity/wlan/core/gen4m/os/linux/hif/usb/usb.c:		DBGLOG(HAL, ERROR, "kalDevPortWrite reports error: invalid port %x\n", u2Port);
connectivity/wlan/core/gen4m/os/linux/hif/usb/usb.c:		DBGLOG(HAL, ERROR, "usb_writesb() reports error: %x\n", ret);
connectivity/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:	DBGLOG(INIT, TRACE, "Chip ID: 0x%lx\n", u4CIR);
connectivity/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:	DBGLOG(INIT, TRACE, "Revision ID: 0x%lx\n", u4CIR);
connectivity/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:		DBGLOG(HAL, ERROR, "Command TX buffer underflow!\n");
connectivity/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:	DBGLOG(HAL, INFO, "TX URB[0x%p]\n", prUsbReq->prUrb);
connectivity/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:		DBGLOG(HAL, ERROR, "usb_submit_urb() reports error (%d)(EP%d OUT)\n", u4Status, arTcToUSBEP[ucTc]);
connectivity/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:		DBGLOG(HAL, ERROR, "usb trigger whole reset\n");
connectivity/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:		DBGLOG(TX, ERROR, "[%s] send CMD fail (status = %d)\n", __func__, urb->status);
connectivity/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:	DBGLOG(HAL, INFO, "TX CMD DONE: URB[0x%p]\n", urb);
connectivity/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:		DBGLOG(HAL, ERROR, "usb_submit_urb() reports error (%d) [%s] (EP%d OUT)\n",
connectivity/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:			DBGLOG(HAL, ERROR, "run out of rTxDataFreeQ #1!!\n");
connectivity/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:		DBGLOG(HAL, ERROR, "u4AggRsvSize[%hhu] count FAIL (%u, %u)\n",
connectivity/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:				DBGLOG(HAL, ERROR, "run out of rTxDataFreeQ #2!!\n");
connectivity/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:		DBGLOG(HAL, ERROR, "run out of rTxDataFreeQ!!\n");
connectivity/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:		DBGLOG(HAL, ERROR, "usb_submit_urb() reports error (%d) [%s] (EP%d OUT)\n",
connectivity/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:		DBGLOG(HAL, ERROR, "usb trigger whole reset\n");
connectivity/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:		DBGLOG(TX, ERROR, "[%s] send DATA fail (status = %d)\n", __func__, urb->status);
connectivity/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:			/* DBGLOG(RX, TRACE, ("ucPacketType = %d\n", prSwRfb->ucPacketType)); */
connectivity/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:			DBGLOG(RX, WARN, "Rx byte count:%u exceeds SW_RFB max length:%u\n!",
connectivity/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:			DBGLOG(HAL, ERROR, "usb_submit_urb() reports error (%d) [%s] (EP%d IN)\n",
connectivity/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:		DBGLOG(RX, ERROR, "USB device shutdown skip Rx [%s]\n", __func__);
connectivity/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:	DBGLOG(RX, TRACE, "[%s] Rx URB[0x%p] Len[%u] Sts[%u]\n", __func__, urb, urb->actual_length, urb->status);
connectivity/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:		DBGLOG(RX, ERROR, "[%s] receive EVENT fail (status = %d)\n", __func__, urb->status);
connectivity/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:			DBGLOG(HAL, ERROR, "usb_submit_urb() reports error (%d) [%s]\n", u4Status, __func__);
connectivity/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:		DBGLOG(RX, ERROR, "USB device shutdown skip Rx [%s]\n", __func__);
connectivity/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:		DBGLOG(RX, ERROR, "[%s] receive DATA fail (status = %d)\n", __func__, urb->status);
connectivity/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:		DBGLOG(RX, LOUD, "[%s] Rx URB[0x%p] Len[%u] Sts[%u]\n", __func__,
connectivity/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:			DBGLOG(RX, ERROR, "[%s] receive EVENT/DATA fail (status = %d)\n", __func__, prUrb->status);
connectivity/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:					DBGLOG(RX, WARN, "Out of SwRfb!\n");
connectivity/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:					s_u4OutOfSwRfbPrintLimit = jiffies + MSEC_TO_JIFFIES(SW_RFB_LOG_LIMIT_MS);
connectivity/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:	DBGLOG(INIT, INFO, "PMIC SPI clock switch = %s\n",
connectivity/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:	DBGLOG(INIT, INFO, "Power on Wi-Fi....\n");
connectivity/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:			DBGLOG(INIT, WARN, "Power on failed!!!\n");
connectivity/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "\n");
connectivity/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "PDMA1R1 CPU[%u] DMA[%u] INT[0x%08x] CFG[0x%08x]\n", u4CpuIdx,
connectivity/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "UDMA WLCFG[0x%08x]\n", u4Reg);
connectivity/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "\n");
connectivity/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "VenderID: %04x\n",
connectivity/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "ProductID: %04x\n",
connectivity/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "Manufacturer: %s\n",
connectivity/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "Product: %s\n", pBuffer);
connectivity/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "SerialNumber: %s\n",
connectivity/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:	DBGLOG(INIT, INFO, "Power off Wi-Fi!\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:uint32_t au4LogLevel[ENUM_WIFI_LOG_MODULE_NUM] = {ENUM_WIFI_LOG_LEVEL_DEFAULT};
connectivity/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, INFO, "CFG80211 suspend CB\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, INFO, "CFG80211 resume CB\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:			.subcmd = LOGGER_GET_VER
connectivity/wlan/core/gen4m/os/linux/gl_init.c:			.subcmd = LOGGER_DRIVER_MEM_DUMP
connectivity/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, INFO, "g_fgNvramAvailable = %u\n", g_fgNvramAvailable);
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, WARN, "Nvram not available\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, ERROR, "Invalid input data\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, ERROR, "prGlueInfo is NULL\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, ERROR, "Adapter is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, WARN, "Unexpected ioctl command: 0x%04x\n",
connectivity/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, TRACE, "flags: 0x%x\n", prDev->flags);
connectivity/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, WARN, "prMCAddrList memory alloc fail!\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(SCN, INFO, "wlanSchedScanStoppedWorkQueue\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(SCN, INFO, "prGlueInfo == NULL unexpected\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(SCN, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_init.c:	LOG_FUNC("Reset ALL DBG module log level to DEFAULT!");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, ERROR, "Set macaddr with ndev(%d) and addr(%d)\n",
connectivity/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, WARN, "Unknown band %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, WARN, "unsupported bandwidth: %d", ucBandWidth);
connectivity/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, TRACE, "bw: %d, s_freq: %d, e_freq: %d",
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, WARN, "invalid channel for freq: %d",
connectivity/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, INFO, "r: %d, chnl %u, b: %d, s: %d, freq: %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_init.c:				DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_init.c:				DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, ERROR, "net_device number exceeds!\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:				DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, ERROR, "The device context is NULL\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, INFO, "buf = %p, length = %u\n", buf, length);
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, ERROR, "copy nvram fail\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, ERROR, "wiphy_register error\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, INFO, "Create wireless device success\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, ERROR, "unable to get struct dev for wlan\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, WARN, "Station ifname customized, use %s\n",
connectivity/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, INFO, "net_device prDev(0x%p) allocated\n",
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, ERROR, "The device context is NULL\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, ERROR, "set packet filter failed.\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:				DBGLOG(INIT, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, INFO, "********<%s>********\n", __func__);
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, INFO, "%s: Already in suspend mode, SKIP!\n",
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, INFO, "********<%s>********\n", __func__);
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, INFO, "%s: Not in suspend mode, SKIP!\n",
connectivity/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, ERROR, "adapter is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, WARN, "Resetting p2p mode\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, INFO, "Start Efuse Buffer Mode ..\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, INFO, "ucEfuseBUfferModeCal is %x\n",
connectivity/wlan/core/gen4m/os/linux/gl_init.c:				DBGLOG(INIT, INFO, "request file done\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:				DBGLOG(INIT, INFO, "can't find file\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, INFO, "Start Efuse Buffer Mode ..\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, INFO, "ucEfuseBUfferModeCal is %x\n",
connectivity/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, INFO, "request file done\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, INFO, "can't find file\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, INFO, "u4ContentLen = %d\n", u4ContentLen);
connectivity/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, TRACE, "start.\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, ERROR, "Get WifiPath from WMT drv fail\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, TRACE, "start.\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, TRACE, "start.\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, WARN, "set MAC addr fail 0x%x\n",
connectivity/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, INFO, "MAC address: " MACSTR,
connectivity/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_init.c:				DBGLOG(INIT, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, TRACE, "start.\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, TRACE, "start.\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_init.c:	int32_t u4LogLevel = ENUM_WIFI_LOG_LEVEL_DEFAULT;
connectivity/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, TRACE, "start.\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_init.c:	wlanDbgGetGlobalLogLevel(ENUM_WIFI_LOG_MODULE_FW,
connectivity/wlan/core/gen4m/os/linux/gl_init.c:	if (u4LogLevel > ENUM_WIFI_LOG_LEVEL_DEFAULT)
connectivity/wlan/core/gen4m/os/linux/gl_init.c:					   ENUM_WIFI_LOG_LEVEL_VERSION_V1,
connectivity/wlan/core/gen4m/os/linux/gl_init.c:					   ENUM_WIFI_LOG_MODULE_FW,
connectivity/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, TRACE, "start.\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, INFO, "wlan thread stopped\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, INFO, "Driver Off during Reset\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, ERROR, "prDev is NULL\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, INFO, "prGlueInfo is NULL\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, INFO, "prAdapter is NULL\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, INFO, "Driver On during Reset\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, ERROR, "prDev is NULL\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, INFO, "prGlueInfo is NULL\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, INFO, "prAdapter is NULL\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, ERROR, "Set IRQ error\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:				DBGLOG(INIT, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, INFO, "reset success\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:				DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, WARN, "Fail reason: %d\n", eFailReason);
connectivity/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, TRACE, "start.\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, TRACE, "start.\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, INFO, "p2pNetUnregister...\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, INFO, "p2pRemove...\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, INFO, "enter wlanProbe\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, ERROR, "wlanProbe: glBusInit() fail\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, ERROR, "wlanProbe: Set IRQ error\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, ERROR, "wlanProbe: init procfs failed\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, TRACE, "init MET procfs...\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, ERROR, "wlanProbe: probe failed, reason:%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, INFO, "Remove wlan!\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, ERROR, "u4WlanDevNum = 0\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, ERROR, "prDev is NULL\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, INFO, "prGlueInfo is NULL\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, INFO, "HAL_LP_OWN_SET(%d)\n",
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, INFO, "initWlan\n");
connectivity/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, ERROR, "custom infname len illegal > %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, INFO, "exitWlan\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:#define CMD_SET_FW_LOG		"SET_FWLOG"
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		OID_IPC_WIFI_LOG_UI,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DISP_STRING("OID_IPC_WIFI_LOG_UI"),
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		sizeof(struct PARAM_WIFI_LOG_LEVEL_UI),
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		OID_IPC_WIFI_LOG_LEVEL,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DISP_STRING("OID_IPC_WIFI_LOG_LEVEL"),
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		sizeof(struct PARAM_WIFI_LOG_LEVEL),
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(SCN, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(SCN, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(SCN, TRACE, "total len = %d (max len = %d)\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(SCN, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, INFO, "CMD set_band = %u\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		/* DBGLOG(REQ, INFO, ("WFD Debug Mode:%d Period:%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		/* DBGLOG(INIT, INFO, ("MET_PROF: Enable=%d UDP_PORT=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "cmd=%x, flags=%x\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "mode=%x, flags=%x\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, INFO, "CMD get_band=\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(RLM, INFO, "Domain: Query Channel List.\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, WARN, "Fail to get FW manifest version\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "cmd=%x, flags=%x\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "mode=%x, flags=%x\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "not support now");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "cmd=%x, flags=%x\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "mode=%x, flags=%x\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "cmd=%x, flags=%x\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "mode=%x, flags=%x\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "*pcExtra = 0x%x\n", *pcExtra);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "Input data length is invalid %u\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "Input data length is invalid %u\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			/* ToDo:: DBGLOG */
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, INFO, "pcExtra buffer is valid\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, INFO, "pcExtra 0x%p\n", pcExtra);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, INFO, "copy_to_user oidBuf fail\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "Input data length is invalid %u\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(REQ, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(REQ, ERROR, "copy_from_user fail\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:					DBGLOG(REQ, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(REQ, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(REQ, INFO, "alloc fail\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "cmd=%x, flags=%x\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "mode=%x, flags=%x\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, WARN, "get struct cmd:0x%x\n", u4SubCmd);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "cmd=%x, flags=%x\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "mode=%x, flags=%x\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		/* WARNLOG(
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		/* WARNLOG(
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, INFO, "priv_set_ndis(): %s\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		/* WARNLOG(
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		/* WARNLOG(
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		/* WARNLOG(
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, INFO, "priv_get_ndis(): %s\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			/* WARNLOG(
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		/* WARNLOG(
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "MT6632: %s, u4SubCmd=%d\n", __func__,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "prIwReqInfo->cmd %u\n", u2Cmd);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "prIwReqData->data.length %u\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "pcExtra %s\n", pcExtra);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "%s prIwReqData->data.length = %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "%s i4BytesWritten = %d\n", __func__,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "pcExtra done\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "%s access_ok Write fail written = %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "%s copy_to_user fail written = %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(RSN, INFO, "%s copy_to_user written = %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse apcArgv error u4Ret=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, INFO, "allocate pucConfigBuf failed\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, INFO, "can't find file\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, INFO, "%x\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "rStatus %u\n", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RSN, INFO, "use ais ap "MACSTR"\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RSN, INFO, "not connect to ais ap %lx\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, WARN, "not yet connected\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, WARN, "unable to retrieve rssi\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "%s: command result is %s\n", __func__,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	/* DBGLOG(RSN, INFO, "MT6632 : priv_driver_get_wtbl_info\n"); */
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "MT6632 : index = %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "rStatus %u u4BufLen = %d\n", rStatus,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "%s: command result is %s\n", __func__, pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	/* DBGLOG(RSN, INFO, "MT6632 : priv_driver_get_sta_info\n"); */
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "prHwWlanInfo is null\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "MT6632 : index = %d i4TotalLen = %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "%s: command result is %s\n", __func__, pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "MT6632 : priv_driver_get_mib_info\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "MT6632 : index = %d\n", prHwMibInfo->u4Index);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "rStatus %u\n", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "%s: command result is %s\n", __func__, pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	struct CMD_FW_LOG_2_HOST_CTRL *prFwLog2HostCtrl;
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(RSN, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(RSN, INFO, "MT6632 : priv_driver_set_fw_log\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	prFwLog2HostCtrl = (struct CMD_FW_LOG_2_HOST_CTRL *)kalMemAlloc(
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			sizeof(struct CMD_FW_LOG_2_HOST_CTRL), VIR_MEM_TYPE);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse u4McuDest error u4Ret=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse u4LogType error u4Ret=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:				   sizeof(struct CMD_FW_LOG_2_HOST_CTRL),
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "%s: command result is %s (%d %d)\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "rStatus %u\n", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:				   sizeof(struct CMD_FW_LOG_2_HOST_CTRL));
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "argc %i is not equal to 3\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		   sizeof(struct CMD_FW_LOG_2_HOST_CTRL));
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "address is %x\n", rCmdAccessReg.u4Address);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "rStatus %u\n", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "%s: command result is %s\n", __func__,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse Magic Key error u4Ret=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "The Set Test Mode Magic Key is %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "rStatus %u\n", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "rStatus %u\n", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "rStatus %u\n", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "%s: command result is %s\n", __func__,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "****** RX Vector3 = 0x%08x ******\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "****** RX Vector0 = 0x%08x ******\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "****** RX Vector1 = 0x%08x ******\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, WARN, "unable to retrieve rssi\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "rStatus %u, rSwCtrlInfo.u4Data 0x%x\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, WARN, "unable to retrieve rssi\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "rStatus %u, rSwCtrlInfo.u4Data 0x%x\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %d, apcArgv[0] = %s\n\n", i4Argc, *apcArgv);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "string = %s\n", this_char);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "WlanIdx=%d\nDebugType=%d\nu4Data=0x%08x\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %d, apcArgv[0] = %s\n\n", i4Argc, *apcArgv);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "string = %s\n", this_char);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "u4WCID=%d\nu4Mode=%d\nu4Bw=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "u4Mcs=%d\nu4VhtNss=%d\nu4SGI=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "u4Preamble=%d\nu4STBC=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "u4LDPC=%d\nu4SpeEn=%d\nu4Band=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "fgIsUseWCID=%d\n\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:					DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:					DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:					DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:				    DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR, "iwpriv wlanXX driver FixedRate=Option\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR, "[WCID]Wireless Client ID\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR, "[Mode]CCK=0, OFDM=1, HT=2, GF=3, VHT=4\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR, "[BW]BW20=0, BW40=1, BW80=2,BW160=3\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR, "[VhtNss]VHT=1~4, Other=ignore\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR, "[Preamble]Long=0, Other=Short\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR, "[BAND]2G=0, Other=5G\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %d, apcArgv[0] = %s\n\n", i4Argc, *apcArgv);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "string = %s\n", this_char);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "u4Ret = %d, ucParam = %d\n", u4Ret, ucParam);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(REQ, LOUD,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, INFO, "No connected peer found!\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "MT6632 : index = %d i4TotalLen = %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "Query prHwWlanInfo failed!\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "Addr of WlanIndex %d is not found!\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "Query prQueryStaStatistics failed!\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "%s: command result is %s\n", __func__, pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, INFO, "fgResetCnt = %d\n", fgResetCnt);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, INFO, "g_HqaRxStat.MAC_Mdrdy = %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, INFO, "au4MacMdrdy[ENUM_BAND_0] = %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, INFO, "g_HqaRxStat.PhyMdrdyOFDM = %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, INFO, "g_HqaRxStat.MAC_FCS_Err= %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, INFO, "au4FcsError[ENUM_BAND_0]= %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, INFO, "g_HqaRxStat.FCSErr_OFDM = %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "ucRoleIdx %hhu ucBssIdx %hhu\n", ucRoleIdx,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "integer format error i4Ret=%d\n", i4Ret);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "Invalid ACL Policy=%d\n", i4Policy);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, TRACE, "ucBssIdx[%hhu] ACL Policy=%d\n", ucBssIdx,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "%s: command result is %s\n", __func__, pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "[%c] is not hex digit\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "[%c]separate symbol is error\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "no null-terminated character\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "ucRoleIdx %hhu ucBssIdx %hhu\n", ucRoleIdx,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "inspect mac format error u4Ret=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "sscanf mac format fail u4Ret=%d\n", i4Ret);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "add this mac [" MACSTR
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "idx[%d] error or ACL is full.\n", i);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, TRACE, "add mac addr [" MACSTR "] to ACL(%d).\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "%s: command result is %s\n", __func__, pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "ucRoleIdx %hhu ucBssIdx %hhu\n", ucRoleIdx,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "inspect mac format error u4Ret=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "sscanf mac format fail u4Ret=%d\n", i4Ret);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, TRACE, "delete this mac [" MACSTR "]\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "delete entry fail, num of entries=%d\n", i);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "%s: command result is %s\n", __func__, pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, TRACE, "ACL Policy = %d\n", prBssInfo->rACL.ePolicy);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, TRACE, "Total ACLs = %d\n", prBssInfo->rACL.u4Num);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, TRACE, "ACL(%d): [" MACSTR "]\n", i+1,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, TRACE, "ACL Policy = %d\n", prBssInfo->rACL.ePolicy);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, TRACE, "Total ACLs = %d\n", prBssInfo->rACL.u4Num);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "address is %x\n", rCmdAccessReg.u4Address);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "rStatus %u\n", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "%s: command result is %s\n", __func__,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse rSwCtrlInfo error u4Ret=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "id is %x\n", rSwCtrlInfo.u4Id);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "rStatus %u\n", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "%s: command result is %s\n", __func__,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse rSwCtrlInfo error u4Ret=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse rSwCtrlInfo error u4Ret=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %d, apcArgv[0] = %s\n\n", i4Argc, *apcArgv);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "string = %s\n", this_char);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "u4WCID=%d\nu4Mode=%d\nu4Bw=%d\n", u4WCID,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "u4Mcs=%d\nu4VhtNss=%d\nu4SGI=%d\n", u4Mcs,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "u4Preamble=%d\nu4STBC=%d\n", u4Preamble,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "u4LDPC=%d\nu4SpeEn=%d\nfgIsUseWCID=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:					DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:					DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:					DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:				    DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR, "iwpriv wlanXX driver FixedRate=Option\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR, "[WCID]Wireless Client ID\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR, "[Mode]CCK=0, OFDM=1, HT=2, GF=3, VHT=4\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR, "[BW]BW20=0, BW40=1, BW80=2,BW160=3\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR, "[VhtNss]VHT=1~4, Other=ignore\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR, "[Preamble]Long=0, Other=Short\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:					DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, WARN, "Update to driver temp buffer as [%s]\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	/* DBGLOG(REQ, LOUD,("argc is %i\n",i4Argc)); */
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, INFO, "%s: kalIoctl ret=%d\n", __func__,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	/* DBGLOG(REQ, LOUD,("argc is %i\n",i4Argc)); */
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, INFO, "%s: kalIoctl ret=%d\n", __func__,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "%s: RespTyep  %u\n", __func__,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "%s: u2MsgSize %u\n", __func__,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, INFO, "%s: u2MsgSize error ret=%u\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:						DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "%s: command result is %s\n", __func__,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "%s: command result is %s\n", __func__, pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse ucBand error u4Ret=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "u4Ret is %d\n", u4Ret);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "Input insufficent\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		LOGBUF(pcCommand, i4TotalLen, i4BytesWritten, "Not Supported.");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten, "\nCountry Code: (0x%x)",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		LOGBUF(pcCommand, i4TotalLen, i4BytesWritten, "Not Supported.");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		LOGBUF(pcCommand, i4TotalLen, i4BytesWritten, "\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			LOGBUF(pcCommand, i4TotalLen, i4BytesWritten, "CH-%d:",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:				LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:				LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten, "\nDFS State: \"%s\"",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten, "\nRDD idx: %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten, "\nLPB Num: %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten, "\nPPB Num: %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten, "\n%-10d    %-11d    -\n"
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten, "\n%-10d    %-11d    -\n"
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse ucMode error u4Ret=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, TRACE, "pucValueHead = %s\n", pucValueHead);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(REQ, TRACE, "MAC type");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(REQ, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "ucRoleIdx = %d\n", ucRoleIdx);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, WARN, "bss is not active\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "[MODE] parse error\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "[MODE] convert to int error\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "[MODE] invalid ACL policy= %d\n", i4Mode);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "[CNT] parse count error\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "[CNT] convert to int error\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "[CNT] invalid count > max ACL\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "ucRoleIdx = %d\n", ucRoleIdx);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "[CFG] cmd parse error\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "[CFG] sub cmd parse error\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "[CH] parse error\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "[CH] convert to int error\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "[MAX_SCB] parse error\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "[MAX_SCB] convert to int error\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "ucRoleIdx = %d\n", ucRoleIdx);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, WARN, "bss is not active\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, WARN, "NULL STA_REC\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(SW4, INFO, "STA[%u] [" MACSTR "]\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "ucRoleIdx = %d\n", ucRoleIdx);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "[MAC] parse error\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "prIwReqInfo->cmd %x\n", u2Cmd);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "prIwReqData->data.length %u\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "%s aucBuf %s\n", __func__, aucOidBuf);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "%s i4BytesWritten = %d\n", __func__,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "pcExtra done\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(RFTEST, INFO, "%s\r\n", __func__);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO, "Thermal Temp = %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO, "Total Length (Rom) = %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			/* RFTEST_INFO_LOGDUMP32(
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO, "Thermal Temp = %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO, "Total Length (Ram) = %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			/* RFTEST_INFO_LOGDUMP32(
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			/* RFTEST_INFO_LOGDUMP32(
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "parse bEnable error u4Ret=%d\n", u4Ret);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, INFO, "CMD set_wow_enable = %d\n", Enable);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, INFO, "Scenario ID %d\n", pWOW_CTRL->ucScenarioId);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, INFO, "ucBlockCount %d\n", pWOW_CTRL->ucBlockCount);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, INFO, "interface %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, INFO, "gpio_pin %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, INFO, "gpio_level 0x%x\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, INFO, "gpio_timer %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "parse bEnable error u4Ret=%d\n", u4Ret);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(PF, INFO, "WOW enable %d\n", pWOW_CTRL->fgWowEnable);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse ucWakeupHif error u4Ret=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse GpioPin error u4Ret=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse Gpio level error u4Ret=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse u4GpioTimer error u4Ret=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse ucScenario error u4Ret=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse ucBlockCnt error u4Ret=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, INFO, "gpio_scenario%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, INFO, "interface %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, INFO, "gpio_pin %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, INFO, "gpio_level %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, INFO, "gpio_timer %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, WARN, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(PF, INFO, "UDP ucCount=%d\n", ucCount);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse ucWakeupHif error u4Ret=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(PF, INFO, "ucVer=%d\n", ucVer);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(PF, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(PF, INFO, "ucPort=%d, idx=%d\n", u2Port, ii);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse ucWakeupHif error u4Ret=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, WARN, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(PF, INFO, "TCP ucCount=%d\n", ucCount);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse ucWakeupHif error u4Ret=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(PF, INFO, "Ver=%d\n", ucVer);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(PF, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(PF, INFO, "ucPort=%d, idx=%d\n", u2Port, ii);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse ucWakeupHif error u4Ret=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse argc[1] error u4Ret=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse argc[2] error u4Ret=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(PF, INFO, "ucPort=%d, idx=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(PF, INFO, "[%s/%s] count:%d\n", aucIp[ucVer],
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "parse bEnable error u4Ret=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, INFO, "AdvPws:%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "parse apcArgv1 error u4Ret=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "parse apcArgv2 error u4Ret=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, INFO, "WOW On MDTIM:%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, INFO, "WOW Off MDTIM:%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse u4Enable error u4Ret=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "%s: Set suspend mode [%u]\n", __func__,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse apcArgv error u4Ret=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse apcArgv error u4Ret=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse apcArgv error u4Ret=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse apcArgv error u4Ret=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse apcArgv error u4Ret=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR, "iwpriv wlanXX driver SET_DBDC <enable>\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR, "<enable> 1: enable. 0: disable.\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "%s: command result is %s\n", __func__, pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(SCN, TRACE, "ch %u, dirtiness %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "prGlueInfo is null\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "Argc(%d) ERR: SET_NOISE <Sel>\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "parse rSwCtrlInfo error u4Ret=%d\n", u4Ret);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "u4Sel=%d u4Data=0x%x,\n", u4Sel, rSwCtrlInfo.u4Data);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "ERR: kalIoctl fail (%d)\n", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "rStatus %u\n", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "parse rSwCtrlInfo error u4Ret=%d\n", u4Ret);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "parse rSwCtrlInfo error u4Ret=%d\n", u4Ret);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "parse rSwCtrlInfo error u4Ret=%d\n", u4Ret);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "u4Sel=%d u4CckTh=%d u4OfdmTh=%d, u4Data=0x%x,\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "ERR: kalIoctl fail (%d)\n", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "parse rSwCtrlInfo error u4Ret=%d\n", u4Ret);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "parse rSwCtrlInfo error u4Ret=%d\n", u4Ret);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "u4Sel=%d u4EdCcaVal=%d, u4Data=0x%x,\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "ERR: kalIoctl fail (%d)\n", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "parse rSwCtrlInfo error u4Ret=%d\n", u4Ret);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "parse rSwCtrlInfo error u4Ret=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "parse rSwCtrlInfo error u4Ret=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "u4Sel=%d u4OfdmTh=%d, u4CckTh=%d, u4Data=0x%x,\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "ERR: kalIoctl fail (%d)\n", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "parse rSwCtrlInfo error u4Ret=%d\n", u4Ret);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "parse rSwCtrlInfo error u4Ret=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "parse rSwCtrlInfo error u4Ret=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "u4Sel=%d u4Wf0Gain=%d, u4Wf1Gain=%d, u4Data=0x%x,\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "ERR: kalIoctl fail (%d)\n", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "Argc(%d) ERR: Set driver SER\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "ERR: kalIoctl fail (%d)\n", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "prGlueInfo or prAdapter is NULL\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "Argc(%d) ERR: RUN_UT COMMAND\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(REQ, ERROR, "parse error u4Ret=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:					DBGLOG(REQ, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "Argc(%d) ERR: Sw Amsdu Num\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "parse amsdu num error u4Ret=%d\n", u4Ret);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "ERR: kalIoctl fail (%d)\n", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "Argc(%d) ERR: Sw Amsdu Max Size\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "parse amsdu size error u4Ret=%d\n", u4Ret);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "ERR: kalIoctl fail (%d)\n", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "GLUE_CHK_PR2 fail\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "rStatus=%x\n", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "parse ucRoleIdx error\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "parse u4CTwindowMs error\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "can't find ucBssIdx\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "wrong bss InUse=%d, iftype=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "ucRoleIdx=%d, ucBssIdx=%d, u4CTwindowMs=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "parse ucRoleIdx error\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "parse u4NoaCount error\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "parse u4NoaIntervalMs error\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "parse u4NoaDurationMs error\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "can't find ucBssIdx\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "wrong bss InUse=%d, iftype=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	{CMD_SET_FW_LOG, priv_driver_set_fw_log},
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, WARN, "wlan is halt, skip priv_driver_cmds\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(SCN, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(SCN, INFO, "Entry %u\n", i);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(SCN, INFO, "	 BSSID = " MACSTR "\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(SCN, INFO, "	 SSID = %s\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(SCN, INFO, "	 SSID len = %u\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(SCN, INFO, "	 RSSI = %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(SCN, INFO, "	 Freq = %u\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "Unknown driver command %s - ignored\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, WARN, "%s, alloc mem failed\n", __func__);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, WARN, "No glue info\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, WARN, "%s, alloc mem failed\n", __func__);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "%s: copy_from_user fail\n", __func__);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "%s: i4TotalLen invalid\n", __func__);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "%s: driver cmd \"%s\" on %s\n", __func__, pcCommand,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "%s: command %s Written is %d\n", __func__,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, TRACE, "NCHO argc is %i, %s\n", i4Argc, apcArgv[1]);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "NCHO parse u4Param error %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, TRACE, "NCHO set roam trigger cmd %d\n", i4Param);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, ERROR, "NCHO set roam trigger fail 0x%x\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO set failed\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO error input parameter %d\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, TRACE, "NCHO query ok and ret is %s\n", cmdV1Header.buffer);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO parse u4Param error %d!\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, TRACE, "NCHO query RoamTrigger is %d\n", i4Param);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, TRACE, "NCHO argc is %i, %s\n", i4Argc, apcArgv[1]);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, TRACE, "NCHO set roam delta cmd %d\n", i4Param);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, TRACE, "NCHO set roam delta successed\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO set failed\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO error input parameter %d\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, TRACE, "NCHO query ok and ret is %d\n", i4Param);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, TRACE, "NCHO argc is %i, %s\n", i4Argc, apcArgv[1]);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "NCHO parse u4Param error %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, TRACE, "NCHO set roam period cmd %d\n", u4Param);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, ERROR, "NCHO set roam period fail 0x%x\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, TRACE, "NCHO set roam period successed\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO set failed\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO error input parameter %d\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, TRACE, "NCHO query ok and ret is %d\n", u4Param);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, TRACE, "NCHO argc is %i, cmd is %s\n", i4Argc,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "NCHO parse u4Param error %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO ChannelListNum is %d\n", u4ChnlInfo);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "NCHO param mismatch %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(REQ, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, TRACE, "NCHO set roam scan channel cmd\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO set failed\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO error input parameter %d\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, TRACE, "NCHO query ok and ret is %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, TRACE, "NCHO i4BytesWritten is %d and channel list is %s\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, TRACE, "NCHO argc is %i, %s\n", i4Argc, apcArgv[1]);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "NCHO parse u4Param error %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, TRACE, "NCHO set roam scan control cmd %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO set failed\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO error input parameter %d\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, TRACE, "NCHO query ok and ret is %d\n", u4Param);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, TRACE, "NCHO argc is %i, %s\n", i4Argc, apcArgv[1]);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "NCHO parse u4Param error %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, TRACE, "NCHO set scan channel time cmd %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO set failed\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO error input parameter %d\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, TRACE, "NCHO query ok and ret is %s\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "NCHO parse u4Param error %d!\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, TRACE, "NCHO argc is %i, %s\n", i4Argc,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "NCHO parse u4Param error %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, TRACE, "NCHO set scan home time cmd %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO set failed\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO error input parameter %d\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, TRACE, "NCHO query ok and ret is %s\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "NCHO parse u4Param error %d!\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, TRACE, "NCHO argc is %i, %s\n", i4Argc, apcArgv[1]);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "NCHO parse u4Param error %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, TRACE, "NCHO set scan home away time cmd %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO set failed\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO error input parameter %d\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, TRACE, "NCHO query ok and ret is %s\n", cmdV1Header.buffer);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO parse u4Param error %d!\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, TRACE, "NCHO argc is %i, %s\n", i4Argc, apcArgv[1]);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "NCHO parse u4Param error %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, TRACE, "NCHO set scan nprobes cmd %d\n", u4Param);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, ERROR, "NCHO set scan nprobes fail 0x%x\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO set failed\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO error input parameter %d\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, TRACE, "NCHO query ok and ret is %s\n", cmdV1Header.buffer);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO parse u4Param error %d!\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, TRACE, "NCHO argc is %i, %s %s\n", i4Argc,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "NCHO parse u4Param error %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, TRACE, "NCHO send reassoc cmd %d\n", u4Param);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, TRACE, "NCHO Bssid " MACSTR " to roam\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, TRACE, "NCHO ssid %s to roam\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, ERROR, "NCHO send reassoc fail 0x%x\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, TRACE, "NCHO send reassoc successed\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO set failed\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR, "NCHO AF data length is %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO MAC str is %s\n", prAfInfo->aucBssid);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR, "NCHO action frame parse error\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO MAC is " MACSTR "\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR, "NCHO send action fail 0x%x\n", rStatus);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, ERROR, "NCHO send action fail 0x%x\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR, "NCHO req channel timeout\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, TRACE, "NCHO argc is %i, %s\n", i4Argc, apcArgv[1]);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "NCHO parse u4Param error %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, INFO, "NCHO set WES mode cmd %d\n", u4Param);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, ERROR, "NCHO set WES mode fail 0x%x\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, TRACE, "NCHO set WES mode successed\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO set failed\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO error input parameter %d\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR, "NCHO wlanoidQueryNchoWesMode fail 0x%x\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, TRACE, "NCHO query ok and ret is %d\n", u4Param);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, TRACE, "NCHO get result is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, TRACE, "NCHO argc is %i, %s\n", i4Argc, apcArgv[1]);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "NCHO parse u4Param error %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, TRACE, "NCHO set band cmd %d\n", u4Param);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, ERROR, "NCHO set band fail 0x%x\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, TRACE, "NCHO set band successed\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO set failed\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO error input parameter %d\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR, "NCHO wlanoidQueryNchoBand fail 0x%x\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, TRACE, "NCHO query ok and ret is %d\n", u4Param);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, TRACE, "NCHO argc is %i, %s\n", i4Argc, apcArgv[1]);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "NCHO parse u4Param error %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, TRACE, "NCHO set DFS scan cmd %d\n", u4Param);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, ERROR, "NCHO set DFS scan fail 0x%x\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, TRACE, "NCHO set DFS scan successed\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO set failed\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO Error input parameter %d\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, TRACE, "NCHO query ok and ret is %s\n", cmdV1Header.buffer);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO parse u4Param error %d!\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, TRACE, "NCHO argc is %i, %s\n", i4Argc,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "NCHO parse u4Param error %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, TRACE, "NCHO set enable cmd %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO set failed\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO error input parameter %d\n", i4Argc);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR, "NCHO wlanoidQueryNchoEnable fail 0x%x\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, TRACE, "NCHO query ok and ret is %s\n", cmdV1Header.buffer);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO parse u4Param error %d!\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "name(%s) or fgIndex(%d) is wrong\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "applied=[%d], name=[%s], index=[%u], setting=[%s]\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(SW4, ERROR, "rate error for CCK: %u\n", rate);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(SW4, ERROR, "rate error for OFDM\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(SW4, ERROR, "rate error for 11N: %u\n",
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(SW4, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(SW4, ERROR, "nsts error: %u\n", nsts);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(SW4, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(SW4, ERROR, "prStaRecOfAP is null\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(SW4, ERROR, "u4RxVector0 or u4RxVector1 is 0\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(SW4, ERROR, "wlanGetStaIdxByWlanIdx fail\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(SW4, ERROR, "frmode error: %u\n", frmode);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(SW4, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(SW4, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(SW4, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(SW4, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(SW4, ERROR, "prBssDesc is null\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(RLM, TRACE, "HT_CAP_INFO_SHORT_GI_20M\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(RLM, TRACE, "HT_CAP_INFO_SHORT_GI_40M\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(RLM, TRACE, "VHT_CAP_INFO_SHORT_GI_80\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(RLM, TRACE, "VHT_CAP_INFO_SHORT_GI_160_80P80\n");
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(RLM, ERROR, "error ucNss: %u\n", ucNss);
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(SW4, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(SW4, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG_LIMITED(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(INIT, TRACE, "Request FW image: %s done\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG_LIMITED(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, LOUD, "SPIN_LOCK[%u] Try to acquire\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, TEMP, "MUTEX_LOCK[%u] Try to acquire\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, TEMP, "MUTEX_LOCK[%u] Acquired\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, TEMP, "MUTEX_UNLOCK[%u]\n", rMutexCategory);
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(TX, WARN, "alloc skb failed\n");
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(RX, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG_LIMITED(INIT, TRACE, "napi_gro_flush: %d\n", ucBssIdx);
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(RX, WARN, "dev_addr == NULL\n");
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(RX, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG_LIMITED(INIT, INFO, "napi_gro_receive:%d\n", ucBssIdx);
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:				DBGLOG(SCN, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:					DBGLOG(SCN, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, INFO, "[wifi] %s netif_carrier_off\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:				SCAN_LOG_MSG_MAX_LEN);
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:			scanlog_dbg(LOG_SCAN_DONE_D2K, INFO, "Call cfg80211_scan_done (aborted=%u)\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:			scanlog_dbg(LOG_SCAN_ABORT_DONE_D2K, INFO, "Call cfg80211_scan_done (aborted=%u)\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(INIT, INFO, "JOIN Failure: u2JoinStatus=%d",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(INIT, INFO, "JOIN Failure");
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(RSN, INFO, "u2KeyInfo=%d\n", u2KeyInfo);
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(RSN, INFO, "u2KeyInfo=%d\n", u2KeyInfo);
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, INFO, "GLUE_FLAG_HALT skip tx\n");
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, INFO, "LPDVT enable, skip this frame\n");
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(TX, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(TX, LOUD,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(QM, LOUD, "Reset NetDev[0x%p] statistics\n", prDev);
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, INFO, "TxPendingFrameNum[%u] CurFrameId[%u]\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:				DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(TX, LOUD,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:						DBGLOG(TX, LOUD,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(TX, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(TX, LOUD, "----- pending frame %d -----\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(TX, WARN, "Invalid IPv4 packet version: %u\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:				DBGLOG_LIMITED(TX, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG_LIMITED(TX, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG_LIMITED(TX, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG_LIMITED(TX, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(TX, INFO, "TDLS action code: %d\n", ucActionCode);
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(TX, INFO, "u2KeyInfo=%d\n", u2KeyInfo);
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(TX, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(TX, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(TX, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(TX, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, WARN, "Invalid Ether packet length: %u\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(INIT, WARN, "Invalid IPv4 packet length: %u\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG_LIMITED(INIT, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, WARN, "SKIP multiple OID complete!\n");
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, TRACE, "Complete OID, status:success\n");
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, WARN, "Complete OID, status:0x%08x\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(OID, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(OID, LOUD,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(OID, WARN, "kalIoctl: ret ErrCode: %x\n", ret);
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(OID, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG_LIMITED(TX, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG_LIMITED(TX, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG_LIMITED(TX, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG_LIMITED(TX, TRACE, "Packet interval too close");
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG_LIMITED(TX, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, WARN, "prSkb == NULL in tx\n");
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, ERROR, "%s MemAlloc Fail\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(INIT, INFO, "%s:%u starts running...\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(INIT, INFO, "hif_thread should stop now...\n");
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:				DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:				/* DBGLOG(INIT, INFO, ("HIF Interrupt!\n")); */
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(INIT, TRACE, "%s:%u stopped!\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, ERROR, "%s MemAlloc Fail\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(INIT, INFO, "%s:%u starts running...\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(INIT, INFO, "rx_thread should stop now...\n");
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(INIT, TRACE, "%s:%u stopped!\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, ERROR, "%s MemAlloc Fail\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(INIT, INFO, "%s:%u starts running...\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(INIT, INFO, "%s should stop now...\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(INIT, INFO, "%s should stop now...\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:				DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:						DBGLOG(INIT, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(INIT, TRACE, "%s:%u stopped!\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(INIT, INFO, "glLoadNvram fail\n");
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, TRACE, "kalFileOpen() fail: %ld\n", errval);
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, INFO, "path %s, size=%u\n", pucPath, u4ReadSize);
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, INFO, "kalRequestFirmware %s Fail, errno[%d]!!\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(INIT, INFO, "kalRequestFirmware(): %s OK\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:			/* ToDo:: DBGLOG */
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(AIS, ERROR, "prChannel is NULL, return!");
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(AIS, ERROR, "prChannel is NULL, return!");
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(AIS, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(AIS, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	scanlog_dbg(LOG_SCHED_SCAN_DONE_D2K, INFO, "Call cfg80211_sched_scan_results\n");
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	/* DBGLOG(SCN, INFO, ("-->kalSchedScanStopped\n" )); */
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SCN, INFO, "Driver triggerd %d\n", fgDriverTriggerd);
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(SCN, INFO, "start work queue to send event\n");
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(SCN, INFO, "main_thread return from %s\n", __func__);
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(INIT, WARN, "SPM didn't define slp_get_wake_reason()!\n");
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(INIT, WARN, "SPM didn't define spm_get_last_wakeup_src()!\n");
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(REQ, WARN, "%s: Fail to set network address\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(REQ, WARN, "%s: unexpected prGlueInfo(0x%p)!\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, WARN, "Invalid Ether packet length: %u\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(INIT, WARN, "Invalid IPv4 packet length: %u\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(INIT, WARN, "Invalid IPv4 packet version: %u\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:				DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, INFO, "MET_PROF: Write MET PROC Enable=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, INFO, "MET_PROF: Write MET PROC UDP_PORT=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, INFO, "init proc fs fail: proc_net == NULL\n");
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(REQ, ERROR, "%s allocate skb failed\n", __func__);
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	/* DBGLOG(CCX, INFO, ("WLAN_STATUS_AGPS_NOTIFY, cmd=%d\n", cmd)); */
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(INIT, WARN, "CONFIG_NL80211_TESTMODE not enabled\n");
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(PF, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(PF, INFO, "profile wow=%d, GpioInterval=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(PF, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(PF, INFO, "IPV4/UDP port[%d]=%d\n", ii,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(PF, INFO, "IPV4/TCP port[%d]=%d\n", ii,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(PF, INFO, "IPV6/UDP port[%d]=%d\n", ii,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(PF, INFO, "IPV6/TCP port[%d]=%d\n", ii,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, WARN, "ulPerfMonFlag:0x%lx\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, WARN, "ulLastTxBytes:%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, WARN, "ulLastRxBytes:%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, WARN, "ulP2PLastTxBytes:%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, WARN, "ulP2PLastRxBytes:%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, WARN, "ulThroughput:%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, WARN, "u4UpdatePeriod:%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, WARN, "u4TarPerfLevel:%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, WARN, "u4CurrPerfLevel:%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, WARN, "netStats tx_bytes:%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, WARN, "netStats tx_bytes:%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, WARN, "p2p netStats tx_bytes:%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, WARN, "p2p netStats tx_bytes:%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(SW4, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(SW4, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, TRACE, "enter %s\n", __func__);
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(SW4, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, TRACE, "exit %s\n", __func__);
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, INFO, "enter %s\n", __func__);
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(SW4, TRACE, "need to stop before disable\n");
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, TRACE, "exit %s\n", __func__);
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, INFO, "enter %s\n", __func__);
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, TRACE, "exit %s\n", __func__);
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, TEMP, "enter %s\n", __func__);
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, INFO, "perf monitor started\n");
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, TRACE, "enter %s\n", __func__);
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(SW4, TRACE, "perf monitor disabled\n");
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(SW4, TRACE, "perf monitor already stopped\n");
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, TRACE, "exit %s\n", __func__);
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, TRACE, "enter kalPerMonHandler\n");
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(SW4, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(SW4, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, TRACE, "exit kalPerMonHandler\n");
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	LOGBUF(pucBuf, u4Max, u4Len,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	LOGBUF(pucBuf, u4Max, u4Len,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	LOGBUF(pucBuf, u4Max, u4Len,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	LOGBUF(pucBuf, u4Max, u4Len, "Total: %3lu.%03lu mbps\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	LOGBUF(pucBuf, u4Max, u4Len,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, WARN, "enter kalBoostCpu\n");
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, WARN, "enter kalGetCpuBoostThreshold\n");
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, INFO, "NO firmware flavor build.\n");
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, WARN, "EMI MPU function is not defined\n");
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, WARN, "EMI MPU function is not defined\n");
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(SW4, WARN, "Register wlan_fb_notifier failed:%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(SW4, TRACE, "Register wlan_fb_notifier succeed\n");
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		scanlog_dbg(LOG_SCAN_REQ_K2D, INFO, "Can't allocate memory\n");
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	scanlog_dbg(LOG_SCAN_REQ_K2D, INFO, "Scan flags=0x%x [mac]addr="
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	scanlog_dbg(LOG_SCAN_REQ_K2D, INFO, "Scan flags=0x%x %s\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		LOG_SCAN_RESULT_D2K,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		LOG_SCAN_DONE_D2K, logBufLen);
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(P2P, INFO, "switch channel band: %d, freq: %d\n",
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(SAA, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(SAA, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(AIS, INFO, "[WPA3] "MACSTR" %s %d %d %02x-%02x-%02x-%02x",
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:#if CFG_ENABLE_PER_STA_STATISTICS_LOG
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:#if CFG_ENABLE_PER_STA_STATISTICS_LOG
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(P2P, ERROR, "prP2PDevInfo error\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(P2P, TRACE, "prP2PDevInfo ok\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(P2P, ERROR, "prP2PInfo error\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(P2P, TRACE, "prP2PInfo ok\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:	DBGLOG(P2P, ERROR, "[fail!]p2PAllocInfo :fail\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:#if CFG_ENABLE_PER_STA_STATISTICS_LOG
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(P2P, ERROR, "ucIdx=%d is invalid\n", ucIdx);
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(P2P, ERROR, "prAdapter->prP2pInfo is NULL\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:#if CFG_ENABLE_PER_STA_STATISTICS_LOG
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, WARN, "unable to register netdevice for p2p\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:			DBGLOG(INIT, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(P2P, INFO, "P2P 2nd interface work\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:			DBGLOG(INIT, INFO, "unregister p2p[%d]\n", ucRoleIdx);
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, INFO, "unregister p2pdev[%d]\n", ucRoleIdx);
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:	DBGLOG(INIT, TRACE, "setup the p2p dev\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, ERROR, "parameter is NULL!!\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, ERROR, "prAdapter/prHif is NULL!!\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, ERROR, "u4Idx(%d) is out of range!!\n", u4Idx);
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, WARN, "Allocate memory for p2p FAILED\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:	DBGLOG(P2P, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:			DBGLOG(P2P, ERROR, "gprP2pRoleWdev[%d] is NULL\n", i);
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, INFO, "glRegisterP2P(%d), fgIsApMode(%d)\n",
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:			DBGLOG(INIT, WARN, "unable to allocate ndev for p2p\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, INFO, "Set p2p role[%d] mac to " MACSTR "\n",
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:			DBGLOG(INIT, WARN, "glSetupP2P FAILED\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:			DBGLOG(INIT, ERROR, "P2P[%d] parent dev is NULL\n", i);
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(P2P, ERROR, "unable to allocate wiphy for p2p\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, WARN, "fail to register wiphy to driver\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(P2P, ERROR, "allocate p2p wdev fail, no memory\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:	DBGLOG(INIT, INFO, "glP2pCreateWirelessDevice (%p)\n",
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(P2P, ERROR, "unable to allocate wiphy for p2p\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, WARN, "fail to register wiphy for p2p\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:			DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, WARN, "fail to register wiphy to driver\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, WARN, "The ucIdx (%d) is a wrong value\n", ucIdx);
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:			DBGLOG(P2P, INFO, "aprRoleHandler idx %d set NULL\n",
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:					DBGLOG(INIT, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:			DBGLOG(INIT, ERROR, "p2PFreeInfo FAILED\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:	/*DBGLOG(INIT, INFO, "p2pStop and ucRoleIdx = %u\n", ucRoleIdx);*/
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, INFO, "p2pStop and abort scan!!\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(P2P, TRACE, "SEt Multicast Address List\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(P2P, ERROR, "prGlueInfo is NULL\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(P2P, ERROR, "Adapter is not ready\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, WARN, "Unexpected ioctl command: 0x%04x\n", i4Cmd);
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:			DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, ERROR, "Set macaddr with ndev(%d) and addr(%d)\n",
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, ERROR, "can't find the matched dev");
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, ERROR, "can't find the matched bss");
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, ERROR, "bss is not active\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, ERROR, "dev bss is not active\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, ERROR, "p2p info is null\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_rst.c:				DBGLOG(INIT, WARN, "Whole chip reset start!\n");
connectivity/wlan/core/gen4m/os/linux/gl_rst.c:				DBGLOG(INIT, WARN, "Whole chip reset end!\n");
connectivity/wlan/core/gen4m/os/linux/gl_rst.c:				DBGLOG(INIT, WARN, "Whole chip reset fail!\n");
connectivity/wlan/core/gen4m/os/linux/gl_rst.c:		DBGLOG(INIT, INFO, "keyword is null\n");
connectivity/wlan/core/gen4m/os/linux/gl_rst.c:		DBGLOG(INIT, INFO, "reset keyword is %s\n",
connectivity/wlan/core/gen4m/os/linux/gl_rst.c:	DBGLOG(INIT, INFO, "reset result %d, trigger flag 0x%x\n",
connectivity/wlan/core/gen4m/os/linux/gl_rst.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_kal.c:			DBGLOG(P2P, TRACE, "Re-invoke Persistent Group\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_kal.c:			DBGLOG(P2P, WARN, "prIEEE80211ChnlStruct is NULL\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_kal.c:		DBGLOG(P2P, TRACE, "kalP2PIndicateChannelExpired\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_kal.c:			DBGLOG(P2P, WARN, "prIEEE80211ChnlStruct is NULL\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_kal.c:		DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_kal.c:			DBGLOG(INIT, TRACE, "DBG:p2p_cfg_scan_done\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_kal.c:			DBGLOG(P2P, TRACE, "Unknown channel info\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_kal.c:			DBGLOG(P2P, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_kal.c:			DBGLOG(P2P, WARN,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_kal.c:			DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_kal.c:			DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_kal.c:			DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_kal.c:			DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_kal.c:		DBGLOG(P2P, TRACE, "from: " MACSTR ", netdev: %p\n",
connectivity/wlan/core/gen4m/os/linux/gl_p2p_kal.c:	DBGLOG(INIT, INFO, "Radar Detection event\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_kal.c:		DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_kal.c:		DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_kal.c:	DBGLOG(INIT, INFO, "CAC Finished event\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_kal.c:		DBGLOG(INIT, INFO, "kalP2PCacFinishedUpdate: Update to OS\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_kal.c:		DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_kal.c:				DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_kal.c:				DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_kal.c:				DBGLOG(P2P, WARN, MACSTR
connectivity/wlan/core/gen4m/os/linux/gl_p2p_kal.c:	DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/os/linux/gl_p2p_kal.c:	DBGLOG(P2P, INFO, "bssid: " MACSTR "\n", MAC2STR(aucBSSID));
connectivity/wlan/core/gen4m/os/linux/gl_p2p_kal.c:	DBGLOG(P2P, INFO, "Indicate queued p2p action frame.\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_kal.c:		DBGLOG(P2P, WARN, "Frame pointer is null or length is 0.\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_kal.c:		DBGLOG(P2P, ERROR, "p2p glue info null.\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_kal.c:		DBGLOG(P2P, ERROR, "unsupport width: %d.\n", ch_width);
connectivity/wlan/core/gen4m/os/linux/gl_p2p_kal.c:	DBGLOG(P2P, INFO, "r=%d, c=%d, s=%d, s0=%d, s1=%d, ch_w=%d\n",
connectivity/wlan/core/gen4m/os/linux/gl_p2p_kal.c:		DBGLOG(P2P, ERROR, "allocate vendor event fail.\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_kal.c:		DBGLOG(P2P, ERROR, "put primary channel fail.\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_kal.c:		DBGLOG(P2P, ERROR, "put secondary channel fail.\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_kal.c:		DBGLOG(P2P, ERROR, "put vht seg0 fail.\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_kal.c:		DBGLOG(P2P, ERROR, "put vht seg1 fail.\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_kal.c:		DBGLOG(P2P, ERROR, "put ch width fail.\n");
connectivity/wlan/core/gen4m/os/linux/gl_p2p_kal.c:		DBGLOG(P2P, ERROR, "put hw mode fail.\n");
connectivity/wlan/core/gen4m/nic/nic_rate.c:	DBGLOG(NIC, LOUD,
connectivity/wlan/core/gen4m/nic/nic_rate.c:	DBGLOG(NIC, LOUD,
connectivity/wlan/core/gen4m/nic/nic_pwr_mgt.c:		DBGLOG(INIT, ERROR, "Chip id verify error!\n");
connectivity/wlan/core/gen4m/nic/nic_pwr_mgt.c:			DBGLOG(INIT, ERROR, "nicInitializeAdapter failed!\n");
connectivity/wlan/core/gen4m/nic/nic_pwr_mgt.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/nic/nic_pwr_mgt.c:					DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/nic/nic_pwr_mgt.c:		DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/nic/nic_pwr_mgt.c:				DBGLOG(INIT, TRACE, "Ready bit asserted\n");
connectivity/wlan/core/gen4m/nic/nic_pwr_mgt.c:				DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO, "=========== Before ===========\n");
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, INFO, "u2Phi11 = 0x%x\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, INFO, "ucPsi21 = 0x%x\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, INFO, "u2Phi21 = 0x%x\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, INFO, "ucPsi31 = 0x%x\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, INFO, "u2Phi31 = 0x%x\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, INFO, "ucPsi41 = 0x%x\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, INFO, "u2Phi22 = 0x%x\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, INFO, "ucPsi32 = 0x%x\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, INFO, "u2Phi32 = 0x%x\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, INFO, "ucPsi42 = 0x%x\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, INFO, "u2Phi33 = 0x%x\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, INFO, "ucPsi43 = 0x%x\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, INFO, "u2dSNR00 = 0x%x\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, INFO, "u2dSNR01 = 0x%x\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, INFO, "u2dSNR02 = 0x%x\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, INFO, "u2dSNR03 = 0x%x\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, ERROR, "pucEventBuf is NULL.\n");
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, ERROR, "cmd %u seq #%u not oid!",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO, "ProfileID = %d Invalid status = %d\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO, "0:iBF / 1:eBF = %d\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO, "0:SU / 1:MU = %d\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO, "DBW(0/1/2/3 BW20/40/80/160NC) = %d\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO, "RMSD = %d\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO, "Smart Ant Cfg = %d\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO, "SE index = %d\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO, "RMSD Threshold = %d\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO, "iBF lifetime limit(unit:4ms) = 0x%x\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, ERROR, "pucEventBuf is NULL.\n");
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, ERROR, "cmd %u seq #%u not oid!\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO, " event id : %x\n", prGetQd->u4EventId);
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, INFO, "au4RawData[%d]: %x\n", i,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, ERROR, "pucEventBuf is NULL.\n");
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, ERROR, "cmd %u seq #%u not oid!\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO, " event id : %x\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:			DBGLOG(INIT, INFO, " lq_report[%d][%d]: %x\n", i, j,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, ERROR, "pucEventBuf is NULL.\n");
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, ERROR, "cmd %u seq #%u not oid!\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO, " event id : %x\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO, "index = %x numUser = %x\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO, "BW = %x NS0/1/ = %x/%x\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO, "PFIDUser0/1 = %x/%x\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO, "initMcsUser0/1 = %x/%x\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO, "dMcsUser0: 0/1/ = %x/%x\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:			DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(REQ, INFO, "%s: RespTyep  %u\n", __func__,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(REQ, INFO, "%s: u2MsgSize %u\n", __func__,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:			DBGLOG(REQ, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(REQ, TRACE,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(REQ, TRACE,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:			DBGLOG(P2P, TRACE,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(REQ, WARN, "%s: load manufacture data fail\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(REQ, WARN, "%s: load manufacture data fail\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	 *  DBGLOG(SCN, INFO, "--->nicCmdEventSetStopSchedScan\n" ));
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	 *  DBGLOG(SCN, INFO, "<--kalSchedScanStopped\n" );
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(SCN, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO, "MT6632 : QA_AGENT GetIQData i = %d\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, ERROR, "kmalloc failed.\n");
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RFTEST, INFO, "%s\n", __func__);
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RFTEST, INFO, "Reason = %d\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RFTEST, INFO, "Action = %d\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RFTEST, INFO, "NeedResp = %d\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RFTEST, INFO, "FragNum = %d\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RFTEST, INFO, "RomRam = %d\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RFTEST, INFO, "ThermalValue = %d\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RFTEST, INFO, "Address = 0x%08x\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RFTEST, INFO, "Length = %d\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RFTEST, INFO, "RemainLength = %d\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:			DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:			DBGLOG(RFTEST, INFO, "Thermal Temp = %d\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, INFO, ": ==> gen done_file\n");
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:			DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(SCN, TRACE, "nicCmdEventBatchScanResult");
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(HAL, INFO, "%s: EVENT_ID_HIF_CTRL\n", __func__);
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(HAL, INFO, "prEventHifCtrl->ucHifType = %hhu\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(HAL, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:#if CFG_ENABLE_PER_STA_STATISTICS_LOG
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(P2P, ERROR,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:			DBGLOG(NIC, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(NIC, ERROR, "FW's event is NOT valid.\n");
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO, "[RDD]0x%08x %08d[RDD%d]\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RSN, TRACE, "MT6632 : nicCmdEventQueryWlanInfo\n");
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RSN, TRACE, "MT6632 : nicCmdEventQueryMibInfo\n");
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO, "A DieID = 0x%x\n", prAdieHwVer->u2ProductID);
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG_LIMITED(INIT, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(P2P, WARN,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, ERROR, "kmalloc failed.\n");
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:			DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RFTEST, INFO, "prCalArray[%d] address [%p]\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:			DBGLOG(RFTEST, ERROR, "convert fail: ucData[1]\n");
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:			DBGLOG(RFTEST, ERROR, "convert fail: ucData[11]\n");
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:			DBGLOG(RFTEST, ERROR, "convert fail: ucData[20] %s\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(RFTEST, TRACE, "[0x%08x][0x%08x][0x%08x]\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RFTEST, INFO, "prICapEvent->u4PktNum = %d\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(RFTEST, WARN,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(RFTEST, ERROR,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:			DBGLOG(RFTEST, WARN, "Data[%d] : %x\n", Idxi,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, INFO, ": ==> gen done_file\n");
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, INFO, ": ==> gen done_file\n");
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RFTEST, INFO, "prResult->u4FuncIndex = %d\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(RFTEST, INFO, "prCapStatus->u4CapDone = %d\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(RFTEST, WARN, "Unknown rf test event, ignore\n");
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(NIC, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RSN, EVENT, "EVENT_ID_MIC_ERR_INFO\n");
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(RSN, INFO, "No STA rec!!\n");
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO, "EVENT_ID_SCHED_SCAN_DONE\n");
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RSN, TRACE, "EVENT_ID_WLAN_INFO");
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RSN, TRACE, "EVENT_ID_MIB_INFO");
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(NIC, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(NIC, INFO, "Policy 1 hit, RX in the past duration");
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(NIC, INFO, "valid beacon time out event?: %d", bValid);
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(NIC, INFO, "EVENT_ID_BSS_BEACON_TIMEOUT\n");
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(NIC, INFO, "Reason code: %d\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:			DBGLOG(RX, ERROR,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(NIC, INFO, "EVENT_ID_STA_AGING_TIMEOUT: STA[%u] "
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(NIC, LOUD,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(NIC, INFO, "%s\n", __func__);
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(RX, ERROR, "Send Deauth Error\n");
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RSN, EVENT, "BCM BWCS Event: %02x%02x%02x%02x\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RSN, EVENT, "BCM FW status: %02x%02x%02x%02x\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RSN, TRACE, "EVENT_ID_ADD_PKEY_DONE BSSIDX=%d " MACSTR
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:			DBGLOG(RX, TRACE, "WEP, ucKeyAlgorithmId= %d\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:				DBGLOG(RX, TRACE,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:			DBGLOG(RX, TRACE,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(RSN, INFO, "STA " MACSTR " Add Key Done!!\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RFTEST, INFO, "%s\n", __func__);
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(RFTEST, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(RFTEST, INFO, "Thermal Temp = %d\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(RSN, WARN, "prEventDebugMsg is NULL\n");
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RX, TRACE, "EVENT_ID_RSSI_MONITOR value=%d\n", rssi);
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(SW4, INFO, "%s: EVENT_ID_DUMP_MEM\n", __func__);
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(NIC, INFO, ": ==> 1\n");
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(NIC, INFO, ": ==> 2\n");
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RLM, INFO, "%s: EVENT_ID_RDD_SEND_PULSE\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(NIC, LOUD, "%s\n", __func__);
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(NIC, INFO, "Coex:BSS[%d]R:%d\n", i,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(NIC, INFO, "Smart Gear SISO:%d, WF:%d\n",
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:			DBGLOG(NIC, TRACE,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(NIC, WARN, "Wlan setaddkey timeout.\n");
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(NIC, LOUD,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(NIC, INFO,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(NIC, WARN,
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(REQ, ERROR, "cmdinfo->flgIsoid\n");
connectivity/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG_LIMITED(NIC, INFO,
connectivity/wlan/core/gen4m/nic/nic_tx.c:				DBGLOG(TX, ERROR,
connectivity/wlan/core/gen4m/nic/nic_tx.c:				DBGLOG(TX, ERROR,
connectivity/wlan/core/gen4m/nic/nic_tx.c:				DBGLOG(TX, ERROR,
connectivity/wlan/core/gen4m/nic/nic_tx.c:			DBGLOG(TX, ERROR,
connectivity/wlan/core/gen4m/nic/nic_tx.c:			DBGLOG(TX, ERROR,
connectivity/wlan/core/gen4m/nic/nic_tx.c:			DBGLOG(TX, ERROR,
connectivity/wlan/core/gen4m/nic/nic_tx.c:			DBGLOG(TX, ERROR, "Total resource[%u]\n",
connectivity/wlan/core/gen4m/nic/nic_tx.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/nic/nic_tx.c:	DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG(TX, TEMP,
connectivity/wlan/core/gen4m/nic/nic_tx.c:	DBGLOG(TX, TRACE,
connectivity/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG(TX, TRACE, "Set TC%u Default[%u] Max[%u] Free[%u]\n",
connectivity/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG(TX, TRACE,
connectivity/wlan/core/gen4m/nic/nic_tx.c:			DBGLOG(TX, TRACE,
connectivity/wlan/core/gen4m/nic/nic_tx.c:			DBGLOG(TX, TRACE,
connectivity/wlan/core/gen4m/nic/nic_tx.c:	DBGLOG(TX, TRACE,
connectivity/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG(TX, TRACE,
connectivity/wlan/core/gen4m/nic/nic_tx.c:	DBGLOG(TX, TRACE,
connectivity/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG(TX, TRACE,
connectivity/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG(INIT, WARN, "Undefined Frame Type(%u)\n",
connectivity/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG(INIT, WARN, "Undefined CMD Type(%u)\n",
connectivity/wlan/core/gen4m/nic/nic_tx.c:	DBGLOG_LIMITED(NIC, LOUD, "%s\n", aucLogBuf);
connectivity/wlan/core/gen4m/nic/nic_tx.c:	DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/nic/nic_tx.c:				DBGLOG(RSN, LOUD,
connectivity/wlan/core/gen4m/nic/nic_tx.c:			DBGLOG(RSN, LOUD, "Protect BMC frame!\n");
connectivity/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG_LIMITED(NIC, INFO, "Compose TXD by Msdu info\n");
connectivity/wlan/core/gen4m/nic/nic_tx.c:	DBGLOG(QM, INFO,
connectivity/wlan/core/gen4m/nic/nic_tx.c:			DBGLOG(QM, TRACE, "STA[%u] TID[%u] TxDTemp[0x%p]\n",
connectivity/wlan/core/gen4m/nic/nic_tx.c:				DBGLOG(QM, TRACE,
connectivity/wlan/core/gen4m/nic/nic_tx.c:	DBGLOG(QM, TRACE, "Free TXD template for STA[%u] QoS[%u]\n",
connectivity/wlan/core/gen4m/nic/nic_tx.c:	DBGLOG(QM, INFO,
connectivity/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG_LIMITED(INIT, TRACE,
connectivity/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/nic/nic_tx.c:			DBGLOG(TX, TRACE,
connectivity/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG(TX, LOUD,
connectivity/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG(TX, LOUD,
connectivity/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG_LIMITED(TX, WARN, "MSDU prPacket is null\n");
connectivity/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG_LIMITED(TX, WARN, "MSDU u2FrameLength is 0\n");
connectivity/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG_LIMITED(TX, WARN, "MSDU ucMacHeaderLength is 0\n");
connectivity/wlan/core/gen4m/nic/nic_tx.c:			DBGLOG_LIMITED(NIC, INFO,
connectivity/wlan/core/gen4m/nic/nic_tx.c:			DBGLOG(NIC, TRACE,
connectivity/wlan/core/gen4m/nic/nic_tx.c:				DBGLOG_LIMITED(NIC, INFO,
connectivity/wlan/core/gen4m/nic/nic_tx.c:				DBGLOG(NIC, TRACE,
connectivity/wlan/core/gen4m/nic/nic_tx.c:				DBGLOG_LIMITED(NIC, INFO,
connectivity/wlan/core/gen4m/nic/nic_tx.c:				DBGLOG(NIC, TRACE,
connectivity/wlan/core/gen4m/nic/nic_tx.c:				DBGLOG_LIMITED(NIC, INFO,
connectivity/wlan/core/gen4m/nic/nic_tx.c:				DBGLOG(NIC, TRACE,
connectivity/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG(NIC, TRACE,
connectivity/wlan/core/gen4m/nic/nic_tx.c:	DBGLOG(NIC, TRACE,
connectivity/wlan/core/gen4m/nic/nic_tx.c:				DBGLOG(TX, WARN,
connectivity/wlan/core/gen4m/nic/nic_tx.c:					DBGLOG(TX, TRACE,
connectivity/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG(TX, WARN,
connectivity/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG(INIT, WARN, "Undefined CMD Type(%u)\n",
connectivity/wlan/core/gen4m/nic/nic_tx.c:		/* DBGLOG(RSN, INFO, "MSDU_OPT_PROTECTED_FRAME\n"); */
connectivity/wlan/core/gen4m/nic/nic_tx.c:				DBGLOG(NIC, INFO,
connectivity/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG(TX, INFO,
connectivity/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG(TX, INFO, "prMsduInfo empty\n");
connectivity/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG(TX, INFO, "prStaRec empty\n");
connectivity/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG(TX, INFO, "fgIsInPS!\n");
connectivity/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG(TX, INFO, "prMsduInfo empty\n");
connectivity/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG(TX, INFO, "fgIsNetAbsent!\n");
connectivity/wlan/core/gen4m/nic/nic_tx.c:				DBGLOG(TX, INFO,
connectivity/wlan/core/gen4m/nic/nic_tx.c:				DBGLOG(TX, INFO, "fgIsNetAbsent NoQuota\n");
connectivity/wlan/core/gen4m/nic/nic_tx.c:			DBGLOG(TX, INFO, "fgIsNetAbsent END!\n");
connectivity/wlan/core/gen4m/nic/nic_tx.c:			DBGLOG(QM, TRACE,
connectivity/wlan/core/gen4m/nic/nic_tx.c:			DBGLOG(QM, TRACE, "Drop the Packet for no STA_REC\n");
connectivity/wlan/core/gen4m/nic/nic_tx.c:				DBGLOG(TX, INFO,
connectivity/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG(TX, INFO, "fgHasNoMsdu FALSE\n");
connectivity/wlan/core/gen4m/nic/nic_tx.c:				DBGLOG(TX, INFO,
connectivity/wlan/core/gen4m/nic/nic_tx.c:				DBGLOG(TX, INFO,
connectivity/wlan/core/gen4m/nic/nic_tx.c:			DBGLOG(TX, INFO, "cnmPktAlloc NULL\n");
connectivity/wlan/core/gen4m/nic/nic_tx.c:				DBGLOG(TX, INFO,
connectivity/wlan/core/gen4m/nic/nic_tx.c:	DBGLOG(TX, INFO, "Data Packets in Aci %d will route to %s\n", ucAci,
connectivity/wlan/core/gen4m/nic/nic.c:		DBGLOG(INIT, ERROR, \
connectivity/wlan/core/gen4m/nic/nic.c:	DBGLOG(INIT, TRACE, "Alloc %u bytes, addr = 0x%p for %s.\n", \
connectivity/wlan/core/gen4m/nic/nic.c:			DBGLOG(INIT, ERROR,
connectivity/wlan/core/gen4m/nic/nic.c:		DBGLOG(REQ, ERROR, "prAdapter is NULL!!");
connectivity/wlan/core/gen4m/nic/nic.c:		DBGLOG(REQ, WARN,
connectivity/wlan/core/gen4m/nic/nic.c:		/* DBGLOG(INIT, TRACE, ("u4IntStatus: 0x%x\n", u4IntStatus)); */
connectivity/wlan/core/gen4m/nic/nic.c:				DBGLOG(INTR, WARN,
connectivity/wlan/core/gen4m/nic/nic.c:	/* DBGLOG(INIT, TRACE, ("u4SwIntrBitmap: 0x%08x\n", u4SwIntrBitmap)); */
connectivity/wlan/core/gen4m/nic/nic.c:		DBGLOG(TX, TRACE,
connectivity/wlan/core/gen4m/nic/nic.c:		DBGLOG(TX, WARN,
connectivity/wlan/core/gen4m/nic/nic.c:			DBGLOG(TX, TRACE,
connectivity/wlan/core/gen4m/nic/nic.c:			DBGLOG(TX, TRACE,
connectivity/wlan/core/gen4m/nic/nic.c:		DBGLOG(BSS, INFO, "Return Invalid Channelnum = 0.\n");
connectivity/wlan/core/gen4m/nic/nic.c:	DBGLOG_LIMITED(RSN, INFO,
connectivity/wlan/core/gen4m/nic/nic.c:		DBGLOG_LIMITED(RSN, WARN,
connectivity/wlan/core/gen4m/nic/nic.c:	DBGLOG_LIMITED(RSN, INFO,
connectivity/wlan/core/gen4m/nic/nic.c:	DBGLOG(RSN, TRACE, "Update BSS BMC WlanIdx %u\n",
connectivity/wlan/core/gen4m/nic/nic.c:	DBGLOG(BSS, INFO,
connectivity/wlan/core/gen4m/nic/nic.c:	DBGLOG(NIC, INFO,
connectivity/wlan/core/gen4m/nic/nic.c:	DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/nic/nic.c:		DBGLOG(NIC, TRACE,
connectivity/wlan/core/gen4m/nic/nic.c:		DBGLOG(INIT, INFO, "Enable CAM BssIndex:%d, PowerMode:%d\n",
connectivity/wlan/core/gen4m/nic/nic.c:		DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/nic/nic.c:	DBGLOG(INIT, TRACE, "nicEnterCtiaMode: %d\n", fgEnterCtia);
connectivity/wlan/core/gen4m/nic/nic.c:	DBGLOG(INIT, INFO, "nicEnterCtiaModeOfScan: %d\n",
connectivity/wlan/core/gen4m/nic/nic.c:	DBGLOG(INIT, INFO, "nicEnterCtiaModeOfRoaming: %d\n",
connectivity/wlan/core/gen4m/nic/nic.c:	DBGLOG(INIT, INFO, "nicEnterCtiaModeOfCAM: %d\n",
connectivity/wlan/core/gen4m/nic/nic.c:	DBGLOG(INIT, INFO, "nicEnterCtiaModeOfBCNTimeout: %d\n",
connectivity/wlan/core/gen4m/nic/nic.c:	DBGLOG(INIT, INFO, "nicEnterCtiaModeOfAutoTxPower: %d\n",
connectivity/wlan/core/gen4m/nic/nic.c:	DBGLOG(INIT, INFO, "nicEnterCtiaModeOfFIFOFullNoAck: %d\n",
connectivity/wlan/core/gen4m/nic/nic.c:	DBGLOG(INIT, LOUD, "\n");
connectivity/wlan/core/gen4m/nic/nic.c:		DBGLOG(NIC, INFO,
connectivity/wlan/core/gen4m/nic/nic.c:		DBGLOG(INIT, ERROR, "Unknown IeUpdMethod.\n");
connectivity/wlan/core/gen4m/nic/nic.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/wlan/core/gen4m/nic/nic.c:	DBGLOG(REQ, TRACE, "ucCmdSeqNum =%d\n", ucCmdSeqNum);
connectivity/wlan/core/gen4m/nic/nic.c:	DBGLOG(QM, TRACE, "Update WMM parameters for BSS[%u]\n",
connectivity/wlan/core/gen4m/nic/nic.c:	DBGLOG(QM, TRACE, "sizeof(struct AC_QUE_PARMS): %zu\n",
connectivity/wlan/core/gen4m/nic/nic.c:	DBGLOG(QM, TRACE, "sizeof(CMD_UPDATE_WMM_PARMS): %zu\n",
connectivity/wlan/core/gen4m/nic/nic.c:	DBGLOG(QM, TRACE, "sizeof(struct WIFI_CMD): %zu\n",
connectivity/wlan/core/gen4m/nic/nic.c:	DBGLOG_LIMITED(QM, INFO, "ucTxMsduQueue:[%u], u4TxHifRes[%d]",
connectivity/wlan/core/gen4m/nic/nic.c:	DBGLOG(INIT, INFO, "ArParam %u %u %u %u\n",
connectivity/wlan/core/gen4m/nic/nic.c:	DBGLOG(INIT, INFO, "ArVer %u AbwVer %u AgiVer %u\n", ucArVer, ucAbwVer, ucAgiVer);
connectivity/wlan/core/gen4m/nic/nic.c:	DBGLOG(INIT, INFO, "HtMask %x LegacyMask %x\n", u2HtClrMask, u2LegacyClrMask);
connectivity/wlan/core/gen4m/nic/nic.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/nic/nic.c:				DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/nic/nic.c:	DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/nic/nic.c:	DBGLOG(NIC, WARN, "SER: Stop HIF Tx/Rx!\n");
connectivity/wlan/core/gen4m/nic/nic.c:	DBGLOG(NIC, WARN, "SER: Stop HIF Tx!\n");
connectivity/wlan/core/gen4m/nic/nic.c:	DBGLOG(NIC, WARN, "SER: Start HIF T/R!\n");
connectivity/wlan/core/gen4m/nic/nic.c:		DBGLOG(NIC, INFO, "SER beacon frame is updated\n");
connectivity/wlan/core/gen4m/nic/nic.c:	DBGLOG(NIC, TRACE, "ucProtocolType=%d, ucProtocolSubType=%d\n",
connectivity/wlan/core/gen4m/nic/nic.c:	DBGLOG(NIC, TRACE, "ucProtocolType=%d, ucProtocolSubType=%d\n",
connectivity/wlan/core/gen4m/nic/cmd_buf.c:	DBGLOG_LIMITED(NIC, INFO, "Dump CMD info for %s, Elem number:%u\n",
connectivity/wlan/core/gen4m/nic/cmd_buf.c:			DBGLOG_LIMITED(NIC, INFO, "CID:%d SEQ:%d\n",
connectivity/wlan/core/gen4m/nic/cmd_buf.c:			DBGLOG_LIMITED(NIC, INFO,
connectivity/wlan/core/gen4m/nic/cmd_buf.c:			DBGLOG_LIMITED(NIC, INFO,
connectivity/wlan/core/gen4m/nic/cmd_buf.c:		DBGLOG_LIMITED(NIC, INFO,
connectivity/wlan/core/gen4m/nic/cmd_buf.c:		DBGLOG(NIC, INFO, "Tc4 number:%d\n",
connectivity/wlan/core/gen4m/nic/cmd_buf.c:		DBGLOG(MEM, LOUD,
connectivity/wlan/core/gen4m/nic/cmd_buf.c:		DBGLOG(MEM, ERROR,
connectivity/wlan/core/gen4m/nic/cmd_buf.c:		DBGLOG(MEM, LOUD, "CMD[0x%p] freed! Rest[%u]\n", prCmdInfo,
connectivity/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RX, ERROR,
connectivity/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(RX, TRACE, "HIF_RX_HDR_FLAG_802_11_FORMAT\n");
connectivity/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(RX, TRACE, "HIF_RX_HDR_FLAG_DO_REORDERING\n");
connectivity/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RX, TRACE, "HIF_RX_HDR_FLAG_BAR_FRAME\n");
connectivity/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(RX, TRACE, "u2SSN = %d, ucTid = %d\n",
connectivity/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(RX, TRACE, "HIF_RX_HDR_FLAG_AMP_WDS\n");
connectivity/wlan/core/gen4m/nic/nic_rx.c:	DBGLOG_LIMITED(RX, LOUD,
connectivity/wlan/core/gen4m/nic/nic_rx.c:	DBGLOG_LIMITED(RX, LOUD,
connectivity/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RX, LOUD,
connectivity/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RX, LOUD,
connectivity/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RX, LOUD,
connectivity/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(RX, LOUD, "rxDefragMPDU first\n");
connectivity/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(RX, LOUD,
connectivity/wlan/core/gen4m/nic/nic_rx.c:				DBGLOG(RX, LOUD, "Defrag: finished\n");
connectivity/wlan/core/gen4m/nic/nic_rx.c:				DBGLOG(RX, LOUD, "Defrag: mid fraged\n");
connectivity/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RX, LOUD, "RX: SC=0x%X (BA Entry present)\n",
connectivity/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RXM, LOUD,
connectivity/wlan/core/gen4m/nic/nic_rx.c:				DBGLOG(RXM, LOUD,
connectivity/wlan/core/gen4m/nic/nic_rx.c:				DBGLOG(RX, WARN,
connectivity/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RX, LOUD, "RXM: SC= 0x%x (Cache[%u] updated)\n",
connectivity/wlan/core/gen4m/nic/nic_rx.c:				DBGLOG(RX, LOUD,
connectivity/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(RX, LOUD, "RXM: SC= 0x%x (Cache[%u] updated)\n",
connectivity/wlan/core/gen4m/nic/nic_rx.c:	/* DBGLOG(RX, TRACE, ("\n")); */
connectivity/wlan/core/gen4m/nic/nic_rx.c:	/* DBGLOG(RX, INFO, ("fgIsRetained = %d\n", fgIsRetained)); */
connectivity/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(RX, ERROR,
connectivity/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(RX, WARN,
connectivity/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RX, WARN,
connectivity/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG_LIMITED(RX, WARN,
connectivity/wlan/core/gen4m/nic/nic_rx.c:	DBGLOG_LIMITED(RX, TRACE, "to forward packet: %d,%d,%d,%d,%d\n",
connectivity/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(QM, INFO, "No Tx MSDU_INFO for forwarding frames\n");
connectivity/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(RX, WARN,
connectivity/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(RX, WARN,
connectivity/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RX, WARN,
connectivity/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(SW4, WARN,
connectivity/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(NIC, WARN, "u4Status: %d\n", u4Status);
connectivity/wlan/core/gen4m/nic/nic_rx.c:	DBGLOG(NIC, TRACE,
connectivity/wlan/core/gen4m/nic/nic_rx.c:	/* DBGLOG(INIT, TRACE, ("\n")); */
connectivity/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG_LIMITED(RSN, TRACE,
connectivity/wlan/core/gen4m/nic/nic_rx.c:				DBGLOG(RSN, EVENT, "MIC_ERR_PKT\n");
connectivity/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RSN, EVENT, ("LLC_MIS_ERR\n"));
connectivity/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG_LIMITED(RX, TRACE,
connectivity/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(NIC, TRACE,
connectivity/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RX, TRACE,
connectivity/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(RX, WARN,
connectivity/wlan/core/gen4m/nic/nic_rx.c:	/* DBGLOG(INIT, TRACE, ("\n")); */
connectivity/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/nic/nic_rx.c:				DBGLOG(P2P, WARN,
connectivity/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RSN, EVENT, "EVENT_ID_MIC_ERR_INFO\n");
connectivity/wlan/core/gen4m/nic/nic_rx.c:				DBGLOG(RSN, INFO, "No STA rec!!\n");
connectivity/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(INIT, INFO, "EVENT_ID_NLO_DONE\n");
connectivity/wlan/core/gen4m/nic/nic_rx.c:				DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/nic/nic_rx.c:				DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/nic/nic_rx.c:				DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RSN, INFO, "EVENT_ID_WLAN_INFO");
connectivity/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RSN, INFO, "EVENT_ID_MIB_INFO");
connectivity/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(INIT, INFO, "EVENT_ID_BSS_BEACON_TIMEOUT\n");
connectivity/wlan/core/gen4m/nic/nic_rx.c:				DBGLOG(INIT, INFO, "Reason code: %d\n",
connectivity/wlan/core/gen4m/nic/nic_rx.c:					DBGLOG(RX, ERROR,
connectivity/wlan/core/gen4m/nic/nic_rx.c:				DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RX, INFO, "Send Deauth Error\n");
connectivity/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RSN, EVENT, "BCM BWCS Event: %02x%02x%02x%02x\n",
connectivity/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RSN, EVENT, "BCM FW status: %02x%02x%02x%02x\n",
connectivity/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RSN, EVENT,
connectivity/wlan/core/gen4m/nic/nic_rx.c:				DBGLOG(RSN, EVENT,
connectivity/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(SW4, TRACE,
connectivity/wlan/core/gen4m/nic/nic_rx.c:					DBGLOG(SW4, INFO, "<FW>%s\n", pucMsg);
connectivity/wlan/core/gen4m/nic/nic_rx.c:					DBGLOG(SW4, INFO, "<FW>Dump MEM8\n");
connectivity/wlan/core/gen4m/nic/nic_rx.c:				DBGLOG(SW4, INFO,
connectivity/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(SCN, TRACE, "Got EVENT_ID_BATCH_RESULT");
connectivity/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(INIT, INFO, "%s: EVENT_ID_DUMP_MEM\n", __func__);
connectivity/wlan/core/gen4m/nic/nic_rx.c:				DBGLOG(INIT, INFO, ": ==> 1\n");
connectivity/wlan/core/gen4m/nic/nic_rx.c:				DBGLOG(INIT, INFO, ": ==> 2\n");
connectivity/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(INIT, INFO, "%s: EVENT_ID_RDD_SEND_PULSE\n",
connectivity/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(INIT, WARN,
connectivity/wlan/core/gen4m/nic/nic_rx.c:				DBGLOG(SW4, INFO,
connectivity/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RSN, INFO, "[MFP] RX with BIP ICV ERROR\n");
connectivity/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RSN, INFO, "[MFP] RX with ICV ERROR\n");
connectivity/wlan/core/gen4m/nic/nic_rx.c:				DBGLOG(RX, WARN,
connectivity/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RX, ERROR,
connectivity/wlan/core/gen4m/nic/nic_rx.c:				DBGLOG(RX, INFO,
connectivity/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RX, INFO,
connectivity/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RX, INFO,
connectivity/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RX, WARN,
connectivity/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RX, INFO, "Event 0x%02x wakeup host\n",
connectivity/wlan/core/gen4m/nic/nic_rx.c:				DBGLOG(RX, ERROR,
connectivity/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RX, INFO,
connectivity/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RX, ERROR,
connectivity/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(RX, WARN, "Unknown Packet %d wakeup host\n",
connectivity/wlan/core/gen4m/nic/nic_rx.c:				DBGLOG(RX, WARN, "Rx process RFBs timeout\n");
connectivity/wlan/core/gen4m/nic/nic_rx.c:						DBGLOG(RX, ERROR,
connectivity/wlan/core/gen4m/nic/nic_rx.c:					DBGLOG(RX, ERROR, "ucPacketType = %d\n",
connectivity/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RX, ERROR, "Free rfb and set IntEvent!!!!!\n");
connectivity/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(RX, TRACE,
connectivity/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(RX, ERROR, "halRxWaitResponse fail!status %X\n",
connectivity/wlan/core/gen4m/nic/nic_rx.c:	DBGLOG(RSN, TRACE, "[Rx] nicRxProcessActionFrame\n");
connectivity/wlan/core/gen4m/nic/nic_rx.c:	DBGLOG(RSN, TRACE, "Action frame category=%d\n",
connectivity/wlan/core/gen4m/nic/nic_rx.c:	/* DBGLOG(RSN, TRACE, ("[Rx] fgRobustAction=%d\n", fgRobustAction)); */
connectivity/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(RX, WARN,
connectivity/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(RX, INFO, "received dscp action frame: %d\n",
connectivity/wlan/core/gen4m/nic/nic_rx.c:					DBGLOG(INIT, INFO,
connectivity/wlan/core/gen4m/nic/nic_rx.c:				DBGLOG(RSN, INFO,
connectivity/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RX, INFO, "WNM action frame: %d\n", __LINE__);
connectivity/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RX, INFO, "WNM action frame: %d\n", __LINE__);
connectivity/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RLM, INFO,
connectivity/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(RX, WARN,
connectivity/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RX, WARN,
connectivity/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(RX, WARN,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, TRACE, "Duplicated packet is detected\n"); \
connectivity/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(QM, TRACE, \
connectivity/wlan/core/gen4m/nic/que_mgt.c:					DBGLOG(RX, ERROR, \
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, WARN,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, WARN,
connectivity/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, INFO, "QM: +STA[%d]\n", prStaRec->ucIndex);
connectivity/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, INFO, "QM: -STA[%u]\n", prStaRec->ucIndex);
connectivity/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, TRACE, "QM: Enter qmFlushTxQueues()\n");
connectivity/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, TRACE, "QM: Enter qmFlushStaTxQueues(%u)\n", u4StaRecIdx);
connectivity/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, TRACE, "QM: Enter qmFlushRxQueues()\n");
connectivity/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, TRACE, "QM: Enter qmFlushStaRxQueues(%u)\n", u4StaRecIdx);
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, ERROR, "prStaRec is null.\n");
connectivity/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(QM, WARN,
connectivity/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(WMM, TRACE,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, ERROR,
connectivity/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(QM, TRACE,
connectivity/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, INFO, "Set Sta[%u] TxAllowed from [%u] to [%u] %s TxQ\n",
connectivity/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, LOUD, "Enter qmEnqueueTxPackets\n");
connectivity/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(QM, LOUD, "Enqueue MSDU by StaRec[%u]!\n",
connectivity/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(QM, TRACE,
connectivity/wlan/core/gen4m/nic/que_mgt.c:					DBGLOG(QM, INFO,
connectivity/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(QM, TRACE,
connectivity/wlan/core/gen4m/nic/que_mgt.c:					DBGLOG(QM, INFO,
connectivity/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(QM, TRACE,
connectivity/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, LOUD,
connectivity/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(QM, LOUD, "TX with DA = BMCAST\n");
connectivity/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(QM, LOUD,
connectivity/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(QM, LOUD, "TX with AP_STA[%u]\n",
connectivity/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(QM, LOUD, "TX with STA[%u]\n",
connectivity/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, LOUD, "QM: TX with STA_REC_INDEX_NOT_FOUND\n");
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(TX, LOUD,
connectivity/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, TEMP,
connectivity/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(QM, TRACE, "AC %d Pending Pkts %u\n",
connectivity/wlan/core/gen4m/nic/que_mgt.c:					DBGLOG_LIMITED(QM, WARN,
connectivity/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, TEMP,
connectivity/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, TEMP, "Enter %s (TC = %d, quota = %u)\n",
connectivity/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, TEMP, "Enter %s (TC = %d, quota = %u)\n",
connectivity/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, TEMP, "Enter qmDequeueTxPackets\n");
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, TEMP, "Dequeue packets from Per-STA queue[%u]\n", i);
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, TEMP, "DQA)[%u](%u)\n", i,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, LOUD,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, ERROR, "QM: (Error) u4ShareCount = 0\n");
connectivity/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, INFO,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, LOUD,
connectivity/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(QM, ERROR,
connectivity/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(QM, ERROR,
connectivity/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(RX, WARN,
connectivity/wlan/core/gen4m/nic/que_mgt.c:					DBGLOG(QM, TRACE,
connectivity/wlan/core/gen4m/nic/que_mgt.c:					DBGLOG(QM, TRACE,
connectivity/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(QM, WARN,
connectivity/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(QM, INFO,
connectivity/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(QM, INFO,
connectivity/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(QM, TRACE,
connectivity/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(QM, TRACE,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG_LIMITED(QM, WARN, "TID from RXD = %d, out of range!!\n",
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG_LIMITED(QM, ERROR,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, WARN,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, WARN,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, TRACE,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, TRACE, "QM:(BAR)(%d)(%u){%u,%u}\n",
connectivity/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG_LIMITED(QM, LOUD, "QM:(R)[%u](%u){%u,%u}\n", prSwRfb->ucTid,
connectivity/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(QM, INFO, "NO drop = FALSE, [%d][%d]\n",
connectivity/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(QM, LOUD, "QM:(A)[%d](%u){%u,%u}\n",
connectivity/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG_LIMITED(QM, INFO,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG_LIMITED(QM, TRACE, "QM: Miss Count:[%llu]\n",
connectivity/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(QM, LOUD, "QM: No drop packet:[%d](%d){%d,%d}\n",
connectivity/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(QM, LOUD, "QM:(P)[%d](%u){%u,%u}\n",
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, LOUD, "QM:(D)[%d](%u){%u,%u}\n",
connectivity/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(QM, TRACE,
connectivity/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(QM, TRACE,
connectivity/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(QM, LOUD, "QM: [%d] %d (%d)\n",
connectivity/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(QM, TRACE,
connectivity/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG_LIMITED(QM, TRACE, "QM: [%d] %d (%d)\n",
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, TRACE,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, TRACE,
connectivity/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, TRACE,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, TRACE, "QM:(Bub Check Cancel) No Rx BA entry\n");
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, TRACE,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, TRACE,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, TRACE,
connectivity/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, TRACE,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, TRACE,
connectivity/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(QM, TRACE,
connectivity/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(QM, TRACE,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, TRACE,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, TRACE,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, TRACE,
connectivity/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, INFO, "QM:Event +TxBa\n");
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, INFO, "QM:Event +TxBa but chip is not support\n");
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, INFO,
connectivity/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, INFO,
connectivity/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, INFO, "QM:Event +RxBa\n");
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, INFO,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, WARN,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, ERROR, "QM: (Error) qmAddRxBaEntry() failure\n");
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, WARN,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, ERROR,
connectivity/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(QM, LOUD,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, INFO,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, ERROR, "QM: **AddBA Error** (ucRxBaCount=%d)\n",
connectivity/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(QM, TRACE,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, INFO, "QM: -RxBA(STA=%d,TID=%d)\n",
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, TRACE,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, TRACE,
connectivity/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(WMM, INFO,
connectivity/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, TRACE,
connectivity/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(QM, WARN,
connectivity/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(QM, WARN,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, TRACE,
connectivity/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, TRACE, "Enter %s\n", __func__);
connectivity/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, TRACE, "QM: (fgIsWmmSupported=%d, fgIsQoS=%d)\n",
connectivity/wlan/core/gen4m/nic/que_mgt.c:					DBGLOG(WMM, INFO,
connectivity/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(QM, INFO, "MQM: Incorrect SP length\n");
connectivity/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, LOUD, "\n");
connectivity/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, LOUD, "\n");
connectivity/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(QM, TRACE,
connectivity/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(TX, TRACE,
connectivity/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(TX, TRACE,
connectivity/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(QM, TRACE,
connectivity/wlan/core/gen4m/nic/que_mgt.c:					DBGLOG(QM, INFO,
connectivity/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(QM, INFO,
connectivity/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, INFO, "NAF=%d,%d,%d\n",
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, INFO, "PS=%d,%d\n",
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, TRACE, "UFQ=%d,%d,%d\n",
connectivity/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, LOUD,
connectivity/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, LOUD, "qmUpdateFreeQuota new ucFreeQuota=%d)\n",
connectivity/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, LOUD,
connectivity/wlan/core/gen4m/nic/que_mgt.c:	LOGBUF(pucBuf, u4Max, u4Len, "\n");
connectivity/wlan/core/gen4m/nic/que_mgt.c:	LOGBUF(pucBuf, u4Max, u4Len,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		LOGBUF(pucBuf, u4Max, u4Len,
connectivity/wlan/core/gen4m/nic/que_mgt.c:	LOGBUF(pucBuf, u4Max, u4Len,
connectivity/wlan/core/gen4m/nic/que_mgt.c:	LOGBUF(pucBuf, u4Max, u4Len,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		LOGBUF(pucBuf, u4Max, u4Len,
connectivity/wlan/core/gen4m/nic/que_mgt.c:	LOGBUF(pucBuf, u4Max, u4Len,
connectivity/wlan/core/gen4m/nic/que_mgt.c:	LOGBUF(pucBuf, u4Max, u4Len,
connectivity/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(SW4, INFO, "---------------------------------\n");
connectivity/wlan/core/gen4m/nic/que_mgt.c:		LOGBUF(pucBuf, u4Max, u4Len,
connectivity/wlan/core/gen4m/nic/que_mgt.c:	LOGBUF(pucBuf, u4Max, u4Len,
connectivity/wlan/core/gen4m/nic/que_mgt.c:	LOGBUF(pucBuf, u4Max, u4Len,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		LOGBUF(pucBuf, u4Max, u4Len,
connectivity/wlan/core/gen4m/nic/que_mgt.c:	LOGBUF(pucBuf, u4Max, u4Len, "Pending FWD CNT[%d]\n",
connectivity/wlan/core/gen4m/nic/que_mgt.c:	LOGBUF(pucBuf, u4Max, u4Len, "Pending MGMT CNT[%d]\n",
connectivity/wlan/core/gen4m/nic/que_mgt.c:	LOGBUF(pucBuf, u4Max, u4Len,
connectivity/wlan/core/gen4m/nic/que_mgt.c:	LOGBUF(pucBuf, u4Max, u4Len, "Total RFB[%u]\n",
connectivity/wlan/core/gen4m/nic/que_mgt.c:	LOGBUF(pucBuf, u4Max, u4Len, "rFreeSwRfbList[%u]\n",
connectivity/wlan/core/gen4m/nic/que_mgt.c:	LOGBUF(pucBuf, u4Max, u4Len, "rReceivedRfbList[%u]\n",
connectivity/wlan/core/gen4m/nic/que_mgt.c:	LOGBUF(pucBuf, u4Max, u4Len, "rIndicatedRfbList[%u]\n",
connectivity/wlan/core/gen4m/nic/que_mgt.c:	LOGBUF(pucBuf, u4Max, u4Len, "ucNumIndPacket[%u]\n",
connectivity/wlan/core/gen4m/nic/que_mgt.c:	LOGBUF(pucBuf, u4Max, u4Len, "ucNumRetainedPacket[%u]\n",
connectivity/wlan/core/gen4m/nic/que_mgt.c:	LOGBUF(pucBuf, u4Max, u4Len,
connectivity/wlan/core/gen4m/nic/que_mgt.c:	LOGBUF(pucBuf, u4Max, u4Len,
connectivity/wlan/core/gen4m/nic/que_mgt.c:	LOGBUF(pucBuf, u4Max, u4Len,
connectivity/wlan/core/gen4m/nic/que_mgt.c:	LOGBUF(pucBuf, u4Max, u4Len,
connectivity/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, WARN, "[Puff]: Enter mqmSendDelBaFrame()\n");
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, WARN,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, WARN,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, WARN,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(RSN, INFO, "Set MSDU_OPT_PROTECTED_FRAME\n");
connectivity/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, WARN,
connectivity/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, WARN,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, WARN, "[Puff][%s]: (Warning) sta_rec is not inuse\n",
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, WARN,
connectivity/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(QM, WARN,
connectivity/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, WARN,
connectivity/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(QM, WARN,
connectivity/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(QM, WARN,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, WARN, "[Puff][%s]: eStatus are identical...\n",
connectivity/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, WARN,
connectivity/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(QM, WARN,
connectivity/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(QM, WARN,
connectivity/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(QM, WARN,
connectivity/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(QM, WARN,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, WARN,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, WARN,
connectivity/wlan/core/gen4m/nic/que_mgt.c:						DBGLOG(QM, ERROR,
connectivity/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(QM, WARN,
connectivity/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(QM, WARN,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, WARN,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, WARN,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, WARN,
connectivity/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(RSN, INFO, "Set MSDU_OPT_PROTECTED_FRAME\n");
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, WARN,
connectivity/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(MQM, WARN,
connectivity/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(RLM, WARN, "[Puff][%s] Action(%d)\n", __func__,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(RLM, WARN,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(RLM, WARN,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(RLM, WARN, "[Puff][%s] (RX_BA) DELBA <--- peer\n",
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(RLM, WARN, "[Puff][%s] Unknown BA Action Frame\n",
connectivity/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(INIT, WARN,
connectivity/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(INIT, TRACE,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(INIT, WARN,
connectivity/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(INIT, TRACE, "Gateway ip: %d.%d.%d.%d\n",
connectivity/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(INIT, WARN,
connectivity/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(INIT, WARN,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, ERROR, "Please input valid pu8Rets\n");
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, ERROR, "Please input valid uPNNum:%d\n", uPNNum);
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, ERROR, "Please input valid PNS:%p and PNT:%p\n",
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, ERROR, "PN2U64 failed\n");
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG_LIMITED(QM, TRACE, "Group 1 invalid\n");
connectivity/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG_LIMITED(QM, TRACE, "ucSecMode = [%u], ChiperGroup = [%u]\n",
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG_LIMITED(QM, TRACE,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, ERROR,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, ERROR, "KeyID: %d error\n", ucKeyID);
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, TRACE,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, INFO,
connectivity/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG_LIMITED(QM, TRACE,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG_LIMITED(QM, WARN, "Drop BC replay packet!\n");
connectivity/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, INFO, "Pending MSDUs for TC 0~3, %u %u %u %u\n",
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, ERROR, "prSta NULL %d, eAci %d, prAdapter NULL %d\n",
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, ERROR, "prAisBssInfo NULL\n");
connectivity/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, INFO, "new ACI %d, ACM %d, HasTs %d\n", eAci,
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, ERROR, "No channel occupation\n");
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, INFO, "Let the join timer count down.\n");
connectivity/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, INFO, "Earily release channel\n");
connectivity/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, INFO, "No pending request\n");
connectivity/wlan/adaptor/wifi_pwr_on.c:#define WIFI_FW_LOG_DBG             3
connectivity/wlan/adaptor/wifi_pwr_on.c:#define WIFI_FW_LOG_INFO            2
connectivity/wlan/adaptor/wifi_pwr_on.c:#define WIFI_FW_LOG_WARN            1
connectivity/wlan/adaptor/wifi_pwr_on.c:#define WIFI_FW_LOG_ERR             0
connectivity/wlan/adaptor/wifi_pwr_on.c:uint32_t DbgLevel = WIFI_FW_LOG_DBG;
connectivity/wlan/adaptor/wmt_cdev_wifi.c:#define WIFI_LOG_DBG                  3
connectivity/wlan/adaptor/wmt_cdev_wifi.c:#define WIFI_LOG_INFO                 2
connectivity/wlan/adaptor/wmt_cdev_wifi.c:#define WIFI_LOG_WARN                 1
connectivity/wlan/adaptor/wmt_cdev_wifi.c:#define WIFI_LOG_ERR                  0
connectivity/wlan/adaptor/wmt_cdev_wifi.c:uint32_t gDbgLevel = WIFI_LOG_DBG;
connectivity/wlan/adaptor/fw_log_wifi.h:#ifndef _FW_LOG_WIFI_H_
connectivity/wlan/adaptor/fw_log_wifi.h:#define _FW_LOG_WIFI_H_
connectivity/wlan/adaptor/fw_log_wifi.h:#endif /*_FW_LOG_WIFI_H_*/
connectivity/fmradio/core/fm_module.c:	case FM_IOCTL_RDS_GET_LOG:{
connectivity/fmradio/core/fm_module.c:			WCN_DBG(FM_DBG | MAIN, "......FM_IOCTL_RDS_GET_LOG......\n");
connectivity/fmradio/core/fm_config.c:#elif defined FM_ANALOG_INPUT
connectivity/fmradio/core/fm_config.c:		cfg->aud_cfg.aud_path = FM_AUD_ANALOG;
connectivity/fmradio/chips/mt6635/inc/mt6635_fm_reg.h:	ANALOG_I2S = 0x0080,	/* 0x61 D7, 0:lineout,  1:I2S */
connectivity/fmradio/chips/mt6635/pub/mt6635_2_fm_lib.c:#define FM_CQI_LOG_PATH "/mnt/sdcard/fmcqilog"
connectivity/fmradio/chips/mt6635/pub/mt6635_2_fm_lib.c:		fm_memcpy(cqi_log_path, FM_CQI_LOG_PATH, strlen(FM_CQI_LOG_PATH));
connectivity/fmradio/chips/mt6635/pub/mt6635_2_fm_lib.c:		sprintf(&cqi_log_path[strlen(FM_CQI_LOG_PATH)], "%d.txt", k + 1);
connectivity/fmradio/chips/mt6635/pub/mt6635_fm_lib.c:#define FM_CQI_LOG_PATH "/mnt/sdcard/fmcqilog"
connectivity/fmradio/chips/mt6635/pub/mt6635_fm_lib.c:		fm_memcpy(cqi_log_path, FM_CQI_LOG_PATH, strlen(FM_CQI_LOG_PATH));
connectivity/fmradio/chips/mt6635/pub/mt6635_fm_lib.c:		sprintf(&cqi_log_path[strlen(FM_CQI_LOG_PATH)], "%d.txt", k + 1);
connectivity/fmradio/chips/mt6635/pub/mt6635_fm_rds.c:DEFINE_RDSLOG(mt6635_rds_log);
connectivity/fmradio/chips/mt6631/inc/mt6631_fm_reg.h:	ANALOG_I2S = 0x0080,	/* 0x61 D7, 0:lineout,  1:I2S */
connectivity/fmradio/chips/mt6631/pub/mt6631_fm_lib.c:#define FM_CQI_LOG_PATH "/mnt/sdcard/fmcqilog"
connectivity/fmradio/chips/mt6631/pub/mt6631_fm_lib.c:		fm_memcpy(cqi_log_path, FM_CQI_LOG_PATH, strlen(FM_CQI_LOG_PATH));
connectivity/fmradio/chips/mt6631/pub/mt6631_fm_lib.c:		sprintf(&cqi_log_path[strlen(FM_CQI_LOG_PATH)], "%d.txt", k + 1);
connectivity/fmradio/chips/mt6631/pub/mt6631_fm_rds.c:DEFINE_RDSLOG(mt6631_rds_log);
connectivity/fmradio/chips/soc/inc/soc_fm_reg.h:	ANALOG_I2S = 0x0080,	/* 0x61 D7, 0:lineout,  1:I2S */
connectivity/fmradio/chips/soc/pub/soc_fm_lib.c:#define FM_CQI_LOG_PATH "/mnt/sdcard/fmcqilog"
connectivity/fmradio/chips/soc/pub/soc_fm_lib.c:		fm_memcpy(cqi_log_path, FM_CQI_LOG_PATH, strlen(FM_CQI_LOG_PATH));
connectivity/fmradio/chips/soc/pub/soc_fm_lib.c:		sprintf(&cqi_log_path[strlen(FM_CQI_LOG_PATH)], "%d.txt", k + 1);
connectivity/fmradio/chips/soc/pub/soc_fm_rds.c:DEFINE_RDSLOG(mt6580_rds_log);
connectivity/fmradio/chips/mt6632/inc/mt6632_fm_reg.h:	ANALOG_I2S = 0x0080,	/* 0x61 D7, 0:lineout,  1:I2S */
connectivity/fmradio/chips/mt6632/pub/mt6632_fm_lib.c:	*if (mt6632_fm_config.aud_cfg.aud_path == FM_AUD_ANALOG)
connectivity/fmradio/chips/mt6632/pub/mt6632_fm_lib.c:#define FM_CQI_LOG_PATH "/mnt/sdcard/fmcqilog"
connectivity/fmradio/chips/mt6632/pub/mt6632_fm_lib.c:		fm_memcpy(cqi_log_path, FM_CQI_LOG_PATH, strlen(FM_CQI_LOG_PATH));
connectivity/fmradio/chips/mt6632/pub/mt6632_fm_lib.c:		sprintf(&cqi_log_path[strlen(FM_CQI_LOG_PATH)], "%d.txt", k + 1);
connectivity/fmradio/chips/mt6632/pub/mt6632_fm_rds.c:DEFINE_RDSLOG(mt6632_rds_log);
connectivity/fmradio/chips/mt6630/inc/mt6630_fm_reg.h:	ANALOG_I2S = 0x0080,	/* 0x61 D7, 0:lineout,  1:I2S */
connectivity/fmradio/chips/mt6630/pub/mt6630_fm_rds.c:DEFINE_RDSLOG(mt6630_rds_log);
connectivity/fmradio/chips/mt6630/pub/mt6630_fm_lib.c:	if (fm_config.aud_cfg.aud_path == FM_AUD_ANALOG)
connectivity/fmradio/chips/mt6630/pub/mt6630_fm_lib.c:#define FM_CQI_LOG_PATH "/mnt/sdcard/fmcqilog"
connectivity/fmradio/chips/mt6630/pub/mt6630_fm_lib.c:		fm_memcpy(cqi_log_path, FM_CQI_LOG_PATH, strlen(FM_CQI_LOG_PATH));
connectivity/fmradio/chips/mt6630/pub/mt6630_fm_lib.c:		sprintf(&cqi_log_path[strlen(FM_CQI_LOG_PATH)], "%d.txt", k + 1);
connectivity/fmradio/chips/mt6630/pub/mt6630_fm_lib.c:	if (fm_config.aud_cfg.aud_path == FM_AUD_ANALOG)
connectivity/fmradio/chips/mt6627/inc/mt6627_fm_reg.h:	ANALOG_I2S = 0x0080,	/* 0x61 D7, 0:lineout,  1:I2S */
connectivity/fmradio/chips/mt6627/pub/mt6627_fm_rds.c:DEFINE_RDSLOG(mt6627_rds_log);
connectivity/fmradio/chips/mt6627/pub/mt6627_fm_lib.c:#define FM_CQI_LOG_PATH "/mnt/sdcard/fmcqilog"
connectivity/fmradio/chips/mt6627/pub/mt6627_fm_lib.c:		fm_memcpy(cqi_log_path, FM_CQI_LOG_PATH, strlen(FM_CQI_LOG_PATH));
connectivity/fmradio/chips/mt6627/pub/mt6627_fm_lib.c:		sprintf(&cqi_log_path[strlen(FM_CQI_LOG_PATH)], "%d.txt", k + 1);
connectivity/fmradio/inc/fm_rds.h:#define RDS_LOG_SIZE 1
connectivity/fmradio/inc/fm_rds.h:	struct rds_rx_t rds_log[RDS_LOG_SIZE];
connectivity/fmradio/inc/fm_rds.h:	signed int log_len[RDS_LOG_SIZE];
connectivity/fmradio/inc/fm_rds.h:#define DEFINE_RDSLOG(name) \
connectivity/fmradio/inc/fm_rds.h:		.size = RDS_LOG_SIZE, \
connectivity/fmradio/inc/fm_dbg.h:#define FM_LOG_DBG(flag, fmt, args...)
connectivity/fmradio/inc/fm_dbg.h:#define FM_LOG_INF(flag, fmt, args...) 
connectivity/fmradio/inc/fm_dbg.h:#define FM_LOG_NTC(flag, fmt, args...) 
connectivity/fmradio/inc/fm_dbg.h:#define FM_LOG_WAR(flag, fmt, args...)
connectivity/fmradio/inc/fm_dbg.h:#define FM_LOG_ERR(flag, fmt, args...) 
connectivity/fmradio/inc/fm_dbg.h:#define FM_LOG_CRT(flag, fmt, args...) 
connectivity/fmradio/inc/fm_dbg.h:#define FM_LOG_ALT(flag, fmt, args...) 
connectivity/fmradio/inc/fm_dbg.h:#define FM_LOG_EMG(flag, fmt, args...) 
connectivity/fmradio/inc/fm_interface.h:	FM_AUD_ANALOG = 0,
connectivity/fmradio/inc/fm_ioctl.h:#define FM_IOCTL_RDS_GET_LOG    _IOWR(FM_IOC_MAGIC, 35, struct rds_raw_t*)
connectivity/common/common_main/platform/mtk_wcn_consys_hw.c:	vir_addr = mtk_wcn_consys_emi_virt_addr_get(EXP_APMEM_CTRL_CHIP_FW_DBGLOG_MODE);
connectivity/common/common_main/platform/wmt_plat_alps.c:INT32 wmtPlatLogLvl = WMT_PLAT_LOG_INFO;
connectivity/common/common_main/platform/wmt_plat_alps.c:#else				/* FM_ANALOG_INPUT || FM_ANALOG_OUTPUT */
connectivity/common/common_main/platform/wmt_plat_alps.c:	vir_addr = mtk_wcn_consys_emi_virt_addr_get(EXP_APMEM_CTRL_CHIP_FW_DBGLOG_MODE);
connectivity/common/common_main/platform/include/mtk_wcn_consys_hw.h:	EXP_APMEM_CTRL_CHIP_FW_DBGLOG_MODE = 0x40,
connectivity/common/common_main/platform/include/mtk_wcn_consys_hw.h:typedef INT32(*CONSYS_IC_DEDICATED_LOG_PATH_INIT) (struct platform_device *pdev);
connectivity/common/common_main/platform/include/mtk_wcn_consys_hw.h:typedef VOID(*CONSYS_IC_DEDICATED_LOG_PATH_DEINIT) (VOID);
connectivity/common/common_main/platform/include/mtk_wcn_consys_hw.h:	CONSYS_IC_DEDICATED_LOG_PATH_INIT consys_ic_dedicated_log_path_init;
connectivity/common/common_main/platform/include/mtk_wcn_consys_hw.h:	CONSYS_IC_DEDICATED_LOG_PATH_DEINIT consys_ic_dedicated_log_path_deinit;
connectivity/common/common_main/core/wmt_ic_6630.c:	if (gWmtDbgLvl >= WMT_LOG_DBG) {
connectivity/common/common_main/core/wmt_ic_6630.c:	if (gWmtDbgLvl >= WMT_LOG_DBG) {
connectivity/common/common_main/core/wmt_ic_6630.c:	if (gWmtDbgLvl >= WMT_LOG_DBG) {
connectivity/common/common_main/core/wmt_ic_6630.c:	if (gWmtDbgLvl >= WMT_LOG_DBG) {
connectivity/common/common_main/core/stp_core.c:#define STP_LOG_DBG                  4
connectivity/common/common_main/core/stp_core.c:#define STP_LOG_PKHEAD               3
connectivity/common/common_main/core/stp_core.c:#define STP_LOG_INFO                 2
connectivity/common/common_main/core/stp_core.c:#define STP_LOG_WARN                 1
connectivity/common/common_main/core/stp_core.c:#define STP_LOG_ERR                  0
connectivity/common/common_main/core/stp_core.c:INT32 gStpDbgLvl = STP_LOG_INFO;
connectivity/common/common_main/core/stp_core.c:		if (gStpDbgLvl >= STP_LOG_DBG)
connectivity/common/common_main/core/stp_core.c:		stp_dbg_log_pkt(g_mtkstp_dbg, STP_DBG_FW_LOG, STP_TASK_INDX, 5, 0, 0, 0,
connectivity/common/common_main/core/stp_core.c:		stp_dbg_log_pkt(g_mtkstp_dbg, STP_DBG_FW_LOG, STP_TASK_INDX, 5, 0, 0, 0,
connectivity/common/common_main/core/stp_core.c:#ifndef CONFIG_LOG_STP_INTERNAL
connectivity/common/common_main/core/stp_core.c:				mtk_wcn_consys_stp_btif_logger_ctrl(BTIF_DUMP_LOG);
connectivity/common/common_main/core/stp_core.c:#ifndef CONFIG_LOG_STP_INTERNAL
connectivity/common/common_main/core/stp_core.c:	mtk_wcn_consys_stp_btif_logger_ctrl(BTIF_DUMP_LOG);
connectivity/common/common_main/core/stp_core.c:	mtk_wcn_consys_stp_btif_logger_ctrl(BTIF_DUMP_LOG);
connectivity/common/common_main/core/wmt_ic_6628.c:	if (gWmtDbgLvl >= WMT_LOG_DBG) {
connectivity/common/common_main/core/wmt_ic_6628.c:	if (gWmtDbgLvl >= WMT_LOG_DBG) {
connectivity/common/common_main/core/wmt_ic_6628.c:	if (gWmtDbgLvl >= WMT_LOG_DBG) {
connectivity/common/common_main/core/wmt_ic_6628.c:	if (gWmtDbgLvl >= WMT_LOG_DBG) {
connectivity/common/common_main/core/include/psm_core.h:#define STP_PSM_LOG_LOUD                 4
connectivity/common/common_main/core/include/psm_core.h:#define STP_PSM_LOG_DBG                  3
connectivity/common/common_main/core/include/psm_core.h:#define STP_PSM_LOG_INFO                 2
connectivity/common/common_main/core/include/psm_core.h:#define STP_PSM_LOG_WARN                 1
connectivity/common/common_main/core/include/psm_core.h:#define STP_PSM_LOG_ERR                  0
connectivity/common/common_main/core/include/wmt_lib.h:#define WMT_LOG_LOUD    4
connectivity/common/common_main/core/include/wmt_lib.h:#define WMT_LOG_DBG     3
connectivity/common/common_main/core/include/wmt_lib.h:#define WMT_LOG_INFO    2
connectivity/common/common_main/core/include/wmt_lib.h:#define WMT_LOG_WARN    1
connectivity/common/common_main/core/include/wmt_lib.h:#define WMT_LOG_ERR     0
connectivity/common/common_main/core/include/wmt_lib.h:	WMT_FWLOG_MCU = 0,
connectivity/common/common_main/core/include/wmt_lib.h:	WMT_FWLOG_MAX
connectivity/common/common_main/core/include/stp_core.h:#define STP_LOG_DBG                  4
connectivity/common/common_main/core/include/stp_core.h:#define STP_LOG_PKHEAD               3
connectivity/common/common_main/core/include/stp_core.h:#define STP_LOG_INFO                 2
connectivity/common/common_main/core/include/stp_core.h:#define STP_LOG_WARN                 1
connectivity/common/common_main/core/include/stp_core.h:#define STP_LOG_ERR                  0
connectivity/common/common_main/core/include/wmt_core.h:	WMT_OPID_FW_LOG_CTRL = 31,
connectivity/common/common_main/core/wmt_exp.c:INT32 gWmtDbgLvl = WMT_LOG_INFO;
connectivity/common/common_main/core/wmt_ic_6620.c:	if (gWmtDbgLvl >= WMT_LOG_DBG) {
connectivity/common/common_main/core/wmt_ic_6620.c:	if (gWmtDbgLvl >= WMT_LOG_DBG) {
connectivity/common/common_main/core/wmt_ic_6620.c:	if (gWmtDbgLvl >= WMT_LOG_DBG) {
connectivity/common/common_main/core/wmt_ic_6620.c:	if (gWmtDbgLvl >= WMT_LOG_DBG) {
connectivity/common/common_main/core/wmt_ic_6620.c:	if (gWmtDbgLvl >= WMT_LOG_DBG) {
connectivity/common/common_main/core/wmt_core.c:static UINT8 WMT_FW_LOG_CTRL_CMD[] = { 0x01, 0xF0, 0x04, 0x00, 0x01
connectivity/common/common_main/core/wmt_core.c:static UINT8 WMT_FW_LOG_CTRL_EVT[] = { 0x02, 0xF0, 0x02, 0x00, 0x01, 0x00 };
connectivity/common/common_main/core/wmt_core.c:	[WMT_OPID_FW_LOG_CTRL] = opfunc_fw_log_ctrl,
connectivity/common/common_main/core/wmt_core.c:	UINT8 WMT_FWLOGTST_CMD[] = { 0x01, 0x02, 0x01, 0x00, 0x0C };
connectivity/common/common_main/core/wmt_core.c:	UINT8 WMT_FWLOGTST_EVT[] = { 0x02, 0x02, 0x00, 0x00, 0x00 };
connectivity/common/common_main/core/wmt_core.c:		tstCmdSz = osal_sizeof(WMT_FWLOGTST_CMD);
connectivity/common/common_main/core/wmt_core.c:		tstEvtSz = osal_sizeof(WMT_FWLOGTST_EVT);
connectivity/common/common_main/core/wmt_core.c:		osal_memcpy(tstCmd, WMT_FWLOGTST_CMD, tstCmdSz);
connectivity/common/common_main/core/wmt_core.c:		osal_memcpy(tstEvt, WMT_FWLOGTST_EVT, tstEvtSz);
connectivity/common/common_main/core/wmt_core.c:	UINT8 evtBuf[osal_sizeof(WMT_FW_LOG_CTRL_EVT)];
connectivity/common/common_main/core/wmt_core.c:	WMT_FW_LOG_CTRL_CMD[5] = (UINT8)pWmtOp->au4OpData[0]; /* type */
connectivity/common/common_main/core/wmt_core.c:	WMT_FW_LOG_CTRL_CMD[6] = (UINT8)pWmtOp->au4OpData[1]; /* on/off */
connectivity/common/common_main/core/wmt_core.c:	WMT_FW_LOG_CTRL_CMD[7] = (UINT8)pWmtOp->au4OpData[2]; /* log level */
connectivity/common/common_main/core/wmt_core.c:	iRet = wmt_core_tx(WMT_FW_LOG_CTRL_CMD, sizeof(WMT_FW_LOG_CTRL_CMD), &u4Res, MTK_WCN_BOOL_FALSE);
connectivity/common/common_main/core/wmt_core.c:		WMT_ERR_FUNC("Tx WMT_FW_LOG_CTRL_CMD fail!(%d) len (%d, %zu)\n", iRet, u4Res,
connectivity/common/common_main/core/wmt_core.c:				sizeof(WMT_FW_LOG_CTRL_CMD));
connectivity/common/common_main/core/wmt_core.c:	evtLen = osal_sizeof(WMT_FW_LOG_CTRL_EVT);
connectivity/common/common_main/core/wmt_core.c:		WMT_ERR_FUNC("WMT-CORE: read WMT_FW_LOG_CTRL_EVT fail(%d) len(%d, %d)\n", iRet, u4Res, evtLen);
connectivity/common/common_main/core/wmt_core.c:	if (osal_memcmp(evtBuf, WMT_FW_LOG_CTRL_EVT, evtLen) != 0) {
connectivity/common/common_main/core/wmt_core.c:		WMT_ERR_FUNC("WMT-CORE: compare WMT_FW_LOG_CTRL_EVT error\n");
connectivity/common/common_main/core/wmt_core.c:				osal_sizeof(WMT_FW_LOG_CTRL_CMD), WMT_FW_LOG_CTRL_CMD[0], WMT_FW_LOG_CTRL_CMD[1],
connectivity/common/common_main/core/wmt_core.c:				WMT_FW_LOG_CTRL_CMD[2], WMT_FW_LOG_CTRL_CMD[3], WMT_FW_LOG_CTRL_CMD[4],
connectivity/common/common_main/core/wmt_core.c:				WMT_FW_LOG_CTRL_CMD[5], WMT_FW_LOG_CTRL_CMD[6], WMT_FW_LOG_CTRL_CMD[7]);
connectivity/common/common_main/core/wmt_core.c:		WMT_INFO_FUNC("Send WMT_FW_LOG_CTRL_EVT command OK!\n");
connectivity/common/common_main/core/wmt_ic_6632.c:	if (gWmtDbgLvl >= WMT_LOG_DBG) {
connectivity/common/common_main/core/wmt_ic_6632.c:	if (gWmtDbgLvl >= WMT_LOG_DBG) {
connectivity/common/common_main/core/wmt_ic_6632.c:	if (gWmtDbgLvl >= WMT_LOG_DBG) {
connectivity/common/common_main/core/wmt_ic_6632.c:	if (gWmtDbgLvl >= WMT_LOG_DBG) {
connectivity/common/common_main/core/wmt_ic_6632.c:	if (gWmtDbgLvl >= WMT_LOG_DBG) {
connectivity/common/common_main/core/wmt_ic_6632.c:	if (gWmtDbgLvl >= WMT_LOG_DBG) {
connectivity/common/common_main/core/psm_core.c:INT32 gPsmDbgLevel = STP_PSM_LOG_INFO;
connectivity/common/common_main/core/psm_core.c:	if (gPsmDbgLevel >= STP_PSM_LOG_LOUD)
connectivity/common/common_main/core/wmt_lib.c:	gWmtDbgLvl = level > WMT_LOG_LOUD ? WMT_LOG_LOUD : level;
connectivity/common/common_main/core/wmt_lib.c:	pOp->op.opId = WMT_OPID_FW_LOG_CTRL;
connectivity/common/common_main/core/btm_core.c:#define STP_BTM_LOG_LOUD                 4
connectivity/common/common_main/core/btm_core.c:#define STP_BTM_LOG_DBG                  3
connectivity/common/common_main/core/btm_core.c:#define STP_BTM_LOG_INFO                 2
connectivity/common/common_main/core/btm_core.c:#define STP_BTM_LOG_WARN                 1
connectivity/common/common_main/core/btm_core.c:#define STP_BTM_LOG_ERR                  0
connectivity/common/common_main/core/btm_core.c:INT32 gBtmDbgLevel = STP_BTM_LOG_INFO;
connectivity/common/common_main/core/wmt_ic_soc.c:	if (gWmtDbgLvl >= WMT_LOG_DBG)
connectivity/common/common_main/core/wmt_ic_soc.c:	if (gWmtDbgLvl >= WMT_LOG_DBG)
connectivity/common/common_main/core/wmt_ic_soc.c:	if (gWmtDbgLvl >= WMT_LOG_DBG)
connectivity/common/common_main/core/wmt_ic_soc.c:	if (gWmtDbgLvl >= WMT_LOG_DBG)
connectivity/common/common_main/core/wmt_ic_soc.c:	if (gWmtDbgLvl >= WMT_LOG_DBG) {
connectivity/common/common_main/core/wmt_ic_soc.c:	if (gWmtDbgLvl >= WMT_LOG_DBG) {
connectivity/common/common_main/core/wmt_ic_soc.c:	if (gWmtDbgLvl >= WMT_LOG_DBG)
connectivity/common/common_main/core/wmt_ic_soc.c:	if (gWmtDbgLvl >= WMT_LOG_DBG)
connectivity/common/common_main/include/wmt_plat.h:#define WMT_PLAT_LOG_LOUD                 4
connectivity/common/common_main/include/wmt_plat.h:#define WMT_PLAT_LOG_DBG                  3
connectivity/common/common_main/include/wmt_plat.h:#define WMT_PLAT_LOG_INFO                 2
connectivity/common/common_main/include/wmt_plat.h:#define WMT_PLAT_LOG_WARN                 1
connectivity/common/common_main/include/wmt_plat.h:#define WMT_PLAT_LOG_ERR                  0
connectivity/common/common_main/include/wmt_exp.h:#define WMT_LOG_LOUD    4
connectivity/common/common_main/include/wmt_exp.h:#define WMT_LOG_DBG     3
connectivity/common/common_main/include/wmt_exp.h:#define WMT_LOG_INFO    2
connectivity/common/common_main/include/wmt_exp.h:#define WMT_LOG_WARN    1
connectivity/common/common_main/include/wmt_exp.h:#define WMT_LOG_ERR     0
connectivity/common/common_main/linux/wmt_dev.c:#define WMT_IOCTL_FW_DBGLOG_CTRL	_IOR(WMT_IOC_MAGIC, 29, int)
connectivity/common/common_main/linux/wmt_dev.c:	if (gWmtDbgLvl >= WMT_LOG_DBG) {
connectivity/common/common_main/linux/wmt_dev.c:	case WMT_IOCTL_FW_DBGLOG_CTRL:
connectivity/common/common_main/linux/stp_sdio.c:#define STPSDIO_LOG_LOUD    5
connectivity/common/common_main/linux/stp_sdio.c:#define STPSDIO_LOG_DBG     4
connectivity/common/common_main/linux/stp_sdio.c:#define STPSDIO_LOG_HINT    3
connectivity/common/common_main/linux/stp_sdio.c:#define STPSDIO_LOG_INFO    2
connectivity/common/common_main/linux/stp_sdio.c:#define STPSDIO_LOG_WARN    1
connectivity/common/common_main/linux/stp_sdio.c:#define STPSDIO_LOG_ERR     0
connectivity/common/common_main/linux/stp_sdio.c:INT32 gStpSdioDbgLvl = STPSDIO_LOG_INFO;
connectivity/common/common_main/linux/stp_sdio.c:		gStpSdioDbgLvl = STPSDIO_LOG_WARN;
connectivity/common/common_main/linux/stp_sdio.c:		STPSDIO_PR_WARN("set STP-SDIO LogLevel to STPSDIO_LOG_WARN\n\r");
connectivity/common/common_main/linux/stp_sdio.c:		gStpSdioDbgLvl = STPSDIO_LOG_INFO;
connectivity/common/common_main/linux/stp_sdio.c:		STPSDIO_PR_INFO("set STP-SDIO LogLevel to STPSDIO_LOG_INFO\n\r");
connectivity/common/common_main/linux/stp_sdio.c:		gStpSdioDbgLvl = STPSDIO_LOG_HINT;
connectivity/common/common_main/linux/stp_sdio.c:		STPSDIO_PR_INFO("set STP-SDIO LogLevel to STPSDIO_LOG_HINT\n\r");
connectivity/common/common_main/linux/stp_sdio.c:		gStpSdioDbgLvl = STPSDIO_LOG_DBG;
connectivity/common/common_main/linux/stp_sdio.c:		STPSDIO_PR_INFO("set STP-SDIO LogLevel to STPSDIO_LOG_DBG\n\r");
connectivity/common/common_main/linux/stp_sdio.c:		gStpSdioDbgLvl = STPSDIO_LOG_LOUD;
connectivity/common/common_main/linux/stp_sdio.c:		STPSDIO_PR_INFO("set STP-SDIO LogLevel to STPSDIO_LOG_LOUD\n\r");
connectivity/common/common_main/linux/stp_dbg.c:INT32 gStpDbgDbgLevel = STP_DBG_LOG_INFO;
connectivity/common/common_main/linux/stp_dbg.c:#ifndef LOG_STP_DEBUG_DISABLE
connectivity/common/common_main/linux/stp_dbg.c:	memset(stp_dbg->logsys, 0, sizeof(MTKSTP_LOG_SYS_T));
connectivity/common/common_main/linux/stp_dbg.c:	       0, ((len >= STP_DBG_LOG_ENTRY_SZ) ? (STP_DBG_LOG_ENTRY_SZ) : (len)));
connectivity/common/common_main/linux/stp_dbg.c:	       buf, ((len >= STP_DBG_LOG_ENTRY_SZ) ? (STP_DBG_LOG_ENTRY_SZ) : (len)));
connectivity/common/common_main/linux/stp_dbg.c:	stp_dbg->logsys->size = (stp_dbg->logsys->size > STP_DBG_LOG_ENTRY_NUM) ?
connectivity/common/common_main/linux/stp_dbg.c:				STP_DBG_LOG_ENTRY_NUM : stp_dbg->logsys->size;
connectivity/common/common_main/linux/stp_dbg.c:	    (stp_dbg->logsys->in >= (STP_DBG_LOG_ENTRY_NUM - 1)) ? (0) : (stp_dbg->logsys->in + 1);
connectivity/common/common_main/linux/stp_dbg.c:/* #ifndef CONFIG_LOG_STP_INTERNAL */
connectivity/common/common_main/linux/stp_dbg.c:	MTKSTP_LOG_SYS_T *logsys = container_of(work, MTKSTP_LOG_SYS_T, dump_work);
connectivity/common/common_main/linux/stp_dbg.c:	MTKSTP_LOG_ENTRY_T *queue = logsys->dump_queue;
connectivity/common/common_main/linux/stp_dbg.c:	if (queue == NULL || queue == (MTKSTP_LOG_ENTRY_T *)STP_MAGIC_NUM)
connectivity/common/common_main/linux/stp_dbg.c:	MTKSTP_LOG_ENTRY_T *dump_queue = NULL;
connectivity/common/common_main/linux/stp_dbg.c:	MTKSTP_LOG_ENTRY_T *queue = stp_dbg->logsys->queue;
connectivity/common/common_main/linux/stp_dbg.c:	stp_dbg->logsys->dump_queue = (MTKSTP_LOG_ENTRY_T *)STP_MAGIC_NUM;
connectivity/common/common_main/linux/stp_dbg.c:	dump_queue = vmalloc(sizeof(MTKSTP_LOG_ENTRY_T) * MAX_DMP_NUM);
connectivity/common/common_main/linux/stp_dbg.c:	if (dumpSize == STP_DBG_LOG_ENTRY_NUM)
connectivity/common/common_main/linux/stp_dbg.c:		outIndex = ((inIndex + STP_DBG_LOG_ENTRY_NUM) - dumpSize) % STP_DBG_LOG_ENTRY_NUM;
connectivity/common/common_main/linux/stp_dbg.c:		outIndex %= STP_DBG_LOG_ENTRY_NUM;
connectivity/common/common_main/linux/stp_dbg.c:	if (outIndex + dumpSize > STP_DBG_LOG_ENTRY_NUM) {
connectivity/common/common_main/linux/stp_dbg.c:		UINT32 tailNum = STP_DBG_LOG_ENTRY_NUM  - outIndex;
connectivity/common/common_main/linux/stp_dbg.c:		osal_memcpy(dump_queue, &(queue[outIndex]), sizeof(MTKSTP_LOG_ENTRY_T) * tailNum);
connectivity/common/common_main/linux/stp_dbg.c:		osal_memcpy(dump_queue + tailNum, &(queue[0]), sizeof(MTKSTP_LOG_ENTRY_T) *
connectivity/common/common_main/linux/stp_dbg.c:		osal_memcpy(dump_queue, &(queue[outIndex]), sizeof(MTKSTP_LOG_ENTRY_T) * dumpSize);
connectivity/common/common_main/linux/stp_dbg.c:		if (stp_dbg->logsys->queue[stp_dbg->logsys->out].len >= STP_DBG_LOG_ENTRY_SZ)
connectivity/common/common_main/linux/stp_dbg.c:			stp_dbg->logsys->queue[stp_dbg->logsys->out].len = STP_DBG_LOG_ENTRY_SZ - 1;
connectivity/common/common_main/linux/stp_dbg.c:		    (stp_dbg->logsys->out >= (STP_DBG_LOG_ENTRY_NUM - 1)) ?
connectivity/common/common_main/linux/stp_dbg.c:			j += STP_DBG_LOG_ENTRY_NUM;
connectivity/common/common_main/linux/stp_dbg.c:		return STP_DBG_LOG_ENTRY_NUM;
connectivity/common/common_main/linux/stp_dbg.c:		    (STP_DBG_LOG_ENTRY_NUM - stp_dbg->logsys->in + stp_dbg->logsys->out) :
connectivity/common/common_main/linux/stp_dbg.c:#ifndef LOG_STP_DEBUG_DISABLE
connectivity/common/common_main/linux/stp_dbg.c:		UINT8 str[DBG_LOG_STR_SIZE] = {""};
connectivity/common/common_main/linux/stp_dbg.c:	stp_dbg->logsys = vmalloc(sizeof(MTKSTP_LOG_SYS_T));
connectivity/common/common_main/linux/stp_dbg.c:	memset(stp_dbg->logsys, 0, sizeof(MTKSTP_LOG_SYS_T));
connectivity/common/common_main/linux/stp_uart.c:#define UART_LOG_LOUD                 4
connectivity/common/common_main/linux/stp_uart.c:#define UART_LOG_DBG                  3
connectivity/common/common_main/linux/stp_uart.c:#define UART_LOG_INFO                 2
connectivity/common/common_main/linux/stp_uart.c:#define UART_LOG_WARN                 1
connectivity/common/common_main/linux/stp_uart.c:#define UART_LOG_ERR                  0
connectivity/common/common_main/linux/stp_uart.c:static INT32 gDbgLevel = UART_LOG_INFO;
connectivity/common/common_main/linux/stp_dbg_soc.c:#define DUMP_LOG_BYTES_PER_LINE (128)
connectivity/common/common_main/linux/stp_dbg_soc.c:	UINT8 line[DUMP_LOG_BYTES_PER_LINE + 1];
connectivity/common/common_main/linux/stp_dbg_soc.c:		if (i >= DUMP_LOG_BYTES_PER_LINE || !size) {
connectivity/common/common_main/linux/include/stp_dbg.h:#define CONFIG_LOG_STP_INTERNAL
connectivity/common/common_main/linux/include/stp_dbg.h:#define STP_DBG_LOG_ENTRY_NUM 28
connectivity/common/common_main/linux/include/stp_dbg.h:#define STP_DBG_LOG_ENTRY_SZ 96
connectivity/common/common_main/linux/include/stp_dbg.h:#define STP_DBG_LOG_LOUD                 4
connectivity/common/common_main/linux/include/stp_dbg.h:#define STP_DBG_LOG_DBG                  3
connectivity/common/common_main/linux/include/stp_dbg.h:#define STP_DBG_LOG_INFO                 2
connectivity/common/common_main/linux/include/stp_dbg.h:#define STP_DBG_LOG_WARN                 1
connectivity/common/common_main/linux/include/stp_dbg.h:#define STP_DBG_LOG_ERR                  0
connectivity/common/common_main/linux/include/stp_dbg.h:	STP_DBG_FW_LOG = 4,
connectivity/common/common_main/linux/include/stp_dbg.h:	INT8 buffer[STP_DBG_LOG_ENTRY_SZ];
connectivity/common/common_main/linux/include/stp_dbg.h:} MTKSTP_LOG_ENTRY_T;
connectivity/common/common_main/linux/include/stp_dbg.h:	MTKSTP_LOG_ENTRY_T queue[STP_DBG_LOG_ENTRY_NUM];
connectivity/common/common_main/linux/include/stp_dbg.h:	MTKSTP_LOG_ENTRY_T *dump_queue;
connectivity/common/common_main/linux/include/stp_dbg.h:} MTKSTP_LOG_SYS_T;
connectivity/common/common_main/linux/include/stp_dbg.h:	MTKSTP_LOG_SYS_T *logsys;
connectivity/common/common_main/linux/include/fw_log_wmt.h:#ifndef _FW_LOG_WMT_H_
connectivity/common/common_main/linux/include/fw_log_wmt.h:#define _FW_LOG_WMT_H_
connectivity/common/common_main/linux/include/fw_log_wmt.h:#endif /*_FW_LOG_WMT_H_*/
connectivity/common/common_main/linux/include/wmt_step.h:#define STEP_OUTPUT_LOG 0
connectivity/common/common_main/linux/include/hif_sdio.h:#define HIF_SDIO_LOG_LOUD    4
connectivity/common/common_main/linux/include/hif_sdio.h:#define HIF_SDIO_LOG_DBG     3
connectivity/common/common_main/linux/include/hif_sdio.h:#define HIF_SDIO_LOG_INFO    2
connectivity/common/common_main/linux/include/hif_sdio.h:#define HIF_SDIO_LOG_WARN    1
connectivity/common/common_main/linux/include/hif_sdio.h:#define HIF_SDIO_LOG_ERR     0
connectivity/common/common_main/linux/include/osal.h:#define DBG_LOG_STR_SIZE    256
connectivity/common/common_main/linux/hif_sdio.c:INT32 gHifSdioDbgLvl = HIF_SDIO_LOG_INFO;
connectivity/common/common_main/linux/wmt_step.c:	p_emi_info->output_mode = STEP_OUTPUT_LOG;
connectivity/common/common_main/linux/wmt_step.c:	p_reg_info->output_mode = STEP_OUTPUT_LOG;
connectivity/common/common_main/linux/wmt_dbg.c:	par2 = (WMT_LOG_ERR <= par2 && WMT_LOG_LOUD >= par2) ? par2 : WMT_LOG_INFO;
connectivity/common/common_main/linux/osal.c:	INT8 tempString[DBG_LOG_STR_SIZE];
connectivity/common/common_main/linux/osal.c:	vsnprintf(tempString, DBG_LOG_STR_SIZE, str, args);
connectivity/common/common_main/linux/osal.c:	INT8 tempString[DBG_LOG_STR_SIZE];
connectivity/common/common_main/linux/osal.c:	vsnprintf(tempString, DBG_LOG_STR_SIZE, str, args);
connectivity/common/common_main/linux/osal.c:	INT8 tempString[DBG_LOG_STR_SIZE];
connectivity/common/common_main/linux/osal.c:	vsnprintf(tempString, DBG_LOG_STR_SIZE, str, args);
connectivity/common/common_main/linux/osal.c:	INT8 tempString[DBG_LOG_STR_SIZE];
connectivity/common/common_main/linux/osal.c:	vsnprintf(tempString, DBG_LOG_STR_SIZE, detail_description, args);
connectivity/common/common_main/linux/osal.c:	iRet = vsnprintf(str, DBG_LOG_STR_SIZE, format, args);
connectivity/common/common_main/linux/osal.c:	char str[DBG_LOG_STR_SIZE] = {""};
connectivity/common/common_main/linux/osal.c:	char str[DBG_LOG_STR_SIZE] = {""};
connectivity/common/wmt_build_in_adapter.c:#define CONNADP_LOG_LOUD    4
connectivity/common/wmt_build_in_adapter.c:#define CONNADP_LOG_DBG     3
connectivity/common/wmt_build_in_adapter.c:#define CONNADP_LOG_INFO    2
connectivity/common/wmt_build_in_adapter.c:#define CONNADP_LOG_WARN    1
connectivity/common/wmt_build_in_adapter.c:#define CONNADP_LOG_ERR     0
connectivity/common/wmt_build_in_adapter.c:static unsigned int gConnAdpDbgLvl = CONNADP_LOG_INFO;
connectivity/common/common_detect/wmt_detect.c:int gWmtDetectDbgLvl = WMT_DETECT_LOG_INFO;
connectivity/common/common_detect/mtk_wcn_stub_alps.c:#define CMB_STUB_DBG_LOG                  3
connectivity/common/common_detect/mtk_wcn_stub_alps.c:#define CMB_STUB_INFO_LOG                 2
connectivity/common/common_detect/mtk_wcn_stub_alps.c:#define CMB_STUB_WARN_LOG                 1
connectivity/common/common_detect/mtk_wcn_stub_alps.c:int gCmbStubLogLevel = CMB_STUB_INFO_LOG;
connectivity/common/common_detect/mtk_wcn_stub_alps.c:#define CMB_STUB_LOG_PR_INFO(fmt, arg...) 
connectivity/common/common_detect/mtk_wcn_stub_alps.c:#define CMB_STUB_LOG_PR_WARN(fmt, arg...) 
connectivity/common/common_detect/mtk_wcn_stub_alps.c:#define CMB_STUB_LOG_PR_DBG(fmt, arg...)
connectivity/common/common_detect/mtk_wcn_stub_alps.c:		CMB_STUB_LOG_PR_WARN("[cmb_stub] invalid p_stub_cb:0x%p size(%d)\n",
connectivity/common/common_detect/mtk_wcn_stub_alps.c:	CMB_STUB_LOG_PR_DBG("[cmb_stub] registered, p_stub_cb:0x%p size(%d)\n",
connectivity/common/common_detect/mtk_wcn_stub_alps.c:	CMB_STUB_LOG_PR_INFO("[cmb_stub] unregistered\n");	/* KERN_DEBUG */
connectivity/common/common_detect/mtk_wcn_stub_alps.c:		CMB_STUB_LOG_PR_WARN("[cmb_stub] aif_ctrl invalid (%d, %d)\n",
connectivity/common/common_detect/mtk_wcn_stub_alps.c:		CMB_STUB_LOG_PR_INFO("aif state(%d->%d) ctrl(%d) ret(%d)\n",
connectivity/common/common_detect/mtk_wcn_stub_alps.c:		CMB_STUB_LOG_PR_WARN("[cmb_stub] aif_ctrl_cb null\n");
connectivity/common/common_detect/mtk_wcn_stub_alps.c:		CMB_STUB_LOG_PR_WARN("[cmb_stub] func_ctrl_cb null\n");
connectivity/common/common_detect/mtk_wcn_stub_alps.c:		CMB_STUB_LOG_PR_WARN("[cmb_stub] thermal_ctrl_cb null\n");
connectivity/common/common_detect/mtk_wcn_stub_alps.c:		CMB_STUB_LOG_PR_WARN("[cmb_stub] trigger_assert_cb null\n");
connectivity/common/common_detect/mtk_wcn_stub_alps.c:		CMB_STUB_LOG_PR_WARN("[cmb_stub] clock_fail_dump_cb null\n");
connectivity/common/common_detect/mtk_wcn_stub_alps.c:		CMB_STUB_LOG_PR_WARN("src = %d is error\n", src);
connectivity/common/common_detect/mtk_wcn_stub_alps.c:		CMB_STUB_LOG_PR_INFO("src = %s, to enter deep idle? %d\n",
connectivity/common/common_detect/mtk_wcn_stub_alps.c:				CMB_STUB_LOG_PR_WARN("%s exit deepidle failed",
connectivity/common/common_detect/mtk_wcn_stub_alps.c:				CMB_STUB_LOG_PR_WARN("%s enter deepidle failed",
connectivity/common/common_detect/mtk_wcn_stub_alps.c:			CMB_STUB_LOG_PR_WARN("NULL function pointer\n");
connectivity/common/common_detect/mtk_wcn_stub_alps.c:			CMB_STUB_LOG_PR_WARN("%s deep idle fail(%d)\n",
connectivity/common/common_detect/mtk_wcn_stub_alps.c:			CMB_STUB_LOG_PR_DBG("%s deep idle ok(%d)\n",
connectivity/common/common_detect/mtk_wcn_stub_alps.c:	CMB_STUB_LOG_PR_INFO("query current consys chipid (0x%x)\n",
connectivity/common/common_detect/mtk_wcn_stub_alps.c:	CMB_STUB_LOG_PR_INFO("set current consys chipid (0x%x)\n", chipid);
connectivity/common/common_detect/mtk_wcn_stub_alps.c:		CMB_STUB_LOG_PR_DBG("wifi eint has been enabled\n");
connectivity/common/common_detect/mtk_wcn_stub_alps.c:			CMB_STUB_LOG_PR_DBG(" enable WIFI EINT irq %d !!\n",
connectivity/common/common_detect/mtk_wcn_stub_alps.c:		CMB_STUB_LOG_PR_DBG("wifi eint has been disabled!\n");
connectivity/common/common_detect/mtk_wcn_stub_alps.c:			CMB_STUB_LOG_PR_DBG("disable WIFI EINT irq %d !!\n",
connectivity/common/common_detect/mtk_wcn_stub_alps.c:	CMB_STUB_LOG_PR_INFO("enter %s\n", __func__);
connectivity/common/common_detect/mtk_wcn_stub_alps.c:		CMB_STUB_LOG_PR_INFO("WIFI EINT pin %d !!\n",
connectivity/common/common_detect/mtk_wcn_stub_alps.c:		CMB_STUB_LOG_PR_DBG("WIFI EINT irq %d !!\n", wifi_irq);
connectivity/common/common_detect/mtk_wcn_stub_alps.c:			CMB_STUB_LOG_PR_WARN("EINT IRQ LINE NOT AVAILABLE!!\n");
connectivity/common/common_detect/mtk_wcn_stub_alps.c:		CMB_STUB_LOG_PR_WARN("[%s] can't find device node\n", __func__);
connectivity/common/common_detect/mtk_wcn_stub_alps.c:	CMB_STUB_LOG_PR_INFO("exit %s\n", __func__);
connectivity/common/common_detect/mtk_wcn_stub_alps.c:	CMB_STUB_LOG_PR_DBG("mtk_wcn_cmb_sdio_register_pm (0x%p, 0x%p)\n",
connectivity/common/common_detect/mtk_wcn_stub_alps.c:	CMB_STUB_LOG_PR_INFO("mtk_wcn_cmb_sdio_on (%d)\n", sdio_port_num);
connectivity/common/common_detect/mtk_wcn_stub_alps.c:		CMB_STUB_LOG_PR_WARN("mtk_wcn_cmb_sdio_on no sd callback!!\n");
connectivity/common/common_detect/mtk_wcn_stub_alps.c:	CMB_STUB_LOG_PR_INFO("mtk_wcn_cmb_sdio_off (%d)\n", sdio_port_num);
connectivity/common/common_detect/mtk_wcn_stub_alps.c:		CMB_STUB_LOG_PR_WARN("mtk_wcn_cmb_sdio_off no sd callback!!\n");
connectivity/common/common_detect/mtk_wcn_stub_alps.c:	CMB_STUB_LOG_PR_DBG("mt_mtk_wcn_cmb_sdio_ctrl (%d, %d)\n",
connectivity/common/common_detect/mtk_wcn_stub_alps.c:		CMB_STUB_LOG_PR_DBG("board_sdio_ctrl force off before on\n");
connectivity/common/common_detect/mtk_wcn_stub_alps.c:		CMB_STUB_LOG_PR_WARN("skip sdio off before on\n");
connectivity/common/common_detect/mtk_wcn_stub_alps.c:			CMB_STUB_LOG_PR_WARN("wifi_irq is not available\n");
connectivity/common/common_detect/mtk_wcn_stub_alps.c:				CMB_STUB_LOG_PR_WARN("wifi_irq is not available\n");
connectivity/common/common_detect/mtk_wcn_stub_alps.c:	CMB_STUB_LOG_PR_DBG("sdio_claim_irq_enable_flag:%d\n",
connectivity/common/common_detect/wmt_detect.h:#define WMT_DETECT_LOG_LOUD    4
connectivity/common/common_detect/wmt_detect.h:#define WMT_DETECT_LOG_DBG     3
connectivity/common/common_detect/wmt_detect.h:#define WMT_DETECT_LOG_INFO    2
connectivity/common/common_detect/wmt_detect.h:#define WMT_DETECT_LOG_WARN    1
connectivity/common/common_detect/wmt_detect.h:#define WMT_DETECT_LOG_ERR     0
connectivity/common/wlan/core/gen4m/common/wlan_p2p.c:	DBGLOG(REQ, TRACE, "Command ID = 0x%08X\n", ucCID);
connectivity/common/wlan/core/gen4m/common/wlan_p2p.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/common/wlan/core/gen4m/common/wlan_p2p.c:	DBGLOG(REQ, TRACE, "ucCmdSeqNum =%d\n", ucCmdSeqNum);
connectivity/common/wlan/core/gen4m/common/wlan_p2p.c:	DBGLOG(REQ, INFO, "\n");
connectivity/common/wlan/core/gen4m/common/wlan_p2p.c:		DBGLOG(REQ, ERROR, "invalid key index: 0x%08lx\n",
connectivity/common/wlan/core/gen4m/common/wlan_p2p.c:		DBGLOG(REQ, ERROR, "invalid key index: 0x%08lx\n",
connectivity/common/wlan/core/gen4m/common/wlan_p2p.c:	DBGLOG(INIT, TRACE, "\n");
connectivity/common/wlan/core/gen4m/common/wlan_p2p.c:		DBGLOG(REQ, WARN, "Invalid length %u\n", u4SetBufferLen);
connectivity/common/wlan/core/gen4m/common/wlan_p2p.c:		DBGLOG(REQ, WARN, "Invalid power mode %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_p2p.c:	DBGLOG(INIT, TRACE, "\n");
connectivity/common/wlan/core/gen4m/common/wlan_p2p.c:	DBGLOG(INIT, INFO, "wlanoidSetP2pSetNetworkAddress (%d)\n",
connectivity/common/wlan/core/gen4m/common/wlan_p2p.c:		DBGLOG(INIT, INFO, "u4IpAddressCount (%u)\n",
connectivity/common/wlan/core/gen4m/common/wlan_p2p.c:				DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_p2p.c:		DBGLOG(REQ, WARN, "Invalid MC list length %u\n",
connectivity/common/wlan/core/gen4m/common/wlan_p2p.c:		DBGLOG(REQ, WARN, "Too many MC addresses\n");
connectivity/common/wlan/core/gen4m/common/wlan_p2p.c:		DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_p2p.c:	DBGLOG(P2P, TRACE, "Get Service Discovery Request\n");
connectivity/common/wlan/core/gen4m/common/wlan_p2p.c:	DBGLOG(P2P, TRACE, "Get Service Discovery Response\n");
connectivity/common/wlan/core/gen4m/common/wlan_p2p.c:			DBGLOG(P2P, TRACE, "Service Discovery Version 2.0\n");
connectivity/common/wlan/core/gen4m/common/wlan_p2p.c:	DBGLOG_MEM8(SEC, LOUD,
connectivity/common/wlan/core/gen4m/common/wlan_p2p.c:	DBGLOG(INIT, TRACE, "\n");
connectivity/common/wlan/core/gen4m/common/wlan_p2p.c:	DBGLOG(INIT, TRACE, "\n");
connectivity/common/wlan/core/gen4m/common/wlan_p2p.c:	DBGLOG(INIT, TRACE, "\n");
connectivity/common/wlan/core/gen4m/common/wlan_p2p.c:		DBGLOG(REQ, WARN, "Too short length %ld\n", u4QueryBufferLen);
connectivity/common/wlan/core/gen4m/common/wlan_p2p.c:	DBGLOG(P2P, INFO, "wlanoidAbortP2pScan\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:	/* INITLOG(("\n")); */
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		LOG_SCAN_D2D, SCAN_LOG_MSG_MAX_LEN);
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, TRACE, "start.\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, TRACE, "start.\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, TRACE, "start.\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, TRACE, "start.\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, WARN, "load manufacture data fail\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, ERROR, "nicpmSetDriverOwn() failed!\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, ERROR, "halHifSwInfoInit failed!\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, TRACE, "Waiting for Ready bit..\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:					DBGLOG(INIT, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, WARN, "Fail reason: %d\n", eFailReason);
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, TRACE, "start.\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, TRACE, "start.\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(REQ, WARN, "Fail in nicProcessIST! status [%d]\n",
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, TRACE, "Check ready_bits(=0x%x)\n", ready_bits);
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(INIT, INFO, "Ready bit asserted\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(INIT, INFO, "Wi-Fi power off done!\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(INIT, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(INIT, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, INFO, "NO Resource:%d\n", ucTC);
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, WARN, "nicTxCmd returns error\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		/* DBGLOG(INIT, INFO, "==> TX CMD QID: %d (Q:%d)\n",
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(INIT, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:					DBGLOG(INIT, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(OID, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(P2P, TRACE, "Pending CMD for BSS:%d\n",
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(RX, WARN, "IndicatedRfbList num = %u\n", prQueList->u4NumElem);
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(RX, WARN, "Restart ReturnIndicatedRfb Timer (%u)\n",
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(RX, WARN, "No free SwRfb!\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(RX, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(RX, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(REQ, TRACE, "ucCmdSeqNum =%d\n", ucCmdSeqNum);
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, INFO, "Using embedded MAC address");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, INFO, "Using host-supplied MAC address");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(RSN, INFO, "T1X len=%d\n",
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG_LIMITED(TX, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG_LIMITED(TX, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(TX, TRACE,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(SW4, INFO, "%s", aucBuf);
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR, "Not enough memory for aucBuffer\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, WARN, "%s: wait for event failed!\n",
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, WARN, "skip unexpected event ID[0x%02x]\n",
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:#if CFG_ENABLE_CAL_LOG
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, TRACE, "RF CAL FAIL  = (%d),BB CAL FAIL  = (%d)\n",
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:	/* DBGLOG(INIT, INFO, ("Acquire Power Ctrl\n")); */
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:	/* DBGLOG(INIT, INFO, ("Release Power Ctrl\n")); */
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, TRACE, "%s: %u\n", __func__, ucEcoVersion);
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(SW4, INFO, "Invalid BssInfo index[%u], skip dump!\n",
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(SW4, INFO, "Invalid BssInfo index[%u], skip dump!\n",
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(SW4, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(SW4, TRACE,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, INFO, "Support NIC_CAPABILITY_V2 feature\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, WARN, "%s: event buffer alloc failed!\n",
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(INIT, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(HAL, ERROR,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(INIT, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(INIT, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, TRACE, "IOTAP%d is valid rule\n", ucRuleIdx);
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, TRACE, "IOTAP%d Flag:0x%X Ver:0x%X\n",
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, TRACE, "IOTAP%d OUI:%02X:%02X:%02X\n",
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, TRACE, "IOTAP%d Data:"MACSTR" Mask:"MACSTR"\n",
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, TRACE, "IOTAP%d aBssid:"MACSTR" Mask:"MACSTR"\n",
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, TRACE, "IOTAP%d NSS:%X HT:%X Band:%X Act:%X\n",
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, INFO, "IOTAP: Start Parsing Rules\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, INFO, "Invalid Rule IOTAP%d\n", ucCnt);
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, LOUD,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, TRACE, "ucApWpsMode = %u\n", prWifiVar->ucApWpsMode);
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:					WLAN_TX_STATS_LOG_TIMEOUT);
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:					WLAN_TX_STATS_LOG_DURATION);
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, TRACE, "get MacAddr fail, use defaul\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(INIT, LOUD,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(INIT, LOUD,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, TRACE, "u2CountryCode=0x%04x\n",
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, LOUD, "get Index(%d) saved key %s\n", ucIdx,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, LOUD, "parse aucValue error u4Ret=%d\n",
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, LOUD, "parse aucValue error i4Ret=%d\n",
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR, "Set wifi config error key \'%s\'\n",
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR, "Set wifi config error value \'%s\'\n",
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR, "parameter is NULL: %p, %p, %p\n",
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR, "cmdLine >= 512\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR, "parameter is NULL: %p, %p, %p\n",
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR, "cmdLine >= 512\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR, "cfg args wrong\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, INFO, "itemString:");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, INFO, "%c", cmd_v1.itemString[i]);
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, INFO, "\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, INFO, "cmd_v1.itemType = %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(INIT, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(INIT, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, WARN, "size:%d data[%d]=%u, sum=%u\n",
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, INFO, "Length = %d itemValue:",
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR, "%d,", cmd_v1.itemValue[i]);
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, INFO, "\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:					DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR, "pucConfigBuf is NULL\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR, "pucConfigBuf >= 4000\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, INFO, "wlanCfgParse()\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, INFO, "STATE_EOF\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:					DBGLOG(INIT, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(INIT, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, INFO, "STATE_NEWLINE\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:					DBGLOG(INIT, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(INIT, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:						DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:						DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:					DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, INFO, "cmdV1Header.itemNum:%d\n",
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, WARN, "kalIoctl wifiSefCFG fail 0x%x\n",
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, WARN, "kalIoctl wifiSefCFG num:%d X\n",
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR, "pucConfigBuf is NULL\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR, "pucConfigBuf >= 4000\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, INFO, "Init wifi config len %u max entry %u\n",
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, INFO, "wifi config error %u\n", __LINE__);
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, INFO, "wifi config error %u\n", __LINE__);
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(TX, INFO, "[%u]N[%u]A[%u]M[%u]T[%u]E[%4u]\n",
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, LOUD, "CUR[%u] LAST[%u] TO[%u]\n", rCurTime,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:	struct CMD_STATS_LOG rStatsLogCmd;
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:	kalMemZero(&rStatsLogCmd, sizeof(struct CMD_STATS_LOG));
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:	rResult = wlanSendSetQueryCmd(prAdapter, CMD_ID_STATS_LOG, TRUE, FALSE,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:				      sizeof(struct CMD_STATS_LOG),
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(TX, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG_LIMITED(TX, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(REQ, WARN, "%s: unexpected prGlueInfo(0x%p)!\n",
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(REQ, INFO, "mdtim [1]\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(REQ, INFO, "mdtim [2]\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(REQ, INFO, "mdtim [3]\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(REQ, INFO, "wlanNotifyFwSuspend fail\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(REQ, LOUD,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(REQ, LOUD,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(P2P, TRACE, "[ACS] Get safe LTE Channels\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(SCN, TEMP, "Process dirtiness index 1\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(SCN, TEMP, "Process dirtiness index 2, ");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(SCN, TEMP, "BW40\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(SCN, TEMP, "BW40\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:				DBGLOG(SCN, TEMP, "BW20\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(SCN, TEMP, "BW80\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(SCN, TEMP, "BW160\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(SCN, TEMP, "BW8080\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(SCN, TEMP, "Found an AP(%s), primary ch %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(SCN, ERROR, "Invalid ch %u\n", channel);
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(SW4, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, TRACE, "SpeIdx:%d,D:%d,G=%d,B=%d,Bss=%d\n",
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(SW4, INFO, "Use 1x1 due to DBDC blacklist\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(SW4, INFO, "Invalid BssInfo index[%u], skip dump!\n",
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, TRACE, "Nss=%d,G=%d,B=%d,Bss=%d\n",
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(INIT, INFO, "LowLatency(ProbeOn)\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(AIS, INFO, "LowLatency(Connected) event:0x%x\n", u4Events);
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(OID, ERROR, "prAisBssInfo = NULL\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(OID, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(OID, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(OID, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(OID, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(OID, INFO, "Checksum offload: [%llu]\n",
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, INFO, "omega, cmd buffer return fail!");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(OID, INFO, "Remove pending Cmd: CID %d\n", ucCid);
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, INFO, "No decimal part, ori str %s\n",
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:			DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR, "Parse decimal str %s error, degree %u\n",
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, ERROR, "Parse integer str %s error\n",
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(INIT, TRACE, "Result 0x%04x\n", *pu2Out);
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(REQ, ERROR, "Failed with status %d\n", rStatus);
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(SW4, ERROR, "not yet connected\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(SW4, ERROR, "prAdapter is null\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(SW4, ERROR, "prStaRecOfAP is null\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(SW4, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(SW4, ERROR, "prAdapter is null\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:		DBGLOG(NIC, ERROR, "kalGetRxRate error\n");
connectivity/common/wlan/core/gen4m/common/wlan_lib.c:	DBGLOG(REQ, INFO, "fgEnForceRTS = %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(REQ, TRACE, "Command ID = 0x%08X\n", ucCID);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(REQ, TRACE, "ucCmdSeqNum =%d\n", ucCmdSeqNum);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "bowCmdGetMacStatus, Get preferred channel.\n");
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT,
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT,
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT,
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT,
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "prMacStatus->ucNumOfChannel, %x.\n", prMacStatus->ucNumOfChannel);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT,
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT,
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "prMacStatus->ucAvailability, %x.\n", prMacStatus->ucAvailability);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "prMacStatus->aucMacAddr, %x:%x:%x:%x:%x:%x.\n",
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "bowCmdSetupConnection.\n");
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "rCmdBtOverWifi Channel Number - 0x%x.\n", rCmdBtOverWifi.ucChannelNum);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT,
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "rCmdBtOverWifi Beacon interval - 0x%x.\n", rCmdBtOverWifi.u2BeaconInterval);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "rCmdBtOverWifi Timeout activity - 0x%x.\n", rCmdBtOverWifi.ucTimeoutDiscovery);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "rCmdBtOverWifi Timeout inactivity - 0x%x.\n", rCmdBtOverWifi.ucTimeoutInactivity);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "rCmdBtOverWifi Role - 0x%x.\n", rCmdBtOverWifi.ucRole);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "rCmdBtOverWifi PAL capability - 0x%x.\n", rCmdBtOverWifi.PAL_Capabilities);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "rCmdBtOverWifi Max Tx power - 0x%x.\n", rCmdBtOverWifi.cMaxTxPower);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "bowStarting, g_u4LinkCount, %x.\n", g_u4LinkCount);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "bowStarting, cnmTimerInitTimer.\n");
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "prBowFsmInfo->u2BeaconInterval, %d.\n", prBowFsmInfo->u2BeaconInterval);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "bowCmdSetupConnection, g_u4LinkCount, %x.\n", g_u4LinkCount);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "kalInitBowDevice, bow0\n");
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "bowCmdDestroyConnection, bowCheckIfVaild, not accepted.\n");
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT,
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT,
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT,
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "prBowSetPTK->aucPeerAddress, %x:%x:%x:%x:%x:%x.\n",
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT,
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT,
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT,
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "bowCmdShortRangeMode.\n");
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "prBowShortRangeMode->aucPeerAddress, %x:%x:%x:%x:%x:%x.\n",
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "bowCmdShortRangeMode, %x.\n", WLAN_STATUS_SUCCESS);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "prEvent->rHeader.ucEventId, 0x%x\n", prEvent->rHeader.ucEventId);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "prEvent->rHeader.ucSeqNumber, 0x%x\n", prEvent->rHeader.ucSeqNumber);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "prEvent->rHeader.u2PayloadLength, 0x%x\n", prEvent->rHeader.u2PayloadLength);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT,
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT,
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT,
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT,
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "wlanbowCmdEventLinkConnected, g_u4LinkCount, %x.\n", g_u4LinkCount);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "prEvent->rHeader.ucEventId, 0x%x\n", prEvent->rHeader.ucEventId);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "prEvent->rHeader.ucSeqNumber, 0x%x\n", prEvent->rHeader.ucSeqNumber);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "prEvent->rHeader.u2PayloadLength, 0x%x\n", prEvent->rHeader.u2PayloadLength);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT,
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT,
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "wlanbowCmdEventLinkDisconnected, g_u4LinkCount, %x.\n", g_u4LinkCount);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT,
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "bowStoping.\n");
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "bowStoping, SSID %s.\n", prBowBssInfo->aucSSID);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "bowStoping, prBowBssInfo->aucBSSID, %x:%x:%x:%x:%x:%x.\n",
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "bowStoping, prBssInfo->aucOwnMacAddr, %x:%x:%x:%x:%x:%x.\n",
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT,
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "bowStopping, g_u4LinkCount, %x.\n", g_u4LinkCount);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT,
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "BoW Stoping,[%d,%d]\n", g_u4LinkCount, g_u4Beaconing);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "BoW Starting.\n");
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "BoW channel granted.\n");
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "SSID %s.\n", prBssInfo->aucSSID);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "prBssInfo->aucBSSID, %x:%x:%x:%x:%x:%x.\n",
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "prBssInfo->aucOwnMacAddr, %x:%x:%x:%x:%x:%x.\n",
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "prAdapter->rWifiVar.aucDeviceAddress, %x:%x:%x:%x:%x:%x.\n",
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT,
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "BoW Starting,[%d,%d]\n", g_u4LinkCount, g_u4Beaconing);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "bowStarting, g_u4LinkCount, %x.\n", g_u4LinkCount);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "bowStarting responder, start scan result searching.\n");
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "bowValidateProbeReq.\n");
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "BoW Send Beacon,[%d,%d]\n", g_u4LinkCount, g_u4Beaconing);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "bowResponderScan.\n");
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "BOW SCAN [REQ:%d]\n", prBowFsmInfo->ucSeqNumOfScanReq + 1);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "bowResponderScanDone.\n");
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "BOW SCAN [DONE:%d]\n", ucSeqNumOfCompMsg);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "BOW SCAN [CANCELLED:%d]\n", ucSeqNumOfCompMsg);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "Sequence no. of BOW Responder scan done is not matched.\n");
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "End scan result searching.\n");
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "prBowFsmInfo->aucPeerAddress: [" MACSTR "]\n", MAC2STR(prBowFsmInfo->aucPeerAddress));
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT,
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "Starting to join initiator.\n");
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:			DBGLOG(BOW, EVENT, "BOW SCAN [CANCEL:%d]\n", prBowFsmInfo->ucSeqNumOfScanReq);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:			DBGLOG(BOW, TRACE, "BOW Cancel Scan\n");
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:				DBGLOG(BOW, TRACE, "Buffer not enough, can not cancel scan.\n");
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "Starting bowResponderJoin.\n");
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, LOUD, "JOIN INIT: Try to do Authentication with AuthType == OPEN_SYSTEM.\n");
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "bowResponderJoin, SSID %s.\n", prBssDesc->aucSSID);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "bowResponderJoin, SSID %s.\n", prConnSettings->aucSSID);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "prStaRec->eStaType, %x.\n", prStaRec->eStaType);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "BoW trigger SAA [" MACSTR "]\n", MAC2STR(prStaRec->aucMacAddr));
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "Start bowfsmRunEventJoinComplete.\n");
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "bowfsmRunEventJoinComplete ptr check\n");
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "prMsgHdr %x\n", prMsgHdr);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "prAdapter %x\n", prAdapter);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "prBowFsmInfo %x\n", prBowFsmInfo);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "prStaRec %x\n", prStaRec);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:			DBGLOG(BOW, EVENT, "Finish bowUpdateBssInfoForJOIN.\n");
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:			DBGLOG(BOW, EVENT, "bowFsmRunEventJoinComplete, qmActivateStaRec.\n");
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:			DBGLOG(BOW, EVENT, "Start bowfsmRunEventJoinComplete -- Join failed.\n");
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:			DBGLOG(BOW, EVENT, "BoW trigger SAA REJOIN\n");
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, INFO, "Postpone the indication of Disconnect for %d seconds\n",
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "bowRunEventAAATxFail , bssRemoveStaRecFromClientList.\n");
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "BoW AAA TxFail, target state %d\n", prStaRec->ucStaState + 1);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, STATE, "bowRunEventAAAComplete, cnmStaRecChangeState, STA_STATE_3.\n");
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "BoW AAA complete [" MACSTR "]\n", MAC2STR(prStaRec->aucMacAddr));
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:			DBGLOG(REQ, WARN, "%s: load manufacture data fail\n", __func__);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT,
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT,
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "bowValidateAssocReq, return wlanbowCmdEventLinkConnected.\n");
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "bowValidateAuth, prBowFsmInfo->aucPeerAddress, %x:%x:%x:%x:%x:%x.\n",
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "bowValidateAuth, prAuthFrame->aucSrcAddr, %x:%x:%x:%x:%x:%x.\n",
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "bowValidateAuth, cnmStaRecAlloc.\n");
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "bowValidateAuth, cnmStaRecChangeState.\n");
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "bowValidateAuth, prStaRec->ucIndex, %x.\n", prStaRec->ucIndex);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "bowValidateAuth, prStaRec->eStaType, %x.\n", prStaRec->eStaType);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "bowValidateAuth, prStaRec->ucBssIndex, %x.\n", prStaRec->ucBssIndex);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "bowValidateAuth,  fgReplyAuth, %x.\n", fgReplyAuth);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "Entering bowRunEventChGrant.\n");
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "BoW Channel [GIVE UP:%d]\n", ucTokenID);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "[Requested:%d][ucSeqNumOfChReq:%d][eFsmState:%d]\n",
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "BoW Channel [GRANTED:%d].\n", ucTokenID);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "BoW channel [REQUEST:%d], %d, %d.\n",
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT,
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "BoW Channel [TIMEOUT]\n");
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:			DBGLOG(BOW, EVENT,
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:			DBGLOG(BOW, EVENT,
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:			DBGLOG(BOW, EVENT,
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:			DBGLOG(BOW, EVENT,
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:			DBGLOG(BOW, EVENT,
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT,
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "GET State [%d]\n", arBowTable[ucBowTableIdx].eState);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT, "SET State [%d]\n", arBowTable[ucBowTableIdx].eState);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:	DBGLOG(BOW, EVENT,
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:			DBGLOG(BOW, EVENT,
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:			DBGLOG(BOW, EVENT,
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:			DBGLOG(BOW, EVENT,
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:			DBGLOG(BOW, EVENT,
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:			DBGLOG(BOW, EVENT,
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:			DBGLOG(BOW, EVENT,
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:			DBGLOG(BOW, EVENT,
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:			DBGLOG(BOW, EVENT,
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:			DBGLOG(BOW, EVENT, "GET State [%d]\n", arBowTable[idx].eState);
connectivity/common/wlan/core/gen4m/common/wlan_bow.c:		DBGLOG(BOW, EVENT, "SET State [%d]\n", eState);
connectivity/common/wlan/core/gen4m/common/debug.c:		LOG_FUNC("Set ALL DBG module log level to [0x%02x]\n",
connectivity/common/wlan/core/gen4m/common/debug.c:		LOG_FUNC("Set DBG module[%u] log level to [0x%02x]\n",
connectivity/common/wlan/core/gen4m/common/debug.c:	uint32_t u4Enable = ENUM_WIFI_LOG_LEVEL_SUPPORT_DISABLE;
connectivity/common/wlan/core/gen4m/common/debug.c:	case ENUM_WIFI_LOG_LEVEL_VERSION_V1:
connectivity/common/wlan/core/gen4m/common/debug.c:		case ENUM_WIFI_LOG_MODULE_DRIVER:
connectivity/common/wlan/core/gen4m/common/debug.c:			u4Enable = ENUM_WIFI_LOG_LEVEL_SUPPORT_ENABLE;
connectivity/common/wlan/core/gen4m/common/debug.c:		case ENUM_WIFI_LOG_MODULE_FW:
connectivity/common/wlan/core/gen4m/common/debug.c:			u4Enable = ENUM_WIFI_LOG_LEVEL_SUPPORT_ENABLE;
connectivity/common/wlan/core/gen4m/common/debug.c:	uint32_t u4Level = ENUM_WIFI_LOG_LEVEL_DEFAULT;
connectivity/common/wlan/core/gen4m/common/debug.c:	case ENUM_WIFI_LOG_LEVEL_VERSION_V1:
connectivity/common/wlan/core/gen4m/common/debug.c:	uint32_t u4DriverLevel = ENUM_WIFI_LOG_LEVEL_DEFAULT;
connectivity/common/wlan/core/gen4m/common/debug.c:	uint32_t u4FwLevel = ENUM_WIFI_LOG_LEVEL_DEFAULT;
connectivity/common/wlan/core/gen4m/common/debug.c:	if (u4level >= ENUM_WIFI_LOG_LEVEL_NUM)
connectivity/common/wlan/core/gen4m/common/debug.c:	case ENUM_WIFI_LOG_LEVEL_VERSION_V1:
connectivity/common/wlan/core/gen4m/common/debug.c:		case ENUM_WIFI_LOG_MODULE_DRIVER:
connectivity/common/wlan/core/gen4m/common/debug.c:			if (u4level == ENUM_WIFI_LOG_LEVEL_DEFAULT)
connectivity/common/wlan/core/gen4m/common/debug.c:				u4DriverLogMask = DBG_LOG_LEVEL_DEFAULT;
connectivity/common/wlan/core/gen4m/common/debug.c:			else if (u4level == ENUM_WIFI_LOG_LEVEL_MORE)
connectivity/common/wlan/core/gen4m/common/debug.c:				u4DriverLogMask = DBG_LOG_LEVEL_MORE;
connectivity/common/wlan/core/gen4m/common/debug.c:				u4DriverLogMask = DBG_LOG_LEVEL_EXTREME;
connectivity/common/wlan/core/gen4m/common/debug.c:		case ENUM_WIFI_LOG_MODULE_FW:
connectivity/common/wlan/core/gen4m/common/debug.c:			struct CMD_EVENT_LOG_UI_INFO cmd;
connectivity/common/wlan/core/gen4m/common/debug.c:					sizeof(struct CMD_EVENT_LOG_UI_INFO));
connectivity/common/wlan/core/gen4m/common/debug.c:					CMD_ID_LOG_UI_INFO,
connectivity/common/wlan/core/gen4m/common/debug.c:					sizeof(struct CMD_EVENT_LOG_UI_INFO),
connectivity/common/wlan/core/gen4m/common/debug.c:	wlanDbgGetGlobalLogLevel(ENUM_WIFI_LOG_MODULE_DRIVER, &u4DriverLevel);
connectivity/common/wlan/core/gen4m/common/debug.c:	wlanDbgGetGlobalLogLevel(ENUM_WIFI_LOG_MODULE_FW, &u4FwLevel);
connectivity/common/wlan/core/gen4m/common/debug.c:	if ((u4DriverLevel > ENUM_WIFI_LOG_LEVEL_DEFAULT ||
connectivity/common/wlan/core/gen4m/common/debug.c:			u4FwLevel > ENUM_WIFI_LOG_LEVEL_DEFAULT) &&
connectivity/common/wlan/core/gen4m/common/debug.c:		DBGLOG(OID, TRACE,
connectivity/common/wlan/core/gen4m/common/debug.c:	if (u4Module != ENUM_WIFI_LOG_MODULE_DRIVER &&
connectivity/common/wlan/core/gen4m/common/debug.c:			u4Module != ENUM_WIFI_LOG_MODULE_FW)
connectivity/common/wlan/core/gen4m/common/debug.c:	if (u4Module != ENUM_WIFI_LOG_MODULE_DRIVER &&
connectivity/common/wlan/core/gen4m/common/debug.c:			u4Module != ENUM_WIFI_LOG_MODULE_FW)
connectivity/common/wlan/core/gen4m/common/debug.c:	uint32_t u4DriverLogLevel = ENUM_WIFI_LOG_LEVEL_DEFAULT;
connectivity/common/wlan/core/gen4m/common/debug.c:	if ((u4Mask & DBG_LOG_LEVEL_EXTREME) == DBG_LOG_LEVEL_EXTREME)
connectivity/common/wlan/core/gen4m/common/debug.c:		u4DriverLogLevel = ENUM_WIFI_LOG_LEVEL_EXTREME;
connectivity/common/wlan/core/gen4m/common/debug.c:	else if ((u4Mask & DBG_LOG_LEVEL_MORE) == DBG_LOG_LEVEL_MORE)
connectivity/common/wlan/core/gen4m/common/debug.c:		u4DriverLogLevel = ENUM_WIFI_LOG_LEVEL_MORE;
connectivity/common/wlan/core/gen4m/common/debug.c:		u4DriverLogLevel = ENUM_WIFI_LOG_LEVEL_DEFAULT;
connectivity/common/wlan/core/gen4m/common/debug.c:	wlanDbgSetGlobalLogLevel(ENUM_WIFI_LOG_MODULE_DRIVER, u4DriverLogLevel);
connectivity/common/wlan/core/gen4m/common/debug.c:#define OLD_LOG_FUNC LOG_FUNC
connectivity/common/wlan/core/gen4m/common/debug.c:#undef LOG_FUNC
connectivity/common/wlan/core/gen4m/common/debug.c:#define LOG_FUNC pr_info
connectivity/common/wlan/core/gen4m/common/debug.c:#define DBG_LOG_BUF_SIZE 128
connectivity/common/wlan/core/gen4m/common/debug.c:	int8_t aucLogBuffer[DBG_LOG_BUF_SIZE];
connectivity/common/wlan/core/gen4m/common/debug.c:		LOG_FUNC("Firmware Log Size(%d) is too large, type %d\n",
connectivity/common/wlan/core/gen4m/common/debug.c:		LOG_FUNC("<FW>%s\n", pucLogContent);
connectivity/common/wlan/core/gen4m/common/debug.c:		aucLogBuffer[DBG_LOG_BUF_SIZE - 1] = '\0';
connectivity/common/wlan/core/gen4m/common/debug.c:		LOG_FUNC("%s\n", aucLogBuffer);
connectivity/common/wlan/core/gen4m/common/debug.c:#undef LOG_FUNC
connectivity/common/wlan/core/gen4m/common/debug.c:#define LOG_FUNC OLD_LOG_FUNC
connectivity/common/wlan/core/gen4m/common/debug.c:#undef OLD_LOG_FUNC
connectivity/common/wlan/core/gen4m/common/dump.c:	LOG_FUNC("DUMP8 ADDRESS: %p, Length: %d\n", pucStartAddr,
connectivity/common/wlan/core/gen4m/common/dump.c:			LOG_FUNC
connectivity/common/wlan/core/gen4m/common/dump.c:				LOG_FUNC("(%p) %02x\n", pucStartAddr,
connectivity/common/wlan/core/gen4m/common/dump.c:				LOG_FUNC("(%p) %02x %02x\n", pucStartAddr,
connectivity/common/wlan/core/gen4m/common/dump.c:				LOG_FUNC("(%p) %02x %02x %02x\n",
connectivity/common/wlan/core/gen4m/common/dump.c:				LOG_FUNC("(%p) %02x %02x %02x %02x\n",
connectivity/common/wlan/core/gen4m/common/dump.c:				LOG_FUNC("(%p) %02x %02x %02x %02x  %02x\n",
connectivity/common/wlan/core/gen4m/common/dump.c:				LOG_FUNC
connectivity/common/wlan/core/gen4m/common/dump.c:				LOG_FUNC
connectivity/common/wlan/core/gen4m/common/dump.c:				LOG_FUNC
connectivity/common/wlan/core/gen4m/common/dump.c:				LOG_FUNC
connectivity/common/wlan/core/gen4m/common/dump.c:				LOG_FUNC
connectivity/common/wlan/core/gen4m/common/dump.c:				LOG_FUNC
connectivity/common/wlan/core/gen4m/common/dump.c:				LOG_FUNC
connectivity/common/wlan/core/gen4m/common/dump.c:				LOG_FUNC
connectivity/common/wlan/core/gen4m/common/dump.c:				LOG_FUNC
connectivity/common/wlan/core/gen4m/common/dump.c:				LOG_FUNC
connectivity/common/wlan/core/gen4m/common/dump.c:	LOG_FUNC("\n");
connectivity/common/wlan/core/gen4m/common/dump.c:	LOG_FUNC("DUMP32 ADDRESS: %p, Length: %d\n", pu4StartAddr,
connectivity/common/wlan/core/gen4m/common/dump.c:		LOG_FUNC("pu4StartAddr is not at DW boundary.\n");
connectivity/common/wlan/core/gen4m/common/dump.c:			LOG_FUNC("(%p) %02x------\n", pu4StartAddr, pucAddr[0]);
connectivity/common/wlan/core/gen4m/common/dump.c:			LOG_FUNC("(%p) %02x%02x----\n", pu4StartAddr,
connectivity/common/wlan/core/gen4m/common/dump.c:			LOG_FUNC("(%p) %02x%02x%02x--\n", pu4StartAddr,
connectivity/common/wlan/core/gen4m/common/dump.c:			LOG_FUNC("(%p) %08x %08x %08x %08x\n",
connectivity/common/wlan/core/gen4m/common/dump.c:				LOG_FUNC("(%p) ------%02x\n",
connectivity/common/wlan/core/gen4m/common/dump.c:				LOG_FUNC("(%p) ----%02x%02x\n", pu4StartAddr,
connectivity/common/wlan/core/gen4m/common/dump.c:				LOG_FUNC("(%p) --%02x%02x%02x\n", pu4StartAddr,
connectivity/common/wlan/core/gen4m/common/dump.c:				LOG_FUNC("(%p) %08x\n", pu4StartAddr,
connectivity/common/wlan/core/gen4m/common/dump.c:				LOG_FUNC("(%p) %08x ------%02x\n", pu4StartAddr,
connectivity/common/wlan/core/gen4m/common/dump.c:				LOG_FUNC("(%p) %08x ----%02x%02x\n",
connectivity/common/wlan/core/gen4m/common/dump.c:				LOG_FUNC("(%p) %08x --%02x%02x%02x\n",
connectivity/common/wlan/core/gen4m/common/dump.c:				LOG_FUNC("(%p) %08x %08x\n", pu4StartAddr,
connectivity/common/wlan/core/gen4m/common/dump.c:				LOG_FUNC("(%p) %08x %08x ------%02x\n",
connectivity/common/wlan/core/gen4m/common/dump.c:				LOG_FUNC("(%p) %08x %08x ----%02x%02x\n",
connectivity/common/wlan/core/gen4m/common/dump.c:				LOG_FUNC("(%p) %08x %08x --%02x%02x%02x\n",
connectivity/common/wlan/core/gen4m/common/dump.c:				LOG_FUNC("(%p) %08x %08x %08x\n",
connectivity/common/wlan/core/gen4m/common/dump.c:				LOG_FUNC("(%p) %08x %08x %08x ------%02x\n",
connectivity/common/wlan/core/gen4m/common/dump.c:				LOG_FUNC("(%p) %08x %08x %08x ----%02x%02x\n",
connectivity/common/wlan/core/gen4m/common/dump.c:				LOG_FUNC("(%p) %08x %08x %08x --%02x%02x%02x\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, INFO, "setApUapsdEnable: %d, ucBssIdx: %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, TRACE, "NDIS supported network type list: %u\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG_MEM8(REQ, INFO, prSupported, *pu4QueryInfoLen);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, TRACE, "Network type in use: %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, INFO, "New network type: %d mode\n", eNewNetworkType);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, INFO, "Not support network type: %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, INFO, "Unknown network type: %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "Unknown network type: %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, WARN, "didn't support Scan in test mode\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, LOUD, "ucBssIndex %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, WARN, "didn't support Scan in test mode\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, TRACE, "ScanEX\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, WARN, "didn't support Scan in test mode\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, LOUD, "ucBssIndex %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, ERROR, "Fail in allocating AisAbortMsg.\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, ERROR, "Fail in allocating AisAbortMsg.\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(SCN, INFO, "ucBssIndex %d, SSID %s\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, ERROR, "Fail in allocating AisAbortMsg.\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, WARN, "SsidLen [%d] is invalid!\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, WARN, "Bssid or ssid is invalid!\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(INIT, INFO, "wrong bssid " MACSTR "to connect\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:				DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, INFO, "No Bssid set\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(INIT, INFO, "DisBySsid\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:				DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "Invalid length %u\n", u4QueryBufferLen);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, TRACE, "Null SSID\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, INFO, "IBSS mode\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, INFO, "Infrastructure mode\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, INFO, "Automatic mode\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, TRACE, "Invalid mode value %d\n", eOpMode);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(REQ, TRACE, "Mode value %d unallowed\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(RSN, LOUD, "ucBssIndex %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, INFO, "Current auth mode: Open\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, INFO, "Current auth mode: Shared\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, INFO, "Current auth mode: Auto-switch\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, INFO, "Current auth mode: WPA\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, INFO, "Current auth mode: WPA PSK\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, INFO, "Current auth mode: WPA None\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, INFO, "Current auth mode: WPA2\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, INFO, "Current auth mode: WPA2 PSK\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, INFO, "Current auth mode: %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, LOUD, "ucBssIndex %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, TRACE, "Invalid auth mode %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RSN, TRACE, "New auth mode: open\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RSN, TRACE, "New auth mode: shared\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RSN, TRACE, "New auth mode: auto-switch\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RSN, TRACE, "New auth mode: WPA\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RSN, TRACE, "New auth mode: WPA PSK\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RSN, TRACE, "New auth mode: WPA None\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RSN, TRACE, "New auth mode: WPA2\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RSN, TRACE, "New auth mode: WPA2 PSK\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RSN, INFO, "New auth mode: SAE\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RSN, TRACE, "New auth mode: unknown (%d)\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:				DBGLOG(RSN, TRACE,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:				DBGLOG(RSN, TRACE,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, INFO, "Current privacy mode: open mode\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, INFO, "Current privacy mode: filtering mode\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, INFO, "Current auth mode: %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, TRACE, "Invalid privacy filter %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:				DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, TRACE, "Invalid reload option %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, LOUD, "ucBssIndex %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, ERROR, "Error, invalid WEP key ID: %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, LOUD, "ucBssIndex %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, INFO, "Set: Dump PARAM_KEY_INDEX content\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, INFO, "Index : %u\n", u4KeyId);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, ERROR, "Invalid WEP key index: %u\n", u4KeyId);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, ERROR, "invalid WEP key ID %u\n", u4KeyId);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(RSN, TRACE, "wlanoidSetAddKey\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RSN, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RSN, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RSN, WARN, "Invalid key material length (%d)\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(RSN, TRACE, "Set: Dump PARAM_KEY content, Len: 0x%08x, BSSID: "
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG_MEM8(RSN, TRACE, prNewKey->aucKeyMaterial,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(RSN, TRACE, "Key RSC:\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG_MEM8(RSN, TRACE, &prNewKey->rKeyRSC, sizeof(uint64_t));
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, INFO, "BSS Info not exist !!\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:				DBGLOG(RSN, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(RSN, TRACE, "ucCmdSeqNum = %d\n", ucCmdSeqNum);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:				DBGLOG(RSN, INFO, "AP mode set BIP\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:					DBGLOG(RSN, TRACE,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:					DBGLOG(RSN, TRACE,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:				DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(RSN, INFO, "BIP BC wtbl index:%d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:					DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:					DBGLOG(RSN, INFO, "AP REC\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:					DBGLOG(RSN, INFO, "!AP && !STA REC\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:					DBGLOG(RSN, ERROR,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:					DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(RSN, INFO, "AddKey cmd to wlan index %d: (BSS = %d) " MACSTR
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RSN, INFO, "wepkey(%d, %d), BMCWlan(%d, %d)\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RSN, WARN, "invalid prCmdKey->ucKeyId(%d)\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG_MEM8(RSN, INFO, prCmdKey->aucKeyMaterial, prCmdKey->ucKeyLen);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RSN, INFO, "Remove bip key Index : 0x%08x\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(RSN, INFO, "PARAM_REMOVE_KEY: BSSID(" MACSTR
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(RSN, INFO, "WlanIdx = %d\n", prBssInfo->wepkeyWlanIdx);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:					DBGLOG(RSN, ERROR,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:					DBGLOG(RSN, ERROR,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(RSN, ERROR, "ucWlanIndex = %d, wepUsed = %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RSN, ERROR, "Check the case set unicast default key!");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(RSN, TRACE,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, ERROR, "Unknown Encryption Status Setting:%d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, LOUD, "ucBssIndex %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, INFO, "ENCRYPTION_STATUS %d\n", eEewEncrypt);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RSN, INFO, "Disable Encryption\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RSN, INFO, "Enable Encryption1\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RSN, INFO, "Enable Encryption2\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RSN, INFO, "Enable Encryption3\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RSN, INFO, "Unacceptible encryption status: %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "Invalid length %u\n", u4QueryBufferLen);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "Invalid length %u\n", u4QueryBufferLen);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "Invalid length %u\n", u4SetBufferLen);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, LOUD, "Vendor ID=%02x-%02x-%02x-%02x\n", cp[0],
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, LOUD, "ucBssIndex %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "Too short length %u\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(REQ, TRACE,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "Too short length %u\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, INFO, "RSSI trigger: %d dBm\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "Too short length %u\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, WARN, "Too short length %u\n", u4QueryBufferLen);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "Invalid length %u\n", u4QueryBufferLen);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "Invalid length %u\n", u4SetBufferLen);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, LOUD, "ucBssIndex %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(REQ, TRACE,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, INFO, "u4SetBufferLen = %d\n", u4SetBufferLen);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, INFO, "address=%d\n", rCmdSetAccessEfuse.u4Address);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, INFO, "address=%d\n", rCmdSetAccessEfuse.u4Address);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, INFO, "pu4QueryInfoLen = %d\n", pu4QueryInfoLen);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, TRACE, "ucCmdSeqNum =%d\n", ucCmdSeqNum);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(RFTEST, INFO, "%s\n", __func__);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(RFTEST, INFO, "%s\n", __func__);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:#if CFG_SUPPORT_CAL_RESULT_BACKUP_TO_HOST_DBGLOG
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "Reason = %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "Action = %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "NeedResp = %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "FragNum = %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "RomRam = %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "ThermalValue = %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "Address = 0x%08x\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "Length = %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "RemainLength = %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:#if CFG_SUPPORT_CAL_RESULT_BACKUP_TO_HOST_DBGLOG
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "Reason = %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "Action = %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "NeedResp = %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "FragNum = %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "RomRam = %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "ThermalValue = %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "Address = 0x%08x\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "Length = %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "RemainLength = %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:#if CFG_SUPPORT_CAL_RESULT_BACKUP_TO_HOST_DBGLOG
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "Reason = %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "Action = %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "NeedResp = %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "FragNum = %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "RomRam = %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "ThermalValue = %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "Address = 0x%08x\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "Length = %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "RemainLength = %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:#if CFG_SUPPORT_CAL_RESULT_BACKUP_TO_HOST_DBGLOG
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "Reason = %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "Action = %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "NeedResp = %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "FragNum = %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "RomRam = %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "ThermalValue = %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "Address = 0x%08x\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "Length = %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO, "RemainLength = %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:#if CFG_SUPPORT_CAL_RESULT_BACKUP_TO_HOST_DBGLOG
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, TRACE, "MCR Write: Offset = %#08x, Data = %#08x\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, LOUD, "\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, TRACE, "DRV MCR Read: Offset = %#08x, Data = %#08x\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, LOUD, "\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, TRACE, "DRV MCR Write: Offset = %#08x, Data = %#08x\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, LOUD, "\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, LOUD, "\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(OID, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(INIT, INFO, "--- Enable LPDVT [%d] ---\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(OID, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(OID, INFO, "disable tx ampdu status %u\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RSN, INFO, "802.11w test 0x%x\n", u2SubId);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(HAL, INFO, "set smt fixed rate: %u\n", u4Data);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:				DBGLOG(SCN, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, LOUD, "\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, LOUD, "\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, TRACE, "Default firmware setting %d item\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, TRACE, "%s with %s\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, LOUD, "\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, TRACE,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, TRACE, "Nss [%u], Dbdc [%u]\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, TRACE,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, LOUD, "\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, WARN, "Custom OID interface version: %#08X\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "Invalid MC list length %u\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "Too many MC addresses\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, WARN, "Too short length %u\n", u4QueryBufferLen);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "u4SetBufferLen < sizeof(uint32_t)\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, TRACE, "New packet filter: %#08x\n", u4NewPacketFilter);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(REQ, WARN, "some flags we don't support\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(REQ, INFO, "Enable promiscuous mode\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(REQ, INFO, "Disable promiscuous mode\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(REQ, INFO, "Enable all-multicast mode\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(REQ, INFO, "Enable multicast\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(REQ, INFO, "Disable multicast\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(REQ, INFO, "Enable Broadcast\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(REQ, INFO, "Disable Broadcast\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, TRACE, "[MC debug] u4OsPacketFilter=0x%x\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, TRACE,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, INFO, "Query Power State: D0\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, INFO, "Query Power State: D1\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, INFO, "Query Power State: D2\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, INFO, "Query Power State: D3\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	/* WARNLOG(("Ready to transition to D3\n")); */
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, INFO, "Set Power State: D0\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, INFO, "Set Power State: D1\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, INFO, "Set Power State: D2\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, INFO, "Set Power State: D3\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, LOUD, "\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, LOUD, "\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "Invalid length %u\n", u4SetBufferLen);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, LOUD, "ucBssIndex %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, ERROR, "Fail in creating AisAbortMsg.\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, LOUD, "ucBssIndex %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, TRACE, "Invalid Beacon Interval = %u\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, INFO, "Set beacon interval: %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, LOUD, "\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		/* DBGLOG(INIT, INFO, ("%s: u4IPv4AddrCount (%lu)\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:				DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, ERROR, "Invalid data. QueryBufferLen: %ld.\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, ERROR, "Invalid data. SetBufferLen: %ld.\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(RFTEST, INFO, "Set AT_CMD BufferLen = %d, AT Index = %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(RFTEST, INFO, "Set AT_CMD BufferLen = %d, AT Index = %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, WARN, "Chip resetting, skip\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, TRACE, "ucCmdSeqNum =%d\n", ucCmdSeqNum);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, LOUD, "\r\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, LOUD, "ucBssIndex %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(SEC, TRACE,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(SEC, TRACE,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(SEC, TRACE,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, LOUD, "ucBssIndex %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG_MEM8(REQ, TRACE, (uint8_t *) pvSetBuffer, 560);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, TRACE, "Set: Dump P_PARAM_WPI_KEY_T content\r\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, TRACE, "TYPE      : %d\r\n", prNewKey->eKeyType);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, TRACE, "Direction : %d\r\n", prNewKey->eDirection);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, TRACE, "KeyID     : %d\r\n", prNewKey->ucKeyID);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, TRACE, "AddressIndex:\r\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG_MEM8(REQ, TRACE, prNewKey->aucAddrIndex, 12);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG_MEM8(REQ, TRACE, (uint8_t *) prNewKey->aucWPIEK,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, TRACE, "CK Key(%d):\r\n", (uint8_t) prNewKey->u4LenWPICK);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG_MEM8(REQ, TRACE, (uint8_t *) prNewKey->aucWPICK,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, TRACE, "PN:\r\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG_MEM8(REQ, TRACE, (uint8_t *) prNewKey->aucPN, 16);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, LOUD, "\r\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, LOUD, "\r\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, LOUD, "\r\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, LOUD, "\r\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, LOUD, "\r\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(REQ, ERROR, "NVRAM Read Failed: index=%#x.\r\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, INFO, "EEPROM size =%d\r\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, LOUD, "\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, ERROR, "NVRAM Write Failed.\r\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, LOUD, "\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, LOUD, "\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, LOUD, "\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		/* WARNLOG(("Invalid length %ld\n", u4SetBufferLen)); */
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "Invalid length %u\n", u4QueryBufferLen);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "Invalid length %lu\n", u4QueryBufferLen);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		/* DBGLOG(INIT, INFO, (KERN_WARNING DRV_NAME
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		/* DBGLOG(INIT, INFO, (KERN_WARNING DRV_NAME
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "Fail to set antenna because of ACPI_D3\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		/* DBGLOG(INIT, INFO, (KERN_WARNING DRV_NAME
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		/* DBGLOG(INIT, INFO, (KERN_WARNING DRV_NAME
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "Invalid length %lu\n", u4QueryBufferLen);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		/* DBGLOG(INIT, INFO, (KERN_WARNING DRV_NAME"PTA = 1\r\n")); */
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		/* DBGLOG(INIT, INFO, (KERN_WARNING DRV_NAME"PTA = 0\r\n")); */
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		/* DBGLOG(INIT, INFO, (KERN_WARNING DRV_NAME"Set Pta= 0\r\n"));
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		/* DBGLOG(INIT, INFO, (KERN_WARNING DRV_NAME"Set Pta= 1\r\n"));
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, LOUD, "\r\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, ERROR, "prCmd not available\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, INFO, "c2GLegacyStaPwrOffset=%d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, INFO, "c2GHotspotPwrOffset=%d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, INFO, "c2GP2pPwrOffset=%d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, INFO, "c2GBowPwrOffset=%d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, INFO, "c5GLegacyStaPwrOffset=%d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, INFO, "c5GHotspotPwrOffset=%d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, INFO, "c5GP2pPwrOffset=%d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, INFO, "c5GBowPwrOffset=%d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, INFO, "ucConcurrencePolicy=%d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, INFO, "acTxPwrLimit2G[%d]=%d\n", i,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, INFO, "acTxPwrLimit5G[%d]=%d\n", i,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, TRACE, "[%d] 0x%X, len %u, remain len %u\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, LOUD, "\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, TRACE, "Dump 0x%X, len %u\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "Invalid length %u\n", u4SetBufferLen);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(P2P, INFO, "Set P2P(%u) enable[%u] mode[%u]\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(P2P, ERROR, "P2P interface mode(%u) is wrong\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:				DBGLOG(OID, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(P2P, ERROR, "P2P Launch Failed\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, INFO, "wlanoidSetGtkRekeyData\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(RSN, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, INFO, "ucCmdSeqNum = %d\n", ucCmdSeqNum);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "scnFsmSchedScanRequest failure !!\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "scnFsmSchedScanStopRequest failed.\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, WARN, "[Puff]wlanoidResetBAScoreboard\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(SCN, TRACE, "[BATCH] command=%s, len=%u\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(SCN, TRACE, "[BATCH] invalid len %d\n", u4SetBufferLen);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(SCN, TRACE, "XXX Start Batch Scan XXX\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(SCN, TRACE,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(SCN, TRACE, "[BATCH] Parse RTT fail. head=%s\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(SCN, TRACE,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(SCN, TRACE, "[BATCH] Parse CHANNEL fail(1)\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(SCN, TRACE, "[BATCH] Parse CHANNEL fail(2)\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		 *         DBGLOG(SCN, TRACE, "[BATCH] Parse fail: tokens=%d,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:					DBGLOG(SCN, TRACE,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:				DBGLOG(SCN, TRACE,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(SCN, TRACE, "Scanning Channel:%d, freq: %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(SCN, TRACE,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(SCN, TRACE, "[BATCH] CHANNELS = %s\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(SCN, TRACE, "[BATCH] CHANNEL list\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:				DBGLOG(SCN, TRACE, "[BATCH] %s, %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(SCN, TRACE, "XXX Stop Batch Scan XXX\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(SCN, TRACE, "XXX Get Batch Scan Result (%d) XXX\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(SEC, TRACE, "HS20 IE sz %u\n", u4SetBufferLen);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, LOUD, "ucBssIndex %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, LOUD, "\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "Too short length %u\n", u4QueryBufferLen);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(RSN, INFO, "index = %d\n", prHwWlanInfo->u4Index);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, LOUD, "\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "Too short length %u\n", u4QueryBufferLen);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(RSN, INFO, "index = %d\n", prHwMibInfo->u4Index);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	struct CMD_FW_LOG_2_HOST_CTRL *prFwLog2HostCtrl;
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	*pu4SetInfoLen = sizeof(struct CMD_FW_LOG_2_HOST_CTRL);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	} else if (u4SetBufferLen < sizeof(struct CMD_FW_LOG_2_HOST_CTRL)) {
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "Too short length %d\n", u4SetBufferLen);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	prFwLog2HostCtrl = (struct CMD_FW_LOG_2_HOST_CTRL *)pvSetBuffer;
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, INFO, "McuDest %d, LogType %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:				CMD_ID_FW_LOG_2_HOST,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:				sizeof(struct CMD_FW_LOG_2_HOST_CTRL),
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, WARN, "Too short length %u\n", u4SetBufferLen);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, ERROR,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, INFO, "enable=%d, index=%d\r\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, INFO, "%x dbm\n", rCmdSetTxTargetPower.ucTxTargetPwr);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR, "prCmdRddOnOffCtrl is NULL");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, INFO, "DFS ctrl: %.d, RDD index: %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR, "prCmdRddOnOffCtrl is NULL");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, INFO, "DFS ctrl: %.d, Radar Detect Mode: %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR, "NCHO roam trigger invalid %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, TRACE, "NCHO roam trigger is %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, ERROR, "NCHO no enough memory\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR, "NCHO roam delta invalid %d\n", *pi4Param);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, TRACE, "NCHO roam delta is %d\n", *pi4Param);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, TRACE, "NCHO roam delta is %d\n", *pParam);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, TRACE, "NCHO roam scan period is %d\n", *pParam);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, TRACE, "NCHO roam scan period is %d\n", *pParam);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, TRACE, "NCHO roam scan channel num is %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR, "NCHO roam scan control invalid %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, TRACE, "NCHO roam scan control is %d\n", *pParam);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, TRACE, "NCHO roam scan control is %d\n", *pParam);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR, "NCHO scan channel time invalid %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, TRACE, "NCHO scan channel time is %d\n", *pParam);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, ERROR, "NCHO no enough memory\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR, "NCHO scan home time invalid %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, TRACE, "NCHO cmd is %s\n", acCmd);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, TRACE, "NCHO scan home time is %d\n", *pParam);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, ERROR, "NCHO no enough memory\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR, "NCHO scan home away time invalid %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, TRACE, "NCHO cmd is %s\n", acCmd);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, TRACE, "NCHO scan home away is %d\n", *pParam);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, ERROR, "NCHO no enough memory\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR, "NCHO scan Nprobes invalid %d\n", *pParam);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, TRACE, "NCHO Nprobes is %d\n", *pParam);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, ERROR, "NCHO no enough memory\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, TRACE, "NCHO send ncho action frame start\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, TRACE, "NCHO send action frame end\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR, "NCHO wes mode invalid %d\n", *pParam);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, TRACE, "NCHO WES mode is %d\n", *pParam);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, TRACE, "NCHO Wes mode is %d\n", *pParam);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR, "NCHO wes mode invalid %d\n", *pParam);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, INFO, "NCHO enabled:%d ,band:%d,status:%d\n"
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(INIT, TRACE, "NCHO band is %d\n", *pParam);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR, "NCHO DFS scan mode invalid %d\n", *pParam);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, TRACE, "NCHO DFS scan mode is %d\n", *pParam);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, ERROR, "NCHO no enough memory\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, LOUD, "\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, ERROR, "NCHO DFS scan mode invalid %d\n", *pParam);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(INIT, INFO, "NCHO enable is %d\n", *pParam);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, ERROR, "NCHO no enough memory\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, ERROR, "Buffer is NULL\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, INFO, "Fw Params: %s\n", (uint8_t *)pvSetBuffer);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, INFO, "enable tdls ps %d\n", rTdlsPs.ucIsEnablePs);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, INFO, "Set SER CMD[%d]\n", u4CmdId);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, ERROR, "Error SER CMD\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(REQ, INFO, "RoamingPoily= %d, conn policy= [%d] -> [%d]\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, ERROR,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, WARN, "FT: FT Ies length is 0\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, ERROR,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, WARN, "FT: failed to allocate Join Req Msg\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, INFO, "FT: continue to do auth/assoc, Ft Request %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, ERROR, "didn't connected any Access Point\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, ERROR, "No Memory\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, INFO, "Send Neighbor Request, SSID=%s\n", pucSSID);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, INFO, "Not connected yet\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, INFO, "Send BssTransitionManagementQuery, Reason %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, INFO, "WMM AC is not supported\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, INFO, "wrong operation %s\n", pucCmd);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:			DBGLOG(OID, ERROR, "Parse %s error\n", pucItem);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, ERROR, "AisBssInfo is NULL!\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, ERROR, "pvBuffer is NULL\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, INFO, "Simulate beacon timeout!!!\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, ERROR, "IT type %s is not supported\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:				DBGLOG(OID, ERROR,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:				DBGLOG(OID, ERROR, "not a hex char %c\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, INFO, "Dump IT packet, len %d\n", j);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, ERROR, "packet length %d less than mac header 24\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, ERROR, "Not supported Fw Event IT type %s\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, ERROR, "pvBuffer is NULL\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, TRACE, "wlanoidSetOshareMode\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	struct PARAM_WIFI_LOG_LEVEL_UI *pparam;
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	pparam = (struct PARAM_WIFI_LOG_LEVEL_UI *) pvQueryBuffer;
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, INFO, "version: %d, module: %d, enable: %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	*pu4QueryInfoLen = sizeof(struct PARAM_WIFI_LOG_LEVEL_UI);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	struct PARAM_WIFI_LOG_LEVEL *pparam;
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	pparam = (struct PARAM_WIFI_LOG_LEVEL *) pvQueryBuffer;
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, INFO, "version: %d, module: %d, level: %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	*pu4QueryInfoLen = sizeof(struct PARAM_WIFI_LOG_LEVEL_UI);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	struct PARAM_WIFI_LOG_LEVEL *pparam;
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	pparam = (struct PARAM_WIFI_LOG_LEVEL *) pvSetBuffer;
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, INFO, "version: %d, module: %d, level: %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, INFO, "Set SW AMSDU Num: %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, INFO, "Set SW AMSDU max Size: %d\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, ERROR, "prAisBssInfo = NULL\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, INFO, "LowLatency(oid) event:0x%x\n", u4Events);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, ERROR,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, INFO, "bss index=%d\n", ucBssIdx);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, ERROR, "invalid bss index: %u\n", ucBssIdx);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, ERROR, "invalid BssInfo: %p, %u\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, INFO,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:	DBGLOG(OID, INFO, "wifi type=[%s](%d), phyType=%u\n",
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, ERROR, "prPwrCtrlParam is NULL\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:					DBGLOG(OID, ERROR,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, ERROR, "prAdapter is NULL\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, ERROR, "pu4QueryInfoLen is NULL\n");
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "Invalid length %lu\n", u4QueryBufferLen);
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, ERROR,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(OID, WARN,
connectivity/common/wlan/core/gen4m/common/wlan_oid.c:		DBGLOG(REQ, WARN, "SAE-confirm failed with bssid:" MACSTR "\n",
connectivity/common/wlan/core/gen4m/include/config.h:#define CFG_ENABLE_CAL_LOG		1
connectivity/common/wlan/core/gen4m/include/config.h:#define CFG_ENABLE_PER_STA_STATISTICS_LOG 1
connectivity/common/wlan/core/gen4m/include/config.h:#define CFG_SUPPORT_CAL_RESULT_BACKUP_TO_HOST_DBGLOG		0
connectivity/common/wlan/core/gen4m/include/config.h:#define CFG_SUPPORT_CAL_RESULT_BACKUP_TO_HOST_DBGLOG		0
connectivity/common/wlan/core/gen4m/include/wlan_oid.h:struct PARAM_WIFI_LOG_LEVEL_UI {
connectivity/common/wlan/core/gen4m/include/wlan_oid.h:struct PARAM_WIFI_LOG_LEVEL {
connectivity/common/wlan/core/gen4m/include/wlan_oid.h:enum ENUM_WIFI_LOG_LEVEL_VERSION_T {
connectivity/common/wlan/core/gen4m/include/wlan_oid.h:	ENUM_WIFI_LOG_LEVEL_VERSION_V1 = 1,
connectivity/common/wlan/core/gen4m/include/wlan_oid.h:	ENUM_WIFI_LOG_LEVEL_VERSION_NUM
connectivity/common/wlan/core/gen4m/include/wlan_oid.h:enum ENUM_WIFI_LOG_LEVEL_T {
connectivity/common/wlan/core/gen4m/include/wlan_oid.h:	ENUM_WIFI_LOG_LEVEL_DEFAULT = 0,
connectivity/common/wlan/core/gen4m/include/wlan_oid.h:	ENUM_WIFI_LOG_LEVEL_MORE,
connectivity/common/wlan/core/gen4m/include/wlan_oid.h:	ENUM_WIFI_LOG_LEVEL_EXTREME,
connectivity/common/wlan/core/gen4m/include/wlan_oid.h:	ENUM_WIFI_LOG_LEVEL_NUM
connectivity/common/wlan/core/gen4m/include/wlan_oid.h:enum ENUM_WIFI_LOG_MODULE_T {
connectivity/common/wlan/core/gen4m/include/wlan_oid.h:	ENUM_WIFI_LOG_MODULE_DRIVER = 0,
connectivity/common/wlan/core/gen4m/include/wlan_oid.h:	ENUM_WIFI_LOG_MODULE_FW,
connectivity/common/wlan/core/gen4m/include/wlan_oid.h:	ENUM_WIFI_LOG_MODULE_NUM,
connectivity/common/wlan/core/gen4m/include/wlan_oid.h:enum ENUM_WIFI_LOG_LEVEL_SUPPORT_T {
connectivity/common/wlan/core/gen4m/include/wlan_oid.h:	ENUM_WIFI_LOG_LEVEL_SUPPORT_DISABLE = 0,
connectivity/common/wlan/core/gen4m/include/wlan_oid.h:	ENUM_WIFI_LOG_LEVEL_SUPPORT_ENABLE,
connectivity/common/wlan/core/gen4m/include/wlan_oid.h:	ENUM_WIFI_LOG_LEVEL_SUPPORT_NUM
connectivity/common/wlan/core/gen4m/include/mgmt/scan.h:#define SCAN_LOG_PREFIX_MAX_LEN		(16)
connectivity/common/wlan/core/gen4m/include/mgmt/scan.h:#define SCAN_LOG_MSG_MAX_LEN		(500)
connectivity/common/wlan/core/gen4m/include/mgmt/scan.h:#define SCAN_LOG_BUFF_SIZE		(200)
connectivity/common/wlan/core/gen4m/include/mgmt/scan.h:enum ENUM_SCAN_LOG_PREFIX {
connectivity/common/wlan/core/gen4m/include/mgmt/scan.h:	LOG_SCAN_REQ_K2D = 0,		/* 0 */
connectivity/common/wlan/core/gen4m/include/mgmt/scan.h:	LOG_SCAN_REQ_D2F,
connectivity/common/wlan/core/gen4m/include/mgmt/scan.h:	LOG_SCAN_RESULT_F2D,
connectivity/common/wlan/core/gen4m/include/mgmt/scan.h:	LOG_SCAN_RESULT_D2K,
connectivity/common/wlan/core/gen4m/include/mgmt/scan.h:	LOG_SCAN_DONE_F2D,
connectivity/common/wlan/core/gen4m/include/mgmt/scan.h:	LOG_SCAN_DONE_D2K,		/* 5 */
connectivity/common/wlan/core/gen4m/include/mgmt/scan.h:	LOG_SCHED_SCAN_REQ_START_K2D,
connectivity/common/wlan/core/gen4m/include/mgmt/scan.h:	LOG_SCHED_SCAN_REQ_START_D2F,
connectivity/common/wlan/core/gen4m/include/mgmt/scan.h:	LOG_SCHED_SCAN_REQ_STOP_K2D,
connectivity/common/wlan/core/gen4m/include/mgmt/scan.h:	LOG_SCHED_SCAN_REQ_STOP_D2F,
connectivity/common/wlan/core/gen4m/include/mgmt/scan.h:	LOG_SCHED_SCAN_DONE_F2D,	/* 10 */
connectivity/common/wlan/core/gen4m/include/mgmt/scan.h:	LOG_SCHED_SCAN_DONE_D2K,
connectivity/common/wlan/core/gen4m/include/mgmt/scan.h:	LOG_SCAN_ABORT_REQ_K2D,
connectivity/common/wlan/core/gen4m/include/mgmt/scan.h:	LOG_SCAN_ABORT_REQ_D2F,
connectivity/common/wlan/core/gen4m/include/mgmt/scan.h:	LOG_SCAN_ABORT_DONE_D2K,
connectivity/common/wlan/core/gen4m/include/mgmt/scan.h:	LOG_SCAN_D2D,
connectivity/common/wlan/core/gen4m/include/mgmt/scan.h:	LOG_SCAN_MAX
connectivity/common/wlan/core/gen4m/include/mgmt/scan.h:struct SCAN_LOG_ELEM_BSS {
connectivity/common/wlan/core/gen4m/include/mgmt/scan.h:struct SCAN_LOG_CACHE {
connectivity/common/wlan/core/gen4m/include/mgmt/scan.h:	struct SCAN_LOG_ELEM_BSS arBSSListBufFW[SCAN_LOG_BUFF_SIZE];
connectivity/common/wlan/core/gen4m/include/mgmt/scan.h:	struct SCAN_LOG_ELEM_BSS arBSSListBufCFG[SCAN_LOG_BUFF_SIZE];
connectivity/common/wlan/core/gen4m/include/mgmt/scan.h:	struct SCAN_LOG_CACHE rScanLogCache;
connectivity/common/wlan/core/gen4m/include/mgmt/scan.h:extern const char aucScanLogPrefix[][SCAN_LOG_PREFIX_MAX_LEN];
connectivity/common/wlan/core/gen4m/include/mgmt/scan.h:#if DBG_DISABLE_ALL_LOG
connectivity/common/wlan/core/gen4m/include/mgmt/scan.h:#else /* DBG_DISABLE_ALL_LOG */
connectivity/common/wlan/core/gen4m/include/mgmt/scan.h:		LOG_FUNC("[%u]SCANLOG:(SCN " #_Clz ") %s " _Fmt, \
connectivity/common/wlan/core/gen4m/include/mgmt/scan.h:#endif /* DBG_DISABLE_ALL_LOG */
connectivity/common/wlan/core/gen4m/include/mgmt/scan.h:	struct SCAN_LOG_ELEM_BSS *prListBuf,
connectivity/common/wlan/core/gen4m/include/mgmt/scan.h:	enum ENUM_SCAN_LOG_PREFIX prefix,
connectivity/common/wlan/core/gen4m/include/mgmt/scan.h:void scanLogCacheFlushBSS(struct LINK *prList, enum ENUM_SCAN_LOG_PREFIX prefix,
connectivity/common/wlan/core/gen4m/include/mgmt/scan.h:void scanLogCacheFlushAll(struct SCAN_LOG_CACHE *prScanLogCache,
connectivity/common/wlan/core/gen4m/include/mgmt/scan.h:	enum ENUM_SCAN_LOG_PREFIX prefix, const uint16_t logBufLen);
connectivity/common/wlan/core/gen4m/include/mgmt/p2p_role.h:#if	CFG_ENABLE_PER_STA_STATISTICS_LOG
connectivity/common/wlan/core/gen4m/include/mgmt/p2p_role.h:#if	CFG_ENABLE_PER_STA_STATISTICS_LOG
connectivity/common/wlan/core/gen4m/include/nic_cmd_event.h:	EXT_CMD_ID_FW_LOG_2_HOST = 0x13,
connectivity/common/wlan/core/gen4m/include/nic_cmd_event.h:	CMD_ID_LOG_UI_INFO = 0x8D,	/* 0x8D (Set / Query) */
connectivity/common/wlan/core/gen4m/include/nic_cmd_event.h:	CMD_ID_FW_LOG_2_HOST,	/* 0xc5 (Set) */
connectivity/common/wlan/core/gen4m/include/nic_cmd_event.h:	CMD_ID_STATS_LOG = 0xCB,	/* 0xcb (Set) */
connectivity/common/wlan/core/gen4m/include/nic_cmd_event.h:	EVENT_ID_LOG_UI_INFO = 0x8D,
connectivity/common/wlan/core/gen4m/include/nic_cmd_event.h:#define EXT_EVENT_ID_FW_LOG_2_HOST 0x13
connectivity/common/wlan/core/gen4m/include/nic_cmd_event.h:struct CMD_FW_LOG_2_HOST_CTRL {
connectivity/common/wlan/core/gen4m/include/nic_cmd_event.h:struct CMD_STATS_LOG {
connectivity/common/wlan/core/gen4m/include/nic_cmd_event.h:struct CMD_EVENT_LOG_UI_INFO {
connectivity/common/wlan/core/gen4m/include/chips/pse.h:#define PSE_LOGICAL_RST (1 << 1)
connectivity/common/wlan/core/gen4m/include/wlan_lib.h:#define WIFI_FEATURE_LOGGER             (0x20000)
connectivity/common/wlan/core/gen4m/include/wlan_lib.h:#define WLAN_TX_STATS_LOG_TIMEOUT			30000
connectivity/common/wlan/core/gen4m/include/wlan_lib.h:#define WLAN_TX_STATS_LOG_DURATION			1500
connectivity/common/wlan/core/gen4m/include/wlan_lib.h:	DEBUG_MSG_ID_FWLOG = 0x02,
connectivity/common/wlan/core/gen4m/include/pwr_mgt.h:#define LP_OWN_BACK_FAILED_LOG_SKIP_MS  2000
connectivity/common/wlan/core/gen4m/include/nic/nic_tx.h:		DBGLOG(TX, TRACE, \
connectivity/common/wlan/core/gen4m/include/nic/connac_reg.h:#define DPMA_HIF_LOGIC_RESET_MASK               (0x1 << 4)
connectivity/common/wlan/core/gen4m/include/nic/hal.h:				DBGLOG(HAL, ERROR, \
connectivity/common/wlan/core/gen4m/include/nic/hal.h:				DBGLOG(HAL, ERROR, \
connectivity/common/wlan/core/gen4m/include/nic/hal.h:		DBGLOG(HAL, WARN, "ignore HAL_MCR_RD access! 0x%x\n", \
connectivity/common/wlan/core/gen4m/include/nic/hal.h:				DBGLOG(HAL, ERROR, \
connectivity/common/wlan/core/gen4m/include/nic/hal.h:				DBGLOG(HAL, ERROR, \
connectivity/common/wlan/core/gen4m/include/nic/hal.h:		DBGLOG(HAL, WARN, "ignore HAL_MCR_WR access! 0x%x: 0x%x\n", \
connectivity/common/wlan/core/gen4m/include/nic/hal.h:			DBGLOG(HAL, ERROR, "HAL_PORT_RD access fail! 0x%x\n", \
connectivity/common/wlan/core/gen4m/include/nic/hal.h:		DBGLOG(HAL, WARN, "ignore HAL_PORT_RD access! 0x%x\n", \
connectivity/common/wlan/core/gen4m/include/nic/hal.h:			DBGLOG(HAL, ERROR, "HAL_PORT_WR access fail! 0x%x\n", \
connectivity/common/wlan/core/gen4m/include/nic/hal.h:		DBGLOG(HAL, WARN, "ignore HAL_PORT_WR access! 0x%x\n", \
connectivity/common/wlan/core/gen4m/include/nic/hal.h:			DBGLOG(HAL, ERROR, "HAL_BYTE_WR access fail! 0x%x\n", \
connectivity/common/wlan/core/gen4m/include/nic/hal.h:		DBGLOG(HAL, WARN, "ignore HAL_BYTE_WR access! 0x%x\n", \
connectivity/common/wlan/core/gen4m/include/nic/hal.h:			DBGLOG(HAL, ERROR, \
connectivity/common/wlan/core/gen4m/include/nic/hal.h:		DBGLOG(HAL, WARN, \
connectivity/common/wlan/core/gen4m/include/nic/hal.h:			DBGLOG(INIT, INFO, \
connectivity/common/wlan/core/gen4m/include/nic/hal.h:			DBGLOG(INIT, INFO, \
connectivity/common/wlan/core/gen4m/include/nic/hal.h:		DBGLOG(INIT, INFO, "Mailbox: 0x%x\n", u4Value); \
connectivity/common/wlan/core/gen4m/include/nic/adapter.h:#if	CFG_ENABLE_PER_STA_STATISTICS_LOG
connectivity/common/wlan/core/gen4m/include/debug.h:#define DBG_DISABLE_ALL_LOG             0
connectivity/common/wlan/core/gen4m/include/debug.h:#define DBG_LOG_LEVEL_DEFAULT \
connectivity/common/wlan/core/gen4m/include/debug.h:#define DBG_LOG_LEVEL_MORE \
connectivity/common/wlan/core/gen4m/include/debug.h:	(DBG_LOG_LEVEL_DEFAULT | \
connectivity/common/wlan/core/gen4m/include/debug.h:#define DBG_LOG_LEVEL_EXTREME \
connectivity/common/wlan/core/gen4m/include/debug.h:	(DBG_LOG_LEVEL_MORE | \
connectivity/common/wlan/core/gen4m/include/debug.h:	DBG_MODULE_NUM		/* Notice the XLOG check */
connectivity/common/wlan/core/gen4m/include/debug.h: * syntax does not support  #define LOG_FUNC(x,...)
connectivity/common/wlan/core/gen4m/include/debug.h:#define LOG_FUNC                kalPrint
connectivity/common/wlan/core/gen4m/include/debug.h:#define LOG_FUNC_LIMITED	kalPrintLimited
connectivity/common/wlan/core/gen4m/include/debug.h:#if DBG_DISABLE_ALL_LOG
connectivity/common/wlan/core/gen4m/include/debug.h:#define DBGLOG(_Module, _Class, _Fmt)
connectivity/common/wlan/core/gen4m/include/debug.h:#define DBGLOG_LIMITED(_Module, _Class, _Fmt)
connectivity/common/wlan/core/gen4m/include/debug.h:#define DBGLOG_MEM8(_Module, _Class, _StartAddr, _Length)
connectivity/common/wlan/core/gen4m/include/debug.h:#define DBGLOG_MEM32(_Module, _Class, _StartAddr, _Length)
connectivity/common/wlan/core/gen4m/include/debug.h:#define DBGLOG(_Mod, _Clz, _Fmt, ...)
connectivity/common/wlan/core/gen4m/include/debug.h:#define DBGLOG_LIMITED(_Mod, _Clz, _Fmt, ...)
connectivity/common/wlan/core/gen4m/include/debug.h:#define DBGFWLOG(_Mod, _Clz, _Fmt, ...) 
connectivity/common/wlan/core/gen4m/include/debug.h:#define TOOL_PRINTLOG(_Mod, _Clz, _Fmt, ...)
connectivity/common/wlan/core/gen4m/include/debug.h:#define DBGLOG_MEM8(_Mod, _Clz, _Adr, _Len)
connectivity/common/wlan/core/gen4m/include/debug.h:#define DBGLOG_MEM32(_Mod, _Clz, _Adr, _Len)
connectivity/common/wlan/core/gen4m/include/debug.h:	LOG_FUNC("alloate memory failed at %s:%d\n", __FILE__, __LINE__); \
connectivity/common/wlan/core/gen4m/include/debug.h:	LOG_FUNC("alloate memory failed at %s:%d\n", __FILE__, __LINE__); \
connectivity/common/wlan/core/gen4m/include/debug.h:	LOG_FUNC("alloate memory failed at %s:%d\n", __FILE__, __LINE__); \
connectivity/common/wlan/core/gen4m/include/debug.h:/* LOG function for print to buffer */
connectivity/common/wlan/core/gen4m/include/debug.h:/* If buffer pointer is NULL, redirect to normal DBGLOG */
connectivity/common/wlan/core/gen4m/include/debug.h:#define LOGBUF(_pucBuf, _maxLen, _curLen, _Fmt, ...) 
connectivity/common/wlan/core/gen4m/include/debug.h:#define log_dbg			DBGLOG
connectivity/common/wlan/core/gen4m/include/debug.h:#define log_limited_dbg		DBGLOG_LIMITED
connectivity/common/wlan/core/gen4m/include/debug.h:#define log_fw_dbg		DBGFWLOG
connectivity/common/wlan/core/gen4m/include/debug.h:#define log_mem8_dbg		DBGLOG_MEM8
connectivity/common/wlan/core/gen4m/include/debug.h:#define log_mem32_dbg		DBGLOG_MEM32
connectivity/common/wlan/core/gen4m/include/debug.h:#define log_tool_dbg		TOOL_PRINTLOG
connectivity/common/wlan/core/gen4m/mgmt/assoc.c:	DBGLOG(SAA, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/assoc.c:			DBGLOG(SAA, INFO,
connectivity/common/wlan/core/gen4m/mgmt/assoc.c:		DBGLOG(SAA, TRACE, "Use default listen interval\n");
connectivity/common/wlan/core/gen4m/mgmt/assoc.c:			DBGLOG(P2P, TRACE, "Function Linker Lost.\n");
connectivity/common/wlan/core/gen4m/mgmt/assoc.c:		DBGLOG(SAA, WARN,
connectivity/common/wlan/core/gen4m/mgmt/assoc.c:			DBGLOG(P2P, TRACE, "Function Linker Lost.\n");
connectivity/common/wlan/core/gen4m/mgmt/assoc.c:	DBGLOG_MEM8(SAA, INFO, pucBuffer, cp - pucBuffer);
connectivity/common/wlan/core/gen4m/mgmt/assoc.c:		DBGLOG(SAA, WARN, "Invalid AssocRsp length!");
connectivity/common/wlan/core/gen4m/mgmt/assoc.c:	DBGLOG(SAA, LOUD, "prSwRfb->u2PayloadLength = %d\n",
connectivity/common/wlan/core/gen4m/mgmt/assoc.c:			DBGLOG(SEC, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/assoc.c:		DBGLOG(SAA, INFO,
connectivity/common/wlan/core/gen4m/mgmt/assoc.c:					DBGLOG(SAA, INFO,
connectivity/common/wlan/core/gen4m/mgmt/assoc.c:						DBGLOG(SAA, INFO,
connectivity/common/wlan/core/gen4m/mgmt/assoc.c:	DBGLOG(RSN, INFO, "assocSendDisAssocFrame\n");
connectivity/common/wlan/core/gen4m/mgmt/assoc.c:		DBGLOG(SAA, WARN, "No PKT_INFO_T for sending DisAssoc.\n");
connectivity/common/wlan/core/gen4m/mgmt/assoc.c:			DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/assoc.c:	DBGLOG(SAA, INFO, "ucTxSeqNum=%d ucStaRecIndex=%d u2ReasonCode=%d\n",
connectivity/common/wlan/core/gen4m/mgmt/assoc.c:		DBGLOG(SAA, LOUD, "Invalid DisAssoc packet length!");
connectivity/common/wlan/core/gen4m/mgmt/assoc.c:		DBGLOG(SAA, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/assoc.c:			DBGLOG(RSN, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/assoc.c:						DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/assoc.c:			DBGLOG(SAA, WARN,
connectivity/common/wlan/core/gen4m/mgmt/assoc.c:					DBGLOG(SAA, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/assoc.c:		DBGLOG(AAA, WARN,
connectivity/common/wlan/core/gen4m/mgmt/assoc.c:	DBGLOG(SAA, INFO,
connectivity/common/wlan/core/gen4m/mgmt/scan_fsm.c:		DBGLOG(SCN, INFO, "Include BSSID %pM in probe request\n",
connectivity/common/wlan/core/gen4m/mgmt/scan_fsm.c:		LOG_SCAN_REQ_D2F, SCAN_LOG_MSG_MAX_LEN);
connectivity/common/wlan/core/gen4m/mgmt/scan_fsm.c:			scanlog_dbg(LOG_SCAN_ABORT_REQ_D2F, INFO, "Scan Abort#%u to Q: isExtCh=%u",
connectivity/common/wlan/core/gen4m/mgmt/scan_fsm.c:		scanlog_dbg(LOG_SCAN_DONE_F2D, INFO, "scnEventScanDone Version%u!size of ScanDone%zu,ucCompleteChanCount[%u],ucCurrentState%u, u4ScanDurBcnCnt[%u],Seq[%u]\n",
connectivity/common/wlan/core/gen4m/mgmt/scan_fsm.c:			LOG_SCAN_DONE_F2D, SCAN_LOG_MSG_MAX_LEN);
connectivity/common/wlan/core/gen4m/mgmt/scan_fsm.c:		scanlog_dbg(LOG_SCAN_DONE_F2D, INFO, "Old scnEventScanDone Version\n");
connectivity/common/wlan/core/gen4m/mgmt/scan_fsm.c:		scanlog_dbg(LOG_SCHED_SCAN_DONE_F2D, INFO, "scnEventSchedScanDone seq %u\n",
connectivity/common/wlan/core/gen4m/mgmt/scan_fsm.c:		scanlog_dbg(LOG_SCHED_SCAN_DONE_F2D, INFO, "Unexpected SCHEDSCANDONE event: Seq = %u, Current State = %d\n",
connectivity/common/wlan/core/gen4m/mgmt/scan_fsm.c:		scanlog_dbg(LOG_SCHED_SCAN_REQ_START_D2F, INFO, "sched scan action = %d\n",
connectivity/common/wlan/core/gen4m/mgmt/scan_fsm.c:		scanlog_dbg(LOG_SCHED_SCAN_REQ_STOP_D2F, INFO, "sched scan action = %d\n",
connectivity/common/wlan/core/gen4m/mgmt/cnm.c:	DBGLOG(CNM, INFO, "cnmCsaDoneEvent.\n");
connectivity/common/wlan/core/gen4m/mgmt/cnm.c:		DBGLOG(CNM, WARN, "Receive duplicate cnmCsaDoneEvent.\n");
connectivity/common/wlan/core/gen4m/mgmt/cnm.c:		DBGLOG(P2P, ERROR, "prGlueInfo is NULL\n");
connectivity/common/wlan/core/gen4m/mgmt/cnm.c:		DBGLOG(P2P, WARN,
connectivity/common/wlan/core/gen4m/mgmt/cnm.c:		DBGLOG(P2P, WARN,
connectivity/common/wlan/core/gen4m/mgmt/cnm.c:			DBGLOG(P2P, WARN,
connectivity/common/wlan/core/gen4m/mgmt/cnm.c:	DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/mgmt/cnm.c:		DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/mgmt/cnm.c:		DBGLOG(CNM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/cnm.c:			DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/cnm.c:		DBGLOG(CNM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/cnm.c:		DBGLOG(CNM, INFO, "[CSA]BssIdx=%d,CurCH=%d\n",
connectivity/common/wlan/core/gen4m/mgmt/cnm.c:			DBGLOG(CNM, INFO, "[CSA]BssIdx=%d,NewCH=%d\n",
connectivity/common/wlan/core/gen4m/mgmt/cnm.c:			DBGLOG(CNM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/cnm.c:		DBGLOG(CNM, WARN,
connectivity/common/wlan/core/gen4m/mgmt/cnm.c:		DBGLOG(CNM, INFO, "Pending for TxQuota[%d] Update!\n", u2Port);
connectivity/common/wlan/core/gen4m/mgmt/cnm.c:		DBGLOG(CNM, INFO, "Update TxQuota[%d]=%d!\n",
connectivity/common/wlan/core/gen4m/mgmt/cnm.c:	DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/cnm.c:		DBGLOG(P2P, WARN, "glue info is not active\n");
connectivity/common/wlan/core/gen4m/mgmt/cnm.c:		DBGLOG(P2P, WARN, "p2p glue info is not active\n");
connectivity/common/wlan/core/gen4m/mgmt/cnm.c:		DBGLOG(P2P, WARN, "Incorrect role index");
connectivity/common/wlan/core/gen4m/mgmt/cnm.c:		DBGLOG(P2P, WARN,
connectivity/common/wlan/core/gen4m/mgmt/cnm.c:		DBGLOG(CNM, INFO, "SetOpTRx invalid param,B[%d]\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/cnm.c:		DBGLOG(CNM, INFO, "GetOpTRx invalid param\n");
connectivity/common/wlan/core/gen4m/mgmt/cnm.c:	DBGLOG(CNM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:		DBGLOG(SAA, STATE, "[SAA]TRANSITION: [%s] -> [%s]\n",
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:			DBGLOG(SAA, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:				DBGLOG(SAA, INFO,
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:			DBGLOG(SAA, ERROR, "Unknown AA STATE\n");
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:		DBGLOG(SAA, ERROR, "[%s]prStaRec is NULL\n", __func__);
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:		DBGLOG(SAA, ERROR, "[%s]prAdapter is NULL\n", __func__);
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:		DBGLOG(SAA, ERROR, "Invalid case in %s.\n", __func__);
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:	DBGLOG(SAA, LOUD, "EVENT-START: Trigger SAA FSM.\n");
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:		DBGLOG(SAA, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:		DBGLOG(SAA, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:		DBGLOG(SAA, ERROR, "EVENT-START: Reentry of SAA Module.\n");
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:		DBGLOG(RLM, TRACE, "STA 40mAllowed=%d\n",
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:		DBGLOG(SAA, ERROR, "No Sta Record or it is not in use\n");
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:		DBGLOG(SAA, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:	DBGLOG(SAA, TRACE, "Continue to do auth/assoc\n");
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:		DBGLOG(SAA, INFO,
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:	DBGLOG(SAA, LOUD, "EVENT-TIMER: TX REQ TIMEOUT, Current Time = %d\n",
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:	DBGLOG(SAA, LOUD, "EVENT-TIMER: RX RESP TIMEOUT, Current Time = %d\n",
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:		DBGLOG(SAA, WARN,
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:				DBGLOG(SAA, INFO,
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:					DBGLOG(SAA, INFO,
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:				DBGLOG(SAA, INFO,
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:		DBGLOG(SAA, WARN,
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:				DBGLOG(SAA, INFO,
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:				DBGLOG(SAA, ERROR, "Unknown BSSID\n");
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:	DBGLOG(SAA, INFO, "Rx Deauth frame ,DA[" MACSTR "] SA[" MACSTR
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:			DBGLOG(SAA, WARN,
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:					DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:			DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:			DBGLOG(RSN, INFO, "RXM: Drop unprotected Mgmt frame\n");
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:			DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:	DBGLOG(SAA, INFO,
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:			DBGLOG(SAA, WARN,
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:					DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:		DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:		DBGLOG(RSN, INFO, "RXM: Drop unprotected Mgmt frame\n");
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:		DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:	DBGLOG(SAA, LOUD, "EVENT-ABORT: Stop SAA FSM.\n");
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:		DBGLOG(SAA, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:		DBGLOG(SAA, WARN,
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:	DBGLOG(JOIN, EVENT, "JOIN EVENT: JOIN TIMEOUT\n");
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:	DBGLOG(JOIN, INFO, "Target BSS[%s]'s PhyType = %s\n",
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:	DBGLOG(JOIN, INFO, "Target BSS's Channel = %d, Band = %d\n",
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:	DBGLOG(JOIN, INFO, "Current BSS's Channel = %d, Band = %d\n",
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:		DBGLOG(JOIN, INFO, "Hidden SSID! - Update SSID : %s\n",
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:	DBGLOG(JOIN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:	DBGLOG(JOIN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:	DBGLOG(JOIN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:	DBGLOG(JOIN, INFO, "prBssInfo->fgUseShortSlotTime = %d\n",
connectivity/common/wlan/core/gen4m/mgmt/saa_fsm.c:		DBGLOG(JOIN, INFO, "prStaRec->ucCurrRate1Index = %d\n",
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:			DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:#if CFG_ENABLE_PER_STA_STATISTICS_LOG
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:			DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, INFO, "->p2pRoleFsmUninit()\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:#if CFG_ENABLE_PER_STA_STATISTICS_LOG
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, INFO, "->p2pFsmUninit()\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:				DBGLOG(P2P, STATE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:				DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:			DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR, "prAdapter shouldn't be NULL!\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR, "prStaRec shouldn't be NULL!\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, INFO, "Deauth TX Complete!\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, WARN,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, WARN,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:			DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:			DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:			DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, TRACE, "RX Deauth\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:						DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:					DBGLOG(P2P, INFO, "deauth reason=6\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, TRACE, "Deauth Reason:%d\n", u2ReasonCode);
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, TRACE, "RX Disassoc\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:					DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:				DBGLOG(P2P, INFO, "deauth reason=6\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:			DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, TRACE, "p2pRoleFsmRunEventStartAP\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, WARN,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, TRACE, "RxNSS[%u]TxNss[%u].\n",
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:			DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:			DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, INFO, "p2pRoleFsmRunEventDelIface\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR, "prGlueInfo shouldn't be NULL!\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, TRACE, "under deauth procedure, Quit.\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, INFO, "p2pRoleFsmRunEventDfsCac\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, INFO, "Role(%d) Set channel at CH(%d)\n",
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, INFO, "p2pRoleFsmRunEventRadarDet\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, INFO, "p2pRoleFsmRunEventSetNewChannel\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, TRACE, "p2pRoleFsmRunEventCsaDone\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, TRACE, "p2pFsmRunEventConnectionRequest\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:				DBGLOG(P2P, TRACE, "GO's StaRec is NULL\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:				DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:			DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:				DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:					DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR, "prJoinCompMsg->prStaRec is NULL!\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:				DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR, "prP2pRoleFsmInfo is NULL!");
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, TRACE, "p2pDevFsmRunEventScanRequest\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:			DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, TRACE, "prP2pRoleFsmInfo is NULL\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, TRACE, "P2P Role Scan Done Event\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:				DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:				DBGLOG(P2P, WARN, "query safe chn fail.\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR, "prP2pRoleFsmInfo is NULL!\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, TRACE, "P2P Run Event Role Channel Grant\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, WARN,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:				DBGLOG(P2P, WARN,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:			DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:				DBGLOG(P2P, WARN,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:			DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, TRACE, "Update ACL Entry ucBssIdx = %d\n", ucBssIdx);
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:			DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, WARN,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, TRACE, "p2pRoleFsmRunEventBeaconUpdate\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG_MEM8(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:			DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:			DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, INFO, "Update NoA param, count=%d, ucBssIdx=%d\n",
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:#if CFG_ENABLE_PER_STA_STATISTICS_LOG
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR, "prAdapter=NULL || prP2pRoleFsmInfo=NULL\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR, "prP2pBssInfo=NULL\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR, "prQueryStaStatistics=NULL\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:			DBGLOG(P2P, ERROR, "Invalid OPMode=%d\n",
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:				DBGLOG(P2P, ERROR, "prClientList=NULL\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, INFO, "Overwrite channel duration from %d to %d\n",
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:			DBGLOG(P2P, WARN,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, WARN, "Unknown state (%s) for offchannel-tx.\n",
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, INFO, "fgNeedOffchnlTx: %d\n", fgNeedOffchnlTx);
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, INFO, "idx=%d, ht=%d, ht40=%d, vht=%d, bw=%d, m=%d, c=%d",
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:			DBGLOG(REQ, INFO, "[%d] band=%d, ch=%d\n", i,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, INFO, "acs trim scan list, [%d]=%d %d\n",
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:	DBGLOG(P2P, INFO, "acs chnl mask=[0x%08x][0x%08x][0x%08x]\n",
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, ERROR, "alloc scan req. fail\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_fsm.c:		DBGLOG(P2P, INFO, "Cancel current ACS scan.\n");
connectivity/common/wlan/core/gen4m/mgmt/aaa_fsm.c:	DBGLOG(SAA, LOUD, "EVENT-START: Trigger SAA FSM\n");
connectivity/common/wlan/core/gen4m/mgmt/aaa_fsm.c:		DBGLOG(SAA, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/aaa_fsm.c:		DBGLOG(SAA, ERROR, "EVENT-START: Reentry of SAA Module.\n");
connectivity/common/wlan/core/gen4m/mgmt/aaa_fsm.c:	DBGLOG(AAA, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/aaa_fsm.c:		DBGLOG(AAA, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/aaa_fsm.c:		DBGLOG(AAA, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/aaa_fsm.c:		DBGLOG(AAA, INFO,
connectivity/common/wlan/core/gen4m/mgmt/aaa_fsm.c:					DBGLOG(AAA, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/aaa_fsm.c:						DBGLOG(AAA, INFO,
connectivity/common/wlan/core/gen4m/mgmt/aaa_fsm.c:					DBGLOG(AAA, WARN,
connectivity/common/wlan/core/gen4m/mgmt/aaa_fsm.c:			DBGLOG(AAA, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/aaa_fsm.c:		DBGLOG(AAA, INFO,
connectivity/common/wlan/core/gen4m/mgmt/aaa_fsm.c:			DBGLOG(AAA, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/aaa_fsm.c:		DBGLOG(AAA, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/aaa_fsm.c:			DBGLOG(AAA, WARN,
connectivity/common/wlan/core/gen4m/mgmt/aaa_fsm.c:				DBGLOG(AAA, INFO, "AP send SAQ\n");
connectivity/common/wlan/core/gen4m/mgmt/aaa_fsm.c:						DBGLOG(AAA, INFO,
connectivity/common/wlan/core/gen4m/mgmt/aaa_fsm.c:	DBGLOG(AAA, INFO,
connectivity/common/wlan/core/gen4m/mgmt/aaa_fsm.c:	DBGLOG(AAA, TRACE, "TxDone ucStaState:%d, eAuthAssocState:%d\n",
connectivity/common/wlan/core/gen4m/mgmt/aaa_fsm.c:	DBGLOG(AAA, TRACE, "TxDone end ucStaState:%d, eAuthAssocState:%d\n",
connectivity/common/wlan/core/gen4m/mgmt/aaa_fsm.c:	DBGLOG(JOIN, EVENT, "JOIN EVENT: ABORT\n");
connectivity/common/wlan/core/gen4m/mgmt/aaa_fsm.c:	DBGLOG(JOIN, EVENT, "JOIN EVENT: JOIN TIMEOUT\n");
connectivity/common/wlan/core/gen4m/mgmt/aaa_fsm.c:	DBGLOG(JOIN, INFO, "Target BSS[%s]'s PhyType = %s\n",
connectivity/common/wlan/core/gen4m/mgmt/aaa_fsm.c:	DBGLOG(JOIN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/aaa_fsm.c:	DBGLOG(JOIN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/aaa_fsm.c:		DBGLOG(JOIN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/aaa_fsm.c:	DBGLOG(JOIN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/aaa_fsm.c:	DBGLOG(JOIN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/aaa_fsm.c:	DBGLOG(JOIN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/aaa_fsm.c:	DBGLOG(JOIN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/aaa_fsm.c:		DBGLOG(JOIN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_state.c:	DBGLOG(P2P, TRACE, "stop role idle timer.\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_state.c:					DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_state.c:				DBGLOG(P2P, ERROR, "No prP2pDevFsmInfo ptr\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_state.c:					DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_state.c:		DBGLOG(P2P, TRACE, "Start a join init timer\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_state.c:				DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_state.c:		DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_state.c:		DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_state.c:		DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/p2p_role_state.c:		DBGLOG(P2P, WARN,
connectivity/common/wlan/core/gen4m/mgmt/hem_mbox.c:		DBGLOG(CNM, LOUD, \
connectivity/common/wlan/core/gen4m/mgmt/hem_mbox.c:	    DBGLOG(CNM, ERROR, "NULL fptr for MSG [%d]\n", prMsg->eMsgId); \
connectivity/common/wlan/core/gen4m/mgmt/hem_mbox.c:		DBGLOG(CNM, LOUD, "DO MSG [%d]\n", prMsg->eMsgId); \
connectivity/common/wlan/core/gen4m/mgmt/hem_mbox.c:	    DBGLOG(CNM, ERROR, "NULL fptr for MSG [%d]\n", prMsg->eMsgId); \
connectivity/common/wlan/core/gen4m/mgmt/hem_mbox.c:		DBGLOG(CNM, ERROR, "prMsg is NULL\n");
connectivity/common/wlan/core/gen4m/mgmt/hem_mbox.c:		DBGLOG(CNM, ERROR, "prAdapter is NULL\n");
connectivity/common/wlan/core/gen4m/mgmt/hem_mbox.c:			DBGLOG(CNM, ERROR, "prMsg is NULL\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_scan.c:		DBGLOG(P2P, TRACE, "Skip beacon [" MACSTR "][%s][ch %d]\n",
connectivity/common/wlan/core/gen4m/mgmt/p2p_scan.c:		DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_scan.c:		DBGLOG(P2P, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/p2p_scan.c:		DBGLOG(P2P, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/p2p_scan.c:			DBGLOG(P2P, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/p2p_scan.c:				DBGLOG(P2P, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/p2p_scan.c:				DBGLOG(P2P, LOUD, "Ignore mismatch BSSID.\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_scan.c:				DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_scan.c:				DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_scan.c:				DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_scan.c:				DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_scan.c:				DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:	DBGLOG(RLM, TRACE, "eRegChannelListMap=%d, u2CountryCode=0x%04x\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, TRACE, "ucRegChannelListIndex=%d\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:					DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:						DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, ERROR, "%s, invalid channel count.\n", __func__);
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, ERROR, "Alloc cmd buffer failed\n");
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:	DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, ERROR, "Alloc cmd buffer failed\n");
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, ERROR, "Alloc cmd buffer failed\n");
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:	DBGLOG(RLM, TRACE, "u2CountryCode=0x%04x\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:						DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, WARN, "Rf20: CentralCh=%d\n", ucCenterCh);
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, WARN, "Rf20: UpperCh=%d\n", ucUpperChannel);
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, WARN, "Rf20: LowerCh=%d\n", ucLowerChannel);
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, WARN, "Rf80/160C: CentralCh=%d\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, WARN, "Rf160NC: CentralCh1=%d\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, WARN, "Rf160NC: CentralCh2=%d\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, ERROR, "Wrong BW =%d\n", eChannelWidth);
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, WARN, "Rf: B=%d, W=%d\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:				DBGLOG(RLM, WARN, "Rf: PriOffSet=%d, W=%d\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:				DBGLOG(RLM, WARN,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:				DBGLOG(RLM, WARN,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, WARN,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, WARN,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:	DBGLOG(RLM, INFO, "%s(); country_code = 0x%x\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, WARN,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, WARN,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:				DBGLOG(RLM, WARN,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:				DBGLOG(RLM, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, LOUD, "Domain: Full search down\n");
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:				DBGLOG(RLM, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, TRACE, "Domain: Default Table no Repetiton.\n");
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:						DBGLOG(RLM, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:					DBGLOG(RLM, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:				DBGLOG(RLM, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:				DBGLOG(RLM, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:	DBGLOG(RLM, INFO, "rlmDomainSendPwrLimitCmd_V2()\n");
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR, "Domain: no buf to send cmd\n");
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, INFO, "active n_channels=%d, band=%d\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, ERROR, "pcContent is null\n");
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, ERROR, "parse scenario name error: %s\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, ERROR, "parse scenario sub index error: %s\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, ERROR, "parse applied way error: %s\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, ERROR, "parse operation error: %s\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, TRACE, "%s\n", pcContTmp);
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, TRACE, "%x\n", u2countryCode);
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, WARN, "parse country code error: %s",
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:					DBGLOG(RLM, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:					DBGLOG(RLM, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:					DBGLOG(RLM, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR, "parse CCK error, %s\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR, "parse HT20L error, %s\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR, "parse HT20H error, %s\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR, "parse HT40L error, %s\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR, "parse HT40H error, %s\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, INFO, "Tx Power Ctrl List=[%s], Size=[%d]",
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, TRACE, "Tx Power Ctrl List=[%s], Size=[%d]",
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:				DBGLOG(RLM, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR, "kalMemAlloc fail: %d\n", u4MemSize);
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, ERROR, "Domain: Alloc cmd buffer failed\n");
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:	DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, ERROR, "Domain: illegal power limit table\n");
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR, "Invalid old state = %d\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, INFO, "%s():  trasntion to state = %x (old = %x)\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, ERROR, "%s(): ERROR. file = null.\n", __func__);
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:		LOGBUF(buf, ((int32_t)buf_size), buf_written, "DISABLED ");
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:		LOGBUF(buf, ((int32_t)buf_size), buf_written,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:		LOGBUF(buf, ((int32_t)buf_size), buf_written, "RADAR ");
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:		LOGBUF(buf, ((int32_t)buf_size), buf_written, "NO_HT40PLUS ");
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:		LOGBUF(buf, ((int32_t)buf_size), buf_written, "NO_HT40MINUS ");
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:		LOGBUF(buf, ((int32_t)buf_size), buf_written, "NO_80MHZ ");
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:		LOGBUF(buf, ((int32_t)buf_size), buf_written, "NO_160MHZ ");
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, ERROR, "%s():  ERROR. pWiphy = NULL.\n", __func__);
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:				DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:				DBGLOG(RLM, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, WARN,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:	DBGLOG(RLM, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:	DBGLOG(RLM, INFO, "    Set as default WW.\n");
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:			DBGLOG(RLM, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm_domain.c:		DBGLOG(RLM, ERROR, "[WARNING!!] RLM unexpected case.\n");
connectivity/common/wlan/core/gen4m/mgmt/qosmap.c:		DBGLOG(INIT, WARN,
connectivity/common/wlan/core/gen4m/mgmt/qosmap.c:		DBGLOG(INIT, WARN,
connectivity/common/wlan/core/gen4m/mgmt/qosmap.c:		DBGLOG(INIT, WARN, "can't alloc qosmap\n");
connectivity/common/wlan/core/gen4m/mgmt/qosmap.c:	DBGLOG(INIT, INFO, "QosMapSet DSCP Exception number: %d\n", dscpExcNum);
connectivity/common/wlan/core/gen4m/mgmt/qosmap.c:		/* DBGLOG(INIT, WARN, "qosmap type: %d\n", type); */
connectivity/common/wlan/core/gen4m/mgmt/qosmap.c:		DBGLOG(INIT, WARN, "WRONG QosMapSet info, cant get UP\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_dev_state.c:			DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/p2p_dev_state.c:			DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/p2p_dev_state.c:		DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/p2p_dev_state.c:		DBGLOG(P2P, WARN,
connectivity/common/wlan/core/gen4m/mgmt/p2p_rlm_obss.c:	DBGLOG(RLM, INFO, "Send 20/40 coexistence rsp frame!\n");
connectivity/common/wlan/core/gen4m/mgmt/roaming_fsm.c:	DBGLOG(ROAMING, INFO,
connectivity/common/wlan/core/gen4m/mgmt/roaming_fsm.c:	DBGLOG(ROAMING, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/roaming_fsm.c:	DBGLOG(ROAMING, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/roaming_fsm.c:	DBGLOG(ROAMING, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/roaming_fsm.c:	DBGLOG(ROAMING, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/roaming_fsm.c:		DBGLOG(ROAMING, INFO, "Request driver roaming");
connectivity/common/wlan/core/gen4m/mgmt/roaming_fsm.c:		DBGLOG(ROAMING, WARN, "ais specific bss info is NULL\n");
connectivity/common/wlan/core/gen4m/mgmt/roaming_fsm.c:			DBGLOG(ROAMING, INFO,
connectivity/common/wlan/core/gen4m/mgmt/roaming_fsm.c:				DBGLOG(ROAMING, INFO, "Need Scan\n");
connectivity/common/wlan/core/gen4m/mgmt/roaming_fsm.c:			DBGLOG(ROAMING, WARN, "Target BssDesc is NULL\n");
connectivity/common/wlan/core/gen4m/mgmt/roaming_fsm.c:		DBGLOG(ROAMING, STATE,
connectivity/common/wlan/core/gen4m/mgmt/roaming_fsm.c:				DBGLOG(ROAMING, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/roaming_fsm.c:				DBGLOG(ROAMING, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/roaming_fsm.c:				DBGLOG(ROAMING, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/roaming_fsm.c:				DBGLOG(ROAMING, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/roaming_fsm.c:	DBGLOG(ROAMING, EVENT,
connectivity/common/wlan/core/gen4m/mgmt/roaming_fsm.c:	DBGLOG(ROAMING, EVENT,
connectivity/common/wlan/core/gen4m/mgmt/roaming_fsm.c:			DBGLOG(ROAMING, INFO, "ucRCPI %u\n",
connectivity/common/wlan/core/gen4m/mgmt/roaming_fsm.c:			DBGLOG(ROAMING, INFO, "ucPER %u\n",
connectivity/common/wlan/core/gen4m/mgmt/roaming_fsm.c:	DBGLOG(ROAMING, EVENT,
connectivity/common/wlan/core/gen4m/mgmt/roaming_fsm.c:	DBGLOG(ROAMING, STATE,
connectivity/common/wlan/core/gen4m/mgmt/roaming_fsm.c:	DBGLOG(ROAMING, EVENT,
connectivity/common/wlan/core/gen4m/mgmt/roaming_fsm.c:	DBGLOG(ROAMING, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/roaming_fsm.c:		DBGLOG(ROAMING, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(INIT, WARN,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(INIT, WARN,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, WARN, "Apply Nss:%d as RxStbcNss in HT Cap",
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, WARN,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, ERROR, "prAdapter is NULL, return!");
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, ERROR, "prBssInfo is NULL, return!");
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, ERROR, "prStaRec is NULL, return!");
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:	DBGLOG(RLM, TRACE, "rlmFillVhtOpNotificationIE(%d) %u %u\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, INFO, "Set VHT Cap BFEE STS CAP=%d\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, TRACE, "Set VHT Cap BFEE STS CAP=%d\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:/* DBGLOG(RLM, INFO, "VhtCapInfo=%x\n", prVhtCap->u4VhtCapInfo); */
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:				DBGLOG(RLM, WARN,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:				DBGLOG(RLM, WARN,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, TRACE, "null prVhtCap, assume RxNss=1\n");
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RFTEST, INFO, "RLM CMD : Get Thermal Temp from FW.\n");
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RFTEST, INFO, "RLM CMD : Trigger FW Do All Cal.\n");
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RFTEST, INFO, "Thermal Temp = %d\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RFTEST, INFO, "RLM CMD : Print Cal Data in FW (%s).\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RFTEST, INFO, "RLM CMD : Send Cal Data to FW (%s).\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RFTEST, INFO, "Step 1 : Get Thermal Temp from FW.\n");
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RFTEST, INFO, "Step 1 : Return Failure.\n");
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RFTEST, INFO, "Step 2 : Return Failure.\n");
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RFTEST, INFO, "Step 3 : Return Failure.\n");
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RFTEST, INFO, "Step 4 : Trigger FW Do Full Cal.\n");
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RFTEST, INFO, "Step 4 : Return Failure.\n");
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RFTEST, INFO, "======== Normal Wi-Fi Enable........\n");
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RFTEST, INFO, "Step 0 : Sent Rom Cal data to FW.\n");
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RFTEST, INFO, "Step 0 : Return Failure.\n");
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RFTEST, INFO, "Step 1 : Sent Ram Cal data to FW.\n");
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RFTEST, INFO, "Step 1 : Return Failure.\n");
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:				DBGLOG(RLM, WARN,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		 * DBGLOG(RLM, WARN, "support 2ss\n");
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, WARN, "support (2Nss) and (80+80)\n");
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, WARN,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO, "Decreasse the BW to (%d)\n", ucMaxBandwidth);
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:						DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:					DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO, "Modify ChannelWidth (%d) and Extend (%d)\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO, "Unsupport BW setting, back to VHT20_40\n");
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, INFO, "[Ch] BW=%d, s1=%d, s2=%d\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, INFO, "[Ch] Count=%d\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:					DBGLOG(RLM, EVENT,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:					DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:					DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:					DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, INFO, "[Channel Switch] SCO [%d]->[%d]\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, INFO, "Update OpMode to 0x%x",
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:				DBGLOG(RLM, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, EVENT, "[Ch] TxAllowed = TRUE\n");
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:	DBGLOG(RLM, TRACE, "Ch : SwitchIE = %d\n", g_fgHasChannelSwitchIE);
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO, "Ch : DFS has Appeared\n");
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, WARN, "rlmRecIeInfoForClient IE Information\n");
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, WARN, "IE Length = %d\n", u2IELength);
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG_MEM8(RLM, WARN, pucDumpIE, u2IELength);
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, WARN,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, WARN,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, WARN,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, WARN,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:				DBGLOG(RLM, WARN,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:				DBGLOG(RLM, WARN,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:				DBGLOG(RLM, WARN,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:				DBGLOG(RLM, WARN,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:					DBGLOG(RLM, WARN,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO, "N=%d closed\n", prCmdBody->ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, WARN, "No buf for sync RLM params (Net=%d)\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, WARN, "rlmSyncOperationParams set cmd fail\n");
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:	DBGLOG(RLM, TRACE, "ucDialogToken %d ucTransPwr %d ucLinkMargin %d\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:	DBGLOG(RLM, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:	DBGLOG(RLM, INFO, "[Mgt Action]rlmProcessSpecMgtAction\n");
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:	DBGLOG_MEM8(RLM, INFO, pucIE, u2IELength);
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO, "[Mgt Action] Measure Request\n");
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO, "[Mgt Action] Measure Report\n");
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO, "[Mgt Action] TPC Request\n");
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO, "[Mgt Action] TPC Report\n");
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:					DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:				DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:					DBGLOG(RLM, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:					DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:						DBGLOG(RLM, EVENT,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:						DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:					DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:					DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:				DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, WARN,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:	DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, WARN,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, WARN,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:					DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:					DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:					DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, WARN, "%s: unexpected VHT channel width: %d\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, WARN, "%s: unexpected Bss OP BW: %d\n", __func__,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, WARN, "%s: unexpected VHT channel width: %d\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:				DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO, "Update OP RxNss[%d]\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO, "Update OP TxNss[%d]\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:	DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:	DBGLOG(RLM, INFO, "RxNss[%d] TxNss[%d]\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:	DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO, "Intend to change BSS[%d] to BW[%d]\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO, "Intend to change BSS[%d] to RxNss[%d]\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO, "Intend to change BSS[%d] to TxNss[%d]\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:					DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:					DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:					DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:					DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:				DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:				DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:				DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:				DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, WARN,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:				DBGLOG(RLM, WARN,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:					DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:				DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, WARN,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, WARN,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, WARN,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, WARN,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, WARN,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, WARN,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, WARN,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:	DBGLOG(RLM, INFO, "OP change done for BSS[%d] IsSuccess[%d]\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:	DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:	DBGLOG(RLM, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO, "RRM: Rm has been stopped\n");
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, WARN,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:				DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:				DBGLOG(RLM, WARN, "IeSze:0x%x, FrmLen:0x%x\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:					DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, ERROR, "No memory\n");
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, WARN,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:	DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, ERROR, "RRM: Rm Packet length %d is too short\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, ERROR, "RRM: Abnormal RM IE length is %d\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:				DBGLOG(RLM, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:				DBGLOG(RLM, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO, "RRM: StaRec is NULL, ignore request\n");
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:	DBGLOG(RLM, INFO, "RRM: RM Request From %pM, DialogToken %d\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO, "RRM: ignore lower precedence rm request\n");
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO, "RRM: Old RM is on-going, cancel it first\n");
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO, "RRM: report frame length is too short, %d\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO, "RRM: ais bss info is NULL\n");
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO, "RRM: StaRec of Ais is NULL\n");
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:	DBGLOG(RLM, INFO, "RRM: frame length %d\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:			DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, TRACE, "LM: Disable Tx Power Limit\n");
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:	DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, ERROR, "[RRM] No memory\n");
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:				DBGLOG(RLM, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, INFO, "BCN REQ: channel %d, valid %d\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:				DBGLOG(RLM, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(RLM, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:	DBGLOG(RLM, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:	DBGLOG(RLM, INFO, "BCN REQ: band %d, hw channel %d, ds %d, ht %d\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:	DBGLOG_MEM8(SW4, TRACE, (uint8_t *)prWlanBeacon,
connectivity/common/wlan/core/gen4m/mgmt/rlm.c:		DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/auth.c:	DBGLOG(SAA, LOUD, "Send Auth Frame\n");
connectivity/common/wlan/core/gen4m/mgmt/auth.c:		DBGLOG(SAA, WARN, "No PKT_INFO_T for sending Auth Frame.\n");
connectivity/common/wlan/core/gen4m/mgmt/auth.c:		DBGLOG(SAA, WARN, "No PKT_INFO_T for sending Auth Frame.\n");
connectivity/common/wlan/core/gen4m/mgmt/auth.c:	DBGLOG(SAA, INFO,
connectivity/common/wlan/core/gen4m/mgmt/auth.c:		DBGLOG(SAA, WARN,
connectivity/common/wlan/core/gen4m/mgmt/auth.c:		DBGLOG(SAA, WARN, "=== Dump Rx Auth ===\n");
connectivity/common/wlan/core/gen4m/mgmt/auth.c:		DBGLOG_MEM8(SAA, WARN, prAuthFrame, prSwRfb->u2PacketLen);
connectivity/common/wlan/core/gen4m/mgmt/auth.c:		DBGLOG(SAA, WARN,
connectivity/common/wlan/core/gen4m/mgmt/auth.c:		DBGLOG(SAA, WARN,
connectivity/common/wlan/core/gen4m/mgmt/auth.c:		DBGLOG(SAA, WARN,
connectivity/common/wlan/core/gen4m/mgmt/auth.c:	DBGLOG(RSN, INFO, "authSendDeauthFrame\n");
connectivity/common/wlan/core/gen4m/mgmt/auth.c:		DBGLOG(SAA, INFO,
connectivity/common/wlan/core/gen4m/mgmt/auth.c:		DBGLOG(SAA, WARN, "Not to send Deauth, invalid data!\n");
connectivity/common/wlan/core/gen4m/mgmt/auth.c:			DBGLOG(SAA, WARN, "No unused DEAUTH_INFO_T !\n");
connectivity/common/wlan/core/gen4m/mgmt/auth.c:		DBGLOG(SAA, WARN,
connectivity/common/wlan/core/gen4m/mgmt/auth.c:			DBGLOG(SAA, INFO,
connectivity/common/wlan/core/gen4m/mgmt/auth.c:			DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/auth.c:	DBGLOG(SAA, INFO, "ucTxSeqNum=%d ucStaRecIndex=%d u2ReasonCode=%d\n",
connectivity/common/wlan/core/gen4m/mgmt/auth.c:		DBGLOG(SAA, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/auth.c:		DBGLOG(SAA, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/auth.c:		DBGLOG(P2P, WARN,
connectivity/common/wlan/core/gen4m/mgmt/tkip_mic.c:	DBGLOG(RSN, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/tkip_mic.c:	DBGLOG(RSN, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/tkip_mic.c:		DBGLOG(RSN, INFO, "pucPayload is NULL, drop this packet");
connectivity/common/wlan/core/gen4m/mgmt/tkip_mic.c:	DBGLOG(RSN, LOUD, "Before TKIP MSDU Decapsulate:\n");
connectivity/common/wlan/core/gen4m/mgmt/tkip_mic.c:	DBGLOG(RSN, LOUD, "MIC key:\n");
connectivity/common/wlan/core/gen4m/mgmt/tkip_mic.c:	/* DBGLOG_MEM8(RSN, LOUD, pucMicKey, 8); */
connectivity/common/wlan/core/gen4m/mgmt/tkip_mic.c:	/* DBGLOG(RSN, LOUD, ("TKIP MIC:\n")); */
connectivity/common/wlan/core/gen4m/mgmt/tkip_mic.c:	/* DBGLOG_MEM8(RSN, LOUD, pucMic1, 8); */
connectivity/common/wlan/core/gen4m/mgmt/tkip_mic.c:	/* DBGLOG(RSN, LOUD, ("TKIP MIC':\n")); */
connectivity/common/wlan/core/gen4m/mgmt/tkip_mic.c:	/* DBGLOG_MEM8(RSN, LOUD, aucMic2, 8); */
connectivity/common/wlan/core/gen4m/mgmt/tkip_mic.c:	DBGLOG(RSN, LOUD, "After TKIP MSDU Decapsulate:\n");
connectivity/common/wlan/core/gen4m/mgmt/tkip_mic.c:	DBGLOG(RSN, LOUD, "Frame body: (length = %u)\n",
connectivity/common/wlan/core/gen4m/mgmt/tkip_mic.c:	/* DBGLOG_MEM8(RSN, LOUD, pucFrameBody, u2FrameBodyLen); */
connectivity/common/wlan/core/gen4m/mgmt/tkip_mic.c:		DBGLOG(RSN, INFO, "pucPayload is NULL, drop this packet");
connectivity/common/wlan/core/gen4m/mgmt/tkip_mic.c:	DBGLOG(RSN, LOUD, "Before TKIP MSDU Decapsulate:\n");
connectivity/common/wlan/core/gen4m/mgmt/tkip_mic.c:	DBGLOG(RSN, LOUD, "MIC key:\n");
connectivity/common/wlan/core/gen4m/mgmt/tkip_mic.c:	/* DBGLOG_MEM8(RSN, LOUD, pucMicKey, 8); */
connectivity/common/wlan/core/gen4m/mgmt/tkip_mic.c:		DBGLOG(RX, ERROR, "MIC SW DEC1\n");
connectivity/common/wlan/core/gen4m/mgmt/tkip_mic.c:		DBGLOG(RX, ERROR, "MIC SW DEC2\n");
connectivity/common/wlan/core/gen4m/mgmt/tkip_mic.c:	/* DBGLOG(RSN, LOUD, ("TKIP MIC:\n")); */
connectivity/common/wlan/core/gen4m/mgmt/tkip_mic.c:	/* DBGLOG_MEM8(RSN, LOUD, pucMic1, 8); */
connectivity/common/wlan/core/gen4m/mgmt/tkip_mic.c:	/* DBGLOG(RSN, LOUD, ("TKIP MIC':\n")); */
connectivity/common/wlan/core/gen4m/mgmt/tkip_mic.c:	/* DBGLOG_MEM8(RSN, LOUD, aucMic2, 8); */
connectivity/common/wlan/core/gen4m/mgmt/tkip_mic.c:	DBGLOG(RSN, LOUD, "After TKIP MSDU Decapsulate:\n");
connectivity/common/wlan/core/gen4m/mgmt/tkip_mic.c:	DBGLOG(RSN, LOUD, "Frame body: (length = %u)\n",
connectivity/common/wlan/core/gen4m/mgmt/tkip_mic.c:	/* DBGLOG_MEM8(RSN, LOUD, pucFrameBody, u2FrameBodyLen); */
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:	DBGLOG(WMM, TRACE, "wmm init done\n");
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:	DBGLOG(WMM, TRACE, "wmm uninit done\n");
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, ERROR, "prStaRec NULL %d, prTsParam NULL %d\n",
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:	DBGLOG(WMM, INFO, "Tspec Action to AP=" MACSTR "\n",
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, ERROR, "Failed to allocate msdu info\n");
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, INFO, "Wrong TS info\n");
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, INFO, "Update TS TIMEOUT for TID %d\n",
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, INFO, "ADD TS TIMEOUT for TID %d\n",
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, INFO, "prWmmInfo is null %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:	DBGLOG(WMM, INFO, "Ac=%d, MediumTime=%d PhyRate=%u Uapsd 0x%02x\n",
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, INFO, "prWmmInfo is null\n");
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, INFO, "Invalid TID %d\n", ucTid);
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:	DBGLOG(WMM, TRACE, "TID %d, State %d, Oper %d\n", ucTid,
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:			DBGLOG(WMM, INFO, "Lack of Tspec Param\n");
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:			DBGLOG(WMM, INFO, "Del Ts %d in setuping state\n",
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:			DBGLOG(WMM, ERROR, "ADD TS is rejected, status=%d\n",
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:				DBGLOG(WMM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:	DBGLOG(WMM, INFO, "Status %d\n", rTxDoneStatus);
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, INFO, "++++++++ dump data \"%s\" p=%p len=%d\n",
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, INFO, "++++++ dump data p=%p, len=%d\n", prAddr,
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, INFO, "%s\n", buf);
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:	DBGLOG(WMM, INFO, "%s\n", buf);
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:	DBGLOG(WMM, INFO, "====== end dump data\n");
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:	DBGLOG(WMM, INFO, "[%d] Query TSM statistics, tid = %d\n",
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:	DBGLOG(WMM, INFO, "%p , aci %d, duration %d\n", prTsmReq,
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:			DBGLOG(WMM, ERROR, "prAisBssInfo is NULL\n");
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, WARN, "Duration is %d, Trigger Condition %d\n",
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, INFO, "No station record found for %pM\n",
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:			DBGLOG(WMM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, INFO, "%p tid %d, aci %d, duration %d\n", prTsmReq,
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:	DBGLOG(WMM, INFO, "enabled=%d, tid=%d\n", rTsmStatistics.ucEnabled,
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:	DBGLOG(WMM, INFO, "[%d] Action=%d\n",
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:			DBGLOG(WMM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:					DBGLOG(WMM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, INFO, "found 802.11 Tspec Information Element\n");
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:	DBGLOG(WMM, INFO, "TsId=%d, TrafficType=%d, PSB=%d, MediumTime=%d\n",
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:	DBGLOG(WMM, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, ERROR, "prAisBssInfo is NULL\n");
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, ERROR, "unexpected Tsm statistic event, tid %d\n",
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:	DBGLOG(WMM, INFO, "tid %d, aci %d\n", prCurrentTsmReq->prTsmReq->ucTID,
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:			DBGLOG(WMM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:			DBGLOG(WMM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:			DBGLOG(WMM, ERROR, "i is %d !!", i);
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, INFO, "prWmmInfo is null %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, TRACE, "AC %d, can dq %d\n", ucAc,
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, INFO, "AC %d, Remain %u, DeqNum %d\n", ucAc,
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:		DBGLOG(WMM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/wmm.c:	DBGLOG(WMM, INFO, "Timeout, trigger to do ACM dequeue\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:			DBGLOG(INIT, INFO, "Set p2p dev mac to " MACSTR "\n",
connectivity/common/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:		DBGLOG(P2P, INFO, "->p2pFsmUninit()\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:		DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:		DBGLOG(P2P, ERROR, "prP2pDevFsmInfo is NULL!\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:				DBGLOG(P2P, STATE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:				DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:		DBGLOG(P2P, TRACE, "p2pDevFsmRunEventScanRequest\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:			DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:				DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:		DBGLOG(P2P, TRACE, "p2pDevFsmRunEventScanAbort\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:			DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:			DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:			DBGLOG(P2P, WARN, "uninitialized p2p Dev fsm\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:		DBGLOG(P2P, TRACE, "p2pDevFsmRunEventChannelRequest\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:					/* DBGLOG(P2P, TRACE, */
connectivity/common/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:		DBGLOG(P2P, TRACE, "p2pDevFsmRunEventChannelAbort\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:		DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:		DBGLOG(P2P, ERROR, "Memory allocate failed.\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:		DBGLOG(P2P, INFO, "Overwrite channel duration from %d to %d\n",
connectivity/common/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:		DBGLOG(P2P, INFO, "Extended channel duration from %d to %d\n",
connectivity/common/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:		DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:			DBGLOG(P2P, WARN,
connectivity/common/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:	DBGLOG(P2P, INFO, "fgNeedOffchnlTx: %d\n", fgNeedOffchnlTx);
connectivity/common/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:			DBGLOG(P2P, WARN,
connectivity/common/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:			DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:			DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_dev_fsm.c:		DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/wapi.c:		DBGLOG(SEC, TRACE, "WAPI IE length too short (length=%d)\n",
connectivity/common/wlan/core/gen4m/mgmt/wapi.c:		DBGLOG(SEC, TRACE, "Unsupported WAPI IE version: %d\n",
connectivity/common/wlan/core/gen4m/mgmt/wapi.c:			DBGLOG(SEC, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/wapi.c:			DBGLOG(SEC, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/wapi.c:			DBGLOG(SEC, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/wapi.c:			DBGLOG(SEC, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/wapi.c:			DBGLOG(SEC, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/wapi.c:			DBGLOG(SEC, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/wapi.c:	DBGLOG(SEC, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/wapi.c:			DBGLOG(SEC, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/wapi.c:		DBGLOG(SEC, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/wapi.c:			DBGLOG(SEC, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/wapi.c:		DBGLOG(SEC, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/wapi.c:	DBGLOG(SEC, LOUD, "WAPI: cap: 0x%04x\n", prWapiInfo->u2WapiCap);
connectivity/common/wlan/core/gen4m/mgmt/wapi.c:			DBGLOG(SEC, TRACE, "-- No Protected BSS\n");
connectivity/common/wlan/core/gen4m/mgmt/wapi.c:		DBGLOG(SEC, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/wapi.c:		DBGLOG(SEC, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/wapi.c:		DBGLOG(SEC, TRACE, "Cannot support any AKM suites\n");
connectivity/common/wlan/core/gen4m/mgmt/wapi.c:	DBGLOG(SEC, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/wapi.c:	DBGLOG(SEC, TRACE, "Selected AKM suite: %02x-%02x-%02x-%02x\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:		DBGLOG(SW4, INFO, "TC %u\n", i);
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:		DBGLOG(SW4, INFO, "Max %u Free %u\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:		DBGLOG(SW4, INFO,
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:		DBGLOG(SW4, INFO,
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "BMC or unknown TxQueue Len %u\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "Pending %d\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "Pending Security %d\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:			DBGLOG(SW4, INFO,
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, " rFreeSwRfbList %u\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, " rReceivedRfbList %u\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, " rIndicatedRfbList %u\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, " ucNumIndPacket %u\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, " ucNumRetainedPacket %u\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "Mac address: " MACSTR " Rcpi %u\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO,
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO,
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:		DBGLOG(SW4, INFO, "TC %u Queue Len %u\n", i,
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "BmpDeliveryAC %x\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "BmpTriggerAC  %x\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "UapsdSpSupproted  %u\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "IsQoS  %u\n", prStaRec->fgIsQoS);
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "AssocId %u\n", prStaRec->u2AssocId);
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "fgIsInPS %u\n", prStaRec->fgIsInPS);
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "ucFreeQuota %u\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "ucFreeQuotaForDelivery %u\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "ucFreeQuotaForNonDelivery %u\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "IsQmmSup  %u\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "IsUapsdSup  %u\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "AvailabaleDeliverPkts  %u\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "BmpDeliverPktsAC  %u\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "BmpBufferAC  %u\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "BmpNonDeliverPktsAC  %u\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:			DBGLOG(SW4, INFO, "RxReorder fgIsValid: %u\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:			DBGLOG(SW4, INFO, "RxReorder Tid: %u\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:			DBGLOG(SW4, INFO,
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:			DBGLOG(SW4, INFO, "RxReorder WinStart: %u\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:			DBGLOG(SW4, INFO, "RxReorder WinEnd: %u\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:			DBGLOG(SW4, INFO, "RxReorder WinSize: %u\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "SSID %s\n", prBssInfo->aucSSID);
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "OWN " MACSTR "\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "BSSID " MACSTR "\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "eNetworkType %u\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "ucBssIndex %u\n", prBssInfo->ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "eConnectionState %u\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "eCurrentOPMode %u\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "fgIsQBSS %u\n", prBssInfo->fgIsQBSS);
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "fgIsShortPreambleAllowed %u\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "fgUseShortPreamble %u\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "fgUseShortSlotTime %u\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "ucNonHTBasicPhyType %x\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "u2OperationalRateSet %x\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "u2BSSBasicRateSet %x\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "ucPhyTypeSet %x\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "rStaRecOfClientList %d\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "u2CapInfo %x\n", prBssInfo->u2CapInfo);
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "u2ATIMWindow %x\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "u2AssocId %x\n", prBssInfo->u2AssocId);
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "ucDTIMPeriod %x\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "ucDTIMCount %x\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "fgIsNetAbsent %x\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "eBand %d\n", prBssInfo->eBand);
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "ucPrimaryChannel %d\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "ucHtOpInfo1 %d\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "ucHtOpInfo2 %d\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "ucHtOpInfo3 %d\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "fgErpProtectMode %d\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "eHtProtectMode %d\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "eGfOperationMode %d\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "eRifsOperationMode %d\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "fgObssErpProtectMode %d\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "eObssHtProtectMode %d\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "eObssGfProtectMode %d\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "fgObssRifsOperationMode %d\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "fgAssoc40mBwAllowed %d\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "fg40mBwAllowed %d\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "eBssSCO %d\n", prBssInfo->eBssSCO);
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:			/* DBGLOG(SW4, INFO,("SWCTRL_RX_FILTER:
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:			DBGLOG(INIT, INFO, "u4Len:%d bufSize:%d u4NumIPv4:%d\n",
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:				DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:				DBGLOG(SW4, INFO, "QM:DBG %u %u\n", i,
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, LOUD, "\n");
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:		DBGLOG(SW4, WARN,
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "index %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:		DBGLOG(SW4, INFO, "prBeacon allocation fail\n");
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:		DBGLOG(SW4, INFO,
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO,
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, LOUD, "Read %u Index %u\n", ucRead, ucIndex);
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:		DBGLOG(SW4, INFO, "prStaRec is NULL, ucOpt0:%d\n", ucOpt0);
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, INFO, "Read %u Index %u\n", ucRead, ucIndex);
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:	DBGLOG(SW4, TRACE, "%u addr 0x%x data 0x%x\n", ucRead,
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:			DBGLOG(SW4, INFO, "TX0\n"
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:			DBGLOG(SW4, INFO, "TX1\n"
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:			DBGLOG(SW4, INFO, "RX0\n"
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:			DBGLOG(SW4, INFO, "RX1\n"
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:			DBGLOG(SW4, INFO, "PWR\n"
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:			DBGLOG(SW4, INFO, "ARM\n"
connectivity/common/wlan/core/gen4m/mgmt/swcr.c:			DBGLOG(SW4, INFO, "BB\n"
connectivity/common/wlan/core/gen4m/mgmt/bss.c:			DBGLOG(BSS, INFO,
connectivity/common/wlan/core/gen4m/mgmt/bss.c:			DBGLOG(BSS, WARN,
connectivity/common/wlan/core/gen4m/mgmt/bss.c:			DBGLOG(BSS, INFO,
connectivity/common/wlan/core/gen4m/mgmt/bss.c:		DBGLOG(BSS, WARN, "No PKT_INFO_T for sending Null Frame.\n");
connectivity/common/wlan/core/gen4m/mgmt/bss.c:		DBGLOG(BSS, WARN, "No PKT_INFO_T for sending Null Frame.\n");
connectivity/common/wlan/core/gen4m/mgmt/bss.c:	/* DBGLOG(INIT, LOUD, ("\n")); */
connectivity/common/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(INIT, LOUD, "\n");
connectivity/common/wlan/core/gen4m/mgmt/bss.c:		DBGLOG(BSS, WARN, "No PKT_INFO_T for sending %s.\n",
connectivity/common/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(BSS, INFO, "Init BSS[%u] Client List\n", prBssInfo->ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/bss.c:			DBGLOG(BSS, WARN,
connectivity/common/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(BSS, INFO,
connectivity/common/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(BSS, INFO,
connectivity/common/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(BSS, INFO,
connectivity/common/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(SW4, INFO, "Dump BSS[%u] Client List NUM[%u]\n",
connectivity/common/wlan/core/gen4m/mgmt/bss.c:			DBGLOG(SW4, INFO, "[%2u] is NULL STA_REC\n", ucCount);
connectivity/common/wlan/core/gen4m/mgmt/bss.c:		DBGLOG(SW4, INFO, "[%2u] STA[%u] [" MACSTR "]\n", ucCount,
connectivity/common/wlan/core/gen4m/mgmt/bss.c:		DBGLOG(SW4, INFO, "BSS[%u] Client List NUM[%u] ERR\n",
connectivity/common/wlan/core/gen4m/mgmt/bss.c:			DBGLOG(SW4, INFO,
connectivity/common/wlan/core/gen4m/mgmt/bss.c:			DBGLOG(SW4, INFO, "BSS[%u] Client List NULL PTR ERR\n",
connectivity/common/wlan/core/gen4m/mgmt/bss.c:		DBGLOG(SW4, INFO,
connectivity/common/wlan/core/gen4m/mgmt/bss.c:				DBGLOG(BSS, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/bss.c:				DBGLOG(BSS, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/bss.c:				DBGLOG(BSS, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/bss.c:				DBGLOG(BSS, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/bss.c:		DBGLOG(BSS, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/bss.c:			DBGLOG(AIS, ERROR, "Can't send Merge Msg\n");
connectivity/common/wlan/core/gen4m/mgmt/bss.c:			DBGLOG(BSS, INFO,
connectivity/common/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(BSS, INFO,
connectivity/common/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(BSS, INFO,
connectivity/common/wlan/core/gen4m/mgmt/bss.c:		DBGLOG(SW4, INFO, "Invalid BssInfo index[%u], skip dump!\n",
connectivity/common/wlan/core/gen4m/mgmt/bss.c:		DBGLOG(SW4, INFO, "Invalid BssInfo index[%u], skip dump!\n",
connectivity/common/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(SW4, INFO, "OWNMAC[" MACSTR "] BSSID[" MACSTR "] SSID[%s]\n",
connectivity/common/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(SW4, INFO,
connectivity/common/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(SW4, INFO,
connectivity/common/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(SW4, INFO, "MaxBw[%u] OpRxNss[%u] OpTxNss[%u]\n",
connectivity/common/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(SW4, INFO, "QBSS[%u] CapInfo[0x%04x] AID[%u]\n",
connectivity/common/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(SW4, INFO,
connectivity/common/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(SW4, INFO, "PhyTypeSet: Basic[0x%02x] NonHtBasic[0x%02x]\n",
connectivity/common/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(SW4, INFO, "RateSet: BssBasic[0x%04x] Operational[0x%04x]\n",
connectivity/common/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(SW4, INFO, "ATIMWindow[%u] DTIM Period[%u] Count[%u]\n",
connectivity/common/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(SW4, INFO,
connectivity/common/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(SW4, INFO,
connectivity/common/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(SW4, INFO,
connectivity/common/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(SW4, INFO,
connectivity/common/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(SW4, INFO, "======== Dump Connected Client ========\n");
connectivity/common/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(SW4, INFO, "NumOfClient[%u]\n",
connectivity/common/wlan/core/gen4m/mgmt/bss.c:		DBGLOG(SW4, INFO, "STA[%u] [" MACSTR "]\n",
connectivity/common/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(SW4, INFO, "============== Dump Done ==============\n");
connectivity/common/wlan/core/gen4m/mgmt/bss.c:		DBGLOG(BSS, INFO, "GetRxNss Param Error!\n");
connectivity/common/wlan/core/gen4m/mgmt/bss.c:		DBGLOG(BSS, INFO, "GetIotApAction Param Error!\n");
connectivity/common/wlan/core/gen4m/mgmt/bss.c:				DBGLOG(BSS, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/bss.c:		DBGLOG(BSS, INFO, MACSTR" is IOTAP:%d Act:%d\n",
connectivity/common/wlan/core/gen4m/mgmt/bss.c:	DBGLOG(BSS, TRACE, MACSTR" is NOT IOTAP\n",
connectivity/common/wlan/core/gen4m/mgmt/privacy.c:		DBGLOG_LIMITED(RSN, WARN,
connectivity/common/wlan/core/gen4m/mgmt/privacy.c:		DBGLOG_MEM8(RX, TRACE, prSwRfb->pucRecvBuff,
connectivity/common/wlan/core/gen4m/mgmt/privacy.c:			DBGLOG(RSN, WARN,
connectivity/common/wlan/core/gen4m/mgmt/privacy.c:	DBGLOG(RSN, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/privacy.c:			DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/privacy.c:				DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/privacy.c:		DBGLOG(RSN, TRACE, "Unknown encryption setting %d\n",
connectivity/common/wlan/core/gen4m/mgmt/privacy.c:		DBGLOG(RSN, ERROR, "sta is not in use\n");
connectivity/common/wlan/core/gen4m/mgmt/privacy.c:			DBGLOG(RSN, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/privacy.c:				DBGLOG(RSN, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/privacy.c:					DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/privacy.c:		DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/privacy.c:	DBGLOG(RSN, WARN,
connectivity/common/wlan/core/gen4m/mgmt/privacy.c:	DBGLOG(RSN, TRACE, "secPrivacyFreeForEntry %d", ucEntry);
connectivity/common/wlan/core/gen4m/mgmt/privacy.c:			DBGLOG(RSN, INFO, "Free STA entry (%d)!\n", entry);
connectivity/common/wlan/core/gen4m/mgmt/privacy.c:	DBGLOG(RSN, TRACE, "remove all the key related with BSS!");
connectivity/common/wlan/core/gen4m/mgmt/privacy.c:				DBGLOG(RSN, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/privacy.c:				DBGLOG(RSN, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/privacy.c:				DBGLOG(RSN, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/privacy.c:		DBGLOG(RSN, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/privacy.c:		DBGLOG(RSN, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/privacy.c:	/* DBGLOG(RSN, TRACE, ("secGetStaIdxByWlanIdx=%d "MACSTR" used=%d\n",
connectivity/common/wlan/core/gen4m/mgmt/privacy.c:		DBGLOG(RSN, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/privacy.c:			DBGLOG(RSN, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/privacy.c:	DBGLOG(RSN, LOUD, "Return default index\n");
connectivity/common/wlan/core/gen4m/mgmt/privacy.c:	DBGLOG(RSN, TRACE, "The Wlan index\n");
connectivity/common/wlan/core/gen4m/mgmt/privacy.c:			DBGLOG(RSN, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/privacy.c:				DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/privacy.c:			DBGLOG(RSN, INFO, "secPostUpdateAddr at [%d] " MACSTR
connectivity/common/wlan/core/gen4m/mgmt/privacy.c:		DBGLOG(RX, INFO,
connectivity/common/wlan/core/gen4m/mgmt/privacy.c:		DBGLOG(RX, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(SW1, INFO, "->aisFsmInit(%d)\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(SW1, INFO, "-> realloc(%d)\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(SW1, INFO, "->aisFsmUninit(%d)\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:			DBGLOG(AIS, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:			DBGLOG(AIS, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:			DBGLOG(AIS, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD, "JOIN INIT: AUTH TYPE = %d for Roaming\n",
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:				DBGLOG(AIS, INFO,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, ERROR, "Can't trigger SAA FSM\n");
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, INFO,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, ERROR, "Can't trigger SAA FSM\n");
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, ERROR, "Can't abort SAA FSM\n");
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, STATE, "[%d] aisFsmStateAbort_SCAN\n",
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, ERROR, "Can't abort SCN FSM\n");
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, STATE, "[AIS%d] TRANSITION: [%s] -> [%s]\n",
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:				DBGLOG(AIS, INFO,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:				DBGLOG(AIS, STATE,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:					DBGLOG(AIS, STATE,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:						DBGLOG(AIS, INFO,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:						DBGLOG(ROAMING, INFO,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:						DBGLOG(AIS, INFO,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:			DBGLOG(AIS, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:				DBGLOG(AIS, ERROR, "Can't trigger SCAN FSM\n");
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:				DBGLOG(AIS, INFO,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:					DBGLOG(AIS, INFO,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:				DBGLOG(AIS, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:				DBGLOG(AIS, ERROR, "Can't indicate CNM\n");
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:			DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:				DBGLOG(AIS, ERROR, "Can't indicate CNM\n");
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "[%d] EVENT-SCAN DONE: Current Time = %u\n",
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, WARN, "prAisBssInfo is NULL, and then return\n");
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, INFO, "ScanDone %u, status(%d) native req(%u)\n",
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, WARN,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, INFO,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, STATE,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, STATE,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:			DBGLOG(AIS, WARN,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:				DBGLOG(AIS, INFO,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:					DBGLOG(AIS, INFO,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:						DBGLOG(AIS, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, INFO,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, INFO,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, EVENT,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, INFO,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, INFO,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n",
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, STATE,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, WARN, "EVENT- JOIN TIMEOUT\n");
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, INFO,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(SCN, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:					DBGLOG(SCN, WARN,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(SCN, WARN, "Scan Request dropped. (state: %d)\n",
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(SCN, TRACE, "[AIS%d] eCurrentState=%d, fgIsScanReqIssued=%d\n",
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:					DBGLOG(SCN, WARN,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, INFO,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(SCN, WARN, "Scan Request dropped. (state: %d)\n",
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, INFO, "Start JOIN Timer!");
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:			DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:			DBGLOG(AIS, ERROR, "Can't release Channel to CNM\n");
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, EVENT, "aisBssBeaconTimeout\n");
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, EVENT, "aisBssLinkDown\n");
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, EVENT, "aisDeauthXmitComplete\n");
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, WARN,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:			DBGLOG(ROAMING, INFO,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, EVENT, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:			DBGLOG(AIS, WARN, "prStaRecOfAP is in use %d\n",
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, WARN,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:				DBGLOG(AIS, INFO, "Remove req=%d\n", eReqType);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, ERROR, "Can't generate new message\n");
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, INFO, "eCurrentState=%d, eReqType=%d, u4NumElem=%d\n",
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, INFO, "aisFsmFlushRequest %d\n",
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, ERROR, "channel request buffer allocate fails.\n");
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, ERROR, "Allocate TX request buffer fails.\n");
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(REQ, INFO, "Use offchannel to TX.\n");
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(REQ, TRACE, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:			DBGLOG(REQ, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, WARN,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, STATE, "CURRENT State: [%s]\n",
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:			DBGLOG(AIS, ERROR, "Mgmt Frame TX Fail, Status:%d.\n",
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:			DBGLOG(AIS, INFO,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:				DBGLOG(AIS, TRACE, "NCHO action frame tx done");
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, INFO, __STR_FMT__);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, ERROR, "bss descriptor is NULL\n");
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, INFO, "update blacklist for " MACSTR
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, INFO, "update blacklist for " MACSTR
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, WARN, "No memory to allocate\n");
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, INFO, "Add " MACSTR " to black List\n",
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, INFO, "Remove " MACSTR " from blacklist\n",
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, TRACE, MACSTR " is not in blacklist\n",
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:			DBGLOG(AIS, INFO, "Remove Timeout %pM from blacklist\n",
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, INFO, "Remove disappeared blacklist %s " MACSTR,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, WARN, "Msg Header is NULL\n");
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, INFO, "Transition Type: %d\n", eTransType);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:			DBGLOG(AIS, ERROR, "Target Bss Desc is NULL\n");
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, INFO,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:			DBGLOG(AIS, WARN, "Truncated neighbor report\n");
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, INFO,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:			DBGLOG(AIS, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:		DBGLOG(AIS, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/ais_fsm.c:	DBGLOG(AIS, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, TRACE, "RSN IE length too short (length=%d)\n",
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, TRACE, "Unsupported RSN IE version: %d\n",
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, LOUD, "RSN: AKM suite [%d]: 0x%x\n", i,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, LOUD, "RSN: AKM suite: 0x%x (default)\n",
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, LOUD, "RSN cap: 0x%04x\n", prRsnInfo->u2RsnCap);
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, TRACE, "WPA IE length too short (length=%d)\n",
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, TRACE, "Unsupported WPA IE version: %d\n",
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, LOUD, "WPA: version %d, group key cipher suite 0x%x\n",
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, LOUD, "WPA: RSN cap: 0x%04x\n",
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, WARN, "Break by GroupKey s=0x%x k=0x%x\n",
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, WARN, "Break by PairwisKey s=0x%x k=0x%x\n",
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, WARN, "Don't check AuthKeyMgtSuite with SAE\n");
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, WARN, "Break by AuthKey s=0x%x k=0x%x\n",
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, TRACE, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO, "-- Skip the Protected BSS check\n");
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, INFO, "-- No Protected BSS\n");
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO, "-- Protected BSS but No need\n");
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, INFO, "-- Protected BSS\n");
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, WARN,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO, "-- WEP-only legacy BSS\n");
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:				DBGLOG(RSN, TRACE, "Cannot join CCMP BSS\n");
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:				DBGLOG(RSN, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, TRACE, "Cannot support any AKM suites\n");
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, WARN,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, WARN,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:				DBGLOG(RSN, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:				DBGLOG(RSN, TRACE, "RSN_AUTH_MFP - MFPC\n");
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:				DBGLOG(RSN, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:				DBGLOG(RSN, ERROR, "prStaRec is NULL!");
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:				DBGLOG(RSN, INFO, "BSSID " MACSTR
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, TRACE, "RSN with CCMP-PSK\n");
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:				DBGLOG(RSN, INFO, "STA SHA256 support\n");
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO, "Start blocking traffic!\n");
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO, "First TKIP MIC error!\n");
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, TRACE, "[%d] Generate " MACSTR
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, TRACE, "[%d] Del " MACSTR " pmkid\n",
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, WARN, "Del " MACSTR " pmkid but mismatch\n",
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, INFO, "[%d] Flush Pmkid total:%d\n",
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:				DBGLOG(RSN, INFO, "AP-STA PMF capable\n");
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO, "association SA Query timed out\n");
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, ERROR, "prAisBssInfo is NULL");
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, INFO, "MFP: Start Sa Query\n");
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO, "MFP: unassociated AP!\n");
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO, "MFP: u4SaQueryCount count =%d\n",
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO, "Set MSDU_OPT_PROTECTED_FRAME");
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, INFO, "Set SA Query timer %d (%d Tu)",
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG_MEM8(RSN, INFO, prRxFrame->ucTransId, ACTION_SA_QUERY_TR_ID_LEN);
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO, "Set MSDU_OPT_PROTECTED_FRAME\n");
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG_MEM8(RSN, INFO, prRxFrame->ucTransId, ACTION_SA_QUERY_TR_ID_LEN);
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, INFO, "Reply to pending SA Query received\n");
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, ERROR, "Empty prBssInfo\n");
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, INFO, "security change, open->privacy\n");
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, INFO, "security change, WEP->open\n");
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, INFO, "security change, WEP->WPA/WPA2\n");
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO, "security change, WPA->%s\n",
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO, "security change, WPA2->%s\n",
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, WARN, "unknowned eAuthMode=%d\n", eAuthMode);
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, TRACE, "WPS: Building WPS IE for (Re)Association Response");
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, ERROR, "PMF policy violation for case 4\n");
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, ERROR, "PMF policy violation for case 7\n");
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, ERROR, "PMF Connection\n");
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO, "rsnPmfGenerateTimeoutIE TRUE\n");
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO, "association SA Query timed out\n");
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, INFO, "MFP: AP Start Sa Query timer\n");
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, INFO, "SAQ transaction id:%d\n",
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO, "SAQ Set MSDU_OPT_PROTECTED_FRAME\n");
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, INFO, "AP Set SA Query timer %d (%d Tu)\n",
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, INFO, "rsnApStartSaQuery\n");
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, WARN, "fail with NULL prStaRec\n");
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG_MEM8(RSN, INFO, prRxFrame->ucTransId, ACTION_SA_QUERY_TR_ID_LEN);
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, ERROR, "drop SAQ req CM/CLM=1\n");
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO, "AP SAQ resp set FC PF bit\n");
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO, "AP SAQ resp set MSDU_OPT_PROTECTED_FRAME\n");
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO, "rsnApSaQueryAction: prStaRec is NULL");
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG_MEM8(RSN, INFO, prRxFrame->ucTransId, ACTION_SA_QUERY_TR_ID_LEN);
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO, "AP Reply to SA Query received\n");
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, WARN,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, WARN,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, WARN,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, WARN,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, WARN,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, WARN,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, WARN,
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:			DBGLOG(RSN, TRACE, "RSN: AKM suite [%d]: 0x%x\n", i
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:		DBGLOG(RSN, WARN, "No AKM found, using default (802.1X)\n");
connectivity/common/wlan/core/gen4m/mgmt/rsn.c:	DBGLOG(RSN, TRACE, "RSN cap: 0x%04x\n", prOsenInfo->u2RsnCap);
connectivity/common/wlan/core/gen4m/mgmt/p2p_rlm.c:			DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_rlm.c:	DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_rlm.c:			DBGLOG(P2P, WARN,
connectivity/common/wlan/core/gen4m/mgmt/wnm.c:	DBGLOG(WNM, TRACE, "WNM action frame: %d from " MACSTR "\n",
connectivity/common/wlan/core/gen4m/mgmt/wnm.c:		DBGLOG(RX, INFO,
connectivity/common/wlan/core/gen4m/mgmt/wnm.c:	DBGLOG(WNM, TRACE, "WNM: wnmReportTimingMeas: u4ToD %x u4ToA %x", u4ToD,
connectivity/common/wlan/core/gen4m/mgmt/wnm.c:	DBGLOG(WNM, LOUD, "WNM: EVENT-TX DONE: Current Time = %ld\n",
connectivity/common/wlan/core/gen4m/mgmt/wnm.c:	DBGLOG(WNM, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/wnm.c:	DBGLOG(WNM, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/wnm.c:	DBGLOG(WNM, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/wnm.c:	DBGLOG(WNM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/wnm.c:	DBGLOG(WNM, INFO, "BTM: Query Frame Tx Done, Status %d\n",
connectivity/common/wlan/core/gen4m/mgmt/wnm.c:	DBGLOG(WNM, INFO, "BTM: Response Frame Tx Done Status %d\n",
connectivity/common/wlan/core/gen4m/mgmt/wnm.c:		DBGLOG(WNM, INFO, "BTM: No station record found\n");
connectivity/common/wlan/core/gen4m/mgmt/wnm.c:		DBGLOG(WNM, WARN,
connectivity/common/wlan/core/gen4m/mgmt/wnm.c:		DBGLOG(WNM, WARN, "BTM: Msg Hdr is NULL\n");
connectivity/common/wlan/core/gen4m/mgmt/wnm.c:			DBGLOG(WNM, WARN,
connectivity/common/wlan/core/gen4m/mgmt/wnm.c:	DBGLOG(WNM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/tdls.c:		DBGLOG(TDLS, ERROR, "prBssInfo %d is NULL!\n"
connectivity/common/wlan/core/gen4m/mgmt/tdls.c:	DBGLOG(TDLS, INFO, "u4SetBufferLen=%d", u4SetBufferLen);
connectivity/common/wlan/core/gen4m/mgmt/tdls.c:	DBGLOG(TDLS, INFO, "prCmd->ucActionCode=%d, prCmd->ucDialogToken=%d",
connectivity/common/wlan/core/gen4m/mgmt/tdls.c:		DBGLOG(TDLS, INFO, "default=%d", prCmd->ucActionCode);
connectivity/common/wlan/core/gen4m/mgmt/tdls.c:	DBGLOG(TDLS, INFO, "rResult=%d", rResult);
connectivity/common/wlan/core/gen4m/mgmt/tdls.c:		DBGLOG(TDLS, ERROR, "prBssInfo %d is NULL!\n"
connectivity/common/wlan/core/gen4m/mgmt/tdls.c:	DBGLOG(TDLS, INFO, "prCmd->oper=%d, u4SetBufferLen=%d",
connectivity/common/wlan/core/gen4m/mgmt/tdls.c:		DBGLOG(TDLS, ERROR, "prBssInfo %d is NULL!\n"
connectivity/common/wlan/core/gen4m/mgmt/tdls.c:		DBGLOG(TDLS, ERROR, "prBssInfo %d is NULL!\n"
connectivity/common/wlan/core/gen4m/mgmt/tdls.c:		DBGLOG(TDLS, ERROR, "prBssInfo %d is NULL!\n"
connectivity/common/wlan/core/gen4m/mgmt/tdls.c:	DBGLOG(TDLS, INFO, "wlanHardStartXmit, u4PktLen=%d", u4PktLen);
connectivity/common/wlan/core/gen4m/mgmt/tdls.c:		DBGLOG(TDLS, ERROR, "prBssInfo %d is NULL!\n"
connectivity/common/wlan/core/gen4m/mgmt/tdls.c:		DBGLOG(TDLS, ERROR, "prBssInfo %d is NULL!\n"
connectivity/common/wlan/core/gen4m/mgmt/tdls.c:			DBGLOG(TDLS, ERROR, "prBssInfo %d is NULL!\n"
connectivity/common/wlan/core/gen4m/mgmt/tdls.c:			DBGLOG(TDLS, ERROR, "prBssInfo %d is NULL!\n"
connectivity/common/wlan/core/gen4m/mgmt/tdls.c:	DBGLOG(TDLS, INFO, "TdlsexEventHandle\n");
connectivity/common/wlan/core/gen4m/mgmt/tdls.c:		DBGLOG(TDLS, INFO, "TDLS_HOST_EVENT_TEAR_DOWN\n");
connectivity/common/wlan/core/gen4m/mgmt/tdls.c:		DBGLOG(TDLS, INFO,
connectivity/common/wlan/core/gen4m/mgmt/tdls.c:		DBGLOG(TDLS, INFO,
connectivity/common/wlan/core/gen4m/mgmt/tdls.c:	DBGLOG(TDLS, INFO, "\n\n u2ReasonCode = %u\n\n",
connectivity/common/wlan/core/gen4m/mgmt/tdls.c:	DBGLOG(TDLS, INFO, "TdlsHandleTxDoneStatus=%d, fgIsWaitForTxDone=%d",
connectivity/common/wlan/core/gen4m/mgmt/p2p_fsm.c:		DBGLOG(P2P, ERROR, "can not get bss info by bssIdx: %d",
connectivity/common/wlan/core/gen4m/mgmt/p2p_fsm.c:				DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_fsm.c:	DBGLOG(P2P, TRACE, "bss[%d %d], role: %d, use_role_if: %d\n",
connectivity/common/wlan/core/gen4m/mgmt/p2p_fsm.c:		DBGLOG(P2P, TRACE, "P2P Run Event Channel Grant\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_fsm.c:	DBGLOG(P2P, TRACE, "p2pFsmRunEventNetDeviceRegister\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_fsm.c:	DBGLOG(P2P, TRACE, "p2pFsmRunEventUpdateMgmtFrame\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_fsm.c:	DBGLOG(P2P, INFO, "p2pFsmRunEventWfdSettingUpdate\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_fsm.c:		DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_fsm.c:#if CFG_ENABLE_PER_STA_STATISTICS_LOG
connectivity/common/wlan/core/gen4m/mgmt/p2p_fsm.c:		DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_fsm.c:	DBGLOG(P2P, TRACE, "P2P Scan Done Event\n");
connectivity/common/wlan/core/gen4m/mgmt/scan.c: * of enum ENUM_SCAN_LOG_PREFIX
connectivity/common/wlan/core/gen4m/mgmt/scan.c:const char aucScanLogPrefix[][SCAN_LOG_PREFIX_MAX_LEN] = {
connectivity/common/wlan/core/gen4m/mgmt/scan.c:	"[SCN:100:K2D]",	/* LOG_SCAN_REQ_K2D */
connectivity/common/wlan/core/gen4m/mgmt/scan.c:	"[SCN:200:D2F]",	/* LOG_SCAN_REQ_D2F */
connectivity/common/wlan/core/gen4m/mgmt/scan.c:	"[SCN:300:F2D]",	/* LOG_SCAN_RESULT_F2D */
connectivity/common/wlan/core/gen4m/mgmt/scan.c:	"[SCN:400:D2K]",	/* LOG_SCAN_RESULT_D2K */
connectivity/common/wlan/core/gen4m/mgmt/scan.c:	"[SCN:500:F2D]",	/* LOG_SCAN_DONE_F2D */
connectivity/common/wlan/core/gen4m/mgmt/scan.c:	"[SCN:600:D2K]",	/* LOG_SCAN_DONE_D2K */
connectivity/common/wlan/core/gen4m/mgmt/scan.c:	"[SCN:700:K2D]",	/* LOG_SCHED_SCAN_REQ_START_K2D */
connectivity/common/wlan/core/gen4m/mgmt/scan.c:	"[SCN:800:D2F]",        /* LOG_SCHED_SCAN_REQ_START_D2F */
connectivity/common/wlan/core/gen4m/mgmt/scan.c:	"[SCN:750:K2D]",	/* LOG_SCHED_SCAN_REQ_STOP_K2D */
connectivity/common/wlan/core/gen4m/mgmt/scan.c:	"[SCN:850:D2F]",	/* LOG_SCHED_SCAN_REQ_STOP_D2F */
connectivity/common/wlan/core/gen4m/mgmt/scan.c:	"[SCN:900:F2D]",	/* LOG_SCHED_SCAN_DONE_F2D */
connectivity/common/wlan/core/gen4m/mgmt/scan.c:	"[SCN:1000:D2K]",	/* LOG_SCHED_SCAN_DONE_D2K */
connectivity/common/wlan/core/gen4m/mgmt/scan.c:	"[SCN:1100:K2D]",	/* LOG_SCAN_ABORT_REQ_K2D */
connectivity/common/wlan/core/gen4m/mgmt/scan.c:	"[SCN:1200:D2F]",	/* LOG_SCAN_ABORT_REQ_D2F */
connectivity/common/wlan/core/gen4m/mgmt/scan.c:	"[SCN:1300:D2K]",	/* LOG_SCAN_ABORT_DONE_D2K */
connectivity/common/wlan/core/gen4m/mgmt/scan.c:	"[SCN:0:D2D]",		/* LOG_SCAN_D2D */
connectivity/common/wlan/core/gen4m/mgmt/scan.c:	""			/* LOG_SCAN_MAX */
connectivity/common/wlan/core/gen4m/mgmt/scan.c:		DBGLOG(SCN, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/scan.c:		DBGLOG(SCN, WARN,
connectivity/common/wlan/core/gen4m/mgmt/scan.c:		DBGLOG(SCN, WARN, "IE is truncated!\n");
connectivity/common/wlan/core/gen4m/mgmt/scan.c:		DBGLOG(SCN, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/scan.c:		DBGLOG(SCN, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/scan.c:				DBGLOG(SCN, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/scan.c:			DBGLOG(SCN, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/scan.c:		DBGLOG(SCN, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/scan.c:		scanlog_dbg(LOG_SCAN_DONE_D2K, INFO, "0 Bss is found, %d, %d, %d, %d\n",
connectivity/common/wlan/core/gen4m/mgmt/scan.c:	slen = min(slen + 1, SCAN_LOG_MSG_MAX_LEN); /* 1 for null end*/
connectivity/common/wlan/core/gen4m/mgmt/scan.c:		scanlog_dbg(LOG_SCAN_DONE_D2K, INFO, "Can't allocate memory\n");
connectivity/common/wlan/core/gen4m/mgmt/scan.c:				scanlog_dbg(LOG_SCAN_DONE_D2K, INFO,
connectivity/common/wlan/core/gen4m/mgmt/scan.c:				scanlog_dbg(LOG_SCAN_DONE_D2K, INFO,
connectivity/common/wlan/core/gen4m/mgmt/scan.c:			scanlog_dbg(LOG_SCAN_DONE_D2K, INFO,
connectivity/common/wlan/core/gen4m/mgmt/scan.c:			scanlog_dbg(LOG_SCAN_DONE_D2K, INFO, "%s", strbuf);
connectivity/common/wlan/core/gen4m/mgmt/scan.c:#define TEMP_LOG_TEMPLATE "Report " MACSTR " SSID[%s %u] eBSSType[%d] " \
connectivity/common/wlan/core/gen4m/mgmt/scan.c:				log_dbg(SCN, TRACE, TEMP_LOG_TEMPLATE,
connectivity/common/wlan/core/gen4m/mgmt/scan.c:#undef TEMP_LOG_TEMPLATE
connectivity/common/wlan/core/gen4m/mgmt/scan.c:		scanlog_dbg(LOG_SCAN_REQ_K2D, INFO, "Can't allocate memory\n");
connectivity/common/wlan/core/gen4m/mgmt/scan.c:#define TEMP_LOG_TEMPLATE \
connectivity/common/wlan/core/gen4m/mgmt/scan.c:	scanlog_dbg(LOG_SCAN_REQ_D2F, INFO, TEMP_LOG_TEMPLATE,
connectivity/common/wlan/core/gen4m/mgmt/scan.c:#undef TEMP_LOG_TEMPLATE
connectivity/common/wlan/core/gen4m/mgmt/scan.c:		LOG_SCAN_RESULT_F2D,
connectivity/common/wlan/core/gen4m/mgmt/scan.c:	struct SCAN_LOG_ELEM_BSS *prListBuf,
connectivity/common/wlan/core/gen4m/mgmt/scan.c:	enum ENUM_SCAN_LOG_PREFIX prefix,
connectivity/common/wlan/core/gen4m/mgmt/scan.c:	struct SCAN_LOG_ELEM_BSS *pSavedBss = NULL;
connectivity/common/wlan/core/gen4m/mgmt/scan.c:	struct SCAN_LOG_ELEM_BSS *pBss = NULL;
connectivity/common/wlan/core/gen4m/mgmt/scan.c:		rLinkEntry, struct SCAN_LOG_ELEM_BSS) {
connectivity/common/wlan/core/gen4m/mgmt/scan.c:	if (prList->u4NumElem < SCAN_LOG_BUFF_SIZE) {
connectivity/common/wlan/core/gen4m/mgmt/scan.c:	kalMemZero(pBss, sizeof(struct SCAN_LOG_ELEM_BSS));
connectivity/common/wlan/core/gen4m/mgmt/scan.c:void scanLogCacheFlushBSS(struct LINK *prList, enum ENUM_SCAN_LOG_PREFIX prefix,
connectivity/common/wlan/core/gen4m/mgmt/scan.c:	struct SCAN_LOG_ELEM_BSS *pBss = NULL;
connectivity/common/wlan/core/gen4m/mgmt/scan.c:				pBss, struct SCAN_LOG_ELEM_BSS *);
connectivity/common/wlan/core/gen4m/mgmt/scan.c:			if (prefix != LOG_SCAN_D2D)
connectivity/common/wlan/core/gen4m/mgmt/scan.c:			pBss, struct SCAN_LOG_ELEM_BSS *);
connectivity/common/wlan/core/gen4m/mgmt/scan.c:		if (prefix != LOG_SCAN_D2D)
connectivity/common/wlan/core/gen4m/mgmt/scan.c:void scanLogCacheFlushAll(struct SCAN_LOG_CACHE *prScanLogCache,
connectivity/common/wlan/core/gen4m/mgmt/scan.c:	enum ENUM_SCAN_LOG_PREFIX prefix, const uint16_t logBufLen)
connectivity/common/wlan/core/gen4m/mgmt/scan.c:		DBGLOG(RLM, WARN, "[Epigram] pucBuf is NULL, skip!\n");
connectivity/common/wlan/core/gen4m/mgmt/scan.c:		DBGLOG(RLM, WARN, "[Epigram] prBssDesc is NULL, skip!\n");
connectivity/common/wlan/core/gen4m/mgmt/rlm_obss.c:	DBGLOG(RLM, INFO, "OBSS Scan Done (NetIdx=%d, Mode=%d)\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm_obss.c:		DBGLOG(RLM, WARN, "OBSS Scan Done (NetIdx=%d) -- Aborted!!\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm_obss.c:		DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/mgmt/rlm_obss.c:		DBGLOG(RLM, INFO, "Set OBSS timer (NetIdx=%d, %d sec)\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm_obss.c:			DBGLOG(RLM, INFO, "WFD is running. Stop OBSS scan.\n");
connectivity/common/wlan/core/gen4m/mgmt/rlm_obss.c:		DBGLOG(RLM, WARN,
connectivity/common/wlan/core/gen4m/mgmt/rlm_obss.c:		DBGLOG(RLM, WARN, "No buf for OBSS scan (NetIdx=%d)!!\n",
connectivity/common/wlan/core/gen4m/mgmt/rlm_obss.c:	DBGLOG(RLM, INFO, "Timeout to trigger OBSS scan (NetIdx=%d)!!\n",
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, TRACE, "P2P Cancel Scan\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, TRACE, "Create station record fail\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, TRACE, "Allocation Join Message Fail\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, TRACE, "Target BSS NULL\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, WARN, "Assoc BSSID " MACSTR "\n",
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, TRACE, "Mgmt Frame TX Done.\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:	DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:	DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, INFO, "Found WFD IE, SA: " MACSTR
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:	DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:	DBGLOG(P2P, INFO, "eConnState: %d, eType: %d\n",
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, TRACE, "TX Probe Resposne Frame\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, TRACE, "p2pFuncStopComplete\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, TRACE, "p2pFuncStartGO:\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, TRACE, "GO SSID:%s\n", prBssInfo->aucSSID);
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, TRACE, "Phy type: 0x%x\n", prBssInfo->ucPhyTypeSet);
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, TRACE, "p2pFuncStopGO\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, WARN,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:					DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:					DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, TRACE, "P2P Release Channel\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:	DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:	DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, ERROR, "prBssInfo shouldn't be NULL!\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:	DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, WARN, "p2p glue info is not active\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, WARN,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, WARN,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:	DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, INFO, "-----Radar Detected Event-----\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, INFO, "Regulation domain: FCC\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, INFO, "Regulation domain: ETSI\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, INFO, "Regulation domain: JP\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, INFO, "Radar Content:\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, INFO, "start time    pulse width    PRI\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, INFO, "%-10d    %-11d    -\n"
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, INFO, "%-10d    %-11d    %d\n"
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, INFO, "%-10d    %-11d    -\n"
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, INFO, "%-10d    %-11d    %d\n"
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:	DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:	DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(BSS, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(BSS, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:	DBGLOG(BSS, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:	DBGLOG(P2P, TRACE, "p2pValidate Authentication Frame\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, WARN,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, WARN,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, WARN, "PMF Connction, return false\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, WARN,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, WARN, "in black list.\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, WARN, "p2p action frames are pending, drop it.\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:	DBGLOG(P2P, INFO, "Buffer the p2p action frame.\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, WARN, "Allocate buffer fail.\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, ERROR, "Invalid parameter.\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, TRACE, "Action: oui: 0x%x\n", u4OUI);
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:				/* DBGLOG(P2P, TRACE, ("SSID update\n")); */
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:					DBGLOG(P2P, TRACE, "Support Rate IE\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:					DBGLOG_MEM8(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:					DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:					DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:					DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:					DBGLOG(P2P, TRACE, "ERP IE.\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:					DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:					DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:					DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:					DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, TRACE, "RSN IE\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:					DBGLOG(RSN, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:						DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(RSN, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, TRACE, "Ex Support Rate IE\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG_MEM8(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:					DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:					DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:					DBGLOG(P2P, TRACE, "HT OP IE\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:					DBGLOG_MEM8(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:					DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:					DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, TRACE, "Vender Specific IE\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, TRACE, "WPA IE in supplicant\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, TRACE, "WPS IE in supplicant\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, TRACE, "WMM IE in supplicant\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, TRACE, "P2P IE in supplicant\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, LOUD, "Checking Attribute Length.\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, LOUD,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, WARN,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, WARN,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:					DBGLOG(P2P, WARN,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, ERROR, "prStaRec of ucStaRecIndex %d is NULL!\n",
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, TRACE, "Generate NULL P2P IE for Assoc Rsp.\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, TRACE, "Legacy device, no P2P IE.\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:	DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:				DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:	DBGLOG(P2P, INFO, "Clean queued p2p action frame.\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, WARN, "Not support concurrent STA + SAP\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, WARN, "STA has invalid band\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, WARN, "SAP is not active\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, WARN, "SAP is not active\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, WARN, "SAP has invalid band\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, INFO, "[SCC] Choose a channel\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, WARN, "STA is not connected\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, INFO, "[SCC] Keep StaCH(%d)\n", ucStaChannelNum);
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:	DBGLOG(P2P, TRACE, "Check done\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:	DBGLOG(P2P, INFO, "iftype: %d\n", eIftype);
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:	DBGLOG(P2P, INFO, "ucNumOfChannel: %d, eBand: %d\n", ucNumOfChannel,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:	DBGLOG(P2P, INFO, "acs chnl mask=[0x%08x][0x%08x][0x%08x]\n",
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, INFO, "idx: %u, ch: %u, d: %d\n",
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:			DBGLOG(P2P, WARN,
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, WARN, "No chosed channel, use default channel %d\n",
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, ERROR, "Not support 80+80 bw.\n");
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:	DBGLOG(P2P, INFO, "bss index: %d, policy: %d\n", ucBssIdx, ePolicy);
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:		DBGLOG(P2P, WARN, "invalid policy for channel switch: %d\n",
connectivity/common/wlan/core/gen4m/mgmt/p2p_func.c:	DBGLOG(CNM, INFO, "ucBssIndex = %d\n", prBssInfo->ucBssIndex);
connectivity/common/wlan/core/gen4m/chips/connac2x2/connac2x2.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/chips/connac2x2/connac2x2.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/chips/connac2x2/connac2x2.c:	DBGLOG(HAL, INFO, "Conn2ap axi gals bus info: 0x%08x\n", u4Value);
connectivity/common/wlan/core/gen4m/chips/connac2x2/connac2x2.c:	DBGLOG(HAL, INFO, "Conn2ap mux4to1 debug info: 0x%08x\n", u4Value);
connectivity/common/wlan/core/gen4m/chips/connac2x2/connac2x2.c:	DBGLOG(HAL, INFO, "Conn_hif_off bus busy info: 0x%08x\n", u4Value);
connectivity/common/wlan/core/gen4m/chips/connac2x2/connac2x2.c:	DBGLOG(HAL, INFO, "Conn_hif_on misc info: 0x%08x\n", u4Value);
connectivity/common/wlan/core/gen4m/chips/connac2x2/connac2x2.c:	DBGLOG(HAL, INFO, "Conn_on_host debug flag: 0x%08x\n", u4Value);
connectivity/common/wlan/core/gen4m/chips/connac2x2/connac2x2.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/chips/common/cmm_asic_connac.c:	DBGLOG(HAL, TRACE, "Check sleep mode DummyReg[0x%x]\n", u4Value);
connectivity/common/wlan/core/gen4m/chips/common/cmm_asic_connac.c:	DBGLOG(HAL, TRACE, "Weakup from sleep mode\n");
connectivity/common/wlan/core/gen4m/chips/common/cmm_asic_connac.c:		DBGLOG(HAL, INFO, "Force to read RX event\n");
connectivity/common/wlan/core/gen4m/chips/common/cmm_asic_connac.c:	DBGLOG(HAL, INFO, "%s ---->\n", __func__);
connectivity/common/wlan/core/gen4m/chips/common/cmm_asic_connac.c:		DBGLOG(HAL, INFO, "%s: 0x%08x = 0x%08x\n", __func__,
connectivity/common/wlan/core/gen4m/chips/common/cmm_asic_connac.c:		DBGLOG(HAL, ERROR,
connectivity/common/wlan/core/gen4m/chips/common/cmm_asic_connac.c:		DBGLOG(HAL, INFO, "%s:: 0x%08x = 0x%08x\n",
connectivity/common/wlan/core/gen4m/chips/common/cmm_asic_connac.c:			DBGLOG(HAL, ERROR, "%s:: PDMA Tx idle~\n", __func__);
connectivity/common/wlan/core/gen4m/chips/common/cmm_asic_connac.c:		DBGLOG(HAL, ERROR, "%s:: PDMA Tx busy.....\n", __func__);
connectivity/common/wlan/core/gen4m/chips/common/cmm_asic_connac.c:		DBGLOG(HAL, ERROR,
connectivity/common/wlan/core/gen4m/chips/common/cmm_asic_connac.c:		DBGLOG(HAL, ERROR,
connectivity/common/wlan/core/gen4m/chips/common/cmm_asic_connac.c:		DBGLOG(HAL, INFO, "%s <----\n", __func__);
connectivity/common/wlan/core/gen4m/chips/common/cmm_asic_connac.c:	DBGLOG(HAL, INFO, "%s <----\n", __func__);
connectivity/common/wlan/core/gen4m/chips/common/cmm_asic_connac.c:				DBGLOG(HAL, ERROR,
connectivity/common/wlan/core/gen4m/chips/common/cmm_asic_connac.c:			DBGLOG(HAL, ERROR,
connectivity/common/wlan/core/gen4m/chips/common/cmm_asic_connac.c:			DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/chips/common/cmm_asic_connac.c:		u4Value |= DPMA_HIF_LOGIC_RESET_MASK;
connectivity/common/wlan/core/gen4m/chips/common/cmm_asic_connac.c:		u4Value &= ~DPMA_HIF_LOGIC_RESET_MASK;
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, INFO, "date[%s] version[%s]\n",
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:	DBGLOG(INIT, INFO, "date[%s]\n", aucBuffer);
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, ERROR, "ioremap failed\n");
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:	DBGLOG(INIT, INFO, "feature_set %d\n",
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:	DBGLOG(INIT, INFO, "Compressed Check INFORMATION %d\n",
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, INFO, "Compressed FW\n");
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:			DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:			DBGLOG(INIT, INFO, "DL BLOCK[%u]  COMlen[%u] CRC[%u]\n",
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:				DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:				DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:					DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:			DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, ERROR, "Alloc CMD buffer failed\n");
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, WARN, "Wait patch semaphore response fail\n");
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, ERROR, "prInitEvent is NULL\n");
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, WARN, "Unexpected EVENT ID, get 0x%0x\n",
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, WARN, "Unexpected SeqNum %d, %d\n",
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:			DBGLOG(INIT, WARN,
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:			DBGLOG(INIT, WARN,
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:			DBGLOG(INIT, WARN, "Patch status check timeout!!\n");
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:				DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, INFO, "PATCH FINISH EVT failed\n");
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, INFO, "PATCH FINISH EVT success!!\n");
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:				DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, ERROR, "Alloc CMD buffer failed\n");
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:				DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:				DBGLOG(INIT, ERROR, "prInitEvent is NULL\n");
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, ERROR, "Alloc CMD buffer failed\n");
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:					DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:						DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:				DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:	DBGLOG(INIT, INFO, "FW_START CMD send, waiting for RSP\n");
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, INFO, "FW_START EVT failed\n");
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, INFO, "FW_START EVT success!!\n");
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:				DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:	DBGLOG(INIT, INFO, "FW_START CMD send, waiting for RSP\n");
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, INFO, "FW_START EVT failed\n");
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, INFO, "FW_START EVT success!!\n");
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, INFO, "date[%s] version[%s]\n",
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:	DBGLOG(INIT, INFO, "date[%s] version[%s]\n",
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, WARN, "FW[%u] load error!\n", eDlIdx);
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, WARN, "FW[%u] load error!\n", eDlIdx);
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, WARN, "Get tailer info error!\n");
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:	DBGLOG_LIMITED(INIT, INFO, "FW download Start\n");
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, WARN, "Without downlaod firmware Ops\n");
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:	DBGLOG_LIMITED(INIT, INFO, "FW download End\n");
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:	DBGLOG(INIT, INFO, "Patch download start\n");
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, WARN, "FW[%u] load error!\n",
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, INFO, "No need to download patch\n");
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:	DBGLOG(INIT, INFO, "Patch download end[%d].\n", u4Status);
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, WARN, "FW[%u] load error!\n",
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:	DBGLOG(INIT, INFO, "Release info tag[%u] len[%u]\n",
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:		DBGLOG(INIT, LOUD, "Release info tag[%u] len[%u] padding[%u]\n",
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:			DBGLOG(INIT, WARN, "Not support release info tag[%u]\n",
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:			 DBGLOG(INIT, WARN, "ioremap_nocache failed.\n");
connectivity/common/wlan/core/gen4m/chips/common/fw_dl.c:	DBGLOG(INIT, INFO, "Release manifest: %s\n",
connectivity/common/wlan/core/gen4m/chips/mt7668/mt7668.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/chips/mt7668/mt7668.c:	DBGLOG(HAL, TRACE, "%s [0x%08x]\n", __func__, IntMask.word);
connectivity/common/wlan/core/gen4m/chips/mt7668/mt7668.c:	DBGLOG(HAL, TRACE, "%s\n", __func__);
connectivity/common/wlan/core/gen4m/chips/mt7668/mt7668.c:	DBGLOG(INIT, INFO, "PMIC SPI clock switch = %s\n",
connectivity/common/wlan/core/gen4m/chips/mt6632/mt6632.c:	DBGLOG(HAL, TRACE, "%s [0x%08x]\n", __func__, IntMask.word);
connectivity/common/wlan/core/gen4m/chips/mt6632/mt6632.c:	DBGLOG(HAL, TRACE, "%s\n", __func__);
connectivity/common/wlan/core/gen4m/chips/mt6632/mt6632.c:	DBGLOG(INIT, INFO, "PMIC SPI clock switch = %s\n",
connectivity/common/wlan/core/gen4m/chips/connac/connac.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(REQ, INFO, "ATE_AGENT iwpriv SetATE\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(REQ, INFO, "ATE_AGENT iwpriv SetATE - ATESTART\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(REQ, INFO, "ATE_AGENT iwpriv SetATE - ICAPSTART\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(REQ, INFO, "ATE_AGENT iwpriv SetATE - ATESTOP\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(REQ, INFO, "ATE_AGENT iwpriv SetATE - TXFRAME\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(REQ, INFO, "ATE_AGENT iwpriv SetATE - TXSTOP\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(REQ, INFO, "ATE_AGENT iwpriv SetATE - RXFRAME\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(REQ, INFO, "ATE_AGENT iwpriv SetATE - RXSTOP\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "ATE_AGENT iwpriv SetDa\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "ATE_AGENT iwpriv SetSa\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(REQ, INFO, "ATE_AGENT iwpriv SetChannel\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(REQ, INFO, "ATE_AGENT iwpriv SetTxPower0\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(REQ, INFO, "ATE_AGENT iwpriv SetTxGi\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(REQ, INFO, "ATE_AGENT iwpriv SetSystemBW\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(REQ, INFO, "ATE_AGENT iwpriv SetTxMode\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(REQ, INFO, "ATE_AGENT iwpriv SetTxLength\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(REQ, INFO, "ATE_AGENT iwpriv SetTxCount\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(REQ, INFO, "ATE_AGENT iwpriv SetTxMcs\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(REQ, INFO, "ATE_AGENT iwpriv SetIpg\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(REQ, INFO, "ATE_AGENT iwpriv SetAntSwp\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_TxBfProfileTag_InValid\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_TxBfProfileTag_PfmuIdx\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_TxBfProfileTag_BfType\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_TxBfProfileTag_DBW\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_TxBfProfileTag_SuMu\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_TxBfProfileTag_Mem\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_TxBfProfileTag_Matrix\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_TxBfProfileTag_SNR\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_TxBfProfileTag_SmartAnt\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_TxBfProfileTag_SeIdx\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_TxBfProfileTag_RmsdThrd\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_TxBfProfileTag_McsThrd\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_TxBfProfileTag_TimeOut\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_TxBfProfileTag_DesiredBW\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_TxBfProfileTag_DesiredNc\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_TxBfProfileTag_DesiredNr\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_TxBfProfileTagWrite\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_TxBfProfileTagRead\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_TxBfProfileDataRead\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "TxBfProfileDataWrite\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_TxBfProfilePnRead\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "TxBfProfilePnWrite\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_Trigger_Sounding_Proc\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_Stop_Sounding_Proc\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "TxBfTxApply\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "TxBfManualAssoc\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "TxBfPfmuMemAlloc\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "TxBfPfmuMemRelease\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR, "TxBfPfmuMemRelease ucWlanId = %d",
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "DevInfoUpdate\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "BssInfoUpdate\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_StaRecCmmUpdate\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_StaRecBfUpdate\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		 *DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_MUGetInitMCS\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR, "Test\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_MUCalInitMCS\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_MUCalLQ\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_MUGetLQ\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	 * DBGLOG(RFTEST, ERROR, "Set_MUGetLQ prInBuf = %s, u4Type = %x",
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_MUSetSNROffset\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_MUSetZeroNss\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_MUSetSpeedUpLQ\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_MUSetMUTable\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	/* DBGLOG(RFTEST, ERROR, "Set_MUSetMUTable prInBuf = %s, */
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_MUSetGroup\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_MUGetQD\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_MUSetEnable\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_MUSetGID_UP\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_MUTriggerTx\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(RFTEST, ERROR, "Set_TxBfProfileSwTagWrite\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:			DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(REQ, INFO, "ATE_AGENT iwpriv WriteEfuse, buf: %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(REQ, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(REQ, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(REQ, ERROR, "Cac time < 0, Invalid data\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:	DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(REQ, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(REQ, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, ERROR, "ATE_AGENT iwpriv this_char = %s\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(RFTEST, INFO, "ATE_AGENT iwpriv this_char = %s\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_ate_agent.c:		DBGLOG(REQ, INFO, "ATE_AGENT iwpriv cmd = %s, value = %s\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_bow.c:	DBGLOG(BOW, INFO, "Register for character device to communicate with 802.11 PAL.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_bow.c:	DBGLOG(BOW, INFO, "Unregister character device for communicating with 802.11 PAL.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_bow.c:	DBGLOG(BOW, INFO, "BoW EVENT read.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_bow.c:	DBGLOG(BOW, EVENT, "AMP driver CMD buffer size : %d.\n", size);
connectivity/common/wlan/core/gen4m/os/linux/gl_bow.c:		DBGLOG(BOW, EVENT, "AMP write content : 0x%x.\n", aucBuffer[i]);
connectivity/common/wlan/core/gen4m/os/linux/gl_bow.c:	DBGLOG(BOW, EVENT, "BoW CMD write.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_bow.c:	DBGLOG(BOW, EVENT, "AMP write content payload length : %d.\n", prCmd->rHeader.u2PayloadLength);
connectivity/common/wlan/core/gen4m/os/linux/gl_bow.c:	DBGLOG(BOW, EVENT, "AMP write content header length : %d.\n", sizeof(struct BT_OVER_WIFI_COMMAND_HEADER));
connectivity/common/wlan/core/gen4m/os/linux/gl_bow.c:		DBGLOG(BOW, EVENT, "Wrong CMD total length.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_bow.c:/* DBGLOG(BOW, EVENT, ("bow_ampc_pol, POLLOUT | POLLWRNORM, %x\n", retval)); */
connectivity/common/wlan/core/gen4m/os/linux/gl_bow.c:/* DBGLOG(BOW, EVENT, ("bow_ampc_pol, POLLIN | POLLRDNORM, %x\n", retval)); */
connectivity/common/wlan/core/gen4m/os/linux/gl_bow.c:	DBGLOG(BOW, INFO, "in %s\n", __func__);
connectivity/common/wlan/core/gen4m/os/linux/gl_bow.c:	DBGLOG(BOW, INFO, "in %s\n", __func__);
connectivity/common/wlan/core/gen4m/os/linux/gl_bow.c:		DBGLOG(BOW, EVENT, "[bow] no space for event: %d/%d\n", u4EventSize, u4AvailSize);
connectivity/common/wlan/core/gen4m/os/linux/gl_bow.c:	DBGLOG(BOW, EVENT, "kalGetBowState.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_bow.c:			DBGLOG(BOW, EVENT,
connectivity/common/wlan/core/gen4m/os/linux/gl_bow.c:			DBGLOG(BOW, EVENT,
connectivity/common/wlan/core/gen4m/os/linux/gl_bow.c:	DBGLOG(BOW, EVENT, "kalSetBowState, aucPeerAddress, %x:%x:%x:%x:%x:%x.\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_bow.c:			DBGLOG(BOW, EVENT,
connectivity/common/wlan/core/gen4m/os/linux/gl_bow.c:			DBGLOG(BOW, EVENT,
connectivity/common/wlan/core/gen4m/os/linux/gl_bow.c:	DBGLOG(BOW, EVENT, "kalGetBowAvailablePhysicalLinkCount, ucLinkCount, %c.\n", ucLinkCount);
connectivity/common/wlan/core/gen4m/os/linux/gl_bow.c:		DBGLOG(INIT, WARN, "Invalid Ether packet length: %lu\n", u4PacketLen);
connectivity/common/wlan/core/gen4m/os/linux/gl_bow.c:		DBGLOG(BOW, TRACE, "GLUE_FLAG_HALT skip tx\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_bow.c:		DBGLOG(BOW, INFO, "Invalid BOW frame, skip Tx\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO, "mtk_vif_destructor\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, TRACE, "%s: u4Idx=%d\n", __func__, u4Idx);
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, ERROR, "can't alloc prNewNetDevice\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, ERROR, "can't alloc prWdev\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, ERROR, "can't alloc prSwitchModeMsg\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, ERROR, "can't alloc prMsgActiveBss\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, INFO, "type: %d, name = %s, netdev: 0x%p\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, TRACE, "mtk_p2p_cfg80211_add_iface 456\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(INIT, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, TRACE, "register_netdev OK\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, TRACE, "NL80211_IFTYPE_P2P_CLIENT.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, TRACE, "NL80211_IFTYPE_STATION.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, TRACE, "NL80211_IFTYPE_AP.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, TRACE, "NL80211_IFTYPE_P2P_GO not AP.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, TRACE, "Other type :%d .\n", type);
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(INIT, WARN, "unable to alloc msg\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO, "mtk_p2p_cfg80211_del_iface\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(INIT, WARN, "unable to alloc msg\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(RSN, TRACE, "mtk_p2p_cfg80211_add_key\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(RSN, TRACE, "Cipher = %x\n", params->cipher);
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG_MEM8(RSN, TRACE, params->key, params->key_len);
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(RSN, WARN, "key_len [%d] is invalid!\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(RSN, INFO, "not support this func\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(RSN, TRACE, "mtk_p2p_cfg80211_del_key\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(RSN, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(RSN, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(RSN, TRACE, "mtk_p2p_cfg80211_set_default_key\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(RSN, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(RSN, INFO, "mtk_p2p_cfg80211_set_mgmt_key, kid:%d\n", key_index);
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, TRACE, "mtk_p2p_cfg80211_get_station\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, WARN, "bss is not active\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, WARN, "not yet connected\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, TRACE, "mtk_p2p_cfg80211_scan.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, TRACE, "Device Port Scan.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, TRACE, "Generating scan request message.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:				DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, TRACE, "Finish channel list.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, TRACE, "Finish SSID list:%d.\n", request->n_ssids);
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, TRACE, "Finish IE Buffer.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO, "mtk_p2p_cfg80211_abort_scan\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(REQ, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, TRACE, "mtk_p2p_cfg80211_set_wiphy_params\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO, "not support now\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO, "not support now\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO, "%s: not support now\n", __func__);
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, TRACE, "%s: not support now\n", __func__);
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, TRACE, "mtk_p2p_cfg80211_set_power_mgmt ps=%d.\n", enabled);
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(REQ, WARN, "set_power_mgmt error:%x\n", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, INFO, "inactivity_timeout: %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, INFO, "pri: %d, s1: %d, s2: %d, bw: %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, INFO, "!!! no CH def!!!\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, TRACE, "mtk_p2p_cfg80211_start_radar_detection.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, TRACE, "mtk_p2p_cfg80211_channel_switch.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, ERROR, "get role index fail.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:				DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, INFO, "ucRoleIdx: %d, ucBssIdx: %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, TRACE, "mtk_p2p_cfg80211_change_beacon.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, INFO, "mtk_p2p_cfg80211_stop_ap.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:				DBGLOG(P2P, WARN, "timeout\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:				DBGLOG(P2P, INFO, "complete\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, TRACE, "mtk_p2p_cfg80211_deauth.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, TRACE, "mtk_p2p_cfg80211_disassoc.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, TRACE, "mtk_p2p_cfg80211_remain_on_channel\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, ERROR, "Allocate TX req msg fails.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, ERROR, "Allocate TX packet fails.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:#define TEMP_LOG_TEMPLATE "netdev: %p, bssIdx: %d, band: %d, chan: %d, " \
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, INFO, TEMP_LOG_TEMPLATE,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:#undef TEMP_LOG_TEMPLATE
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, INFO, "bssIdx: %d, cookie: 0x%llx\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO, "%s\n", __func__);
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, TRACE, "CTS protection no change\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, TRACE, "CTS protection disable.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, TRACE, "CTS protection enable\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, TRACE, "CTS protection unknown\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, TRACE, "Short prreamble no change\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, TRACE, "Short prreamble disable.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, TRACE, "Short prreamble enable\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, TRACE, "Short prreamble unknown\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:				DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:				DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:				DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, ERROR, "wiphy=%p, ndev=%p.\n", wiphy, ndev);
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, TRACE, "NL80211_IFTYPE_P2P_CLIENT.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:				DBGLOG(P2P, TRACE, "NL80211_IFTYPE_STATION.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, TRACE, "NL80211_IFTYPE_AP.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:				DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, TRACE, "Other type :%d .\n", type);
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, INFO, "mtk_p2p_cfg80211_set_channel.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, TRACE, "mtk_p2p_cfg80211_set_bitrate_mask\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, TRACE, "netdev: 0x%p, frame_type: 0x%x, reg: %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:				DBGLOG(P2P, WARN, "wireless dev match fail!\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:				DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:				DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:				DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:				DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:				DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, TRACE, "It is in interrupt level\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO, "mtk_p2p_cfg80211_testmode_cmd\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:				DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, INFO, "NFC: Polling\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, TRACE, "mtk_p2p_cfg80211_testmode_cmd\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, ERROR, "data is NULL\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:				DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(P2P, INFO, "NFC: Polling\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, ERROR, "data is NULL or len is 0\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO, "NL80211_ATTR_TESTDATA, idx=%d value=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, WARN, "len [%d] is invalid!\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:				DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:				DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, ERROR, "data is NULL\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO, "NL80211_ATTR_TESTDATA, idx=%u value=%u\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(REQ, WARN, "set_noa error:%x\n", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:				DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:		DBGLOG(P2P, INFO, "SET OPPS[%d]: %d\n", ucBssIdx, value);
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:				DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:			DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO, "mtk_p2p_cfg80211_testmode_wfd_update_cmd\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO, "WFD Enable:%x\n", prParams->WfdEnable);
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO, "WFD Device Info:%x\n", prParams->WfdDevInfo);
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO, "WFD Control Port:%x\n", prParams->WfdControlPort);
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO, "WFD Extend Capability:%x\n", prParams->WfdExtendCap);
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO, "WFD Video Port:%x\n", prParams->WfdVideoPort);
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO, "WFD Audio Port:%x\n", prParams->WfdAudioPort);
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO, "WFD Flag:%x\n", prParams->WfdFlag);
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO, "WFD Policy:%x\n", prParams->WfdPolicy);
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO, "WFD State:%x\n", prParams->WfdState);
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO, "WFD Advanced Flag:%x\n", prParams->WfdAdvanceFlag);
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO, "WFD Sigma mode:%x\n", prParams->WfdSigmaMode);
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_cfg80211.c:	DBGLOG(P2P, TRACE, "--> %s()\n", __func__);
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_init.c:		DBGLOG(INIT, INFO, "%s: P2P is not enabled, SKIP!\n", __func__);
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_init.c:		DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_init.c:		DBGLOG(P2P, INFO, "p2p is already registered\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_init.c:		DBGLOG(P2P, ERROR, "Launch failed\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_init.c:	DBGLOG(P2P, TRACE, "Launch success, fgIsP2PRegistered TRUE\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_init.c:		DBGLOG(INIT, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_init.c:		DBGLOG(INIT, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_init.c:		DBGLOG(P2P, INFO, "p2p is not registered\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_init.c:	DBGLOG(P2P, INFO, "fgIsP2PRegistered FALSE\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_init.c:		DBGLOG(INIT, INFO, "Unregister gprP2pRoleWdev[%d]\n", idx);
connectivity/common/wlan/core/gen4m/os/linux/platform.c:		/* DBGLOG(REQ, INFO, ("netdev_event: device is empty.\n")); */
connectivity/common/wlan/core/gen4m/os/linux/platform.c:		/* DBGLOG(REQ, INFO, ("netdev_event: xxx\n")); */
connectivity/common/wlan/core/gen4m/os/linux/platform.c:		DBGLOG(REQ, INFO, "netdev_event: prGlueInfo is empty.\n");
connectivity/common/wlan/core/gen4m/os/linux/platform.c:		/* DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/platform.c:		DBGLOG(REQ, INFO, "net6dev_event: device is empty.\n");
connectivity/common/wlan/core/gen4m/os/linux/platform.c:		DBGLOG(REQ, INFO, "net6dev_event: xxx\n");
connectivity/common/wlan/core/gen4m/os/linux/platform.c:		DBGLOG(REQ, INFO, "netdev_event: prGlueInfo is empty.\n");
connectivity/common/wlan/core/gen4m/os/linux/platform.c:		DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/platform.c:		DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/platform.c:		DBGLOG(INIT, INFO, "[nvram_read] : failed to open!!\n");
connectivity/common/wlan/core/gen4m/os/linux/platform.c:			DBGLOG(INIT, INFO, "[nvram_read] : f_op is NULL!!\n");
connectivity/common/wlan/core/gen4m/os/linux/platform.c:					DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/platform.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/platform.c:		DBGLOG(INIT, INFO, "[nvram_write] : failed to open!!\n");
connectivity/common/wlan/core/gen4m/os/linux/platform.c:			DBGLOG(INIT, INFO, "[nvram_write] : f_op is NULL!!\n");
connectivity/common/wlan/core/gen4m/os/linux/platform.c:					DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/platform.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:		DBGLOG(INIT, INFO, "%s(): Set UNSUPPORTED Mode = %d.\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:		DBGLOG(INIT, INFO, "%s(): Get UNKNOWN Mode.\n", __func__);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:			DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:		DBGLOG(INIT, INFO, "[wifi] no memory for scan list:%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:			DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:			DBGLOG(INIT, INFO, "[wifi] larger buf:%d result:%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:		DBGLOG(INIT, INFO, "[wifi] strange scan result count:%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:			/* ToDo:: DBGLOG */
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:			DBGLOG(INIT, INFO, "######set disassoc failed\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:			DBGLOG(INIT, INFO, "######set assoc ok\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:		DBGLOG(INIT, INFO, "set to acpi d3(0)\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:		DBGLOG(INIT, INFO, "set to acpi d0\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:			DBGLOG(INIT, INFO, "wlanoidSetAddWep fail 0x%x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:			DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:			DBGLOG(INIT, INFO, "IW_AUTH_WAPI_ENABLED :%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, "IW_AUTH_WAPI_ENABLED :%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:		DBGLOG(REQ, ERROR, "prIWEncExt is NULL!\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:				DBGLOG(INIT, INFO, "remove key error:%x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:					DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:					DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:					DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:				DBGLOG(INIT, INFO, "key length %x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:				DBGLOG(INIT, INFO, "key error\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:				DBGLOG(INIT, INFO, "key index error:0x%x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:				DBGLOG(REQ, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:			DBGLOG(INIT, INFO, "add key error:%x\n", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:		DBGLOG(REQ, ERROR, "Set country code error: %x\n", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(REQ, INFO, "CMD:0x%x\n", i4Cmd);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:			DBGLOG(INIT, INFO, "MLME buffer strange:%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:				DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:				DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:			DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:					DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:			DBGLOG(INIT, INFO, "add pmkid error:%x\n", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:			DBGLOG(INIT, INFO, "flush pmkid error:%x\n", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(REQ, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:	DBGLOG(INIT, INFO, " mtk std ioctl is called.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext.c:		DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/plat/mt6768/plat_priv.c:	DBGLOG(SW4, TRACE, "enter kalGetCpuBoostThreshold\n");
connectivity/common/wlan/core/gen4m/os/linux/plat/mt6779/plat_priv.c:	DBGLOG(SW4, TRACE, "enter kalGetCpuBoostThreshold\n");
connectivity/common/wlan/core/gen4m/os/linux/plat/mt6779/plat_priv.c:				DBGLOG(SW4, WARN, "set uclamp Rx failed\n");
connectivity/common/wlan/core/gen4m/os/linux/plat/mt6779/plat_priv.c:				DBGLOG(SW4, WARN, "set uclamp Hif failed\n");
connectivity/common/wlan/core/gen4m/os/linux/plat/mt6779/plat_priv.c:				DBGLOG(SW4, WARN, "set uclamp Tx failed\n");
connectivity/common/wlan/core/gen4m/os/linux/include/gl_rst.h:	DBGLOG(INIT, INFO, "DO NOT support chip reset\n")
connectivity/common/wlan/core/gen4m/os/linux/include/gl_rst.h:	DBGLOG(INIT, INFO, "DO NOT support chip reset\n")
connectivity/common/wlan/core/gen4m/os/linux/include/gl_kal.h:		DBGLOG(INIT, INFO, "0x%p(%ld) allocated (%s:%s)\n", \
connectivity/common/wlan/core/gen4m/os/linux/include/gl_kal.h:		DBGLOG(INIT, INFO, "0x%p(%ld) freed (%s:%s)\n", \
connectivity/common/wlan/core/gen4m/os/linux/include/gl_wext_priv.h:#define OID_IPC_WIFI_LOG_UI                             0xFFA0CC01
connectivity/common/wlan/core/gen4m/os/linux/include/gl_wext_priv.h:#define OID_IPC_WIFI_LOG_LEVEL                          0xFFA0CC02
connectivity/common/wlan/core/gen4m/os/linux/include/gl_vendor.h:	LOGGER_START_LOGGING = ANDROID_NL80211_SUBCMD_DEBUG_RANGE_START,
connectivity/common/wlan/core/gen4m/os/linux/include/gl_vendor.h:	LOGGER_GET_VER,
connectivity/common/wlan/core/gen4m/os/linux/include/gl_vendor.h:	LOGGER_DRIVER_MEM_DUMP,
connectivity/common/wlan/core/gen4m/os/linux/include/gl_vendor.h:enum LOGGER_ATTRIBUTE {
connectivity/common/wlan/core/gen4m/os/linux/include/gl_vendor.h:	LOGGER_ATTRIBUTE_DRIVER_VER,
connectivity/common/wlan/core/gen4m/os/linux/include/gl_vendor.h:	LOGGER_ATTRIBUTE_FW_VER
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "set infrastructure mode error:%x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(RSN, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(RSN, INFO, "keyIdx = %d pairwise = %d null mac\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(RSN, INFO, "Cipher = %x\n", params->cipher);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG_MEM8(RSN, INFO, params->key, params->key_len);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(INIT, INFO, "--> %s()\n", __func__);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(RSN, WARN, "wlan is halt, skip key deletion\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(RSN, TRACE, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(RSN, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(RSN, TRACE, "keyIdx = %d pairwise = %d null mac\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(RSN, WARN, "remove key error:%x\n", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(RSN, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, TRACE, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "not yet connected\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "last link speed\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, TRACE, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "not yet connected\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(REQ, WARN, "last link speed\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "not yet connected\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, TRACE, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "not yet connected\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(REQ, WARN, "unable to retrieve rssi\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, TRACE, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, ERROR, "prAdapter->fgIcapMode == TRUE\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, ERROR, "prGlueInfo->prAdapter is NULL");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, ERROR, "prGlueInfo->prScanRequest != NULL\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, ERROR, "alloc scan request fail\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:				DBGLOG(REQ, TRACE, "i=%d, wildcard scan\n", i);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:				DBGLOG(REQ, TRACE, "SCN_SSID_MAX_NUM\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, ERROR, "request->n_ssids:%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:				DBGLOG(REQ, WARN, "Wrong Channel[%d] freq=%u\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:				DBGLOG(REQ, WARN, "UNKNOWN Band %d(chnl=%u)\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:#define TEMP_LOG_TEMPLATE "n_ssid=(%u->%u) n_channel(%u==>%u) " \
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, TEMP_LOG_TEMPLATE,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:#undef TEMP_LOG_TEMPLATE
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "scan error:%x\n", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, TRACE, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	scanlog_dbg(LOG_SCAN_ABORT_REQ_K2D, INFO, "mtk_cfg80211_abort_scan\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, ERROR, "wlanoidAbortScan fail 0x%x\n", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, ERROR, "ndev is NULL\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "Reject this connecting request\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "[wlan%d] mtk_cfg80211_connect %p %zu\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(RSN, INFO, "[wlan] cipher pairwise (%x)\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(REQ, WARN, "invalid cipher pairwise (%d)\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(REQ, WARN, "invalid cipher group (%d)\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, INFO, "n_akm_suites=%x, akm_suites=%x",
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:				DBGLOG(REQ, WARN, "invalid Akm Suite (%d)\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:				DBGLOG(REQ, WARN, "invalid Akm Suite (%d)\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "u4WpaVersion=%d, u4AuthAlg=%d",
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(REQ, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:				DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(RSN, INFO, "Found non-wfa vendor ie (len=%u)\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	/* DBGLOG(REQ, INFO, ("MFP=%d\n", prWpaInfo->u4Mfp)); */
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "set auth mode error:%x\n", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "set encryption mode error:%x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(REQ, WARN, "Too long key length (%u)\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(INIT, INFO, "wlanoidSetAddWep fail 0x%x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "set SSID:%x\n", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(REQ, WARN, "set BSSID:%x\n", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(REQ, WARN, "set SSID:%x\n", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(OID, INFO, "SAE-confirm failed with: %d\n", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "disassociate error:%x\n", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "set SSID:%x\n", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "disassociate error:%x\n", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "%d: enabled=%d, timeout=%d, fgTIMPresend=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "set_power_mgmt error:%x\n", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, TRACE, "mtk_cfg80211_set_pmksa " MACSTR " pmk\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(INIT, INFO, "add pmkid error:%x\n", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, TRACE, "mtk_cfg80211_del_pmksa " MACSTR "\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(INIT, INFO, "add pmkid error:%x\n", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(INIT, INFO, "flush pmkid error:%x\n", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(RSN, INFO, "ucBssIndex = %d, size(%d)\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(RSN, TRACE, "kek\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG_MEM8(RSN, TRACE, (uint8_t *)data->kek,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(RSN, TRACE, "kck\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG_MEM8(RSN, TRACE, (uint8_t *)data->kck,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(RSN, TRACE, "replay count\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG_MEM8(RSN, TRACE, (uint8_t *)data->replay_ctr,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(INIT, INFO, "set GTK rekey data error:%x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(INIT, TRACE, "mtk_cfg80211_mgmt_frame_register\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:				DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:				DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:				DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:				DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:				DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(INIT, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:#define TEMP_LOG_TEMPLATE "bssIdx: %d, band: %d, chan: %d, offchan: %d, " \
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(P2P, INFO, TEMP_LOG_TEMPLATE,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:#undef TEMP_LOG_TEMPLATE
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(P2P, INFO, "cookie: 0x%llx, ucBssIndex = %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(INIT, INFO, "Cmd Type (%d)\n", prParams->CmdType);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(REQ, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:				DBGLOG(REQ, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(REQ, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(INIT, TRACE, "%s data or len is invalid\n", __func__);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(INIT, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(QM, ERROR, "prParams is NULL, data=%p, len=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(QM, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(QM, ERROR, "allocate skb failed:%x\n", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(QM, TRACE, "Get [" MACSTR "] STA statistics\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(QM, TRACE, "%s allocate prBugReport failed\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(QM, TRACE, "%s allocate skb failed\n", __func__);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(INIT, INFO, "query statistics error:%x\n", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(INIT, INFO, "query statistics error:%x\n", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(INIT, INFO, "--> %s()\n", __func__);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, ERROR, "mtk_cfg80211_testmode_cmd null data\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(INIT, TRACE, "params index=%x\n", prParams->index);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, TRACE, "prParams->index=%d, status=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, TRACE, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		scanlog_dbg(LOG_SCHED_SCAN_REQ_START_K2D, INFO, "ssid(%d)match(%d)ch(%u)f(%u)rssi(%d)\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		scanlog_dbg(LOG_SCHED_SCAN_REQ_START_K2D, INFO, "--> %s()\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, ERROR, "prGlueInfo->prAdapter is NULL");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(SCN, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(SCN, ERROR, "request == NULL\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(SCN, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(SCN, WARN, "request->n_match_sets(%d) > %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(SCN, WARN, "request->n_ssids(%d) > %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(SCN, ERROR, "prSchedScanRequest kalMemAlloc fail\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(SCN, TRACE, "ssids : (%d)[%s]\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:				DBGLOG(SCN, TRACE, "ignore null ssid(%d)\n", i);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(SCN, TRACE, "match : (%d)[%s]\n", i,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:				DBGLOG(SCN, TRACE, "ignore null ssid(%d)\n", i);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(SCN, ERROR, "pucIE kalMemAlloc fail\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(SCN, ERROR, "pucChannels kalMemAlloc fail\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "scheduled scan error:%x\n", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, TRACE, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	scanlog_dbg(LOG_SCHED_SCAN_REQ_STOP_K2D, INFO, "--> %s()\n", __func__);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "scheduled scan error:%x\n", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:				/* DBGLOG(REQ, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "set BSSID:%x\n", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	/* DBGLOG(QM, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(QM, TRACE, "%s allocate skb failed:%x\n", __func__,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(QM, WARN, "CONFIG_NL80211_TESTMODE not enabled\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "rStatus: %x", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "ucBssIndex = %d, oper=%d",
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "rStatus: %x", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "ucBssIndex = %d, oper=%d",
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(TDLS, INFO, "NL80211_TDLS_DISABLE_LINK, kalMsleep(20)");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "not support tdls\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(REQ, INFO, "cmd=%s, ssid len %u, ssid=%s\n", cmd,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, INFO, "cmd=%s, osharemode=%u\n", cmd,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "not support OSHAREMOD\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(RLM, INFO, "regd_state_machine: SET_BY_USER\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(RLM, INFO, "regd_state_machine: SET_BY_DRIVER\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(RLM, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(RLM, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(RLM, WARN, "Regulatory rule is updated by IE.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(RLM, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(RLM, INFO, "%s()\n", __func__);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(RLM, WARN, "wlan is halt, skip reg callback\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(RLM, ERROR, "pWiphy = NULL!\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(RLM, ERROR, "Use base wiphy to update (p=%p)\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:				DBGLOG(RLM, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:				DBGLOG(RLM, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(RLM, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(RLM, INFO, "Set by user to NEW country code\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(RLM, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(RLM, ERROR, "---> WARNING.\n ");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:				DBGLOG(RLM, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(RLM, INFO, "g_mtk_regd_control.alpha2 = 0x%x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(RLM, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(RLM, ERROR, "prGlueInfo is NULL!\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(RLM, ERROR, "prAdapter is NULL!\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "mtk_cfg80211_suspend\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "mtk_cfg80211_resume\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(SCN, INFO, "pending %d sched scan results\n", i);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "ndev is NULL\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, LOUD,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(INIT, ERROR, "There is no free gprP2pRoleWdev.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(INIT, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "STA doesn't support this function\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "STA doesn't support this function\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "STA doesn't support this function\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, WARN, "P2P is not supported\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, WARN, "P2P is not supported\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(P2P, INFO, "ndev=%p, new type=%d\n", ndev, type);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "ndev is NULL\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, INFO, "ndev type is not changed (%d)\n", type);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(INIT, ERROR, "prP2pInfo is NULL\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(INIT, ERROR, "resource invalid, u4DeviceNum=%d\n"
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(INIT, ERROR, "mtk_init_ap_role FAILED\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:			DBGLOG(INIT, ERROR, "mtk_uninit_ap_role FAILED\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, WARN, "STA don't support this function\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "P2P/AP don't support this function\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "P2P/AP don't support this function\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "P2P/AP don't support this function\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "P2P/AP don't support this function\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "P2P/AP don't support this function\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "P2P/AP don't support this function\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "P2P/AP don't support this function\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "P2P/AP don't support this function\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "P2P/AP don't support this function\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "P2P/AP don't support this function\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "STA doesn't support this function\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "STA doesn't support this function\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "STA doesn't support this function\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "STA doesn't support this function\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "STA doesn't support this function\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "STA doesn't support this function\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "STA doesn't support this function\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(REQ, WARN, "STA doesn't support this function\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG_LIMITED(REQ, TRACE, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG_LIMITED(REQ, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(REQ, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:		DBGLOG(OID, INFO, "FT: update Ft IE failed\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:	DBGLOG(OID, INFO, "FT: 802.11R is not enabled\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:				DBGLOG(AIS, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_cfg80211.c:				DBGLOG(AIS, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, TRACE, "data_len=%d, iftype=%d\n", data_len, wdev->iftype);
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, TRACE, "Get channel list for band: %d\n", band);
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:			DBGLOG(REQ, TRACE, "skip channels[%d]=%d, country=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:			DBGLOG(REQ, TRACE, "channels[%d] = %d\n", j,
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, INFO, "Get channel list for band: %d, num_channels=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "Allocate skb failed\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, INFO, "Set country code: %c%c\n", country[0],
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "Set country code error: %x\n", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "Allocate skb failed\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, INFO, "Get the number of blacklist=%d data_len=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:				DBGLOG(REQ, ERROR, "No found blacklist BSS="
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:				DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:				DBGLOG(REQ, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, INFO, "FWK set FWRoamingEnable = %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, TRACE, "vendor command\r\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "%s allocate skb failed:%x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "%s kalMemAlloc pRadioStat failed\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, TRACE, "%s allocate skb failed:%x\n", __func__,
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, INFO, "%s()\n", __func__);
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, INFO, "Vendor Set Band value=%d\r\n", setBand);
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, TRACE, "vendor command: data_len=%d\r\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "%s nla_parse_nested failed\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, TRACE, "vendor command: data_len=%d\r\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "%s nla_parse_nested failed\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, TRACE, "prPkt->pIpPkt=0x%02x%02x%02x%02x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, TRACE, "%02x%02x%02x%02x, %02x%02x%02x%02x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, TRACE, "%02x%02x%02x%02x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, TRACE, "dstMAC=%02x:%02x:%02x:%02x:%02x:%02x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, TRACE, "vendor command: data_len=%d\r\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, INFO, "enable=%d, index=%d\r\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:	if (attrlist->nla_type == LOGGER_ATTRIBUTE_DRIVER_VER) {
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, TRACE, "Get driver version len: %d\n", u2Len);
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:	} else if (attrlist->nla_type == LOGGER_ATTRIBUTE_FW_VER) {
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:			DBGLOG(REQ, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, TRACE, "Get version(%d)=[%s]\n", u2CopySize, aucVersionBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "Allocate skb failed\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, TRACE, "vendor command rssi=%d\r\n", rssi);
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "%s allocate skb failed\n", __func__);
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "Allocate skb failed\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "nla_put_nohdr failed\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, TRACE, "supported feature set=0x%llx\n", u8FeatureSet);
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "invalid scenario index: %u\n", u4Scenario);
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "Allocate skb failed\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "nla_put_nohdr failed\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, INFO, "rStatus=0x%x\n", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "Invalid ATTR.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, INFO, "type: %d\n", type);
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "Only support p2p gc/go type.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "get preferred freq list failed.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(P2P, INFO, "num. of preferred freq list = %d\n", num_freq_list);
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(P2P, INFO, "dump preferred freq list[%d] = %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "Allocate skb failed.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "put iface into skb failed.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "put freq list into skb failed.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "Invalid net device private\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "wlanoidGetLinkQualityInfo error\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:	DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "allocate skb failed\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "nla_put_nohdr failed: len=%u, ptr=%p\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "input data null.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "get glue structure fail.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "get role index fail.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "parse acs attr fail.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "attr hw_mode failed.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:				DBGLOG(REQ, ERROR, "allocate ch_list fail.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:				DBGLOG(REQ, ERROR, "allocate ch_list fail.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "channel list count can NOT be 0\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "allocate msg acs req. fail.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, ERROR, "unsupport width: %d.\n", ch_width);
connectivity/common/wlan/core/gen4m/os/linux/gl_vendor.c:		DBGLOG(REQ, INFO, "Dump feature flags[%d]=0x%x.\n", i,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, INFO, "QA_AGENT copy_to_user() fail in %s\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT ToDoFunction\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_OpenAdapter\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_CloseAdapter\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_StartTx\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_StartTx TxCount = %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_StartTx TxLength = %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_StartTxExt\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_StartTxContiTx\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_StartTxCarrier\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_StartRx\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_StopTx\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_StopContiTx\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_StopTxCarrier\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_StopRx\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_SetTxPath\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_SetRxPath\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_SetRxPath Value : %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_SetTxIPG u4Aifs : %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_SetTxPower0\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HAQ_SetTxPower1\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_SetOnOff\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_AntennaSel\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_SetChannel\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_SetPreamble Mode = %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_SetRate\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_SetNss\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_SetSystemBW\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_SetSystemBW BW = %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_SetAutoResponder\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_SetTssiOnOff\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_LowPower\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, ERROR, "prGlueInfo or prAdapter is NULL\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, ERROR, "prChipInfo is NULL\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "HQA_GetAntSwapCapability [%d]\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "Band = %d, Ant = %d\n", u4Band, u4Ant);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_ResetTxRxCounter\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_GetStatistics\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_GetRxOKData\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_GetRxOKOther\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_GetRxAllPktCount\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_GetTxTransmitted\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_GetHwCounter\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_CalibrationOperation\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "u4Item : 0x%08x, u4Band_idx : %u\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "rRfATInfo.u4FuncData : 0x%08x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "u4band_idx : %d, u4FAGC_Path : %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "Offset = 0x%08x\n", u4Offset);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, INFO, "Address = 0x%08x, Result = 0x%08x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, " Offset = 0x%08x, Value = 0x%08x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "Offset = 0x%08x, Len = 0x%08x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, " WfSel  = %u, Offset = 0x%08x, Length = %u\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(INIT, INFO, "QA_AGENT HQA_ReadEEPROM\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(INIT, INFO, "u4Value = %x\n", u4Value);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(INIT, INFO, "QA_AGENT HQA_ReadEEPROM\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(INIT, INFO, "QA_AGENT HQA_WriteEEPROM\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(INIT, ERROR, "u4Index [%d] overrun\n", u4Index);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(INIT, INFO, "Offset : %u, Len : %u\n", Offset, Len);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(INIT, INFO, "Address : %d\n", rAccessEfuseInfo.u4Address);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(INIT, INFO, "QA_AGENT HQA_ReadBulkEEPROM Efuse Mode\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:			DBGLOG(INIT, INFO, "kal fail\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:			DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:			DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:			DBGLOG(INIT, INFO, "u4Loop=%d  u4Value=%x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(INIT, INFO, "Offset : %x, Len : %u\n", Offset, Len);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:			DBGLOG(INIT, INFO, "u4Loop=%d  u4Value=%x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:			DBGLOG(INIT, INFO, "Direct EEPROM buffer, offset=%x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:			DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:				DBGLOG(INIT, INFO, "Wr,u4Index=%x,Buffer=%x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:				DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:				DBGLOG(INIT, INFO, "Buffer[0] >> 8 & 0xff=%x\n"
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:					DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:				DBGLOG(INIT, INFO, " Loop=%d  aucData=%x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:			DBGLOG(INIT, INFO, "Going for e-Fuse\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_CheckEfuseMode\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(INIT, INFO, "QA_AGENT HQA_GetFreeEfuseBlock\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_GetEfuseBlockNr\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_WriteEFuseFromBuffer\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "u4Channel : %u, u4Band : %u, u4Ch_Band : %u\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "Type : %u, Enable : %u, Band : %u\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, WARN, "Type [%d] not support\n", Type);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, ERROR, "GlueInfo or prAdpater is NULL\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, ERROR, "Connac chip doesn't support\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "BandIdx = 0x%08x\n", i4BandIdx);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "Control = 0x%08x\n", i4Control);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "AntIndex = 0x%08x\n", i4AntIndex);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "ToneType = 0x%08x\n", i4ToneType);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "ToneFreq = 0x%08x\n", i4ToneFreq);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "DcOffsetI = 0x%08x\n", i4DcOffsetI);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "DcOffsetQ = 0x%08x\n", i4DcOffsetQ);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "Band = 0x%08x\n", i4Band);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "RF_Power = 0x%08x\n", i4RF_Power);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "Digi_Power = 0x%08x\n", i4Digi_Power);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:			DBGLOG(RFTEST, INFO, "QA_AGENT HT/VHT rate : %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_GetTXInfo\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_GetCfgOnOff\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_ReadTempReferenceValue\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_SetSideBandOption\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_GetFWInfo\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_StartContinousTx\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_SetSTBC\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_SetDPD\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_GetRxStatisticsAll\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_StartContiTxTone\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_StopContiTxTone\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_CalibrationTestMode\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_eFusePhysicalWrite\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_eFusePhysicalRead\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_eFuseLogicalRead\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_eFuseLogicalWrite\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_GetRxSNR\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:			DBGLOG(RFTEST, INFO, "u2Addr = %x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:			DBGLOG(RFTEST, INFO, "ucValue = %x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_FFT\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_SetTxTonePower\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:			DBGLOG(RFTEST, INFO, "QA_AGENT HT/VHT rate : %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, INFO, "mps_setting Case %d (Power : %d)\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_MPSStart\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_MPSStop\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_MPSSetNss u4Len : %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_SetAIFS SlotTime = %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_SetAIFS SifsTime = %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_CheckEfuseModeType\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_CheckEfuseNativeModeType\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_RDDStartExt\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "[RDD DUMP START]\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_RDDStopExt\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "[RDD DUMP END]\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "Band : %d, OwnMacIdx : %d\n", Band, OwnMacIdx);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "addr1:%02x:%02x:%02x:%02x:%02x:%02x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "prReCalInfo->u4Count = [%d]\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:			DBGLOG(RFTEST, INFO, "CalAddr[%d] = [0x%08x]\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_TxBfProfileTagInValid\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_TxBfProfileTagBfType\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_TxBfProfileTagBw\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_TxBfProfileTagSuMu\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_TxBfProfileTagMatrix\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_TxBfProfileTagSnr\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_TxBfProfileTagSmtAnt\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_TxBfProfileTagSeIdx\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_TxBfProfileTagWrite\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_TxBfProfileTagRead\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_StaRecCmmUpdate\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_StaRecBfUpdate\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_BFProfileDataRead\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_BFProfileDataWrite\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_BFSounding\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_TXBFSoundingStop\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_TxBfTxApply\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_ManualAssoc\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_MUGetInitMCS\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_MUCalInitMCS\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_MUCalLQ\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_MUGetLQ\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_MUSetSNROffset\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_MUSetZeroNss\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_MUSetSpeedUpLQ\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_MUSetMUTable\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_MUSetGroup\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_MUGetQD\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_MUSetEnable\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_MUSetGID_UP\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_MUTriggerTx\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, ERROR, "prInBuf = %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "u4Control = %d\n", u4Control);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:			DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, WARN, "Platform doesn't support WMT, no EMI address\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_CapWiFiSpectrum Wait!!!!!!!!!!!!\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "prICapInfo->au4ICapDumpIndex[%d][%c] = %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "u4MaxTxCount = %d\n", u4MaxTxCount);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, INFO, "Wrong Setting for POR Cal\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT hqa_start_tx_ext pwr : %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT hqa_start_tx_ext ibf : %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT hqa_start_tx_ext ebf : %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT hqa_start_tx_ext gi : %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT hqa_start_tx_ext nss : %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, INFO, "QA_AGENT HT/VHT rate : %d\n", u4Rate);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_iBFInit\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_iBFSetValue\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_iBFGetStatus\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_iBFChanProfUpdate\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_iBFProfileRead\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_IRRSetADC ext_id : %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_IRRSetADC u4BW : %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_IRRSetADC u4Sx : %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_IRRSetADC u4Band : %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_IRRSetTTG ext_id : %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT HQA_IRRSetTTG u4Band : %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:	DBGLOG(RFTEST, INFO, "QA_AGENT hqa_ext_cmds index : %d\n", u4Idx);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, INFO, "cmd idx %d is not supported\n", u4Idx);
connectivity/common/wlan/core/gen4m/os/linux/gl_qa_agent.c:		DBGLOG(RFTEST, INFO, "QA_AGENT ATEMagicNum Error!!!\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	ATE_LOG_RXV = 1,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	ATE_LOG_RDD,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	ATE_LOG_RE_CAL,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	ATE_LOG_TYPE_NUM,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	ATE_LOG_RXINFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	ATE_LOG_TXDUMP,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	ATE_LOG_TEST,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	ATE_LOG_OFF,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	ATE_LOG_ON,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	ATE_LOG_DUMP,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	ATE_LOG_CTRL_NUM,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK SetATE = %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK SetATE = %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK SetATE = %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK SetATE = %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK SetATE = %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK SetATE = %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK SetATE = %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK SetATE = %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK SetChannel=%d, Freq=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK SetPreamble=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK SetSystemBW=%d\n", u4BW);
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK SetTxLength=%d\n", u4TxLength);
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK SetTxCount=%d\n", u4TxCount);
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK SetTxIPG=%d\n", u4TxIPG);
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "SetTxPower0=0x%02x\n", u4TxPower0);
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:		DBGLOG(RFTEST, INFO, "Negative Power =0x%02x\n", u4TxPower0);
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK SetPerPacketBW=%d\n", u4BW);
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK PrimarySetting=%d\n", u4PrimaryCh);
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK SetTxGi=%d\n", u4SetTxGi);
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK u4Tx_path=%d\n", u4Tx_path);
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK rule=%d, len =0x%x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK u4Stbc=%d\n", u4Stbc);
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK u4Nss=%d\n", u4VhtNss);
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK SetRate=0x%08x\n", u4Rate);
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK SetEncodeMode=%d\n", u4Ldpc);
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK SetiBFEnable=%d\n", u4iBF);
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK SeteBFEnable=%d\n", u4eBF);
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK MT_ATELogOnOff\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	case ATE_LOG_RXV:
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:		       "QA_ATE_HOOK MT_ATELogOnOff : ATE_LOG_RXV\n\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	case ATE_LOG_RDD:
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:		       "QA_ATE_HOOK MT_ATELogOnOff : ATE_LOG_RDD\n\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	case ATE_LOG_RE_CAL:
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:		       "QA_ATE_HOOK MT_ATELogOnOff : ATE_LOG_RE_CAL\n\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	case ATE_LOG_RXINFO:
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:		       "QA_ATE_HOOK MT_ATELogOnOff : ATE_LOG_RXINFO\n\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	case ATE_LOG_TXDUMP:
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:		       "QA_ATE_HOOK MT_ATELogOnOff : ATE_LOG_TXDUMP\n\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	case ATE_LOG_TEST:
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:		       "QA_ATE_HOOK MT_ATELogOnOff : ATE_LOG_TEST\n\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	if ((u4On_off == ATE_LOG_DUMP) && (u4Type == ATE_LOG_RXV)) {
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:			DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:			DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:		TOOL_PRINTLOG(RFTEST, ERROR, "[LOG DUMP START]\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:					TOOL_PRINTLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:				TOOL_PRINTLOG(RFTEST, ERROR, "[RXVD%d]%08x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:					TOOL_PRINTLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:		TOOL_PRINTLOG(RFTEST, ERROR, "[LOG DUMP END]\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:		DBGLOG(RFTEST, INFO, "Get RX Vector Total count = %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:		DBGLOG(RFTEST, ERROR, "Get RX Vector Total Size Error!!\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:			DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK MT_ATEResetTXRXCounter\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK MT_ATESetDBDCBandIndex\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK MT_ATESetBand\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK MT_ATESetTxToneType\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK MT_ATESetTxToneBW\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK MT_ATESetTxToneDCOffset\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK MT_ATESetDBDCTxTonePower\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK MT_ATEDBDCTxTone\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK MT_ATESetMacHeader\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK MT_ATE_IRRSetADC\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK MT_ATE_IRRSetRxGain\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK MT_ATE_IRRSetTTG\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK MT_ATE_IRRSetTrunOnTTG\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK MT_ATE_TMRSetting\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK MT_ATEMPSSetSeqData\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK MT_ATEMPSSetPayloadLength\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK MT_ATEMPSSetPacketCount\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK MT_ATEMPSSetPowerGain\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK MT_ATEMPSSetNss\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK MT_ATEMPSSetPerpacketBW\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK SetATE = %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO, "QA_ATE_HOOK SetATE = %s\n", prInBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(INIT, INFO, "QA_AGENT HQA_WriteBulkEEPROM  Read\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:		DBGLOG(INIT, INFO, "u4Index [%d] overrun\n", u4Index);
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:		DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:		DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(INIT, INFO, "Set Tx Target Power= %x dbm\n", ucTxTargetPower);
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:		DBGLOG(RFTEST, ERROR, "prGlueInfo is NULL\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(INIT, INFO, "QA_AGENT Set RDD Report - Band: %d\n", ucDbdcIdx);
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(INIT, INFO, "QA_AGENT Set Radar Detect Mode: %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR, "ucWlanId = 0x%08x\n", ucWlanId);
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR, "ucPfmuIdx = 0x%08x\n", profileIdx);
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR, "TxBfSounding : ucSuMu = 0x%08x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR, "TxBfSounding : ucNumSta = 0x%08x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR, "TxBfSounding : ucWLan0 = 0x%08x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR, "TxBfSounding : ucWLan1 = 0x%08x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR, "TxBfSounding : ucWLan2 = 0x%08x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR, "TxBfSounding : ucWLan3 = 0x%08x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR, "TxBfSoundingStop\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR, "ucWlanId = 0x%08x\n", ucWlanId);
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_hook_api.c:	DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR, "g_prGlueInfo_proc is null\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:			DBGLOG(INIT, ERROR, "wrong char[%d] 0x%x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR, "g_prGlueInfo_proc is null\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR, "g_prGlueInfo_proc is null\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR, "g_prGlueInfo_proc is null\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR, "g_prGlueInfo_proc is null\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR, "g_prGlueInfo_proc is null\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, INFO, "failed to read roam params\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR, "g_prGlueInfo_proc is null\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, INFO, "failed to set roam params: %s\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR, "g_prGlueInfo_proc is null\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, INFO, "failed set country code: %s\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, WARN, "copy_to_user error\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR, "g_prGlueInfo_proc is null\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, WARN, "copy_from_user error\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, INFO, "u4CoreNum:%d, u4CoreFreq:%d\n", u4CoreNum,
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:	DBGLOG(INIT, WARN, "parameter format should be ForceEnable:0 or 1\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, INFO, "error to sprintf time\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, INFO, "error to sprintf %s\n", pucFwt);
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:			DBGLOG(INIT, ERROR, "prAisSpecBssInfo is NULL\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:			DBGLOG(INIT, ERROR, "prAisSpecBssInfo is NULL\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:			DBGLOG(INIT, ERROR, "prBtm is NULL\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:			DBGLOG(INIT, ERROR, "prStaRec is NULL\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:			DBGLOG(INIT, ERROR, "prMsg is NULL\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR, "g_prGlueInfo_proc is null\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:			DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:			DBGLOG(INIT, WARN, "copy_to_user error\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, INFO, "exit WR:%lld, RD:%lld\n", i8WrStatusPos,
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:			DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:			DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:	DBGLOG(INIT, TRACE, "Read %u bytes\n", u4CopySize);
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, WARN, "copy_to_user error\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR, "g_prGlueInfo_proc is null\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, WARN, "copy_from_user error\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR, "Unable to create /proc entry %s/n",
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR, "Unable to create /proc entry %s/n",
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:	DBGLOG(INIT, TRACE, "[%s]\n", __func__);
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR, "Unable to create /proc entry mcr\n\r");
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR, "Unable to create /proc entry SetCAM\n\r");
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR, "Unable to create /proc entry country\n\r");
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR, "copy to user failed\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR, "g_prGlueInfo_proc is null\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR, "copy from user failed\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_proc.c:		DBGLOG(INIT, ERROR, "Unable to create /proc entry cfg\n\r");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:	DBGLOG(INIT, INFO, "WCIR_CHIP_ID = 0x%x, chip_id = 0x%x\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			DBGLOG(HAL, ERROR, "Chip No Ack\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			DBGLOG(HAL, ERROR, "CONN_HIF_ON_DBGCR01[0x%x]\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			       LP_OWN_BACK_FAILED_LOG_SKIP_MS);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			      MSEC_TO_SYSTIME(LP_OWN_BACK_FAILED_LOG_SKIP_MS))
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		       LP_OWN_BACK_FAILED_LOG_SKIP_MS);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:	DBGLOG(INIT, TRACE, "DRIVER OWN Start\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:	DBGLOG_LIMITED(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		DBGLOG(INIT, STATE, "Skip FW OWN due to pending INT\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		DBGLOG_LIMITED(INIT, INFO, "FW OWN:%u\n", fgResult);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:	DBGLOG(HAL, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			DBGLOG(HAL, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			DBGLOG(HAL, WARN,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:	DBGLOG(HAL, INFO, "Msdu Token Init: Tot[%u] Used[%u]\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:	DBGLOG(HAL, INFO, "Msdu Token Uninit: Tot[%u] Used[%u]\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		DBGLOG(HAL, INFO, "No more free MSDU token, Used[%u]\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:	DBGLOG_LIMITED(HAL, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		DBGLOG(HAL, INFO, "MSDU token is full, Used[%u]\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		DBGLOG(HAL, ERROR, "Return unuse token[%u]\n", u4TokenNum);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			DBGLOG(HAL, ERROR, "Error MSDU report[%u]\n", u4Token);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			DBGLOG_MEM32(HAL, ERROR, prMsduReport, 64);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		DBGLOG_LIMITED(HAL, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		DBGLOG_LIMITED(HAL, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		DBGLOG(HAL, ERROR, "Get address error!\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			DBGLOG(RX, WARN, "No More RFB for P[%u]\n", u4Port);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		DBGLOG_LIMITED(RX, LOUD, "ucPacketType = %u, ucSecMode = %u\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		DBGLOG(HAL, ERROR, "TxDescRing[%d] allocation failed\n", u4Num);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:	DBGLOG(HAL, TRACE, "TxDescRing[%p]: total %lu bytes allocated\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:	DBGLOG(HAL, TRACE, "TxRing[%d]: total %d entry allocated\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		DBGLOG(HAL, ERROR, "\n\n\nRxDescRing allocation failed!!\n\n\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:	DBGLOG(HAL, TRACE, "RxDescRing[%p]: total %lu bytes allocated\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:	DBGLOG(HAL, TRACE, "Rx[%d] Ring: total %d entry allocated\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			DBGLOG(HAL, ERROR, "AllocTxRing[%d] fail\n", u4Num);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		DBGLOG(HAL, ERROR, "AllocRxRing[0] fail\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		DBGLOG(HAL, ERROR, "AllocRxRing[1] fail\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			DBGLOG(HAL, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:	DBGLOG(HAL, INFO, "==>  DMABusy, GloCfg=0x%x\n", GloCfg.word);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		DBGLOG(HAL, TRACE, "-->TX_RING_%d[0x%x]: Base=0x%x, Cnt=%d!\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		DBGLOG(HAL, TRACE, "-->RX_RING_%d[0x%x]: Base=0x%x, Cnt=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:	DBGLOG_LIMITED(HAL, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		DBGLOG(HAL, ERROR, "Error TxCpuIdx[%u]\n", prTxRing->TxCpuIdx);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:	DBGLOG(HAL, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:	DBGLOG_MEM32(HAL, TRACE, prCmdInfo->pucTxd, prCmdInfo->u4TxdLen);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		DBGLOG(HAL, ERROR, "Error TxCpuIdx[%u]\n", prTxRing->TxCpuIdx);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:	DBGLOG_LIMITED(HAL, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:	DBGLOG(HAL, LOUD, "Tx Data: Msdu[0x%p], TokFree[%u] TxDone[%u]\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		DBGLOG(HAL, ERROR, "Write MSDU acquire token fail\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		DBGLOG(HAL, WARN,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			DBGLOG(HAL, ERROR, "Write AMSDU acquire token fail\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:	DBGLOG(HAL, LOUD, "Amsdu num:%d tx byte: %d\n", u4Num, u2Size);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		DBGLOG(HAL, ERROR, "prAdapter or prGlueInfo is NULL\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:	DBGLOG(HAL, ERROR, "SER timer Timeout\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:	DBGLOG(HAL, INFO, "Set Driver Ser\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:	DBGLOG(HAL, INFO, "Start SER timer\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			DBGLOG(HAL, ERROR, "SER CurStat=%u Event=%x\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			DBGLOG(HAL, INFO, "SER(L) Host re-initialize PDMA\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			DBGLOG(HAL, INFO, "SER(M) Host enable PDMA\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			DBGLOG(HAL, ERROR, "SER CurStat=%u Event=%x\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			DBGLOG(HAL, ERROR, "SER CurStat=%u Event=%x\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			DBGLOG(HAL, INFO, "SER(T) Host re-initialize BCN\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			DBGLOG(HAL, ERROR, "SER re-entry CurStat=%u Event=%x\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:			DBGLOG(HAL, ERROR, "SER CurStat=%u Event=%x\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:		DBGLOG(HAL, ERROR, "SER CurStat=%u Event=%x!!!\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/hal_pdma.c:	DBGLOG(INIT, INFO, "Power off Wi-Fi!\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/kal_pdma.c:		DBGLOG(HAL, ERROR, "Not exist CR read[0x%08x]\n", u4Register);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/kal_pdma.c:			DBGLOG(HAL, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/kal_pdma.c:				DBGLOG(HAL, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/kal_pdma.c:		DBGLOG(HAL, ERROR, "Not exist CR read[0x%08x]\n", u4Register);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/kal_pdma.c:			DBGLOG(HAL, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/kal_pdma.c:		DBGLOG(HAL, ERROR, "Not exist CR write[0x%08x] value[0x%08x]\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/kal_pdma.c:			DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/kal_pdma.c:		DBGLOG(HAL, WARN,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/kal_pdma.c:		DBGLOG(HAL, WARN,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/kal_pdma.c:		DBGLOG(HAL, ERROR, "Error TxCpuIdx[%u]\n", prTxRing->TxCpuIdx);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/kal_pdma.c:		DBGLOG(HAL, ERROR, "kmalloc() TX_CMD_REQ error\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/kal_pdma.c:		DBGLOG(HAL, WARN,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/kal_pdma.c:		DBGLOG(RX, LOUD, "u4TcpUdpIpCksStatus[0x%02x]\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:			DBGLOG(HAL, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "Dump fail u2Port[%u] u4Idx[%u]\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	LOGBUF(pucBuf, u4Max, u4Len, "\n------<Dump HIF Status>------\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		LOGBUF(pucBuf, u4Max, u4Len,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		LOGBUF(pucBuf, u4Max, u4Len,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	LOGBUF(pucBuf, u4Max, u4Len, "MSDU Tok: Free[%u] Used[%u]\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	LOGBUF(pucBuf, u4Max, u4Len, "Pending QLen Normal[%u] Sec[%u]\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	LOGBUF(pucBuf, u4Max, u4Len, "---------------------------------\n\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "TokenId[%u] timeout[sec:%ld, usec:%ld]\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:			DBGLOG_MEM32(HAL, INFO, prToken->prPacket, 64);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Tx Dese Num[%u]\n", u4Num);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG_MEM32(HAL, INFO, pTxD, sizeof(struct TXD_STRUCT));
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Tx Contents\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\n\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Rx Dese Num[%u]\n", u4Num);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG_MEM32(HAL, INFO, pRxD, sizeof(struct RXD_STRUCT));
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Rx Contents\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\n\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "WPDMA HOST_INT:0x%08x = 0x%08x\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "WPDMA GLOBAL_CFG:0x%08x = 0x%08x\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "WPDMA CONN_HIF_RST:0x%08x = 0x%08x\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "WPDMA MCU2HOST_SW_INT_STA:0x%08x = 0x%08x\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Tx Ring configuration\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "%10s%12s%18s%10s%10s%10s\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "%s\n", buf);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Rx Ring configuration\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "%10s%12s%18s%10s%10s%10s\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "%s\n", buf);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "%s\n", buf);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "Dump PDMA Tx Ring[%u]\n", i);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "Dump PDMA Rx Ring[%u]\n", i);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "PDMA busy status:0x%08x = 0x%08x\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "CONN_HIF busy status:0x%08x = 0x%08x\n\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "PDMA core dbg");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "Set:0x%02x, result = 0x%08x\n", i, u4Value);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Set:0x%04x, pdma axi dbg:0x%08x",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Set:0x%04x, gals axi dbg:0x%08x",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Set:0x%04x, mcu axi dbg:0x%08x",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "rbus dbg");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "Set[19:16]:0x%02x, result = 0x%08x\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "PSE Configuration Info:\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\tGC(0x82068000): 0x%08x\n", value);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\tINT_STS(0x82068024): 0x%08x\n", value);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\tINT_ERR_STS(0x82068028): 0x%08x\n", value);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\tPacket Buffer Control(0x82068014): 0x%08x\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\t\tAvailable Total Page=%d pages\n", pg_num);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "PSE Page Flow Control:\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "PSE Queue Empty Status:\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Nonempty Q info:\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:				DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:				DBGLOG(HAL, INFO, "\tHIF Q0: ");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:				DBGLOG(HAL, INFO, "\tHIF  Q1: ");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:				DBGLOG(HAL, INFO, "\tLMAC TX Q: ");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:				DBGLOG(HAL, INFO, "\tRLS Q: ");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:			DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "PSE_PEEK_CR_%u[0x%08x/0x%08x]\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "PSE_ENQ_%u[0x%08x/0x%08x]\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "PSE_DEQ_%u[0x%08x/0x%08x]\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "PLE Configuration Info:\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\tGC(0x82060000): 0x%08x\n", value);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\tINT_STS(0x82060024): 0x%08x\n", value);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\tINT_ERR_STS(0x82060028): 0x%08x\n", value);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\tQUEUE_CMD_ERR_STS(0x82060550): 0x%08x\n", value);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "PLE Page Flow Control:\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:				DBGLOG(HAL, INFO, "\tNonempty AC%d Q of STA#:",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:					DBGLOG(HAL, INFO, "%d ",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Nonempty Q info:\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:				DBGLOG(HAL, INFO, "\t%s: ",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:			DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:				DBGLOG(HAL, INFO, "\tSTA%d AC%d: ",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:				DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:				DBGLOG(HAL, INFO, " ctrl = %s",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "PLE_PEEK_CR_%u[0x%08x/0x%08x]\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Host CSR Configuration Info:\n\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Get 0x87654321: 0x%08x = 0x%08x\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Driver own info: 0x%08x = 0x%08x\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "RGU Info: 0x%08x = 0x%08x\n", HOST_CSR_RGU, u4Value);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "HIF_BUSY / CIRQ / WFSYS_ON info: 0x%08x = 0x%08x\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Pinmux/mon_flag info: 0x%08x = 0x%08x\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Bit[5] mcu_pwr_stat: 0x%08x = 0x%08x\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Bit[15] fw_own_stat: 0x%08x = 0x%08x\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "WF Mailbox[0]: 0x%08x = 0x%08x\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "MCU Mailbox[1]: 0x%08x = 0x%08x\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "BT Mailbox[2]: 0x%08x = 0x%08x\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "GPS Mailbox[3]: 0x%08x = 0x%08x\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Conn_cfg_on info: 0x%08x = 0x%08x\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Bit[17]/[16], Get HCLK info: 0x%08x = 0x%08x\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Dma scheduler info:\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "DMASHDL Ctrl Signal(0x5000A018): 0x%08x\n", value);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\tple_txd_gt_max_size_flag_clr(BIT0) = %d\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\thif_ask_sub_ena(BIT16) = %d\n", hif_ask_sub_ena);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\tple_sub_ena(BIT17) = %d\n", ple_sub_ena);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\tple_add_int_refill_ena(BIT29) = %d\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\tpdma_add_int_refill_ena(BIT30) = %d\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\tpktin_int_refill(BIT31)_ena = %d\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "DMASHDL ERR FLAG CTRL(0x5000A09c): 0x%08x\n", value);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "DMASHDL Status_RD(0x5000A100): 0x%08x\n", value);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "Group %d info:", groupidx);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:			DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:			DBGLOG(HAL, INFO, ", mismatch!");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\tMapping Qidx: 0x%x",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\nCounter Check:\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, ", mismatch!");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, ", mismatch(reserved pages in PLE)");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\tThe used pages of group15=0x%03x", pse_src_cnt);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, ", mismatch!");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, ", mismatch!");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "DMASHDL: no counter mismatch\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "0x82072644: 0x%08x\n", value);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "0x82072654: 0x%08x\n", value);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Print 0x820F3190 5*20 times\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:			DBGLOG(HAL, INFO, "0x820F3190: 0x%08x\n", value);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "slot idle: 0x820FD020: 0x%08x\n", value);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "queue empty: 0x82060220: 0x%08x\n", value);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "TXV count: 0x820F4124 = %08x\n", value);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "0x%08x: 0x%08x\n", j, value);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "0x%08x: 0x%08x\n", j, value);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Dump CR: 0x820F409C = %08x\n", value);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Dump CR: 0x820F409C = %08x\n", value);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Dump CR: 0x820F3080	= %08x\n", value);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Dump ARB CR: 820F3000~820F33FF\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "0x%08x: 0x%08x\n", index, value);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Dump AGG CR: 820F000~820F21FF\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "0x%08x: 0x%08x\n", index, value);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Dump TRB\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "write flag = 0x%08x, 0x820f0024: 0x%08x\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Dump ARB\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "0x802f3190: 0x%08x\n", value);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "0x820f0024: 0x%08x\n", value);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "0x820f20d0: 0x%08x\n", value);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "0x820f20d4: 0x%08x\n", value);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:			DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "write flag = 0x%08x, 0x820f0024: 0x%08x\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "write flag = 0x%08x, 0x820f0024: 0x%08x\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Dump AGG\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "write flag = 0x%08x, 0x820f0024: 0x%08x\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Dump DMA\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "write flag = 0x%08x, 0x820f0024: 0x%08x\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Dump TMAC\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "write flag = 0x%08x, 0x820f0024: 0x%08x\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Dump fid=%d PSE payload\n", fid);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "Dump fid=%d PLE TXD\n", fid);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "TMAC_TXD Fields:\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\tTMAC_TXD_0:\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\t\tPortID=%d(%s)\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\t\tQueID=0x%x(%s %s)\n", txd_0->q_idx,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\t\tTxByteCnt=%d\n", txd_0->TxByteCount);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\t\tIpChkSumOffload=%d\n", txd_0->IpChkSumOffload);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\t\tUdpTcpChkSumOffload=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\t\tEthTypeOffset=%d\n", txd_0->EthTypeOffset);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\tTMAC_TXD_1:\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\t\twlan_idx=%d\n", txd_1->wlan_idx);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\t\tHdrFmt=%d(%s)\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\t\tHdrInfo=0x%x\n", txd_1->hdr_info);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\t\tRsvd=0x%x\n", txd_1->hdr_info);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\t\tHeader Len=%d(WORD)\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\t\tEOSP=%d, AMS=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\t\tTxDFormatType=%d(%s format)\n", txd_1->ft,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\t\ttxd_len=%d page(%d DW)\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\t\tUNxV=%d\n", txd_1->UNxV);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\t\tamsdu=%d\n", txd_1->amsdu);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\t\tTID=%d\n", txd_1->tid);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\t\tpkt_ft=%d(%s)\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO, "\t\town_mac=%d\n", txd_1->OwnMacAddr);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\tTMAC_TXD_2:\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\tsub_type=%d\n", txd_2->sub_type);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\tfrm_type=%d\n", txd_2->frm_type);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\tNDP=%d\n", txd_2->ndp);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\tNDPA=%d\n", txd_2->ndpa);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\tSounding=%d\n", txd_2->sounding);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\tRTS=%d\n", txd_2->rts);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\tbc_mc_pkt=%d\n", txd_2->bc_mc_pkt);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\tBIP=%d\n", txd_2->bip);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\tDuration=%d\n", txd_2->duration);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\tHE(HTC Exist)=%d\n", txd_2->htc_vld);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\tFRAG=%d\n", txd_2->frag);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\tReamingLife/MaxTx time=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\tpwr_offset=%d\n", txd_2->pwr_offset);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\tba_disable=%d\n", txd_2->ba_disable);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\ttiming_measure=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\tfix_rate=%d\n", txd_2->fix_rate);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\tTMAC_TXD_3:\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\tNoAck=%d\n", txd_3->no_ack);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\tPF=%d\n", txd_3->protect_frm);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\ttx_cnt=%d\n", txd_3->tx_cnt);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\tremain_tx_cnt=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\tsn=%d\n", txd_3->sn);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\tpn_vld=%d\n", txd_3->pn_vld);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\tsn_vld=%d\n", txd_3->sn_vld);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\tTMAC_TXD_4:\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\tpn_low=0x%x\n", txd_4->pn_low);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\tTMAC_TXD_5:\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\ttx_status_2_host=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\ttx_status_2_mcu=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\ttx_status_fmt=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:			DBGLOG(HAL, INFO, "\t\tpid=%d\n", txd_5->pid);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:			DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\tpwr_mgmt=0x%x\n", txd_5->pwr_mgmt);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:		DBGLOG(HAL, INFO, "\t\tpn_high=0x%x\n", txd_5->pn_high);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:			DBGLOG(HAL, INFO, "\tTMAC_TXD_6:\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:			DBGLOG(HAL, INFO, "\t\tfix_rate_mode=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:			DBGLOG(HAL, INFO, "\t\tGI=%d(%s)\n", txd_6->gi,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:			DBGLOG(HAL, INFO, "\t\tldpc=%d(%s)\n", txd_6->ldpc,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:			DBGLOG(HAL, INFO, "\t\tTxBF=%d\n", txd_6->TxBF);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:			DBGLOG(HAL, INFO, "\t\ttx_rate=0x%x\n", txd_6->tx_rate);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:			DBGLOG(HAL, INFO, "\t\tant_id=%d\n", txd_6->ant_id);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:			DBGLOG(HAL, INFO, "\t\tdyn_bw=%d\n", txd_6->dyn_bw);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:			DBGLOG(HAL, INFO, "\t\tbw=%d\n", txd_6->bw);
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/common/dbg_pdma.c:				DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/pcie/pcie.c:		DBGLOG(HAL, INFO, "No glue info in mtk_pci_interrupt()\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/pcie/pcie.c:		DBGLOG(HAL, INFO, "GLUE_FLAG_HALT skip INT\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/pcie/pcie.c:		DBGLOG(INIT, INFO, "pci_enable_device failed!\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/pcie/pcie.c:	DBGLOG(INIT, INFO, "pci_enable_device done!\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/pcie/pcie.c:		DBGLOG(INIT, INFO, "pfWlanProbe fail!call pfWlanRemove()\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/pcie/pcie.c:	DBGLOG(INIT, INFO, "mtk_pci_probe() done(%d)\n", ret);
connectivity/common/wlan/core/gen4m/os/linux/hif/pcie/pcie.c:	DBGLOG(INIT, INFO, "pfWlanRemove done\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/pcie/pcie.c:	DBGLOG(INIT, INFO, "mtk_pci_remove() done\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/pcie/pcie.c:		DBGLOG(INIT, INFO, "set DMA mask failed!errno=%d\n", ret);
connectivity/common/wlan/core/gen4m/os/linux/hif/pcie/pcie.c:		DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/pcie/pcie.c:	DBGLOG(INIT, INFO, "ioremap for device %s, region 0x%lX @ 0x%lX\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/pcie/pcie.c:		DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/pcie/pcie.c:		DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/pcie/pcie.c:		DBGLOG(INIT, INFO, "%s null pvData\n", __func__);
connectivity/common/wlan/core/gen4m/os/linux/hif/pcie/pcie.c:		DBGLOG(INIT, INFO, "%s no glue info\n", __func__);
connectivity/common/wlan/core/gen4m/os/linux/hif/pcie/pcie.c:		DBGLOG(HAL, ERROR, "can't allocate rx %lu size packet\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/pcie/pcie.c:		DBGLOG(HAL, ERROR, "sk_buff dma mapping error!\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/pcie/pcie.c:		DBGLOG(HAL, ERROR, "KAL_DMA_MAP_SINGLE() error!\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/pcie/pcie.c:		DBGLOG(HAL, ERROR, "KAL_DMA_MAP_SINGLE() error!\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/pcie/pcie.c:		DBGLOG(HAL, ERROR, "KAL_DMA_MAP_SINGLE() error!\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/pcie/pcie.c:		DBGLOG(HAL, ERROR, "KAL_DMA_MAP_SINGLE() error!\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/pcie/pcie.c:		DBGLOG(HAL, ERROR, "KAL_DMA_MAP_SINGLE() error!\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/pcie/pcie.c:		DBGLOG_MEM32(HAL, INFO, prAddr, u4DumpLen);
connectivity/common/wlan/core/gen4m/os/linux/hif/pcie/pcie.c:	DBGLOG_MEM32(HAL, INFO, ((struct sk_buff *)prRxCell->pPacket)->data,
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/include/hif.h:#define CFG_SDIO_INT_LOG_CNT            8
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/include/hif.h:struct SDIO_INT_LOG_T {
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/include/hif.h:	struct SDIO_INT_LOG_T arIntLog[CFG_SDIO_INT_LOG_CNT];
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/include/hif.h:struct SDIO_INT_LOG_T *halGetIntLog(IN struct ADAPTER *prAdapter, IN uint32_t u4Idx);
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		DBGLOG(HAL, ERROR, "sdio probe error: %x driver data not found!\n", prFunc->card_id);
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:	DBGLOG(HAL, STATE, "==>\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		if (wait > LP_OWN_BACK_FAILED_LOG_SKIP_MS) {
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:			DBGLOG(HAL, ERROR, "Timeout !!\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:			DBGLOG(HAL, STATE, "\n Entered SDIO Supsend ");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		DBGLOG(HAL, ERROR, "sdio_set_host_pm_flags err %d\n", ret);
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:	DBGLOG(HAL, STATE, "<==\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:	DBGLOG(HAL, STATE, "==>\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		DBGLOG(HAL, ERROR, "CCCR 0x%X read fail (%d).\n", SDIO_CCCR_IRQ_EXT, ret);
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		DBGLOG(HAL, ERROR, "No Async-IRQ capability.\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		DBGLOG(INIT, INFO, "Async-IRQ enabled already.\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		DBGLOG(HAL, ERROR, "CCCR 0x%X write fail (%d).\n", SDIO_CCCR_IRQ_EXT, ret);
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		DBGLOG(HAL, ERROR, "CCCR 0x%X write fail (%d).\n", SDIO_CCCR_IRQ_EXT, ret);
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		DBGLOG(HAL, ERROR, "glBusInit() Error at enabling SDIO 1-BIT data mode.\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		DBGLOG(HAL, INFO, "glBusInit() SDIO 1-BIT data mode is working.\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		DBGLOG(HAL, ERROR, "Async-IRQ auto-enable fail.\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		DBGLOG(INIT, INFO, "Async-IRQ is enabled.\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:			/* DBGLOG(HAL, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		DBGLOG(HAL, ERROR, "sdio_readl() reports error: %x retry: %u\n", ret, ucRetryCount);
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:				DBGLOG(HAL, ERROR, "ERROR! kalDevRegRead_mac():register address mis-match");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:				DBGLOG(HAL, ERROR, "(u4Register = 0x%08x, reported register = 0x%08x)\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:			DBGLOG(HAL, ERROR, "ERROR: kalDevRegRead_mac(): response timeout\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:			/* DBGLOG(HAL, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		DBGLOG(HAL, ERROR, "sdio_writel() reports error: %x retry: %u\n", ret, ucRetryCount);
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:				DBGLOG(HAL, ERROR, "ERROR! kalDevRegWrite_mac():register address mis-match");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:				DBGLOG(HAL, ERROR, "(u4Register = 0x%08x, reported register = 0x%08x)\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:			DBGLOG(HAL, ERROR, "ERROR: kalDevRegWrite_mac(): response timeout\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		DBGLOG(HAL, ERROR, "\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		DBGLOG(HAL, ERROR, "\nSDIO BUS ERROR: ");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		DBGLOG(HAL, ERROR, "sdio_readsb() reports error: %d\n", ret);
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		DBGLOG(HAL, ERROR, "\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		DBGLOG(HAL, ERROR, "\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		DBGLOG(HAL, ERROR, "\nSDIO BUS ERROR: ");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		DBGLOG(HAL, ERROR, "sdio_writesb() reports error: %d\n", ret);
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		DBGLOG(HAL, ERROR, "\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		DBGLOG(INTR, WARN, "Un-handled HISR %#lx, HISR = %#lx (HIER:0x%lx)\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		DBGLOG(HAL, ERROR, "sdio_writeb() reports error: %x\n", ret);
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/sdio.c:		DBGLOG(HAL, ERROR, "Command TX buffer underflow!\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	DBGLOG(INIT, TRACE, "Chip ID: 0x%lx\n", u4CIR & WCIR_CHIP_ID);
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	DBGLOG(INIT, TRACE, "Revision ID: 0x%lx\n", ((u4CIR & WCIR_REVISION_ID) >> 16));
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:			DBGLOG(RX, ERROR, "Packet length over buffer! Dump Response buffer, length = 0x%x\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:			DBGLOG(RX, ERROR, "RX EVENT: ID[0x%02X] SEQ[%u] LEN[%u]\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:			DBGLOG_MEM8(RX, ERROR, pucRspBuffer, u4MaxRespBufferLen);
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:				DBGLOG(RX, ERROR, "Timeout! %d - %d = %d\n", u4Current, u4Time, (u4Current-u4Time));
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:				DBGLOG(RX, ERROR, "Timeout! %d - %d = %d\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	DBGLOG(INIT, TRACE, "DRIVER OWN\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:					      MSEC_TO_SYSTIME(LP_OWN_BACK_FAILED_LOG_SKIP_MS))) {
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:				DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:				DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:				DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:				       "Skip LP own back failed log for next %ums\n", LP_OWN_BACK_FAILED_LOG_SKIP_MS);
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:						DBGLOG(NIC, WARN,
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:		DBGLOG(INIT, INFO, "halSetDriverOwn:: Check ready_bits(=0x%x)\n", ready_bits);
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:				DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:				DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:					"Skip waiting CR4 ready for next %ums\n", LP_OWN_BACK_FAILED_LOG_SKIP_MS);
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:						DBGLOG(NIC, WARN,
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	DBGLOG(NIC, INFO, "DRIVER OWN %d, %d, DSLP %s, count %d\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:		DBGLOG(INIT, STATE, "FW OWN Skipped due to pending INT\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:		DBGLOG(INIT, INFO, "FW OWN\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	DBGLOG(TX, TRACE, "TxDone result, FFA[%u] AC[%u:%u:%u:%u] CPU[%u]\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	DBGLOG(TX, TRACE, "TxDone Page count, TC[%u:%u:%u:%u:%u]\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:		DBGLOG(TX, ERROR, "Tx Done INT result, FFA[%u] AC[%u:%u:%u:%u] CPU[%u]\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	DBGLOG(TX, LOUD, "TCQ Status Free Page <<PSE>>:Buf[%u:%u, %u:%u, %u:%u, %u:%u, %u:%u]\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:		DBGLOG(TX, LOUD, "TCQ Status Free Page <<PLE>>:Buf[%u:%u, %u:%u, %u:%u, %u:%u, %u:%u]\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:			DBGLOG(TX, ERROR, "Tx Done INT result, FFA[%u] AC[%u:%u:%u:%u] CPU[%u]\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	/* DBGLOG_MEM8(RX, TRACE, (PUINT_8)prSDIOCtrl, sizeof(SDIO_CTRL_T)); */
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	DBGLOG(EMU, TRACE, "MCR_WTSR0: 0x%x, MCR_WTSR1: 0x%x\n", au4TxCount[0], au4TxCount[1]);
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	DBGLOG(RX, TRACE, "pucBuf= 0x%x, prRxStatus= 0x%x\n", pucBuf, prRxStatus);
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:			DBGLOG(RX, ERROR, "Read RX Packet Lentgh Error\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:			DBGLOG(RX, ERROR, "No RX packet\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:		DBGLOG(RX, TRACE, "RX%d: u4PktLen = %d\n", rxNum, u4PktLen);
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:			DBGLOG(RX, ERROR, "Read u4PktLen = %d, prHifRxHdr->u2PacketLen: %d\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:			DBGLOG_MEM8(RX, TRACE, (uint8_t *) prRxStatus,
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:		DBGLOG(RX, TRACE, "ucPacketType = %d\n", prSwRfb->ucPacketType);
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:		DBGLOG(RX, TRACE, "u4TcpUdpIpCksStatus[0x%02x]\n", prSwRfb->u4TcpUdpIpCksStatus);
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:		DBGLOG(RX, TRACE, "Dump RX buffer, length = 0x%x\n", u4ReadBytes);
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:		DBGLOG_MEM8(RX, TRACE, pucBuf, u4ReadBytes);
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:			DBGLOG(RX, TRACE, "No More RFB\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:			DBGLOG(RX, TRACE, "halRxFillRFB failed\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:		DBGLOG(RX, TRACE, "u4HwAppendDW = 0x%x\n", u4HwAppendDW);
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:		DBGLOG(RX, TRACE, "u2PacketLen = 0x%x\n", HAL_RX_STATUS_GET_RX_BYTE_CNT(prRxStatus));
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	/* DBGLOG(RX, TRACE, ("u2RxLength = %d\n", u2RxLength)); */
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:			DBGLOG(RX, ERROR, "Read RX Packet Lentgh Error\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:		/* DBGLOG(RX, TRACE, ("u4PktLen = %d\n", u4PktLen)); */
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:		/* DBGLOG(RX, TRACE, ("ucPacketType = %d\n", prSwRfb->ucPacketType)); */
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:			DBGLOG(RX, ERROR, "Packet Length = %lu\n", u4PktLen);
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:			DBGLOG(RX, TRACE, "Read RX Packet Lentgh Error (%lu)\n", u4PktLen);
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:		DBGLOG(RX, TRACE, "u4TcpUdpIpCksStatus[0x%02x]\n", prSwRfb->u4TcpUdpIpCksStatus);
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	DBGLOG_MEM8(RX, TRACE, pucBuf, ALIGN_4(u2RxLength + HIF_RX_HW_APPENDED_LEN));
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:				DBGLOG(RX, TRACE, "No More RFB\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:				DBGLOG(RX, TRACE, "nicRxEnhanceRxReadBuffer failed\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:			DBGLOG(RX, TRACE, "[%s] No free Rx buffer\n", __func__);
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:				DBGLOG(RX, ERROR, "[%s] RxLength == 0\n", __func__);
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:				DBGLOG(RX, ERROR, "[%s] Request_len(%d) >= Available_len(%d)\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "------<Dump SDIO Status>------\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "Coalescing buffer size[%u] Rx Cnt[%u/%u] DeAgg[%u] UF Cnt[%u]\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "Pkt cnt Tx[%u] RxP0[%u] RxP1[%u] Tx/Rx ratio[%u.%u]\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "Tx pkt/wt[%u.%u] pkt/kick[%u.%u] cmd/wt[%u.%u]\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "Rx P0 pkt/rd[%u.%u] P1 pkt/rd[%u.%u]\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "Tx done pending cnt HIF_TXC00~04[%u, %u, %u, %u, %u]\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "Tx done pending cnt HIF_TXC05~09[%u, %u, %u, %u, %u]\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "Tx done pending cnt HIF_TXC10~15[%u, %u, %u, %u, %u, %u]\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "Tx done counter/int:\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "AC00~03[%u.%u, %u.%u, %u.%u, %u.%u]\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "AC10~13[%u.%u, %u.%u, %u.%u, %u.%u]\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "AC20~23[%u.%u, %u.%u, %u.%u, %u.%u] FFA,CPU[%u.%u, %u.%u]\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "Pending pkt/int[%u.%u] kick/int[%u.%u] rx_enh/sts[%u.%u]\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "Tx cp_t/pkt[%u.%uus] free/pkt[%u.%uus]\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "Rx P0 cp_t/pkt[%u.%uus] avg read[%u.%uus]\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "INT rd_sts/sts[%u.%uus] tx_sts/sts[%u.%uus]\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "---------------------------------\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	for (u4Idx = 0; u4Idx < CFG_SDIO_INT_LOG_CNT; u4Idx++) {
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:		struct SDIO_INT_LOG_T *prIntLog = &prHifInfo->arIntLog[u4Idx];
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:		LOGBUF(pucBuf, u4Max, u4Len, "INT IDX[%u] STS[0x%08x] FG[0x%08x] Rx Pkt[%u] Sts0/1[%u:%u]\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:			LOGBUF(pucBuf, u4Max, u4Len, "RxDAggLen[");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:				LOGBUF(pucBuf, u4Max, u4Len, "%4u:", prIntLog->au2RxPktLen[ucPktIdx]);
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:			LOGBUF(pucBuf, u4Max, u4Len, "]\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:			LOGBUF(pucBuf, u4Max, u4Len, "RxDAggSn [");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:				LOGBUF(pucBuf, u4Max, u4Len, "0x%08x: ", prIntLog->au4RxPktInfo[ucPktIdx]);
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:			LOGBUF(pucBuf, u4Max, u4Len, "]\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:			LOGBUF(pucBuf, u4Max, u4Len, "Rx0StsLen[");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:				LOGBUF(pucBuf, u4Max, u4Len, "%4u:", prIntSts->rRxInfo.u.au2Rx0Len[ucPktIdx]);
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:			LOGBUF(pucBuf, u4Max, u4Len, "]\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:			LOGBUF(pucBuf, u4Max, u4Len, "Rx1StsLen[");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:				LOGBUF(pucBuf, u4Max, u4Len, "%4u:", prIntSts->rRxInfo.u.au2Rx1Len[ucPktIdx]);
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:			LOGBUF(pucBuf, u4Max, u4Len, "]\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "---------------------------------\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	DBGLOG(HAL, ERROR, "halReadN9RegisterByMailBox >> interested address is not correct.\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	DBGLOG(HAL, ERROR, "halReadN9RegisterByMailBox >> get response failure.\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:					DBGLOG(HAL, ERROR, "halWriteN9RegisterByMailBox >> ");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:					DBGLOG(HAL, ERROR, "interested address is not correct.\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	DBGLOG(HAL, ERROR, "halWriteN9RegisterByMailBox >> get response failure.\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:		DBGLOG(HAL, ERROR, "Could not allocate %d bytes for interrupt response.\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:			DBGLOG(HAL, ERROR, "Rx coalescing alloc failed!\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	LOG_FUNC("[%s][wifi][Firmware] Assert at \"%s\" #%ld\n\n", NIC_NAME, aucAssertFile, line);
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	DBGFWLOG(INIT, ERROR, "MailBox Status = 0x%08X, 0x%08X\n", u4MailBoxStatus0, u4MailBoxStatus1);
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	DBGLOG_MEM32(REQ, WARN, prSDIOCtrl, sizeof(struct ENHANCE_MODE_DATA_STRUCT));
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	DBGLOG(REQ, WARN, "INT status[0x%08x]\n", u4IntStatus);
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	struct SDIO_INT_LOG_T *prIntLog;
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	for (u4Idx = 0; u4Idx < CFG_SDIO_INT_LOG_CNT; u4Idx++) {
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:		DBGLOG(INTR, ERROR, "INT IDX[%u] STS[0x%08x] FG[0x%08x] Rx Pkt[%u] Sts0/1[%u:%u]\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:		DBGLOG_MEM32(INTR, ERROR, &prIntLog->au2RxPktLen[0], sizeof(uint16_t) * HIF_RX_MAX_AGG_NUM);
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:		DBGLOG_MEM32(INTR, ERROR, &prIntLog->au4RxPktInfo[0], sizeof(uint32_t) * HIF_RX_MAX_AGG_NUM);
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:		DBGLOG_MEM32(INTR, ERROR, prIntSts, sizeof(struct ENHANCE_MODE_DATA_STRUCT));
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	DBGLOG(INTR, ERROR, "---------------------------------\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	struct SDIO_INT_LOG_T *prIntLog;
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	ucLogEntry = prHifInfo->u4IntLogIdx % CFG_SDIO_INT_LOG_CNT;
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	kalMemZero(prIntLog, sizeof(struct SDIO_INT_LOG_T));
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:struct SDIO_INT_LOG_T *halGetIntLog(IN struct ADAPTER *prAdapter, IN uint32_t u4Idx)
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	return &prHifInfo->arIntLog[u4Idx % CFG_SDIO_INT_LOG_CNT];
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:		DBGLOG(REQ, WARN, "Skip all SDIO Rx due to Rx underflow error!\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:		DBGLOG(RX, INFO, "Wake up by Rx\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:		DBGLOG(SW4, WARN, "u4IntrBits: 0x%08x\n", u4IntrBits);
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	struct SDIO_INT_LOG_T *prIntLog;
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:			DBGLOG(RX, TRACE, "u4TcpUdpIpCksStatus[0x%02x]\n", prSwRfb->u4TcpUdpIpCksStatus);
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:			DBGLOG(RX, ERROR, "Rx de-aggregation error!, INT sts: total len[%u] pkt cnt[%u]\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:			DBGLOG_MEM32(RX, ERROR, prRxBuf->pvRxCoalescingBuf, prRxBuf->u4PktTotalLength);
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:		DBGLOG(INIT, WARN, "SWPCDBGR 0x%08X\n", u4Data);
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	DBGLOG(REQ, WARN, "WASR:0x%x, WCIR:0x%x, WHLPCR:0x%x, WHIER:0x%x, D2HRM0R:0x%x, D2HRM1R:0x%x\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:	DBGLOG(REQ, WARN, "CCCR %02x %02x %02x %02x %02x %02x %02x %02x\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/sdio/hal_api.c:		DBGLOG(NIC, ERROR, "Missing Tx done[%u:%u:%u:%u:%u]\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/axi/axi.c:	DBGLOG(INIT, TRACE, "driver.name = %s\n", prPlatDev->id_entry->name);
connectivity/common/wlan/core/gen4m/os/linux/hif/axi/axi.c:		DBGLOG(INIT, INFO, "pfWlanProbe fail!\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/axi/axi.c:	DBGLOG(INIT, TRACE, "hifAxiProbe() done(%d)\n", ret);
connectivity/common/wlan/core/gen4m/os/linux/hif/axi/axi.c:	DBGLOG(INIT, TRACE, "pfWlanRemove done\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/axi/axi.c:	DBGLOG(INIT, TRACE, "hifAxiRemove() done\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/axi/axi.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/axi/axi.c:	DBGLOG(INIT, INFO, "dma_supported=%d, dma_mask=%llx\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/axi/axi.c:		DBGLOG(INIT, INFO, "set DMA mask failed! errno=%d\n", ret);
connectivity/common/wlan/core/gen4m/os/linux/hif/axi/axi.c:		DBGLOG(INIT, ERROR, "WIFI-OF: get wifi device node fail\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/axi/axi.c:		DBGLOG(INIT, ERROR, "WIFI-OF: of_address_to_resource fail\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/axi/axi.c:		DBGLOG(INIT, ERROR, "CSRBaseAddress not iounmap!\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/axi/axi.c:#define LOG_TEMP "ioremap failed for device %s, region 0x%X @ 0x" PRIx64 "\n"
connectivity/common/wlan/core/gen4m/os/linux/hif/axi/axi.c:		DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/axi/axi.c:			LOG_TEMP,
connectivity/common/wlan/core/gen4m/os/linux/hif/axi/axi.c:#undef LOG_TEMP
connectivity/common/wlan/core/gen4m/os/linux/hif/axi/axi.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/axi/axi.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/axi/axi.c:			DBGLOG(INIT, ERROR, "TxDesc[%u] alloc fail\n", u4Idx);
connectivity/common/wlan/core/gen4m/os/linux/hif/axi/axi.c:		DBGLOG(INIT, ERROR, "RxDesc[0] alloc fail\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/axi/axi.c:		DBGLOG(INIT, ERROR, "RxDesc[1] alloc fail\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/axi/axi.c:			DBGLOG(INIT, ERROR, "TxCmdBuf[%u] alloc fail\n", u4Idx);
connectivity/common/wlan/core/gen4m/os/linux/hif/axi/axi.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/hif/axi/axi.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/hif/axi/axi.c:			DBGLOG(INIT, ERROR, "MsduBuf[%u] alloc fail\n", u4Idx);
connectivity/common/wlan/core/gen4m/os/linux/hif/axi/axi.c:	DBGLOG(INIT, INFO, "grMem.u4Offset[0x%x]\n", grMem.u4Offset);
connectivity/common/wlan/core/gen4m/os/linux/hif/axi/axi.c:		DBGLOG(HAL, INFO, "No glue info in mtk_axi_interrupt()\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/axi/axi.c:		DBGLOG(HAL, INFO, "GLUE_FLAG_HALT skip INT\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/axi/axi.c:	DBGLOG(INIT, INFO, "mtk_axi_probe() done\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/axi/axi.c:	DBGLOG(INIT, INFO, "platform_driver_register ret = %d\n", ret);
connectivity/common/wlan/core/gen4m/os/linux/hif/axi/axi.c:	DBGLOG(INIT, INFO, "bus_type = %s\n", mtk_axi_driver.driver.bus->name);
connectivity/common/wlan/core/gen4m/os/linux/hif/axi/axi.c:	DBGLOG(INIT, INFO, "platform_device_alloc ret = %d\n", ret);
connectivity/common/wlan/core/gen4m/os/linux/hif/axi/axi.c:	DBGLOG(INIT, INFO, "platform_device_add ret = %d\n", ret);
connectivity/common/wlan/core/gen4m/os/linux/hif/axi/axi.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/hif/axi/axi.c:	DBGLOG(INIT, INFO, "glBusSetIrq: request_irq num(%d)\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/axi/axi.c:		DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/hif/axi/axi.c:		DBGLOG(INIT, INFO, "%s null pvData\n", __func__);
connectivity/common/wlan/core/gen4m/os/linux/hif/axi/axi.c:		DBGLOG(INIT, INFO, "%s no glue info\n", __func__);
connectivity/common/wlan/core/gen4m/os/linux/hif/axi/axi.c:		DBGLOG(RX, ERROR, "Rx Data too large[%u]\n", u4Size);
connectivity/common/wlan/core/gen4m/os/linux/hif/axi/axi.c:		DBGLOG_MEM32(HAL, INFO, prAddr, u4DumpLen);
connectivity/common/wlan/core/gen4m/os/linux/hif/axi/axi.c:		DBGLOG_MEM32(HAL, INFO, prRxCell->pPacket, u4DumpLen);
connectivity/common/wlan/core/gen4m/os/linux/hif/axi/axi.c:		DBGLOG(HAL, ERROR, "can't allocate rx %u size packet\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/axi/axi.c:		DBGLOG(HAL, ERROR, "sk_buff dma mapping error!\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/axi/axi.c:		DBGLOG(HAL, ERROR, "KAL_DMA_MAP_SINGLE() error!\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/axi/axi.c:		DBGLOG(HAL, ERROR, "KAL_DMA_MAP_SINGLE() error!\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/axi/axi.c:		DBGLOG(HAL, ERROR, "KAL_DMA_MAP_SINGLE() error!\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/axi/axi.c:		DBGLOG(HAL, ERROR, "KAL_DMA_MAP_SINGLE() error!\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/axi/axi.c:		DBGLOG(HAL, ERROR, "KAL_DMA_MAP_SINGLE() error!\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/axi/axi.c:		DBGLOG_MEM32(HAL, INFO, prAddr, u4DumpLen);
connectivity/common/wlan/core/gen4m/os/linux/hif/axi/axi.c:	DBGLOG_MEM32(HAL, INFO, ((struct sk_buff *)prRxCell->pPacket)->data,
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/include/hif.h:#define SW_RFB_LOG_LIMIT_MS             (5000)
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:	DBGLOG(HAL, EVENT, "mtk_usb_probe()\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:	DBGLOG(HAL, EVENT, "wlan_probe()\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:		DBGLOG(HAL, ERROR, "wlan_probe() failed\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:	DBGLOG(HAL, STATE, "mtk_usb_disconnect()\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:	DBGLOG(HAL, STATE, "mtk_usb_disconnect() done\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:	DBGLOG(HAL, STATE, "mtk_usb_suspend()\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:			DBGLOG(HAL, EVENT, "enter WOW flow\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:				DBGLOG(HAL, ERROR, "pre_suspend timeout\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:	DBGLOG(HAL, STATE, "mtk_usb_suspend() done!\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:	DBGLOG(HAL, STATE, "mtk_usb_resume()\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:		DBGLOG(HAL, ERROR, "VendorRequest FeatureSetResume ERROR: %x\n", (unsigned int)ret);
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:		DBGLOG(HAL, EVENT, "leave WOW flow\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:	DBGLOG(HAL, STATE, "mtk_usb_resume() done!\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:	DBGLOG(HAL, STATE, "mtk_usb_reset_resume()\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:	DBGLOG(HAL, STATE, "mtk_usb_reset_resume done!()\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:		DBGLOG(REQ, ERROR, "BUG: mtk_usb_vendor_request is called from invalid context\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:		DBGLOG(REQ, ERROR, "BUG: mtk_usb_bulk_in_msg is called from invalid context\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:			DBGLOG(HAL, WARN, "usb_bulk_msg(IN=%d) Warning. Data is not completed. (receive %d/%u)\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:	DBGLOG(HAL, ERROR, "usb_bulk_msg(IN=%d) Fail. Error code = %d.\n", InEp, ret);
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:		DBGLOG(REQ, ERROR, "BUG: mtk_usb_intr_in_msg is called from invalid context\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:			DBGLOG(HAL, WARN, "usb_interrupt_msg(IN=%d) Warning. Data is not completed. (receive %d/%u)\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:	DBGLOG(HAL, ERROR, "usb_interrupt_msg(IN=%d) Fail. Error code = %d.\n", InEp, ret);
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:		DBGLOG(REQ, ERROR, "BUG: mtk_usb_bulk_out_msg is called from invalid context\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:			DBGLOG(HAL, ERROR, "usb_bulk_msg(OUT=%d) Warning. Data is not completed. (send %d/%u)\n", OutEp,
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:	DBGLOG(HAL, ERROR, "usb_bulk_msg(OUT=%d) Fail. Error code = %d.\n", OutEp, ret);
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:			DBGLOG(HAL, ERROR, "usb_alloc_urb() reports error\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:	DBGLOG(HAL, STATE, "USB Device speed: %x [%u]\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:	DBGLOG(HAL, INFO, "Event EP Type: %x\n", prHifInfo->eEventEpType);
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:			DBGLOG(HAL, ERROR, "kmalloc() reports error\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:			DBGLOG(HAL, ERROR, "kmalloc() reports error\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:				DBGLOG(HAL, ERROR, "kmalloc() reports error\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:		DBGLOG(INIT, INFO, "USB Tx URB INIT Tc[%u] cnt[%u] len[%u]\n", ucTc, i,
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:			DBGLOG(HAL, ERROR, "kmalloc() reports error\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:			DBGLOG(HAL, ERROR, "kmalloc() reports error\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:			DBGLOG(HAL, ERROR, "kmalloc() reports error\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:			DBGLOG(HAL, ERROR, "usb_control_msg() status: %x retry: %u\n", (unsigned int)ret, ucRetryCount);
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:		DBGLOG(HAL, ERROR, "usb_readl() reports error: %x retry: %u\n", ret, ucRetryCount);
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:		DBGLOG(HAL, INFO, "Get CR[0x%08x] value[0x%08x]\n", u4Register, *pu4Value);
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:			DBGLOG(HAL, ERROR, "usb_control_msg() status: %x retry: %u\n", (unsigned int)ret, ucRetryCount);
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:		DBGLOG(HAL, ERROR, "usb_writel() reports error: %x retry: %u\n", ret, ucRetryCount);
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:		DBGLOG(HAL, INFO, "Set CR[0x%08x] value[0x%08x]\n", u4Register, u4Value);
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:	DBGLOG(HAL, INFO, "++kalDevPortRead++ buf:0x%p, port:0x%x, length:%d\n", pucBuf, u2Port, u4Len);
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:			DBGLOG(HAL, WARN, "usb_interrupt_msg(IN=%d) Warning. Data is not completed. (receive %d/%u)\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:			DBGLOG(HAL, WARN, "usb_bulk_msg(IN=%d) Warning. Data is not completed. (receive %d/%u)\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:		DBGLOG(HAL, ERROR, "kalDevPortRead reports error: invalid port %x\n", u2Port);
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:		DBGLOG(HAL, ERROR, "usb_readsb() reports error: %x\n", ret);
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:	DBGLOG(HAL, INFO, "++kalDevPortWrite++ buf:0x%p, port:0x%x, length:%d\n", pucBuf, u2Port, u4Len);
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:			DBGLOG(HAL, WARN, "usb_bulk_msg(OUT=%d) Warning. Data is not completed. (receive %d/%u)\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:		DBGLOG(HAL, ERROR, "kalDevPortWrite reports error: invalid port %x\n", u2Port);
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/usb.c:		DBGLOG(HAL, ERROR, "usb_writesb() reports error: %x\n", ret);
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:	DBGLOG(INIT, TRACE, "Chip ID: 0x%lx\n", u4CIR);
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:	DBGLOG(INIT, TRACE, "Revision ID: 0x%lx\n", u4CIR);
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:		DBGLOG(HAL, ERROR, "Command TX buffer underflow!\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:	DBGLOG(HAL, INFO, "TX URB[0x%p]\n", prUsbReq->prUrb);
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:	/* DBGLOG_MEM32(SW4, INFO, prBufCtrl->pucBuf, 32); */
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:		DBGLOG(HAL, ERROR, "usb_submit_urb() reports error (%d)(EP%d OUT)\n", u4Status, arTcToUSBEP[ucTc]);
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:		DBGLOG(HAL, ERROR, "usb trigger whole reset\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:		DBGLOG(TX, ERROR, "[%s] send CMD fail (status = %d)\n", __func__, urb->status);
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:	DBGLOG(HAL, INFO, "TX CMD DONE: URB[0x%p]\n", urb);
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:		DBGLOG(HAL, ERROR, "usb_submit_urb() reports error (%d) [%s] (EP%d OUT)\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:			DBGLOG(HAL, ERROR, "run out of rTxDataFreeQ #1!!\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:		DBGLOG(HAL, ERROR, "u4AggRsvSize[%hhu] count FAIL (%u, %u)\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:				DBGLOG(HAL, ERROR, "run out of rTxDataFreeQ #2!!\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:		DBGLOG(HAL, ERROR, "run out of rTxDataFreeQ!!\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:		DBGLOG(HAL, ERROR, "usb_submit_urb() reports error (%d) [%s] (EP%d OUT)\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:		DBGLOG(HAL, ERROR, "usb trigger whole reset\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:		DBGLOG(TX, ERROR, "[%s] send DATA fail (status = %d)\n", __func__, urb->status);
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:			/* DBGLOG(RX, TRACE, ("ucPacketType = %d\n", prSwRfb->ucPacketType)); */
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:			DBGLOG(RX, TRACE, "Rx status flag = %x wlan index = %d SecMode = %d\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:			DBGLOG(RX, WARN, "Rx byte count:%u exceeds SW_RFB max length:%u\n!",
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:			DBGLOG_MEM32(RX, WARN, pucRxFrame,
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:			DBGLOG(HAL, ERROR, "usb_submit_urb() reports error (%d) [%s] (EP%d IN)\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:		DBGLOG(RX, ERROR, "USB device shutdown skip Rx [%s]\n", __func__);
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:	DBGLOG(RX, TRACE, "[%s] Rx URB[0x%p] Len[%u] Sts[%u]\n", __func__, urb, urb->actual_length, urb->status);
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:		DBGLOG(RX, ERROR, "[%s] receive EVENT fail (status = %d)\n", __func__, urb->status);
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:			DBGLOG(HAL, ERROR, "usb_submit_urb() reports error (%d) [%s]\n", u4Status, __func__);
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:		DBGLOG(RX, ERROR, "USB device shutdown skip Rx [%s]\n", __func__);
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:		DBGLOG(RX, ERROR, "[%s] receive DATA fail (status = %d)\n", __func__, urb->status);
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:		DBGLOG(RX, LOUD, "[%s] Rx URB[0x%p] Len[%u] Sts[%u]\n", __func__,
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:			DBGLOG(RX, ERROR, "[%s] receive EVENT/DATA fail (status = %d)\n", __func__, prUrb->status);
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:					DBGLOG(RX, WARN, "Out of SwRfb!\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:					s_u4OutOfSwRfbPrintLimit = jiffies + MSEC_TO_JIFFIES(SW_RFB_LOG_LIMIT_MS);
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:	DBGLOG(INIT, INFO, "PMIC SPI clock switch = %s\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:	DBGLOG(INIT, INFO, "Power on Wi-Fi....\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:			DBGLOG(INIT, WARN, "Power on failed!!!\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "PDMA1R1 CPU[%u] DMA[%u] INT[0x%08x] CFG[0x%08x]\n", u4CpuIdx,
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "UDMA WLCFG[0x%08x]\n", u4Reg);
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "\n");
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "VenderID: %04x\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "ProductID: %04x\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "Manufacturer: %s\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "Product: %s\n", pBuffer);
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:	LOGBUF(pucBuf, u4Max, u4Len, "SerialNumber: %s\n",
connectivity/common/wlan/core/gen4m/os/linux/hif/usb/hal_api.c:	DBGLOG(INIT, INFO, "Power off Wi-Fi!\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:uint32_t au4LogLevel[ENUM_WIFI_LOG_MODULE_NUM] = {ENUM_WIFI_LOG_LEVEL_DEFAULT};
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, INFO, "CFG80211 suspend CB\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, INFO, "CFG80211 resume CB\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:			.subcmd = LOGGER_GET_VER
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:			.subcmd = LOGGER_DRIVER_MEM_DUMP
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, INFO, "g_fgNvramAvailable = %u\n", g_fgNvramAvailable);
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, WARN, "Nvram not available\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, ERROR, "Invalid input data\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, ERROR, "prGlueInfo is NULL\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, ERROR, "Adapter is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, WARN, "Unexpected ioctl command: 0x%04x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, TRACE, "flags: 0x%x\n", prDev->flags);
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, INFO, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(REQ, WARN, "driver is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, WARN, "prMCAddrList memory alloc fail!\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(SCN, INFO, "wlanSchedScanStoppedWorkQueue\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(SCN, INFO, "prGlueInfo == NULL unexpected\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(SCN, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:			      DBG_LOG_LEVEL_DEFAULT);
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:	LOG_FUNC("Reset ALL DBG module log level to DEFAULT!");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, ERROR, "Set macaddr with ndev(%d) and addr(%d)\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, WARN, "Unknown band %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, WARN, "unsupported bandwidth: %d", ucBandWidth);
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, TRACE, "bw: %d, s_freq: %d, e_freq: %d",
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, WARN, "invalid channel for freq: %d",
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, INFO, "r: %d, chnl %u, b: %d, s: %d, freq: %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:				DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:				DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, ERROR, "net_device number exceeds!\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:				DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, ERROR, "The device context is NULL\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, INFO, "buf = %p, length = %u\n", buf, length);
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, ERROR, "copy nvram fail\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, ERROR, "wiphy_register error\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, INFO, "Create wireless device success\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, ERROR, "unable to get struct dev for wlan\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, WARN, "Station ifname customized, use %s\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, INFO, "net_device prDev(0x%p) allocated\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, ERROR, "The device context is NULL\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, ERROR, "set packet filter failed.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:				DBGLOG(INIT, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, INFO, "********<%s>********\n", __func__);
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, INFO, "%s: Already in suspend mode, SKIP!\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, INFO, "********<%s>********\n", __func__);
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, INFO, "%s: Not in suspend mode, SKIP!\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, ERROR, "adapter is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, WARN, "Resetting p2p mode\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, INFO, "Start Efuse Buffer Mode ..\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, INFO, "ucEfuseBUfferModeCal is %x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:				DBGLOG(INIT, INFO, "request file done\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:				DBGLOG(INIT, INFO, "can't find file\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, INFO, "Start Efuse Buffer Mode ..\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, INFO, "ucEfuseBUfferModeCal is %x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, INFO, "request file done\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, INFO, "can't find file\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, INFO, "u4ContentLen = %d\n", u4ContentLen);
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, TRACE, "start.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, ERROR, "Get WifiPath from WMT drv fail\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, TRACE, "start.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, TRACE, "start.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, WARN, "set MAC addr fail 0x%x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, INFO, "MAC address: " MACSTR,
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:				DBGLOG(INIT, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, TRACE, "start.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, TRACE, "start.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:	int32_t u4LogLevel = ENUM_WIFI_LOG_LEVEL_DEFAULT;
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, TRACE, "start.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, ERROR, "MET_TAG_INIT error!\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:	wlanDbgGetGlobalLogLevel(ENUM_WIFI_LOG_MODULE_FW,
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:	if (u4LogLevel > ENUM_WIFI_LOG_LEVEL_DEFAULT)
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:					   ENUM_WIFI_LOG_LEVEL_VERSION_V1,
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:					   ENUM_WIFI_LOG_MODULE_FW,
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, TRACE, "start.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, INFO, "wlan thread stopped\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, INFO, "Driver Off during Reset\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, ERROR, "prDev is NULL\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, INFO, "prGlueInfo is NULL\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, INFO, "prAdapter is NULL\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, INFO, "Driver On during Reset\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, ERROR, "prDev is NULL\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, INFO, "prGlueInfo is NULL\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, INFO, "prAdapter is NULL\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, ERROR, "Set IRQ error\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:				DBGLOG(INIT, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, INFO, "reset success\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:				DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, WARN, "Fail reason: %d\n", eFailReason);
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, TRACE, "start.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, TRACE, "start.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, INFO, "p2pNetUnregister...\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, INFO, "p2pRemove...\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, INFO, "enter wlanProbe\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, ERROR, "wlanProbe: glBusInit() fail\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, ERROR, "wlanProbe: Set IRQ error\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, ERROR, "wlanProbe: init procfs failed\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, TRACE, "init MET procfs...\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, ERROR, "wlanProbe: probe failed, reason:%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, INFO, "Remove wlan!\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, ERROR, "u4WlanDevNum = 0\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, ERROR, "prDev is NULL\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, INFO, "prGlueInfo is NULL\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, ERROR, "MET_TAG_UNINIT error!\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, INFO, "HAL_LP_OWN_SET(%d)\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, INFO, "initWlan\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:		DBGLOG(INIT, ERROR, "custom infname len illegal > %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_init.c:	DBGLOG(INIT, INFO, "exitWlan\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:#define CMD_SET_FW_LOG		"SET_FWLOG"
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		OID_IPC_WIFI_LOG_UI,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DISP_STRING("OID_IPC_WIFI_LOG_UI"),
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		sizeof(struct PARAM_WIFI_LOG_LEVEL_UI),
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		OID_IPC_WIFI_LOG_LEVEL,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DISP_STRING("OID_IPC_WIFI_LOG_LEVEL"),
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		sizeof(struct PARAM_WIFI_LOG_LEVEL),
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(SCN, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(SCN, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(SCN, TRACE, "total len = %d (max len = %d)\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(SCN, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, INFO, "CMD set_band = %u\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		/* DBGLOG(REQ, INFO, ("WFD Debug Mode:%d Period:%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		/* DBGLOG(INIT, INFO, ("MET_PROF: Enable=%d UDP_PORT=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "cmd=%x, flags=%x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "mode=%x, flags=%x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, INFO, "CMD get_band=\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(RLM, INFO, "Domain: Query Channel List.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, WARN, "Fail to get FW manifest version\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "cmd=%x, flags=%x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "mode=%x, flags=%x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "not support now");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "cmd=%x, flags=%x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "mode=%x, flags=%x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "cmd=%x, flags=%x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "mode=%x, flags=%x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "*pcExtra = 0x%x\n", *pcExtra);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "Input data length is invalid %u\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "Input data length is invalid %u\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			/* ToDo:: DBGLOG */
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, INFO, "pcExtra buffer is valid\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, INFO, "pcExtra 0x%p\n", pcExtra);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, INFO, "copy_to_user oidBuf fail\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "Input data length is invalid %u\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(REQ, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(REQ, ERROR, "copy_from_user fail\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:					DBGLOG(REQ, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(REQ, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(REQ, INFO, "alloc fail\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "cmd=%x, flags=%x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "mode=%x, flags=%x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, WARN, "get struct cmd:0x%x\n", u4SubCmd);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "cmd=%x, flags=%x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "mode=%x, flags=%x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		/* WARNLOG(
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		/* WARNLOG(
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, INFO, "priv_set_ndis(): %s\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		/* WARNLOG(
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		/* WARNLOG(
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		/* WARNLOG(
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, INFO, "priv_get_ndis(): %s\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			/* WARNLOG(
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		/* WARNLOG(
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "MT6632: %s, u4SubCmd=%d\n", __func__,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "prIwReqInfo->cmd %u\n", u2Cmd);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "prIwReqData->data.length %u\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "pcExtra %s\n", pcExtra);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "%s prIwReqData->data.length = %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "%s i4BytesWritten = %d\n", __func__,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "pcExtra done\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "%s access_ok Write fail written = %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "%s copy_to_user fail written = %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(RSN, INFO, "%s copy_to_user written = %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse apcArgv error u4Ret=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, INFO, "allocate pucConfigBuf failed\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, INFO, "can't find file\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, INFO, "%x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "rStatus %u\n", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RSN, INFO, "use ais ap "MACSTR"\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RSN, INFO, "not connect to ais ap %lx\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, WARN, "not yet connected\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, WARN, "unable to retrieve rssi\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "%s: command result is %s\n", __func__,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	/* DBGLOG(RSN, INFO, "MT6632 : priv_driver_get_wtbl_info\n"); */
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "MT6632 : index = %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "rStatus %u u4BufLen = %d\n", rStatus,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "%s: command result is %s\n", __func__, pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	/* DBGLOG(RSN, INFO, "MT6632 : priv_driver_get_sta_info\n"); */
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "prHwWlanInfo is null\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "MT6632 : index = %d i4TotalLen = %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "%s: command result is %s\n", __func__, pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "MT6632 : priv_driver_get_mib_info\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "MT6632 : index = %d\n", prHwMibInfo->u4Index);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "rStatus %u\n", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "%s: command result is %s\n", __func__, pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	struct CMD_FW_LOG_2_HOST_CTRL *prFwLog2HostCtrl;
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(RSN, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(RSN, INFO, "MT6632 : priv_driver_set_fw_log\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	prFwLog2HostCtrl = (struct CMD_FW_LOG_2_HOST_CTRL *)kalMemAlloc(
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			sizeof(struct CMD_FW_LOG_2_HOST_CTRL), VIR_MEM_TYPE);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse u4McuDest error u4Ret=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse u4LogType error u4Ret=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:				   sizeof(struct CMD_FW_LOG_2_HOST_CTRL),
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "%s: command result is %s (%d %d)\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "rStatus %u\n", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:				   sizeof(struct CMD_FW_LOG_2_HOST_CTRL));
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "argc %i is not equal to 3\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		   sizeof(struct CMD_FW_LOG_2_HOST_CTRL));
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "address is %x\n", rCmdAccessReg.u4Address);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "rStatus %u\n", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "%s: command result is %s\n", __func__,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse Magic Key error u4Ret=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "The Set Test Mode Magic Key is %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "rStatus %u\n", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "rStatus %u\n", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "rStatus %u\n", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "%s: command result is %s\n", __func__,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "****** RX Vector3 = 0x%08x ******\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "****** RX Vector0 = 0x%08x ******\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "****** RX Vector1 = 0x%08x ******\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, WARN, "unable to retrieve rssi\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "rStatus %u, rSwCtrlInfo.u4Data 0x%x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, WARN, "unable to retrieve rssi\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "rStatus %u, rSwCtrlInfo.u4Data 0x%x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %d, apcArgv[0] = %s\n\n", i4Argc, *apcArgv);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "string = %s\n", this_char);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "WlanIdx=%d\nDebugType=%d\nu4Data=0x%08x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %d, apcArgv[0] = %s\n\n", i4Argc, *apcArgv);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "string = %s\n", this_char);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "u4WCID=%d\nu4Mode=%d\nu4Bw=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "u4Mcs=%d\nu4VhtNss=%d\nu4SGI=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "u4Preamble=%d\nu4STBC=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "u4LDPC=%d\nu4SpeEn=%d\nu4Band=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "fgIsUseWCID=%d\n\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:					DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:					DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:					DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:				    DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR, "iwpriv wlanXX driver FixedRate=Option\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR, "[WCID]Wireless Client ID\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR, "[Mode]CCK=0, OFDM=1, HT=2, GF=3, VHT=4\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR, "[BW]BW20=0, BW40=1, BW80=2,BW160=3\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR, "[VhtNss]VHT=1~4, Other=ignore\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR, "[Preamble]Long=0, Other=Short\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR, "[BAND]2G=0, Other=5G\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %d, apcArgv[0] = %s\n\n", i4Argc, *apcArgv);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "string = %s\n", this_char);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "u4Ret = %d, ucParam = %d\n", u4Ret, ucParam);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(REQ, LOUD,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, INFO, "No connected peer found!\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "MT6632 : index = %d i4TotalLen = %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "Query prHwWlanInfo failed!\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "Addr of WlanIndex %d is not found!\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "Query prQueryStaStatistics failed!\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "%s: command result is %s\n", __func__, pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, INFO, "fgResetCnt = %d\n", fgResetCnt);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, INFO, "g_HqaRxStat.MAC_Mdrdy = %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, INFO, "au4MacMdrdy[ENUM_BAND_0] = %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, INFO, "g_HqaRxStat.PhyMdrdyOFDM = %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, INFO, "g_HqaRxStat.MAC_FCS_Err= %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, INFO, "au4FcsError[ENUM_BAND_0]= %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, INFO, "g_HqaRxStat.FCSErr_OFDM = %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "ucRoleIdx %hhu ucBssIdx %hhu\n", ucRoleIdx,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "integer format error i4Ret=%d\n", i4Ret);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "Invalid ACL Policy=%d\n", i4Policy);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, TRACE, "ucBssIdx[%hhu] ACL Policy=%d\n", ucBssIdx,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "%s: command result is %s\n", __func__, pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "[%c] is not hex digit\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "[%c]separate symbol is error\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "no null-terminated character\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "ucRoleIdx %hhu ucBssIdx %hhu\n", ucRoleIdx,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "inspect mac format error u4Ret=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "sscanf mac format fail u4Ret=%d\n", i4Ret);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "add this mac [" MACSTR
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "idx[%d] error or ACL is full.\n", i);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, TRACE, "add mac addr [" MACSTR "] to ACL(%d).\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "%s: command result is %s\n", __func__, pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "ucRoleIdx %hhu ucBssIdx %hhu\n", ucRoleIdx,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "inspect mac format error u4Ret=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "sscanf mac format fail u4Ret=%d\n", i4Ret);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, TRACE, "delete this mac [" MACSTR "]\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "delete entry fail, num of entries=%d\n", i);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "%s: command result is %s\n", __func__, pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, TRACE, "ACL Policy = %d\n", prBssInfo->rACL.ePolicy);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, TRACE, "Total ACLs = %d\n", prBssInfo->rACL.u4Num);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, TRACE, "ACL(%d): [" MACSTR "]\n", i+1,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, TRACE, "ACL Policy = %d\n", prBssInfo->rACL.ePolicy);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, TRACE, "Total ACLs = %d\n", prBssInfo->rACL.u4Num);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "address is %x\n", rCmdAccessReg.u4Address);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "rStatus %u\n", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "%s: command result is %s\n", __func__,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse rSwCtrlInfo error u4Ret=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "id is %x\n", rSwCtrlInfo.u4Id);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "rStatus %u\n", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "%s: command result is %s\n", __func__,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse rSwCtrlInfo error u4Ret=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse rSwCtrlInfo error u4Ret=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %d, apcArgv[0] = %s\n\n", i4Argc, *apcArgv);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "string = %s\n", this_char);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "u4WCID=%d\nu4Mode=%d\nu4Bw=%d\n", u4WCID,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "u4Mcs=%d\nu4VhtNss=%d\nu4SGI=%d\n", u4Mcs,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "u4Preamble=%d\nu4STBC=%d\n", u4Preamble,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "u4LDPC=%d\nu4SpeEn=%d\nfgIsUseWCID=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:					DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:					DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:					DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:				    DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR, "iwpriv wlanXX driver FixedRate=Option\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR, "[WCID]Wireless Client ID\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR, "[Mode]CCK=0, OFDM=1, HT=2, GF=3, VHT=4\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR, "[BW]BW20=0, BW40=1, BW80=2,BW160=3\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR, "[VhtNss]VHT=1~4, Other=ignore\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR, "[Preamble]Long=0, Other=Short\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:					DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, WARN, "Update to driver temp buffer as [%s]\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	/* DBGLOG(REQ, LOUD,("argc is %i\n",i4Argc)); */
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, INFO, "%s: kalIoctl ret=%d\n", __func__,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	/* DBGLOG(REQ, LOUD,("argc is %i\n",i4Argc)); */
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, INFO, "%s: kalIoctl ret=%d\n", __func__,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "%s: RespTyep  %u\n", __func__,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "%s: u2MsgSize %u\n", __func__,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, INFO, "%s: u2MsgSize error ret=%u\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:						DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "%s: command result is %s\n", __func__,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "%s: command result is %s\n", __func__, pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse ucBand error u4Ret=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "u4Ret is %d\n", u4Ret);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "Input insufficent\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		LOGBUF(pcCommand, i4TotalLen, i4BytesWritten, "Not Supported.");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten, "\nCountry Code: (0x%x)",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		LOGBUF(pcCommand, i4TotalLen, i4BytesWritten, "Not Supported.");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		LOGBUF(pcCommand, i4TotalLen, i4BytesWritten, "\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			LOGBUF(pcCommand, i4TotalLen, i4BytesWritten, "CH-%d:",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:				LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:				LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten, "\nDFS State: \"%s\"",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten, "\nRDD idx: %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten, "\nLPB Num: %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten, "\nPPB Num: %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten, "\n%-10d    %-11d    -\n"
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten, "\n%-10d    %-11d    -\n"
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	LOGBUF(pcCommand, i4TotalLen, i4BytesWritten,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse ucMode error u4Ret=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, TRACE, "pucValueHead = %s\n", pucValueHead);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(REQ, TRACE, "MAC type");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(REQ, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "ucRoleIdx = %d\n", ucRoleIdx);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, WARN, "bss is not active\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "[MODE] parse error\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "[MODE] convert to int error\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "[MODE] invalid ACL policy= %d\n", i4Mode);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "[CNT] parse count error\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "[CNT] convert to int error\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "[CNT] invalid count > max ACL\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "ucRoleIdx = %d\n", ucRoleIdx);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "[CFG] cmd parse error\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "[CFG] sub cmd parse error\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "[CH] parse error\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "[CH] convert to int error\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "[MAX_SCB] parse error\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "[MAX_SCB] convert to int error\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "ucRoleIdx = %d\n", ucRoleIdx);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, WARN, "bss is not active\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, WARN, "NULL STA_REC\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(SW4, INFO, "STA[%u] [" MACSTR "]\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "ucRoleIdx = %d\n", ucRoleIdx);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "[MAC] parse error\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "prIwReqInfo->cmd %x\n", u2Cmd);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "prIwReqData->data.length %u\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "%s aucBuf %s\n", __func__, aucOidBuf);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "%s i4BytesWritten = %d\n", __func__,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "pcExtra done\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(RFTEST, INFO, "%s\r\n", __func__);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO, "Thermal Temp = %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO, "Total Length (Rom) = %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			/* RFTEST_INFO_LOGDUMP32(
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO, "Thermal Temp = %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO, "Total Length (Ram) = %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			/* RFTEST_INFO_LOGDUMP32(
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			/* RFTEST_INFO_LOGDUMP32(
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "parse bEnable error u4Ret=%d\n", u4Ret);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, INFO, "CMD set_wow_enable = %d\n", Enable);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, INFO, "Scenario ID %d\n", pWOW_CTRL->ucScenarioId);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, INFO, "ucBlockCount %d\n", pWOW_CTRL->ucBlockCount);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, INFO, "interface %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, INFO, "gpio_pin %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, INFO, "gpio_level 0x%x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, INFO, "gpio_timer %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "parse bEnable error u4Ret=%d\n", u4Ret);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(PF, INFO, "WOW enable %d\n", pWOW_CTRL->fgWowEnable);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse ucWakeupHif error u4Ret=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse GpioPin error u4Ret=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse Gpio level error u4Ret=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse u4GpioTimer error u4Ret=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse ucScenario error u4Ret=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse ucBlockCnt error u4Ret=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, INFO, "gpio_scenario%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, INFO, "interface %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, INFO, "gpio_pin %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, INFO, "gpio_level %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, INFO, "gpio_timer %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, WARN, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(PF, INFO, "UDP ucCount=%d\n", ucCount);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse ucWakeupHif error u4Ret=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(PF, INFO, "ucVer=%d\n", ucVer);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(PF, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(PF, INFO, "ucPort=%d, idx=%d\n", u2Port, ii);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse ucWakeupHif error u4Ret=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, WARN, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(PF, INFO, "TCP ucCount=%d\n", ucCount);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse ucWakeupHif error u4Ret=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(PF, INFO, "Ver=%d\n", ucVer);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(PF, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(PF, INFO, "ucPort=%d, idx=%d\n", u2Port, ii);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse ucWakeupHif error u4Ret=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse argc[1] error u4Ret=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse argc[2] error u4Ret=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(PF, INFO, "ucPort=%d, idx=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(PF, INFO, "[%s/%s] count:%d\n", aucIp[ucVer],
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD, "parse bEnable error u4Ret=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, INFO, "AdvPws:%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "parse apcArgv1 error u4Ret=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "parse apcArgv2 error u4Ret=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, INFO, "WOW On MDTIM:%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, INFO, "WOW Off MDTIM:%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse u4Enable error u4Ret=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "%s: Set suspend mode [%u]\n", __func__,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse apcArgv error u4Ret=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse apcArgv error u4Ret=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse apcArgv error u4Ret=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse apcArgv error u4Ret=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, LOUD,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, LOUD, "parse apcArgv error u4Ret=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR, "iwpriv wlanXX driver SET_DBDC <enable>\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR, "<enable> 1: enable. 0: disable.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "%s: command result is %s\n", __func__, pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(SCN, TRACE, "ch %u, dirtiness %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "prGlueInfo is null\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "Argc(%d) ERR: SET_NOISE <Sel>\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "parse rSwCtrlInfo error u4Ret=%d\n", u4Ret);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "u4Sel=%d u4Data=0x%x,\n", u4Sel, rSwCtrlInfo.u4Data);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "ERR: kalIoctl fail (%d)\n", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "rStatus %u\n", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "parse rSwCtrlInfo error u4Ret=%d\n", u4Ret);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "parse rSwCtrlInfo error u4Ret=%d\n", u4Ret);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "parse rSwCtrlInfo error u4Ret=%d\n", u4Ret);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "u4Sel=%d u4CckTh=%d u4OfdmTh=%d, u4Data=0x%x,\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "ERR: kalIoctl fail (%d)\n", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "parse rSwCtrlInfo error u4Ret=%d\n", u4Ret);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "parse rSwCtrlInfo error u4Ret=%d\n", u4Ret);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "u4Sel=%d u4EdCcaVal=%d, u4Data=0x%x,\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "ERR: kalIoctl fail (%d)\n", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "parse rSwCtrlInfo error u4Ret=%d\n", u4Ret);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "parse rSwCtrlInfo error u4Ret=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "parse rSwCtrlInfo error u4Ret=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "u4Sel=%d u4OfdmTh=%d, u4CckTh=%d, u4Data=0x%x,\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "ERR: kalIoctl fail (%d)\n", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "parse rSwCtrlInfo error u4Ret=%d\n", u4Ret);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "parse rSwCtrlInfo error u4Ret=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "parse rSwCtrlInfo error u4Ret=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "u4Sel=%d u4Wf0Gain=%d, u4Wf1Gain=%d, u4Data=0x%x,\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "ERR: kalIoctl fail (%d)\n", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "Argc(%d) ERR: Set driver SER\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "ERR: kalIoctl fail (%d)\n", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "prGlueInfo or prAdapter is NULL\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "Argc(%d) ERR: RUN_UT COMMAND\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(REQ, ERROR, "parse error u4Ret=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:					DBGLOG(REQ, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "Argc(%d) ERR: Sw Amsdu Num\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "parse amsdu num error u4Ret=%d\n", u4Ret);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "ERR: kalIoctl fail (%d)\n", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, LOUD, "argc is %i\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "Argc(%d) ERR: Sw Amsdu Max Size\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "parse amsdu size error u4Ret=%d\n", u4Ret);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "ERR: kalIoctl fail (%d)\n", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "GLUE_CHK_PR2 fail\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "rStatus=%x\n", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "parse ucRoleIdx error\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "parse u4CTwindowMs error\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "can't find ucBssIdx\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "wrong bss InUse=%d, iftype=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "ucRoleIdx=%d, ucBssIdx=%d, u4CTwindowMs=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "parse ucRoleIdx error\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "parse u4NoaCount error\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "parse u4NoaIntervalMs error\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "parse u4NoaDurationMs error\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "can't find ucBssIdx\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "wrong bss InUse=%d, iftype=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	{CMD_SET_FW_LOG, priv_driver_set_fw_log},
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, WARN, "wlan is halt, skip priv_driver_cmds\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(SCN, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(SCN, INFO, "Entry %u\n", i);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(SCN, INFO, "	 BSSID = " MACSTR "\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(SCN, INFO, "	 SSID = %s\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(SCN, INFO, "	 SSID len = %u\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(SCN, INFO, "	 RSSI = %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(SCN, INFO, "	 Freq = %u\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "Unknown driver command %s - ignored\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, WARN, "%s, alloc mem failed\n", __func__);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, WARN, "No glue info\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, WARN, "%s, alloc mem failed\n", __func__);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "%s: copy_from_user fail\n", __func__);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "%s: i4TotalLen invalid\n", __func__);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "%s: driver cmd \"%s\" on %s\n", __func__, pcCommand,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "%s: command %s Written is %d\n", __func__,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, TRACE, "NCHO argc is %i, %s\n", i4Argc, apcArgv[1]);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "NCHO parse u4Param error %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, TRACE, "NCHO set roam trigger cmd %d\n", i4Param);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, ERROR, "NCHO set roam trigger fail 0x%x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO set failed\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO error input parameter %d\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, TRACE, "NCHO query ok and ret is %s\n", cmdV1Header.buffer);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO parse u4Param error %d!\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, TRACE, "NCHO query RoamTrigger is %d\n", i4Param);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, TRACE, "NCHO argc is %i, %s\n", i4Argc, apcArgv[1]);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, TRACE, "NCHO set roam delta cmd %d\n", i4Param);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, TRACE, "NCHO set roam delta successed\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO set failed\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO error input parameter %d\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, TRACE, "NCHO query ok and ret is %d\n", i4Param);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, TRACE, "NCHO argc is %i, %s\n", i4Argc, apcArgv[1]);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "NCHO parse u4Param error %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, TRACE, "NCHO set roam period cmd %d\n", u4Param);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, ERROR, "NCHO set roam period fail 0x%x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, TRACE, "NCHO set roam period successed\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO set failed\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO error input parameter %d\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, TRACE, "NCHO query ok and ret is %d\n", u4Param);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, TRACE, "NCHO argc is %i, cmd is %s\n", i4Argc,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "NCHO parse u4Param error %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO ChannelListNum is %d\n", u4ChnlInfo);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "NCHO param mismatch %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(REQ, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, TRACE, "NCHO set roam scan channel cmd\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO set failed\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO error input parameter %d\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, TRACE, "NCHO query ok and ret is %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, TRACE, "NCHO i4BytesWritten is %d and channel list is %s\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, TRACE, "NCHO argc is %i, %s\n", i4Argc, apcArgv[1]);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "NCHO parse u4Param error %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, TRACE, "NCHO set roam scan control cmd %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO set failed\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO error input parameter %d\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, TRACE, "NCHO query ok and ret is %d\n", u4Param);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, TRACE, "NCHO argc is %i, %s\n", i4Argc, apcArgv[1]);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "NCHO parse u4Param error %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, TRACE, "NCHO set scan channel time cmd %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO set failed\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO error input parameter %d\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, TRACE, "NCHO query ok and ret is %s\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "NCHO parse u4Param error %d!\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, TRACE, "NCHO argc is %i, %s\n", i4Argc,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "NCHO parse u4Param error %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, TRACE, "NCHO set scan home time cmd %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO set failed\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO error input parameter %d\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, TRACE, "NCHO query ok and ret is %s\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "NCHO parse u4Param error %d!\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, TRACE, "NCHO argc is %i, %s\n", i4Argc, apcArgv[1]);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "NCHO parse u4Param error %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, TRACE, "NCHO set scan home away time cmd %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO set failed\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO error input parameter %d\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, TRACE, "NCHO query ok and ret is %s\n", cmdV1Header.buffer);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO parse u4Param error %d!\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, TRACE, "NCHO argc is %i, %s\n", i4Argc, apcArgv[1]);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "NCHO parse u4Param error %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, TRACE, "NCHO set scan nprobes cmd %d\n", u4Param);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, ERROR, "NCHO set scan nprobes fail 0x%x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO set failed\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO error input parameter %d\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, TRACE, "NCHO query ok and ret is %s\n", cmdV1Header.buffer);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO parse u4Param error %d!\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, TRACE, "NCHO argc is %i, %s %s\n", i4Argc,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "NCHO parse u4Param error %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, TRACE, "NCHO send reassoc cmd %d\n", u4Param);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, TRACE, "NCHO Bssid " MACSTR " to roam\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, TRACE, "NCHO ssid %s to roam\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, ERROR, "NCHO send reassoc fail 0x%x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, TRACE, "NCHO send reassoc successed\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO set failed\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR, "NCHO AF data length is %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO MAC str is %s\n", prAfInfo->aucBssid);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR, "NCHO action frame parse error\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO MAC is " MACSTR "\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR, "NCHO send action fail 0x%x\n", rStatus);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, ERROR, "NCHO send action fail 0x%x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR, "NCHO req channel timeout\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, TRACE, "NCHO argc is %i, %s\n", i4Argc, apcArgv[1]);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "NCHO parse u4Param error %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, INFO, "NCHO set WES mode cmd %d\n", u4Param);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, ERROR, "NCHO set WES mode fail 0x%x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, TRACE, "NCHO set WES mode successed\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO set failed\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO error input parameter %d\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR, "NCHO wlanoidQueryNchoWesMode fail 0x%x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, TRACE, "NCHO query ok and ret is %d\n", u4Param);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, TRACE, "NCHO get result is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, TRACE, "NCHO argc is %i, %s\n", i4Argc, apcArgv[1]);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "NCHO parse u4Param error %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, TRACE, "NCHO set band cmd %d\n", u4Param);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, ERROR, "NCHO set band fail 0x%x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, TRACE, "NCHO set band successed\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO set failed\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO error input parameter %d\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR, "NCHO wlanoidQueryNchoBand fail 0x%x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, TRACE, "NCHO query ok and ret is %d\n", u4Param);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, TRACE, "NCHO argc is %i, %s\n", i4Argc, apcArgv[1]);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "NCHO parse u4Param error %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, TRACE, "NCHO set DFS scan cmd %d\n", u4Param);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, ERROR, "NCHO set DFS scan fail 0x%x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, TRACE, "NCHO set DFS scan successed\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO set failed\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO Error input parameter %d\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, TRACE, "NCHO query ok and ret is %s\n", cmdV1Header.buffer);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO parse u4Param error %d!\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, TRACE, "NCHO argc is %i, %s\n", i4Argc,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(REQ, ERROR, "NCHO parse u4Param error %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(INIT, TRACE, "NCHO set enable cmd %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO set failed\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(INIT, TRACE, "NCHO command is %s\n", pcCommand);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO error input parameter %d\n", i4Argc);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, ERROR, "NCHO wlanoidQueryNchoEnable fail 0x%x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, TRACE, "NCHO query ok and ret is %s\n", cmdV1Header.buffer);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, ERROR, "NCHO parse u4Param error %d!\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:				DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(REQ, INFO, "name(%s) or fgIndex(%d) is wrong\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(REQ, INFO, "applied=[%d], name=[%s], index=[%u], setting=[%s]\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(SW4, ERROR, "rate error for CCK: %u\n", rate);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(SW4, ERROR, "rate error for OFDM\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(SW4, ERROR, "rate error for 11N: %u\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(SW4, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(SW4, ERROR, "nsts error: %u\n", nsts);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(SW4, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(SW4, ERROR, "prStaRecOfAP is null\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(SW4, ERROR, "u4RxVector0 or u4RxVector1 is 0\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(SW4, ERROR, "wlanGetStaIdxByWlanIdx fail\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(SW4, ERROR, "frmode error: %u\n", frmode);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(SW4, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(SW4, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(SW4, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:			DBGLOG(SW4, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(SW4, ERROR, "prBssDesc is null\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(RLM, TRACE, "HT_CAP_INFO_SHORT_GI_20M\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(RLM, TRACE, "HT_CAP_INFO_SHORT_GI_40M\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(RLM, TRACE, "VHT_CAP_INFO_SHORT_GI_80\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(RLM, TRACE, "VHT_CAP_INFO_SHORT_GI_160_80P80\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:		DBGLOG(RLM, ERROR, "error ucNss: %u\n", ucNss);
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(SW4, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_wext_priv.c:	DBGLOG(SW4, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG_LIMITED(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(INIT, TRACE, "Request FW image: %s done\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG_LIMITED(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, LOUD, "SPIN_LOCK[%u] Try to acquire\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, TEMP, "MUTEX_LOCK[%u] Try to acquire\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, TEMP, "MUTEX_LOCK[%u] Acquired\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, TEMP, "MUTEX_UNLOCK[%u]\n", rMutexCategory);
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(RX, TRACE, "RX: \"non-IPv4/IPv6\" Packet\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(RX, TRACE, "RX: \"bad IP Checksum\" Packet\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(RX, TRACE, "RX: \"bad TCP Checksum\" Packet\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(RX, TRACE, "RX: \"bad UDP Checksum\" Packet\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(RX, TRACE, "prSkb->head = %#lx, prSkb->cb = %#lx\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(TX, WARN, "alloc skb failed\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(RX, TRACE, "prSkb->head = %#lx, prSkb->cb = %#lx\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(RX, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG_MEM32(RX, ERROR, (uint32_t *) skb->data, skb->len);
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG_LIMITED(INIT, TRACE, "napi_gro_flush: %d\n", ucBssIdx);
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(RX, TRACE, "prSkb->head = 0x%p, prSkb->cb = 0x%lx\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(RX, WARN, "dev_addr == NULL\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	/* DBGLOG_MEM32(RX, TRACE, (PUINT_32)prSkb->data, prSkb->len); */
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	/* DBGLOG(RX, EVENT, ("kalRxIndicatePkts len = %d\n", prSkb->len)); */
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(RX, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG_MEM32(RX, ERROR, (uint32_t *) prSkb->data,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG_LIMITED(INIT, INFO, "napi_gro_receive:%d\n", ucBssIdx);
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:				DBGLOG(SCN, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:					DBGLOG(SCN, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, INFO, "[wifi] %s netif_carrier_off\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:				SCAN_LOG_MSG_MAX_LEN);
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:			scanlog_dbg(LOG_SCAN_DONE_D2K, INFO, "Call cfg80211_scan_done (aborted=%u)\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:			scanlog_dbg(LOG_SCAN_ABORT_DONE_D2K, INFO, "Call cfg80211_scan_done (aborted=%u)\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(INIT, INFO, "JOIN Failure: u2JoinStatus=%d",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(INIT, INFO, "JOIN Failure");
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(RSN, INFO, "u2KeyInfo=%d\n", u2KeyInfo);
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(RSN, INFO, "u2KeyInfo=%d\n", u2KeyInfo);
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, INFO, "GLUE_FLAG_HALT skip tx\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, INFO, "LPDVT enable, skip this frame\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(TX, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(TX, LOUD,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(QM, LOUD, "Reset NetDev[0x%p] statistics\n", prDev);
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, INFO, "TxPendingFrameNum[%u] CurFrameId[%u]\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:				DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(TX, LOUD,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:						DBGLOG(TX, LOUD,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(TX, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(TX, LOUD, "----- pending frame %d -----\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(TX, WARN, "Invalid IPv4 packet version: %u\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:				DBGLOG_LIMITED(TX, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG_LIMITED(TX, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG_LIMITED(TX, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG_LIMITED(TX, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(TX, INFO, "TDLS action code: %d\n", ucActionCode);
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(TX, INFO, "u2KeyInfo=%d\n", u2KeyInfo);
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(TX, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(TX, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(TX, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(TX, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, WARN, "Invalid Ether packet length: %u\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(INIT, WARN, "Invalid IPv4 packet length: %u\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG_LIMITED(INIT, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, WARN, "SKIP multiple OID complete!\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, TRACE, "Complete OID, status:success\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, WARN, "Complete OID, status:0x%08x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(OID, LOUD, "ucBssIndex = %d\n", ucBssIndex);
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(OID, LOUD,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(OID, WARN, "kalIoctl: ret ErrCode: %x\n", ret);
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(OID, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG_LIMITED(TX, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG_LIMITED(TX, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG_LIMITED(TX, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG_LIMITED(TX, TRACE, "Packet interval too close");
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG_LIMITED(TX, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, WARN, "prSkb == NULL in tx\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, ERROR, "%s MemAlloc Fail\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(INIT, INFO, "%s:%u starts running...\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(INIT, INFO, "hif_thread should stop now...\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:				DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:				/* DBGLOG(INIT, INFO, ("HIF Interrupt!\n")); */
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(INIT, TRACE, "%s:%u stopped!\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, ERROR, "%s MemAlloc Fail\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(INIT, INFO, "%s:%u starts running...\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(INIT, INFO, "rx_thread should stop now...\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(INIT, TRACE, "%s:%u stopped!\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, ERROR, "%s MemAlloc Fail\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(INIT, INFO, "%s:%u starts running...\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(INIT, INFO, "%s should stop now...\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(INIT, INFO, "%s should stop now...\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:				DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:						DBGLOG(INIT, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(INIT, TRACE, "%s:%u stopped!\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(INIT, INFO, "glLoadNvram fail\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, TRACE, "kalFileOpen() fail: %ld\n", errval);
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, INFO, "path %s, size=%u\n", pucPath, u4ReadSize);
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, INFO, "kalRequestFirmware %s Fail, errno[%d]!!\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(INIT, INFO, "kalRequestFirmware(): %s OK\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:			/* ToDo:: DBGLOG */
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(AIS, ERROR, "prChannel is NULL, return!");
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(AIS, ERROR, "prChannel is NULL, return!");
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(AIS, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(AIS, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	scanlog_dbg(LOG_SCHED_SCAN_DONE_D2K, INFO, "Call cfg80211_sched_scan_results\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	/* DBGLOG(SCN, INFO, ("-->kalSchedScanStopped\n" )); */
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SCN, INFO, "Driver triggerd %d\n", fgDriverTriggerd);
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(SCN, INFO, "start work queue to send event\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(SCN, INFO, "main_thread return from %s\n", __func__);
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(INIT, WARN, "SPM didn't define slp_get_wake_reason()!\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(INIT, WARN, "SPM didn't define spm_get_last_wakeup_src()!\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(REQ, WARN, "%s: Fail to set network address\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(REQ, WARN, "%s: unexpected prGlueInfo(0x%p)!\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, WARN, "Invalid Ether packet length: %u\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(INIT, WARN, "Invalid IPv4 packet length: %u\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(INIT, WARN, "Invalid IPv4 packet version: %u\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:				DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, INFO, "MET_PROF: Write MET PROC Enable=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, INFO, "MET_PROF: Write MET PROC UDP_PORT=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, INFO, "init proc fs fail: proc_net == NULL\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(REQ, ERROR, "%s allocate skb failed\n", __func__);
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	/* DBGLOG(CCX, INFO, ("WLAN_STATUS_AGPS_NOTIFY, cmd=%d\n", cmd)); */
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(INIT, WARN, "CONFIG_NL80211_TESTMODE not enabled\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(PF, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(PF, INFO, "profile wow=%d, GpioInterval=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(PF, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(PF, INFO, "IPV4/UDP port[%d]=%d\n", ii,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(PF, INFO, "IPV4/TCP port[%d]=%d\n", ii,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(PF, INFO, "IPV6/UDP port[%d]=%d\n", ii,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(PF, INFO, "IPV6/TCP port[%d]=%d\n", ii,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, WARN, "ulPerfMonFlag:0x%lx\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, WARN, "ulLastTxBytes:%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, WARN, "ulLastRxBytes:%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, WARN, "ulP2PLastTxBytes:%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, WARN, "ulP2PLastRxBytes:%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, WARN, "ulThroughput:%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, WARN, "u4UpdatePeriod:%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, WARN, "u4TarPerfLevel:%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, WARN, "u4CurrPerfLevel:%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, WARN, "netStats tx_bytes:%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, WARN, "netStats tx_bytes:%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, WARN, "p2p netStats tx_bytes:%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, WARN, "p2p netStats tx_bytes:%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(SW4, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(SW4, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, TRACE, "enter %s\n", __func__);
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(SW4, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, TRACE, "exit %s\n", __func__);
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, INFO, "enter %s\n", __func__);
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(SW4, TRACE, "need to stop before disable\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, TRACE, "exit %s\n", __func__);
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, INFO, "enter %s\n", __func__);
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, TRACE, "exit %s\n", __func__);
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, TEMP, "enter %s\n", __func__);
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, INFO, "perf monitor started\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, TRACE, "enter %s\n", __func__);
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(SW4, TRACE, "perf monitor disabled\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(SW4, TRACE, "perf monitor already stopped\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, TRACE, "exit %s\n", __func__);
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, TRACE, "enter kalPerMonHandler\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(SW4, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:			DBGLOG(SW4, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, TRACE, "exit kalPerMonHandler\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	LOGBUF(pucBuf, u4Max, u4Len,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	LOGBUF(pucBuf, u4Max, u4Len,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	LOGBUF(pucBuf, u4Max, u4Len,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	LOGBUF(pucBuf, u4Max, u4Len, "Total: %3lu.%03lu mbps\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	LOGBUF(pucBuf, u4Max, u4Len,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, WARN, "enter kalBoostCpu\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, WARN, "enter kalGetCpuBoostThreshold\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, INFO, "NO firmware flavor build.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, WARN, "EMI MPU function is not defined\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, WARN, "EMI MPU function is not defined\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(SW4, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(SW4, WARN, "Register wlan_fb_notifier failed:%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(SW4, TRACE, "Register wlan_fb_notifier succeed\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		scanlog_dbg(LOG_SCAN_REQ_K2D, INFO, "Can't allocate memory\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	scanlog_dbg(LOG_SCAN_REQ_K2D, INFO, "Scan flags=0x%x [mac]addr="
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	scanlog_dbg(LOG_SCAN_REQ_K2D, INFO, "Scan flags=0x%x %s\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		LOG_SCAN_RESULT_D2K,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		LOG_SCAN_DONE_D2K, logBufLen);
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(P2P, INFO, "switch channel band: %d, freq: %d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(SAA, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:		DBGLOG(SAA, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_kal.c:	DBGLOG(AIS, INFO, "[WPA3] "MACSTR" %s %d %d %02x-%02x-%02x-%02x",
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:#if CFG_ENABLE_PER_STA_STATISTICS_LOG
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:#if CFG_ENABLE_PER_STA_STATISTICS_LOG
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(P2P, ERROR, "prP2PDevInfo error\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(P2P, TRACE, "prP2PDevInfo ok\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(P2P, ERROR, "prP2PInfo error\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(P2P, TRACE, "prP2PInfo ok\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:	DBGLOG(P2P, ERROR, "[fail!]p2PAllocInfo :fail\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:#if CFG_ENABLE_PER_STA_STATISTICS_LOG
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(P2P, ERROR, "ucIdx=%d is invalid\n", ucIdx);
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(P2P, ERROR, "prAdapter->prP2pInfo is NULL\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:#if CFG_ENABLE_PER_STA_STATISTICS_LOG
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, WARN, "unable to register netdevice for p2p\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:			DBGLOG(INIT, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(P2P, INFO, "P2P 2nd interface work\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:			DBGLOG(INIT, INFO, "unregister p2p[%d]\n", ucRoleIdx);
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, INFO, "unregister p2pdev[%d]\n", ucRoleIdx);
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:	DBGLOG(INIT, TRACE, "setup the p2p dev\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, ERROR, "parameter is NULL!!\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, ERROR, "prAdapter/prHif is NULL!!\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, ERROR, "u4Idx(%d) is out of range!!\n", u4Idx);
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, WARN, "Allocate memory for p2p FAILED\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:	DBGLOG(P2P, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:			DBGLOG(P2P, ERROR, "gprP2pRoleWdev[%d] is NULL\n", i);
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, INFO, "glRegisterP2P(%d), fgIsApMode(%d)\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:			DBGLOG(INIT, WARN, "unable to allocate ndev for p2p\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, INFO, "Set p2p role[%d] mac to " MACSTR "\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:			DBGLOG(INIT, WARN, "glSetupP2P FAILED\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:			DBGLOG(INIT, ERROR, "P2P[%d] parent dev is NULL\n", i);
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(P2P, ERROR, "unable to allocate wiphy for p2p\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, WARN, "fail to register wiphy to driver\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(P2P, ERROR, "allocate p2p wdev fail, no memory\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:	DBGLOG(INIT, INFO, "glP2pCreateWirelessDevice (%p)\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(P2P, ERROR, "unable to allocate wiphy for p2p\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, WARN, "fail to register wiphy for p2p\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:			DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, WARN, "fail to register wiphy to driver\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, WARN, "The ucIdx (%d) is a wrong value\n", ucIdx);
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:			DBGLOG(P2P, INFO, "aprRoleHandler idx %d set NULL\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:					DBGLOG(INIT, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:			DBGLOG(INIT, ERROR, "p2PFreeInfo FAILED\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:	/*DBGLOG(INIT, INFO, "p2pStop and ucRoleIdx = %u\n", ucRoleIdx);*/
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, INFO, "p2pStop and abort scan!!\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(P2P, TRACE, "SEt Multicast Address List\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(P2P, ERROR, "prGlueInfo is NULL\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(P2P, ERROR, "Adapter is not ready\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, WARN, "Unexpected ioctl command: 0x%04x\n", i4Cmd);
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:			DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, ERROR, "Set macaddr with ndev(%d) and addr(%d)\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, ERROR, "can't find the matched dev");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, ERROR, "can't find the matched bss");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, ERROR, "bss is not active\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, ERROR, "dev bss is not active\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, ERROR, "p2p info is null\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p.c:		DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_rst.c:				DBGLOG(INIT, WARN, "Whole chip reset start!\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_rst.c:				DBGLOG(INIT, WARN, "Whole chip reset end!\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_rst.c:				DBGLOG(INIT, WARN, "Whole chip reset fail!\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_rst.c:		DBGLOG(INIT, INFO, "keyword is null\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_rst.c:		DBGLOG(INIT, INFO, "reset keyword is %s\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_rst.c:	DBGLOG(INIT, INFO, "reset result %d, trigger flag 0x%x\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_rst.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_kal.c:			DBGLOG(P2P, TRACE, "Re-invoke Persistent Group\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_kal.c:	DBGLOG_MEM8(SEC, LOUD,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_kal.c:			DBGLOG(P2P, WARN, "prIEEE80211ChnlStruct is NULL\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_kal.c:		DBGLOG(P2P, TRACE, "kalP2PIndicateChannelExpired\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_kal.c:			DBGLOG(P2P, WARN, "prIEEE80211ChnlStruct is NULL\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_kal.c:		DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_kal.c:			DBGLOG(INIT, TRACE, "DBG:p2p_cfg_scan_done\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_kal.c:			DBGLOG(P2P, TRACE, "Unknown channel info\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_kal.c:			DBGLOG(P2P, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_kal.c:			DBGLOG(P2P, WARN,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_kal.c:			DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_kal.c:			DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_kal.c:			DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_kal.c:			DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_kal.c:		DBGLOG(P2P, TRACE, "from: " MACSTR ", netdev: %p\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_kal.c:	DBGLOG(INIT, INFO, "Radar Detection event\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_kal.c:		DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_kal.c:		DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_kal.c:	DBGLOG(INIT, INFO, "CAC Finished event\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_kal.c:		DBGLOG(INIT, INFO, "kalP2PCacFinishedUpdate: Update to OS\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_kal.c:		DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_kal.c:				DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_kal.c:				DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_kal.c:				DBGLOG(P2P, WARN, MACSTR
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_kal.c:	DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_kal.c:	DBGLOG(P2P, INFO, "bssid: " MACSTR "\n", MAC2STR(aucBSSID));
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_kal.c:	DBGLOG(P2P, INFO, "Indicate queued p2p action frame.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_kal.c:		DBGLOG(P2P, WARN, "Frame pointer is null or length is 0.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_kal.c:		DBGLOG(P2P, ERROR, "p2p glue info null.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_kal.c:		DBGLOG(P2P, ERROR, "unsupport width: %d.\n", ch_width);
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_kal.c:	DBGLOG(P2P, INFO, "r=%d, c=%d, s=%d, s0=%d, s1=%d, ch_w=%d\n",
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_kal.c:		DBGLOG(P2P, ERROR, "allocate vendor event fail.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_kal.c:		DBGLOG(P2P, ERROR, "put primary channel fail.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_kal.c:		DBGLOG(P2P, ERROR, "put secondary channel fail.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_kal.c:		DBGLOG(P2P, ERROR, "put vht seg0 fail.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_kal.c:		DBGLOG(P2P, ERROR, "put vht seg1 fail.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_kal.c:		DBGLOG(P2P, ERROR, "put ch width fail.\n");
connectivity/common/wlan/core/gen4m/os/linux/gl_p2p_kal.c:		DBGLOG(P2P, ERROR, "put hw mode fail.\n");
connectivity/common/wlan/core/gen4m/nic/nic_rate.c:	DBGLOG(NIC, LOUD,
connectivity/common/wlan/core/gen4m/nic/nic_rate.c:	DBGLOG(NIC, LOUD,
connectivity/common/wlan/core/gen4m/nic/nic_pwr_mgt.c:		DBGLOG(INIT, ERROR, "Chip id verify error!\n");
connectivity/common/wlan/core/gen4m/nic/nic_pwr_mgt.c:			DBGLOG(INIT, ERROR, "nicInitializeAdapter failed!\n");
connectivity/common/wlan/core/gen4m/nic/nic_pwr_mgt.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/nic/nic_pwr_mgt.c:					DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/nic/nic_pwr_mgt.c:		DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/nic/nic_pwr_mgt.c:				DBGLOG(INIT, TRACE, "Ready bit asserted\n");
connectivity/common/wlan/core/gen4m/nic/nic_pwr_mgt.c:				DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO, "=========== Before ===========\n");
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, INFO, "u2Phi11 = 0x%x\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, INFO, "ucPsi21 = 0x%x\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, INFO, "u2Phi21 = 0x%x\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, INFO, "ucPsi31 = 0x%x\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, INFO, "u2Phi31 = 0x%x\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, INFO, "ucPsi41 = 0x%x\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, INFO, "u2Phi22 = 0x%x\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, INFO, "ucPsi32 = 0x%x\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, INFO, "u2Phi32 = 0x%x\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, INFO, "ucPsi42 = 0x%x\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, INFO, "u2Phi33 = 0x%x\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, INFO, "ucPsi43 = 0x%x\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, INFO, "u2dSNR00 = 0x%x\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, INFO, "u2dSNR01 = 0x%x\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, INFO, "u2dSNR02 = 0x%x\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, INFO, "u2dSNR03 = 0x%x\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, ERROR, "pucEventBuf is NULL.\n");
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, ERROR, "cmd %u seq #%u not oid!",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO, "ProfileID = %d Invalid status = %d\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO, "0:iBF / 1:eBF = %d\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO, "0:SU / 1:MU = %d\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO, "DBW(0/1/2/3 BW20/40/80/160NC) = %d\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO, "RMSD = %d\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO, "Smart Ant Cfg = %d\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO, "SE index = %d\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO, "RMSD Threshold = %d\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO, "iBF lifetime limit(unit:4ms) = 0x%x\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, ERROR, "pucEventBuf is NULL.\n");
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, ERROR, "cmd %u seq #%u not oid!\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO, " event id : %x\n", prGetQd->u4EventId);
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, INFO, "au4RawData[%d]: %x\n", i,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, ERROR, "pucEventBuf is NULL.\n");
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, ERROR, "cmd %u seq #%u not oid!\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO, " event id : %x\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:			DBGLOG(INIT, INFO, " lq_report[%d][%d]: %x\n", i, j,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, ERROR, "pucEventBuf is NULL.\n");
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, ERROR, "cmd %u seq #%u not oid!\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO, " event id : %x\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO, "index = %x numUser = %x\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO, "BW = %x NS0/1/ = %x/%x\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO, "PFIDUser0/1 = %x/%x\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO, "initMcsUser0/1 = %x/%x\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO, "dMcsUser0: 0/1/ = %x/%x\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:			DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(REQ, INFO, "%s: RespTyep  %u\n", __func__,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(REQ, INFO, "%s: u2MsgSize %u\n", __func__,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:			DBGLOG(REQ, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(REQ, TRACE,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(REQ, TRACE,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:			DBGLOG(P2P, TRACE,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(REQ, WARN, "%s: load manufacture data fail\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(REQ, WARN, "%s: load manufacture data fail\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	 *  DBGLOG(SCN, INFO, "--->nicCmdEventSetStopSchedScan\n" ));
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	 *  DBGLOG(SCN, INFO, "<--kalSchedScanStopped\n" );
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(SCN, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO, "MT6632 : QA_AGENT GetIQData i = %d\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, ERROR, "kmalloc failed.\n");
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RFTEST, INFO, "%s\n", __func__);
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RFTEST, INFO, "Reason = %d\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RFTEST, INFO, "Action = %d\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RFTEST, INFO, "NeedResp = %d\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RFTEST, INFO, "FragNum = %d\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RFTEST, INFO, "RomRam = %d\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RFTEST, INFO, "ThermalValue = %d\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RFTEST, INFO, "Address = 0x%08x\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RFTEST, INFO, "Length = %d\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RFTEST, INFO, "RemainLength = %d\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:			DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:			DBGLOG(RFTEST, INFO, "Thermal Temp = %d\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, INFO, ": ==> gen done_file\n");
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:			DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(SCN, TRACE, "nicCmdEventBatchScanResult");
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(HAL, INFO, "%s: EVENT_ID_HIF_CTRL\n", __func__);
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(HAL, INFO, "prEventHifCtrl->ucHifType = %hhu\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(HAL, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:#if CFG_ENABLE_PER_STA_STATISTICS_LOG
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(P2P, ERROR,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:			DBGLOG(NIC, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(NIC, ERROR, "FW's event is NOT valid.\n");
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO, "[RDD]0x%08x %08d[RDD%d]\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RSN, TRACE, "MT6632 : nicCmdEventQueryWlanInfo\n");
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RSN, TRACE, "MT6632 : nicCmdEventQueryMibInfo\n");
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO, "A DieID = 0x%x\n", prAdieHwVer->u2ProductID);
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG_LIMITED(INIT, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(P2P, WARN,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, ERROR, "kmalloc failed.\n");
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:			DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RFTEST, INFO, "prCalArray[%d] address [%p]\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:			DBGLOG(RFTEST, ERROR, "convert fail: ucData[1]\n");
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:			DBGLOG(RFTEST, ERROR, "convert fail: ucData[11]\n");
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:			DBGLOG(RFTEST, ERROR, "convert fail: ucData[20] %s\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(RFTEST, TRACE, "[0x%08x][0x%08x][0x%08x]\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RFTEST, INFO, "prICapEvent->u4PktNum = %d\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(RFTEST, WARN,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(RFTEST, ERROR,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:			DBGLOG(RFTEST, WARN, "Data[%d] : %x\n", Idxi,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, INFO, ": ==> gen done_file\n");
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(INIT, INFO, ": ==> gen done_file\n");
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RFTEST, INFO, "prResult->u4FuncIndex = %d\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(RFTEST, INFO, "prCapStatus->u4CapDone = %d\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(RFTEST, WARN, "Unknown rf test event, ignore\n");
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(NIC, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RSN, EVENT, "EVENT_ID_MIC_ERR_INFO\n");
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(RSN, INFO, "No STA rec!!\n");
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(INIT, INFO, "EVENT_ID_SCHED_SCAN_DONE\n");
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RSN, TRACE, "EVENT_ID_WLAN_INFO");
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RSN, TRACE, "EVENT_ID_MIB_INFO");
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(NIC, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(NIC, INFO, "Policy 1 hit, RX in the past duration");
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(NIC, INFO, "valid beacon time out event?: %d", bValid);
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(NIC, INFO, "EVENT_ID_BSS_BEACON_TIMEOUT\n");
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(NIC, INFO, "Reason code: %d\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:			DBGLOG(RX, ERROR,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(NIC, INFO, "EVENT_ID_STA_AGING_TIMEOUT: STA[%u] "
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(NIC, LOUD,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(NIC, INFO, "%s\n", __func__);
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RX, TRACE, "nicRx: aucAddr1: " MACSTR "\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RX, TRACE, "nicRx: aucAddr2: " MACSTR "\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(RX, ERROR, "Send Deauth Error\n");
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RSN, EVENT, "BCM BWCS Event: %02x%02x%02x%02x\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RSN, EVENT, "BCM FW status: %02x%02x%02x%02x\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RSN, TRACE, "EVENT_ID_ADD_PKEY_DONE BSSIDX=%d " MACSTR
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:			DBGLOG(RX, TRACE, "WEP, ucKeyAlgorithmId= %d\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:				DBGLOG(RX, TRACE,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:			DBGLOG(RX, TRACE,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(RSN, INFO, "STA " MACSTR " Add Key Done!!\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RFTEST, INFO, "%s\n", __func__);
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(RFTEST, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(RFTEST, INFO, "Thermal Temp = %d\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(RSN, WARN, "prEventDebugMsg is NULL\n");
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RX, TRACE, "EVENT_ID_RSSI_MONITOR value=%d\n", rssi);
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(SW4, INFO, "%s: EVENT_ID_DUMP_MEM\n", __func__);
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(NIC, INFO, ": ==> 1\n");
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(NIC, INFO, ": ==> 2\n");
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:			DBGLOG(NIC, ERROR,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:			DBGLOG(NIC, ERROR,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:				DBGLOG(NIC, ERROR, "kalOpenCorDumpFile fail\n");
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:				DBGLOG(NIC, ERROR, "[DUMP_N9]%s:\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:					DBGLOG(NIC, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:			DBGLOG(NIC, ERROR,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:			DBGLOG(NIC, ERROR,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:				DBGLOG(NIC, ERROR, "kalOpenCorDumpFile fail\n");
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:				DBGLOG(NIC, ERROR, "[DUMP_CR4]%s:\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:					DBGLOG(NIC, ERROR,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(RLM, INFO, "%s: EVENT_ID_RDD_SEND_PULSE\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(NIC, LOUD, "%s\n", __func__);
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(NIC, INFO, "Coex:BSS[%d]R:%d\n", i,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(NIC, INFO, "Smart Gear SISO:%d, WF:%d\n",
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:			DBGLOG(NIC, TRACE,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG(NIC, WARN, "Wlan setaddkey timeout.\n");
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(NIC, LOUD,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(NIC, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(NIC, WARN,
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:		DBGLOG(REQ, ERROR, "cmdinfo->flgIsoid\n");
connectivity/common/wlan/core/gen4m/nic/nic_cmd_event.c:	DBGLOG_LIMITED(NIC, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:				DBGLOG(TX, ERROR,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:				DBGLOG(TX, ERROR,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:				DBGLOG(TX, ERROR,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:			DBGLOG(TX, ERROR,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:			DBGLOG(TX, ERROR,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:			DBGLOG(TX, ERROR,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:			DBGLOG(TX, ERROR, "Total resource[%u]\n",
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:	DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG(TX, TEMP,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:			DBGLOG(TX, TRACE,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:	DBGLOG(TX, TRACE,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG(TX, TRACE, "Set TC%u Default[%u] Max[%u] Free[%u]\n",
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG(TX, TRACE,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:			DBGLOG(TX, TRACE,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:			DBGLOG(TX, TRACE,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:	DBGLOG(TX, TRACE,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG(TX, TRACE,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:	DBGLOG(TX, TRACE,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG(TX, TRACE,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG(INIT, WARN, "Undefined Frame Type(%u)\n",
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG(INIT, WARN, "Undefined CMD Type(%u)\n",
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:	DBGLOG_LIMITED(NIC, LOUD, "%s\n", aucLogBuf);
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:	DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:				DBGLOG(RSN, LOUD,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:			DBGLOG(RSN, LOUD, "Protect BMC frame!\n");
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG_LIMITED(NIC, INFO, "Compose TXD by Msdu info\n");
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:	DBGLOG(QM, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:			DBGLOG(QM, TRACE, "STA[%u] TID[%u] TxDTemp[0x%p]\n",
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:				DBGLOG(QM, TRACE,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:	DBGLOG(QM, TRACE, "Free TXD template for STA[%u] QoS[%u]\n",
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:	DBGLOG(QM, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG_LIMITED(INIT, TRACE,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:			DBGLOG(TX, TRACE,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG(TX, LOUD,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG(TX, LOUD,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG_LIMITED(TX, WARN, "MSDU prPacket is null\n");
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG_LIMITED(TX, WARN, "MSDU u2FrameLength is 0\n");
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG_LIMITED(TX, WARN, "MSDU ucMacHeaderLength is 0\n");
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:			DBGLOG_LIMITED(NIC, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:			DBGLOG(NIC, TRACE,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:				DBGLOG_LIMITED(NIC, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:				DBGLOG(NIC, TRACE,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:				DBGLOG_LIMITED(NIC, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:				DBGLOG(NIC, TRACE,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:				DBGLOG_LIMITED(NIC, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:				DBGLOG(NIC, TRACE,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG(NIC, TRACE,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:	DBGLOG(NIC, TRACE,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:				DBGLOG(TX, WARN,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:					DBGLOG(TX, TRACE,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG(TX, WARN,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG(INIT, WARN, "Undefined CMD Type(%u)\n",
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:		/* DBGLOG(RSN, INFO, "MSDU_OPT_PROTECTED_FRAME\n"); */
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:				DBGLOG(NIC, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG(TX, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG(TX, INFO, "prMsduInfo empty\n");
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG(TX, INFO, "prStaRec empty\n");
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG(TX, INFO, "fgIsInPS!\n");
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG(TX, INFO, "prMsduInfo empty\n");
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG(TX, INFO, "fgIsNetAbsent!\n");
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:				DBGLOG(TX, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:				DBGLOG(TX, INFO, "fgIsNetAbsent NoQuota\n");
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:			DBGLOG(TX, INFO, "fgIsNetAbsent END!\n");
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:			DBGLOG(QM, TRACE,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:			DBGLOG(QM, TRACE, "Drop the Packet for no STA_REC\n");
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:				DBGLOG(TX, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:		DBGLOG(TX, INFO, "fgHasNoMsdu FALSE\n");
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:				DBGLOG(TX, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:				DBGLOG(TX, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:			DBGLOG(TX, INFO, "cnmPktAlloc NULL\n");
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:				DBGLOG(TX, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_tx.c:	DBGLOG(TX, INFO, "Data Packets in Aci %d will route to %s\n", ucAci,
connectivity/common/wlan/core/gen4m/nic/nic.c:		DBGLOG(INIT, ERROR, \
connectivity/common/wlan/core/gen4m/nic/nic.c:	DBGLOG(INIT, TRACE, "Alloc %u bytes, addr = 0x%p for %s.\n", \
connectivity/common/wlan/core/gen4m/nic/nic.c:			DBGLOG(INIT, ERROR,
connectivity/common/wlan/core/gen4m/nic/nic.c:		DBGLOG(REQ, ERROR, "prAdapter is NULL!!");
connectivity/common/wlan/core/gen4m/nic/nic.c:		DBGLOG(REQ, WARN,
connectivity/common/wlan/core/gen4m/nic/nic.c:		/* DBGLOG(INIT, TRACE, ("u4IntStatus: 0x%x\n", u4IntStatus)); */
connectivity/common/wlan/core/gen4m/nic/nic.c:				DBGLOG(INTR, WARN,
connectivity/common/wlan/core/gen4m/nic/nic.c:	/* DBGLOG(INIT, TRACE, ("u4SwIntrBitmap: 0x%08x\n", u4SwIntrBitmap)); */
connectivity/common/wlan/core/gen4m/nic/nic.c:		DBGLOG(TX, TRACE,
connectivity/common/wlan/core/gen4m/nic/nic.c:		DBGLOG(TX, WARN,
connectivity/common/wlan/core/gen4m/nic/nic.c:			DBGLOG(TX, TRACE,
connectivity/common/wlan/core/gen4m/nic/nic.c:			DBGLOG(TX, TRACE,
connectivity/common/wlan/core/gen4m/nic/nic.c:		DBGLOG(BSS, INFO, "Return Invalid Channelnum = 0.\n");
connectivity/common/wlan/core/gen4m/nic/nic.c:	DBGLOG_LIMITED(RSN, INFO,
connectivity/common/wlan/core/gen4m/nic/nic.c:		DBGLOG_LIMITED(RSN, WARN,
connectivity/common/wlan/core/gen4m/nic/nic.c:	DBGLOG_LIMITED(RSN, INFO,
connectivity/common/wlan/core/gen4m/nic/nic.c:	DBGLOG(RSN, TRACE, "Update BSS BMC WlanIdx %u\n",
connectivity/common/wlan/core/gen4m/nic/nic.c:	DBGLOG(BSS, INFO,
connectivity/common/wlan/core/gen4m/nic/nic.c:		DBGLOG(BSS, TRACE, "nicUpdateBss for disconnect state\n");
connectivity/common/wlan/core/gen4m/nic/nic.c:	DBGLOG(NIC, INFO,
connectivity/common/wlan/core/gen4m/nic/nic.c:	DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/nic/nic.c:		DBGLOG(NIC, TRACE,
connectivity/common/wlan/core/gen4m/nic/nic.c:		DBGLOG(INIT, INFO, "Enable CAM BssIndex:%d, PowerMode:%d\n",
connectivity/common/wlan/core/gen4m/nic/nic.c:		DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/nic/nic.c:	DBGLOG(INIT, TRACE, "nicEnterCtiaMode: %d\n", fgEnterCtia);
connectivity/common/wlan/core/gen4m/nic/nic.c:	DBGLOG(INIT, INFO, "nicEnterCtiaModeOfScan: %d\n",
connectivity/common/wlan/core/gen4m/nic/nic.c:	DBGLOG(INIT, INFO, "nicEnterCtiaModeOfRoaming: %d\n",
connectivity/common/wlan/core/gen4m/nic/nic.c:	DBGLOG(INIT, INFO, "nicEnterCtiaModeOfCAM: %d\n",
connectivity/common/wlan/core/gen4m/nic/nic.c:	DBGLOG(INIT, INFO, "nicEnterCtiaModeOfBCNTimeout: %d\n",
connectivity/common/wlan/core/gen4m/nic/nic.c:	DBGLOG(INIT, INFO, "nicEnterCtiaModeOfAutoTxPower: %d\n",
connectivity/common/wlan/core/gen4m/nic/nic.c:	DBGLOG(INIT, INFO, "nicEnterCtiaModeOfFIFOFullNoAck: %d\n",
connectivity/common/wlan/core/gen4m/nic/nic.c:	DBGLOG(INIT, LOUD, "\n");
connectivity/common/wlan/core/gen4m/nic/nic.c:		DBGLOG(NIC, INFO,
connectivity/common/wlan/core/gen4m/nic/nic.c:		DBGLOG(INIT, ERROR, "Unknown IeUpdMethod.\n");
connectivity/common/wlan/core/gen4m/nic/nic.c:		DBGLOG(INIT, ERROR, "Allocate CMD_INFO_T ==> FAILED.\n");
connectivity/common/wlan/core/gen4m/nic/nic.c:	DBGLOG(REQ, TRACE, "ucCmdSeqNum =%d\n", ucCmdSeqNum);
connectivity/common/wlan/core/gen4m/nic/nic.c:	DBGLOG(QM, TRACE, "Update WMM parameters for BSS[%u]\n",
connectivity/common/wlan/core/gen4m/nic/nic.c:	DBGLOG(QM, TRACE, "sizeof(struct AC_QUE_PARMS): %zu\n",
connectivity/common/wlan/core/gen4m/nic/nic.c:	DBGLOG(QM, TRACE, "sizeof(CMD_UPDATE_WMM_PARMS): %zu\n",
connectivity/common/wlan/core/gen4m/nic/nic.c:	DBGLOG(QM, TRACE, "sizeof(struct WIFI_CMD): %zu\n",
connectivity/common/wlan/core/gen4m/nic/nic.c:	DBGLOG_LIMITED(QM, INFO, "ucTxMsduQueue:[%u], u4TxHifRes[%d]",
connectivity/common/wlan/core/gen4m/nic/nic.c:	DBGLOG(INIT, INFO, "ArParam %u %u %u %u\n",
connectivity/common/wlan/core/gen4m/nic/nic.c:	DBGLOG(INIT, INFO, "ArVer %u AbwVer %u AgiVer %u\n", ucArVer, ucAbwVer, ucAgiVer);
connectivity/common/wlan/core/gen4m/nic/nic.c:	DBGLOG(INIT, INFO, "HtMask %x LegacyMask %x\n", u2HtClrMask, u2LegacyClrMask);
connectivity/common/wlan/core/gen4m/nic/nic.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/nic/nic.c:				DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/nic/nic.c:	DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/nic/nic.c:	DBGLOG(NIC, WARN, "SER: Stop HIF Tx/Rx!\n");
connectivity/common/wlan/core/gen4m/nic/nic.c:	DBGLOG(NIC, WARN, "SER: Stop HIF Tx!\n");
connectivity/common/wlan/core/gen4m/nic/nic.c:	DBGLOG(NIC, WARN, "SER: Start HIF T/R!\n");
connectivity/common/wlan/core/gen4m/nic/nic.c:		DBGLOG(NIC, INFO, "SER beacon frame is updated\n");
connectivity/common/wlan/core/gen4m/nic/nic.c:	DBGLOG(NIC, TRACE, "ucProtocolType=%d, ucProtocolSubType=%d\n",
connectivity/common/wlan/core/gen4m/nic/nic.c:	DBGLOG(NIC, TRACE, "ucProtocolType=%d, ucProtocolSubType=%d\n",
connectivity/common/wlan/core/gen4m/nic/cmd_buf.c:	DBGLOG_LIMITED(NIC, INFO, "Dump CMD info for %s, Elem number:%u\n",
connectivity/common/wlan/core/gen4m/nic/cmd_buf.c:			DBGLOG_LIMITED(NIC, INFO, "CID:%d SEQ:%d\n",
connectivity/common/wlan/core/gen4m/nic/cmd_buf.c:			DBGLOG_LIMITED(NIC, INFO,
connectivity/common/wlan/core/gen4m/nic/cmd_buf.c:			DBGLOG_LIMITED(NIC, INFO,
connectivity/common/wlan/core/gen4m/nic/cmd_buf.c:		DBGLOG_LIMITED(NIC, INFO,
connectivity/common/wlan/core/gen4m/nic/cmd_buf.c:		DBGLOG(NIC, INFO, "Tc4 number:%d\n",
connectivity/common/wlan/core/gen4m/nic/cmd_buf.c:		DBGLOG(MEM, LOUD,
connectivity/common/wlan/core/gen4m/nic/cmd_buf.c:		DBGLOG(MEM, ERROR,
connectivity/common/wlan/core/gen4m/nic/cmd_buf.c:		DBGLOG(MEM, LOUD, "CMD[0x%p] freed! Rest[%u]\n", prCmdInfo,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RX, ERROR,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(RX, TRACE, "HIF_RX_HDR_FLAG_802_11_FORMAT\n");
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(RX, TRACE, "HIF_RX_HDR_FLAG_DO_REORDERING\n");
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RX, TRACE, "HIF_RX_HDR_FLAG_BAR_FRAME\n");
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(RX, TRACE, "u2SSN = %d, ucTid = %d\n",
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(RX, TRACE, "HIF_RX_HDR_FLAG_AMP_WDS\n");
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:	DBGLOG_LIMITED(RX, LOUD,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:	DBGLOG_LIMITED(RX, LOUD,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RX, LOUD,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RX, LOUD,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RX, LOUD,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(RX, LOUD, "rxDefragMPDU first\n");
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(RX, LOUD,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:				DBGLOG(RX, LOUD, "Defrag: finished\n");
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:				DBGLOG(RX, LOUD, "Defrag: mid fraged\n");
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:	/* DBGLOG_MEM8(RXM, INFO, */
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RX, LOUD, "RX: SC=0x%X (BA Entry present)\n",
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RXM, LOUD,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:				DBGLOG(RXM, LOUD,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:				DBGLOG(RX, WARN,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RX, LOUD, "RXM: SC= 0x%x (Cache[%u] updated)\n",
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:				DBGLOG(RX, LOUD,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(RX, LOUD, "RXM: SC= 0x%x (Cache[%u] updated)\n",
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:	/* DBGLOG(RX, TRACE, ("\n")); */
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:	/* DBGLOG(RX, INFO, ("fgIsRetained = %d\n", fgIsRetained)); */
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(RX, ERROR,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(RX, WARN,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RX, WARN,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG_LIMITED(RX, WARN,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:	DBGLOG_LIMITED(RX, TRACE, "to forward packet: %d,%d,%d,%d,%d\n",
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(QM, INFO, "No Tx MSDU_INFO for forwarding frames\n");
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(RX, WARN,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(RX, WARN,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RX, WARN,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(SW4, WARN,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(NIC, WARN, "u4Status: %d\n", u4Status);
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:	DBGLOG(NIC, TRACE,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:	/* DBGLOG(INIT, TRACE, ("\n")); */
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG_LIMITED(RSN, TRACE,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:				DBGLOG(RSN, EVENT, "MIC_ERR_PKT\n");
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RSN, EVENT, ("LLC_MIS_ERR\n"));
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG_LIMITED(RX, TRACE,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(NIC, TRACE,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RX, TRACE,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(RX, WARN,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:	/* DBGLOG(INIT, TRACE, ("\n")); */
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(RX, WARN,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG_MEM8(RX, WARN, (uint8_t *) prSwRfb->prRxStatus,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG_MEM8(RX, WARN, (uint8_t *) prSwRfb->pvHeader,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:				DBGLOG(P2P, WARN,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RSN, EVENT, "EVENT_ID_MIC_ERR_INFO\n");
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:				DBGLOG(RSN, INFO, "No STA rec!!\n");
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(INIT, INFO, "EVENT_ID_NLO_DONE\n");
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:				DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:				DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:				DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RSN, INFO, "EVENT_ID_WLAN_INFO");
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RSN, INFO, "EVENT_ID_MIB_INFO");
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(INIT, INFO, "EVENT_ID_BSS_BEACON_TIMEOUT\n");
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:				DBGLOG(INIT, INFO, "Reason code: %d\n",
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:					DBGLOG(RX, ERROR,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:				DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RX, INFO, "nicRx: aucAddr1: " MACSTR "\n",
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RX, INFO, "nicRx: aucAddr2: " MACSTR "\n",
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RX, INFO, "Send Deauth Error\n");
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RSN, EVENT, "BCM BWCS Event: %02x%02x%02x%02x\n",
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RSN, EVENT, "BCM FW status: %02x%02x%02x%02x\n",
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RSN, EVENT,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:				DBGLOG(RSN, EVENT,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(SW4, TRACE,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:					DBGLOG(SW4, INFO, "<FW>%s\n", pucMsg);
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:					DBGLOG(SW4, INFO, "<FW>Dump MEM8\n");
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:					DBGLOG_MEM8(SW4, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:					DBGLOG(SW4, INFO, "<FW>Dump MEM32\n");
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:					DBGLOG_MEM32(SW4, INFO, pucMsg,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:				DBGLOG(SW4, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(SCN, TRACE, "Got EVENT_ID_BATCH_RESULT");
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(INIT, INFO, "%s: EVENT_ID_DUMP_MEM\n", __func__);
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:				DBGLOG(INIT, INFO, ": ==> 1\n");
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:				DBGLOG(INIT, INFO, ": ==> 2\n");
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(INIT, INFO, "%s: EVENT_ID_RDD_SEND_PULSE\n",
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(INIT, WARN,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:				DBGLOG(SW4, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:				DBGLOG_MEM8(SW4, TRACE,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RSN, INFO, "[MFP] RX with BIP ICV ERROR\n");
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RSN, INFO, "[MFP] RX with ICV ERROR\n");
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:				DBGLOG(RX, WARN,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RX, ERROR,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:				DBGLOG(RX, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RX, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RX, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RX, WARN,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG_MEM8(RX, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RX, INFO, "Event 0x%02x wakeup host\n",
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:				DBGLOG(RX, ERROR,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RX, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RX, ERROR,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(RX, WARN, "Unknown Packet %d wakeup host\n",
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:				DBGLOG(RX, WARN, "Rx process RFBs timeout\n");
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:						DBGLOG(RX, ERROR,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:						DBGLOG_MEM8(RX, ERROR,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:					DBGLOG(RX, ERROR, "ucPacketType = %d\n",
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RX, ERROR, "Free rfb and set IntEvent!!!!!\n");
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(RX, TRACE,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG_MEM8(RX, TRACE, pucRspBuffer, *pu4Length);
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(RX, ERROR, "halRxWaitResponse fail!status %X\n",
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:	DBGLOG(RSN, TRACE, "[Rx] nicRxProcessActionFrame\n");
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:	DBGLOG(RSN, TRACE, "Action frame category=%d\n",
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:	/* DBGLOG(RSN, TRACE, ("[Rx] fgRobustAction=%d\n", fgRobustAction)); */
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(RX, WARN,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(RX, INFO, "received dscp action frame: %d\n",
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:					DBGLOG(INIT, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:				DBGLOG(RSN, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RX, INFO, "WNM action frame: %d\n", __LINE__);
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RX, INFO, "WNM action frame: %d\n", __LINE__);
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RLM, INFO,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(RX, WARN,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:			DBGLOG(RX, WARN,
connectivity/common/wlan/core/gen4m/nic/nic_rx.c:		DBGLOG(RX, WARN,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, TRACE, "Duplicated packet is detected\n"); \
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(QM, TRACE, \
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:					DBGLOG(RX, ERROR, \
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, WARN,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, WARN,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, INFO, "QM: +STA[%d]\n", prStaRec->ucIndex);
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, INFO, "QM: -STA[%u]\n", prStaRec->ucIndex);
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, TRACE, "QM: Enter qmFlushTxQueues()\n");
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, TRACE, "QM: Enter qmFlushStaTxQueues(%u)\n", u4StaRecIdx);
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, TRACE, "QM: Enter qmFlushRxQueues()\n");
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, TRACE, "QM: Enter qmFlushStaRxQueues(%u)\n", u4StaRecIdx);
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, ERROR, "prStaRec is null.\n");
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(QM, WARN,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(WMM, TRACE,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, ERROR,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(QM, TRACE,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, INFO, "Set Sta[%u] TxAllowed from [%u] to [%u] %s TxQ\n",
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, LOUD, "Enter qmEnqueueTxPackets\n");
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(QM, LOUD, "Enqueue MSDU by StaRec[%u]!\n",
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(QM, TRACE,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:					DBGLOG(QM, INFO,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(QM, TRACE,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:					DBGLOG(QM, INFO,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(QM, TRACE,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, LOUD,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(QM, LOUD, "TX with DA = BMCAST\n");
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(QM, LOUD,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(QM, LOUD, "TX with AP_STA[%u]\n",
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(QM, LOUD, "TX with STA[%u]\n",
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, LOUD, "QM: TX with STA_REC_INDEX_NOT_FOUND\n");
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(TX, LOUD,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, TEMP,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(QM, TRACE, "AC %d Pending Pkts %u\n",
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:					DBGLOG_LIMITED(QM, WARN,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, TEMP,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, TEMP, "Enter %s (TC = %d, quota = %u)\n",
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, TEMP, "Enter %s (TC = %d, quota = %u)\n",
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, TEMP, "Enter qmDequeueTxPackets\n");
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, TEMP, "Dequeue packets from Per-STA queue[%u]\n", i);
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, TEMP, "DQA)[%u](%u)\n", i,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, LOUD,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, ERROR, "QM: (Error) u4ShareCount = 0\n");
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, INFO,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, LOUD,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(QM, ERROR,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG_MEM8(SW4, TRACE,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(QM, ERROR,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG_MEM8(QM, ERROR, prCurrSwRfb->pucRecvBuff,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(RX, WARN,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG_MEM8(RX, WARN, (uint8_t *) prRxStatus,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:					DBGLOG_MEM8(RX, WARN,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:					DBGLOG(QM, TRACE,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:					DBGLOG(QM, TRACE,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(QM, WARN,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG_MEM8(QM, WARN,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:					DBGLOG_MEM8(QM, WARN,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(QM, INFO,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(QM, INFO,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG_MEM8(QM, ERROR,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(QM, TRACE,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(QM, TRACE,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG_LIMITED(QM, WARN, "TID from RXD = %d, out of range!!\n",
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG_MEM8(QM, ERROR, prSwRfb->pucRecvBuff,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG_LIMITED(QM, ERROR,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, WARN,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, WARN,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, TRACE,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, TRACE, "QM:(BAR)(%d)(%u){%u,%u}\n",
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG_LIMITED(QM, LOUD, "QM:(R)[%u](%u){%u,%u}\n", prSwRfb->ucTid,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(QM, INFO, "NO drop = FALSE, [%d][%d]\n",
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(QM, LOUD, "QM:(A)[%d](%u){%u,%u}\n",
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG_LIMITED(QM, INFO,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG_LIMITED(QM, TRACE, "QM: Miss Count:[%llu]\n",
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(QM, LOUD, "QM: No drop packet:[%d](%d){%d,%d}\n",
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(QM, LOUD, "QM:(P)[%d](%u){%u,%u}\n",
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, LOUD, "QM:(D)[%d](%u){%u,%u}\n",
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(QM, TRACE,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(QM, TRACE,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(QM, LOUD, "QM: [%d] %d (%d)\n",
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(QM, TRACE,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG_LIMITED(QM, TRACE, "QM: [%d] %d (%d)\n",
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, TRACE,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, TRACE,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, TRACE,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, TRACE, "QM:(Bub Check Cancel) No Rx BA entry\n");
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, TRACE,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, TRACE,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, TRACE,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, TRACE,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, TRACE,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(QM, TRACE,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(QM, TRACE,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, TRACE,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, TRACE,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, TRACE,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, INFO, "QM:Event +TxBa\n");
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, INFO, "QM:Event +TxBa but chip is not support\n");
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, INFO,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, INFO,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, INFO, "QM:Event +RxBa\n");
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, INFO,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, WARN,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, ERROR, "QM: (Error) qmAddRxBaEntry() failure\n");
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, WARN,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, ERROR,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(QM, LOUD,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, INFO,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, ERROR, "QM: **AddBA Error** (ucRxBaCount=%d)\n",
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(QM, TRACE,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, INFO, "QM: -RxBA(STA=%d,TID=%d)\n",
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, TRACE,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, TRACE,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(WMM, INFO,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, TRACE,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(QM, WARN,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(QM, WARN,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, TRACE,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, TRACE, "Enter %s\n", __func__);
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, TRACE, "QM: (fgIsWmmSupported=%d, fgIsQoS=%d)\n",
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:					DBGLOG(WMM, INFO,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(QM, INFO, "MQM: Incorrect SP length\n");
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, LOUD, "\n");
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, LOUD, "\n");
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(QM, TRACE,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(TX, TRACE,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(TX, TRACE,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(QM, TRACE,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:					DBGLOG(QM, INFO,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(QM, INFO,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, INFO, "NAF=%d,%d,%d\n",
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, INFO, "PS=%d,%d\n",
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, TRACE, "UFQ=%d,%d,%d\n",
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, LOUD,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, LOUD, "qmUpdateFreeQuota new ucFreeQuota=%d)\n",
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, LOUD,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	LOGBUF(pucBuf, u4Max, u4Len, "\n");
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	LOGBUF(pucBuf, u4Max, u4Len,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		LOGBUF(pucBuf, u4Max, u4Len,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	LOGBUF(pucBuf, u4Max, u4Len,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	LOGBUF(pucBuf, u4Max, u4Len,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		LOGBUF(pucBuf, u4Max, u4Len,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	LOGBUF(pucBuf, u4Max, u4Len,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	LOGBUF(pucBuf, u4Max, u4Len,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(SW4, INFO, "---------------------------------\n");
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		LOGBUF(pucBuf, u4Max, u4Len,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	LOGBUF(pucBuf, u4Max, u4Len,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	LOGBUF(pucBuf, u4Max, u4Len,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		LOGBUF(pucBuf, u4Max, u4Len,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	LOGBUF(pucBuf, u4Max, u4Len, "Pending FWD CNT[%d]\n",
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	LOGBUF(pucBuf, u4Max, u4Len, "Pending MGMT CNT[%d]\n",
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	LOGBUF(pucBuf, u4Max, u4Len,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	LOGBUF(pucBuf, u4Max, u4Len, "Total RFB[%u]\n",
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	LOGBUF(pucBuf, u4Max, u4Len, "rFreeSwRfbList[%u]\n",
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	LOGBUF(pucBuf, u4Max, u4Len, "rReceivedRfbList[%u]\n",
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	LOGBUF(pucBuf, u4Max, u4Len, "rIndicatedRfbList[%u]\n",
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	LOGBUF(pucBuf, u4Max, u4Len, "ucNumIndPacket[%u]\n",
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	LOGBUF(pucBuf, u4Max, u4Len, "ucNumRetainedPacket[%u]\n",
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	LOGBUF(pucBuf, u4Max, u4Len,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	LOGBUF(pucBuf, u4Max, u4Len,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	LOGBUF(pucBuf, u4Max, u4Len,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	LOGBUF(pucBuf, u4Max, u4Len,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, WARN, "[Puff]: Enter mqmSendDelBaFrame()\n");
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, WARN,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, WARN,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, WARN,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(RSN, INFO, "Set MSDU_OPT_PROTECTED_FRAME\n");
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, WARN,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, WARN,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, WARN, "[Puff][%s]: (Warning) sta_rec is not inuse\n",
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, WARN,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(QM, WARN,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, WARN,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(QM, WARN,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(QM, WARN,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, WARN, "[Puff][%s]: eStatus are identical...\n",
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, WARN,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(QM, WARN,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(QM, WARN,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(QM, WARN,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(QM, WARN,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, WARN,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, WARN,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:						DBGLOG(QM, ERROR,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(QM, WARN,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(QM, WARN,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, WARN,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, WARN,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, WARN,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(RSN, INFO, "Set MSDU_OPT_PROTECTED_FRAME\n");
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, WARN,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(MQM, WARN,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(RLM, WARN, "[Puff][%s] Action(%d)\n", __func__,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(RLM, WARN,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(RLM, WARN,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(RLM, WARN, "[Puff][%s] (RX_BA) DELBA <--- peer\n",
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(RLM, WARN, "[Puff][%s] Unknown BA Action Frame\n",
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:			DBGLOG(INIT, WARN,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(INIT, TRACE,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(INIT, WARN,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(INIT, TRACE, "Gateway ip: %d.%d.%d.%d\n",
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:				DBGLOG(INIT, WARN,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(INIT, WARN,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, ERROR, "Please input valid pu8Rets\n");
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, ERROR, "Please input valid uPNNum:%d\n", uPNNum);
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, ERROR, "Please input valid PNS:%p and PNT:%p\n",
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, ERROR, "PN2U64 failed\n");
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG_LIMITED(QM, TRACE, "Group 1 invalid\n");
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG_LIMITED(QM, TRACE, "ucSecMode = [%u], ChiperGroup = [%u]\n",
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG_LIMITED(QM, TRACE,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, ERROR,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, ERROR, "KeyID: %d error\n", ucKeyID);
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, TRACE,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, INFO,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG_LIMITED(QM, TRACE,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG_LIMITED(QM, WARN, "Drop BC replay packet!\n");
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, INFO, "Pending MSDUs for TC 0~3, %u %u %u %u\n",
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, ERROR, "prSta NULL %d, eAci %d, prAdapter NULL %d\n",
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, ERROR, "prAisBssInfo NULL\n");
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, INFO, "new ACI %d, ACM %d, HasTs %d\n", eAci,
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, ERROR, "No channel occupation\n");
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, INFO, "Let the join timer count down.\n");
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:	DBGLOG(QM, INFO, "Earily release channel\n");
connectivity/common/wlan/core/gen4m/nic/que_mgt.c:		DBGLOG(QM, INFO, "No pending request\n");
connectivity/common/wlan/adaptor/wifi_pwr_on.c:#define WIFI_FW_LOG_DBG             3
connectivity/common/wlan/adaptor/wifi_pwr_on.c:#define WIFI_FW_LOG_INFO            2
connectivity/common/wlan/adaptor/wifi_pwr_on.c:#define WIFI_FW_LOG_WARN            1
connectivity/common/wlan/adaptor/wifi_pwr_on.c:#define WIFI_FW_LOG_ERR             0
connectivity/common/wlan/adaptor/wifi_pwr_on.c:uint32_t DbgLevel = WIFI_FW_LOG_DBG;
connectivity/common/wlan/adaptor/wmt_cdev_wifi.c:#define WIFI_LOG_DBG                  3
connectivity/common/wlan/adaptor/wmt_cdev_wifi.c:#define WIFI_LOG_INFO                 2
connectivity/common/wlan/adaptor/wmt_cdev_wifi.c:#define WIFI_LOG_WARN                 1
connectivity/common/wlan/adaptor/wmt_cdev_wifi.c:#define WIFI_LOG_ERR                  0
connectivity/common/wlan/adaptor/wmt_cdev_wifi.c:uint32_t gDbgLevel = WIFI_LOG_DBG;
connectivity/common/wlan/adaptor/fw_log_wifi.h:#ifndef _FW_LOG_WIFI_H_
connectivity/common/wlan/adaptor/fw_log_wifi.h:#define _FW_LOG_WIFI_H_
connectivity/common/wlan/adaptor/fw_log_wifi.h:#endif /*_FW_LOG_WIFI_H_*/
connectivity/common/test/wmt_step_test.c:	} else if (p_emi_info->output_mode == STEP_OUTPUT_LOG) {
connectivity/common/test/wmt_step_test.c:	} else if (p_emi_info->output_mode == STEP_OUTPUT_LOG) {
connectivity/common/test/wmt_step_test.c:	if (p_reg_info->output_mode == STEP_OUTPUT_LOG) {
connectivity/common/Makefile:ccflags-y += -DLOG_STP_DEBUG_DISABLE
connectivity/common/debug_utility/connsys_debug_utility.c:enum FW_LOG_MODE {
connectivity/common/debug_utility/connsys_debug_utility.c:	PRINT_TO_KERNEL_LOG = 0,
connectivity/common/debug_utility/connsys_debug_utility.c:	LOG_TO_FILE = 1,
connectivity/common/debug_utility/connsys_debug_utility.c:static atomic_t log_mode  = ATOMIC_INIT(PRINT_TO_KERNEL_LOG);
connectivity/common/debug_utility/connsys_debug_utility.c:#define CONNLOG_ALARM_STATE_DISABLE	0x0
connectivity/common/debug_utility/connsys_debug_utility.c:#define CONNLOG_ALARM_STATE_ENABLE	0x01
connectivity/common/debug_utility/connsys_debug_utility.c:#define CONNLOG_ALARM_STATE_RUNNING	0x03
connectivity/common/debug_utility/connsys_debug_utility.c:static CONNLOG_EVENT_CB event_callback_table[CONNLOG_TYPE_END] = { 0x0 };
connectivity/common/debug_utility/connsys_debug_utility.c:static struct connlog_buffer connlog_buffer_table[CONNLOG_TYPE_END];
connectivity/common/debug_utility/connsys_debug_utility.c:static struct connlog_offset emi_offset_table[CONNLOG_TYPE_END] = {
connectivity/common/debug_utility/connsys_debug_utility.c:	INIT_EMI_OFFSET(CONNLOG_EMI_WIFI_BASE_OFFESET, CONNLOG_EMI_WIFI_SIZE,
connectivity/common/debug_utility/connsys_debug_utility.c:			CONNLOG_EMI_WIFI_READ, CONNLOG_EMI_WIFI_WRITE,
connectivity/common/debug_utility/connsys_debug_utility.c:			CONNLOG_EMI_WIFI_BUF),
connectivity/common/debug_utility/connsys_debug_utility.c:	INIT_EMI_OFFSET(CONNLOG_EMI_BT_BASE_OFFESET, CONNLOG_EMI_BT_SIZE,
connectivity/common/debug_utility/connsys_debug_utility.c:			CONNLOG_EMI_BT_READ, CONNLOG_EMI_BT_WRITE,
connectivity/common/debug_utility/connsys_debug_utility.c:			CONNLOG_EMI_BT_BUF),
connectivity/common/debug_utility/connsys_debug_utility.c:	INIT_EMI_OFFSET(CONNLOG_EMI_GPS_BASE_OFFESET, CONNLOG_EMI_GPS_SIZE,
connectivity/common/debug_utility/connsys_debug_utility.c:			CONNLOG_EMI_GPS_READ, CONNLOG_EMI_GPS_WRITE,
connectivity/common/debug_utility/connsys_debug_utility.c:			CONNLOG_EMI_GPS_BUF),
connectivity/common/debug_utility/connsys_debug_utility.c:	INIT_EMI_OFFSET(CONNLOG_EMI_MCU_BASE_OFFESET, CONNLOG_EMI_MCU_SIZE,
connectivity/common/debug_utility/connsys_debug_utility.c:			CONNLOG_EMI_MCU_READ, CONNLOG_EMI_MCU_WRITE,
connectivity/common/debug_utility/connsys_debug_utility.c:			CONNLOG_EMI_MCU_BUF),
connectivity/common/debug_utility/connsys_debug_utility.c:static char *type_to_title[CONNLOG_TYPE_END] = {
connectivity/common/debug_utility/connsys_debug_utility.c:static size_t cache_size_table[CONNLOG_TYPE_END] = {
connectivity/common/debug_utility/connsys_debug_utility.c:	CONNLOG_EMI_WIFI_SIZE * 2, CONNLOG_EMI_BT_SIZE * 2,
connectivity/common/debug_utility/connsys_debug_utility.c:	CONNLOG_EMI_GPS_SIZE, CONNLOG_EMI_MCU_SIZE
connectivity/common/debug_utility/connsys_debug_utility.c:*  set reserved bit be EMIFWLOG to indicate that init is ready.
connectivity/common/debug_utility/connsys_debug_utility.c:	const char ready_str[] = "EMIFWLOG";
connectivity/common/debug_utility/connsys_debug_utility.c:	memcpy_toio(gDev.virAddrEmiLogBase + CONNLOG_READY_PATTERN_BASE,
connectivity/common/debug_utility/connsys_debug_utility.c:		    ready_str, CONNLOG_READY_PATTERN_BASE_SIZE);
connectivity/common/debug_utility/connsys_debug_utility.c:		connsys_dedicated_log_dump_emi(CONNLOG_EMI_WIFI_BASE_OFFESET, 0x20);
connectivity/common/debug_utility/connsys_debug_utility.c:		connsys_dedicated_log_dump_emi(CONNLOG_EMI_BT_BASE_OFFESET, 0x20);
connectivity/common/debug_utility/connsys_debug_utility.c:		connsys_dedicated_log_dump_emi(CONNLOG_EMI_GPS_BASE_OFFESET, 0x20);
connectivity/common/debug_utility/connsys_debug_utility.c:#define LOG_LINE_SIZE (3*BYETES_PER_LINE + BYETES_PER_LINE + 1)
connectivity/common/debug_utility/connsys_debug_utility.c:	char line[LOG_LINE_SIZE];
connectivity/common/debug_utility/connsys_debug_utility.c:	line[LOG_LINE_SIZE-1] = 0;
connectivity/common/debug_utility/connsys_debug_utility.c:#define LOG_MAX_LEN 1024
connectivity/common/debug_utility/connsys_debug_utility.c:#define LOG_HEAD_LENG 16
connectivity/common/debug_utility/connsys_debug_utility.c:static char log_line[LOG_MAX_LEN];
connectivity/common/debug_utility/connsys_debug_utility.c:	while (sz > LOG_HEAD_LENG) {
connectivity/common/debug_utility/connsys_debug_utility.c:				print_len = buf_len >= LOG_MAX_LEN ? LOG_MAX_LEN - 1 : buf_len;
connectivity/common/debug_utility/connsys_debug_utility.c:				memcpy(log_line, buf + LOG_HEAD_LENG, print_len);
connectivity/common/debug_utility/connsys_debug_utility.c:				sz -= (LOG_HEAD_LENG + buf_len);
connectivity/common/debug_utility/connsys_debug_utility.c:				buf += (LOG_HEAD_LENG + buf_len);
connectivity/common/debug_utility/connsys_debug_utility.c:	memset(gDev.log_data, 0, CONNLOG_EMI_BT_SIZE);
connectivity/common/debug_utility/connsys_debug_utility.c:		connsys_dedicated_log_dump_emi(CONNLOG_EMI_WIFI_BASE_OFFESET, 0x20);
connectivity/common/debug_utility/connsys_debug_utility.c:		connsys_dedicated_log_dump_emi(CONNLOG_EMI_BT_BASE_OFFESET, 0x20);
connectivity/common/debug_utility/connsys_debug_utility.c:		connsys_dedicated_log_dump_emi(CONNLOG_EMI_GPS_BASE_OFFESET, 0x20);
connectivity/common/debug_utility/connsys_debug_utility.c:	if (conn_type != CONNLOG_TYPE_BT)
connectivity/common/debug_utility/connsys_debug_utility.c:	if ((conn_type < CONNLOG_TYPE_END) && (event_callback_table[conn_type] != 0x0))
connectivity/common/debug_utility/connsys_debug_utility.c:		EMI_WRITE32(gDev.virAddrEmiLogBase + CONNLOG_IRQ_COUNTER_BASE, gDev.irq_counter);
connectivity/common/debug_utility/connsys_debug_utility.c:	gDev.log_alarm.alarm_state = CONNLOG_ALARM_STATE_DISABLE;
connectivity/common/debug_utility/connsys_debug_utility.c:	if ((gDev.log_alarm.alarm_state & CONNLOG_ALARM_STATE_ENABLE) > 0)
connectivity/common/debug_utility/connsys_debug_utility.c:		gDev.log_alarm.alarm_state = CONNLOG_ALARM_STATE_ENABLE;
connectivity/common/debug_utility/connsys_debug_utility.c:		gDev.log_alarm.alarm_state = CONNLOG_ALARM_STATE_DISABLE;
connectivity/common/debug_utility/connsys_debug_utility.c:		for (i = 0; i < CONNLOG_TYPE_END; i++) {
connectivity/common/debug_utility/connsys_debug_utility.c:				if (atomic_read(&log_mode) == LOG_TO_FILE)
connectivity/common/debug_utility/connsys_debug_utility.c:			EMI_READ32(gDev.virAddrEmiLogBase + CONNLOG_IRQ_COUNTER_BASE), module);*/
connectivity/common/debug_utility/connsys_debug_utility.c:	pr_info("EINT CONN_LOG_IRQ(%d, %d)\n", irq_id, irq_flag);
connectivity/common/debug_utility/connsys_debug_utility.c:	iret = request_irq(gDev.conn2ApIrqId, connlog_eirq_isr, irq_flag, "CONN_LOG_IRQ", NULL);
connectivity/common/debug_utility/connsys_debug_utility.c:	EMI_WRITE32(gDev.virAddrEmiLogBase + 0,  CONNLOG_EMI_MCU_BASE_OFFESET);
connectivity/common/debug_utility/connsys_debug_utility.c:	EMI_WRITE32(gDev.virAddrEmiLogBase + 4,  CONNLOG_EMI_MCU_SIZE);
connectivity/common/debug_utility/connsys_debug_utility.c:	EMI_WRITE32(gDev.virAddrEmiLogBase + 8,  CONNLOG_EMI_WIFI_BASE_OFFESET);
connectivity/common/debug_utility/connsys_debug_utility.c:	EMI_WRITE32(gDev.virAddrEmiLogBase + 12, CONNLOG_EMI_WIFI_SIZE);
connectivity/common/debug_utility/connsys_debug_utility.c:	EMI_WRITE32(gDev.virAddrEmiLogBase + 16, CONNLOG_EMI_BT_BASE_OFFESET);
connectivity/common/debug_utility/connsys_debug_utility.c:	EMI_WRITE32(gDev.virAddrEmiLogBase + 20, CONNLOG_EMI_BT_SIZE);
connectivity/common/debug_utility/connsys_debug_utility.c:	EMI_WRITE32(gDev.virAddrEmiLogBase + 24, CONNLOG_EMI_GPS_BASE_OFFESET);
connectivity/common/debug_utility/connsys_debug_utility.c:	EMI_WRITE32(gDev.virAddrEmiLogBase + 28, CONNLOG_EMI_GPS_SIZE);
connectivity/common/debug_utility/connsys_debug_utility.c:		CONNLOG_EMI_LOG_BASE_OFFSET, CONNLOG_EMI_SIZE);
connectivity/common/debug_utility/connsys_debug_utility.c:				CONNLOG_EMI_LOG_BASE_OFFSET);
connectivity/common/debug_utility/connsys_debug_utility.c:		memset_io(gDev.virAddrEmiLogBase, 0, CONNLOG_EMI_SIZE);
connectivity/common/debug_utility/connsys_debug_utility.c:	connlog_buffer_init(CONNLOG_TYPE_WIFI);
connectivity/common/debug_utility/connsys_debug_utility.c:	connlog_buffer_init(CONNLOG_TYPE_BT);
connectivity/common/debug_utility/connsys_debug_utility.c:	connlog_buffer_init(CONNLOG_TYPE_GPS);
connectivity/common/debug_utility/connsys_debug_utility.c:	connlog_buffer_init(CONNLOG_TYPE_MCU);
connectivity/common/debug_utility/connsys_debug_utility.c:	gDev.log_data = connlog_cache_allocate(CONNLOG_EMI_BT_SIZE);
connectivity/common/debug_utility/connsys_debug_utility.c:	for (i = 0; i < CONNLOG_TYPE_END; i++) {
connectivity/common/debug_utility/connsys_debug_utility.c:	if (conn_type >= CONNLOG_TYPE_END || conn_type < 0)
connectivity/common/debug_utility/connsys_debug_utility.c:	if (conn_type >= CONNLOG_TYPE_END || conn_type < 0)
connectivity/common/debug_utility/connsys_debug_utility.c:int connsys_log_register_event_cb(int conn_type, CONNLOG_EVENT_CB func)
connectivity/common/debug_utility/connsys_debug_utility.c:	if (conn_type >= CONNLOG_TYPE_END || conn_type < 0)
connectivity/common/debug_utility/connsys_debug_utility.c:	if (atomic_read(&log_mode) != LOG_TO_FILE)
connectivity/common/debug_utility/connsys_debug_utility.c:	if (atomic_read(&log_mode) != LOG_TO_FILE)
connectivity/common/debug_utility/connsys_debug_utility.c:	atomic_set(&log_mode, (mode > 0 ? LOG_TO_FILE : PRINT_TO_KERNEL_LOG));
connectivity/common/debug_utility/connsys_debug_utility_emi.h:#ifndef _CONN_DEDICATED_LOG_EMI_H_
connectivity/common/debug_utility/connsys_debug_utility_emi.h:#define _CONN_DEDICATED_LOG_EMI_H_
connectivity/common/debug_utility/connsys_debug_utility_emi.h:#define CONNLOG_EMI_SIZE (192*1024) /* 192KB */
connectivity/common/debug_utility/connsys_debug_utility_emi.h:#define CONNLOG_EMI_LOG_BASE_OFFSET 0x36500
connectivity/common/debug_utility/connsys_debug_utility_emi.h:#define CONNLOG_EMI_32_BYTE_ALIGNED 32 /* connsys EMI cache is 32-byte aligned */
connectivity/common/debug_utility/connsys_debug_utility_emi.h:#define CONNLOG_CONTROL_RING_BUFFER_BASE_SIZE 64 /* Reserve for setup ring buffer base address  */
connectivity/common/debug_utility/connsys_debug_utility_emi.h:#define CONNLOG_CONTROL_RING_BUFFER_RESERVE_SIZE 32
connectivity/common/debug_utility/connsys_debug_utility_emi.h:#define CONNLOG_IRQ_COUNTER_BASE 48
connectivity/common/debug_utility/connsys_debug_utility_emi.h:#define CONNLOG_READY_PATTERN_BASE 56
connectivity/common/debug_utility/connsys_debug_utility_emi.h:#define CONNLOG_READY_PATTERN_BASE_SIZE 8
connectivity/common/debug_utility/connsys_debug_utility_emi.h:#define CONNLOG_EMI_MCU_SIZE        (16*1024)
connectivity/common/debug_utility/connsys_debug_utility_emi.h:#define CONNLOG_EMI_WIFI_SIZE       (64*1024)
connectivity/common/debug_utility/connsys_debug_utility_emi.h:#define CONNLOG_EMI_BT_SIZE         (64*1024)
connectivity/common/debug_utility/connsys_debug_utility_emi.h:#define CONNLOG_EMI_GPS_SIZE        (32*1024)
connectivity/common/debug_utility/connsys_debug_utility_emi.h:#define CONNLOG_EMI_MCU_BASE_OFFESET CONNLOG_CONTROL_RING_BUFFER_BASE_SIZE
connectivity/common/debug_utility/connsys_debug_utility_emi.h:#define CONNLOG_EMI_MCU_READ         (CONNLOG_EMI_MCU_BASE_OFFESET + 0)
connectivity/common/debug_utility/connsys_debug_utility_emi.h:#define CONNLOG_EMI_MCU_WRITE        (CONNLOG_EMI_MCU_BASE_OFFESET + 4)
connectivity/common/debug_utility/connsys_debug_utility_emi.h:#define CONNLOG_EMI_MCU_BUF          (CONNLOG_EMI_MCU_BASE_OFFESET + \
connectivity/common/debug_utility/connsys_debug_utility_emi.h:				      CONNLOG_EMI_32_BYTE_ALIGNED)
connectivity/common/debug_utility/connsys_debug_utility_emi.h:#define CONNLOG_EMI_WIFI_BASE_OFFESET (CONNLOG_EMI_MCU_BASE_OFFESET + \
connectivity/common/debug_utility/connsys_debug_utility_emi.h:				       CONNLOG_EMI_MCU_SIZE + \
connectivity/common/debug_utility/connsys_debug_utility_emi.h:				       CONNLOG_EMI_32_BYTE_ALIGNED + \
connectivity/common/debug_utility/connsys_debug_utility_emi.h:				       CONNLOG_CONTROL_RING_BUFFER_RESERVE_SIZE)
connectivity/common/debug_utility/connsys_debug_utility_emi.h:#define CONNLOG_EMI_WIFI_READ         (CONNLOG_EMI_WIFI_BASE_OFFESET + 0)
connectivity/common/debug_utility/connsys_debug_utility_emi.h:#define CONNLOG_EMI_WIFI_WRITE        (CONNLOG_EMI_WIFI_BASE_OFFESET + 4)
connectivity/common/debug_utility/connsys_debug_utility_emi.h:#define CONNLOG_EMI_WIFI_BUF          (CONNLOG_EMI_WIFI_BASE_OFFESET + \
connectivity/common/debug_utility/connsys_debug_utility_emi.h:				       CONNLOG_EMI_32_BYTE_ALIGNED)
connectivity/common/debug_utility/connsys_debug_utility_emi.h:#define CONNLOG_EMI_BT_BASE_OFFESET (CONNLOG_EMI_WIFI_BASE_OFFESET + \
connectivity/common/debug_utility/connsys_debug_utility_emi.h:				     CONNLOG_EMI_WIFI_SIZE + \
connectivity/common/debug_utility/connsys_debug_utility_emi.h:				     CONNLOG_EMI_32_BYTE_ALIGNED + \
connectivity/common/debug_utility/connsys_debug_utility_emi.h:				     CONNLOG_CONTROL_RING_BUFFER_RESERVE_SIZE)
connectivity/common/debug_utility/connsys_debug_utility_emi.h:#define CONNLOG_EMI_BT_READ         (CONNLOG_EMI_BT_BASE_OFFESET + 0)
connectivity/common/debug_utility/connsys_debug_utility_emi.h:#define CONNLOG_EMI_BT_WRITE        (CONNLOG_EMI_BT_BASE_OFFESET + 4)
connectivity/common/debug_utility/connsys_debug_utility_emi.h:#define CONNLOG_EMI_BT_BUF          (CONNLOG_EMI_BT_BASE_OFFESET + \
connectivity/common/debug_utility/connsys_debug_utility_emi.h:				     CONNLOG_EMI_32_BYTE_ALIGNED)
connectivity/common/debug_utility/connsys_debug_utility_emi.h:#define CONNLOG_EMI_GPS_BASE_OFFESET (CONNLOG_EMI_BT_BASE_OFFESET + \
connectivity/common/debug_utility/connsys_debug_utility_emi.h:				      CONNLOG_EMI_BT_SIZE + \
connectivity/common/debug_utility/connsys_debug_utility_emi.h:				      CONNLOG_EMI_32_BYTE_ALIGNED + \
connectivity/common/debug_utility/connsys_debug_utility_emi.h:				      CONNLOG_CONTROL_RING_BUFFER_RESERVE_SIZE)
connectivity/common/debug_utility/connsys_debug_utility_emi.h:#define CONNLOG_EMI_GPS_READ         (CONNLOG_EMI_GPS_BASE_OFFESET + 0)
connectivity/common/debug_utility/connsys_debug_utility_emi.h:#define CONNLOG_EMI_GPS_WRITE        (CONNLOG_EMI_GPS_BASE_OFFESET + 4)
connectivity/common/debug_utility/connsys_debug_utility_emi.h:#define CONNLOG_EMI_GPS_BUF          (CONNLOG_EMI_GPS_BASE_OFFESET + \
connectivity/common/debug_utility/connsys_debug_utility_emi.h:				      CONNLOG_EMI_32_BYTE_ALIGNED)
connectivity/common/debug_utility/tool/connsys_log_AT/dedicated_log_path_test.py:	if line_list[-1].find('EMIFWLOG'):
connectivity/common/debug_utility/tool/connsys_log_AT/dedicated_log_path_test.py:		print 'EMIFWLOG not found.'
connectivity/common/debug_utility/connsys_debug_utility.h:enum CONNLOG_TYPE {
connectivity/common/debug_utility/connsys_debug_utility.h:	CONNLOG_TYPE_WIFI = 0,
connectivity/common/debug_utility/connsys_debug_utility.h:	CONNLOG_TYPE_BT = 1,
connectivity/common/debug_utility/connsys_debug_utility.h:	CONNLOG_TYPE_GPS = 2,
connectivity/common/debug_utility/connsys_debug_utility.h:	CONNLOG_TYPE_MCU = 3,
connectivity/common/debug_utility/connsys_debug_utility.h:	CONNLOG_TYPE_END,
connectivity/common/debug_utility/connsys_debug_utility.h:typedef void (*CONNLOG_EVENT_CB) (void);
connectivity/common/debug_utility/connsys_debug_utility.h:int connsys_log_register_event_cb(int conn_type, CONNLOG_EVENT_CB func);
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:#define BT_LOG_DBG                  3
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:#define BT_LOG_INFO                 2
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:#define BT_LOG_WARN                 1
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:#define BT_LOG_ERR                  0
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:static UINT32 gDbgLevel = BT_LOG_INFO;
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:#define BT_LOG_PRT_DBG(fmt, arg...)	
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:#define BT_LOG_PRT_INFO(fmt, arg...)	
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:#define BT_LOG_PRT_WARN(fmt, arg...)	
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:#define BT_LOG_PRT_ERR(fmt, arg...)	
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:#define BT_LOG_PRT_INFO_RATELIMITED(fmt, arg...)	
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:#define FTRACE_STR_LOG_SIZE         256
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:		BT_LOG_PRT_INFO("Send Hardware Error event to stack to restart Bluetooth\n");
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:		BT_LOG_PRT_WARN("Invalid message format!\n");
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:	BT_LOG_PRT_DBG("src = %d, dst = %d, type = %d, buf = 0x%x sz = %d, max = %d\n",
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:			BT_LOG_PRT_INFO("Whole chip reset start!\n");
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:				BT_LOG_PRT_INFO("Whole chip reset end!\n");
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:				BT_LOG_PRT_INFO("Whole chip reset fail!\n");
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:	BT_LOG_PRT_DBG("BT_event_cb\n");
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:		BT_LOG_PRT_ERR("mtk_wcn_stp_send_data fail, retval %d\n", retval);
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:		BT_LOG_PRT_INFO_RATELIMITED("write count %zd, sent bytes %d, no space is available!\n", count, retval);
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:		BT_LOG_PRT_DBG("write count %zd, sent bytes %d\n", count, retval);
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:			BT_LOG_PRT_ERR("Send hci cmd failed, retry %d time(s)\n", retry);
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:	BT_LOG_PRT_DBG("count %zd", count);
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:		BT_LOG_PRT_ERR("whole chip reset occurs! rstflag=%d\n", rstflag);
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:			BT_LOG_PRT_ERR("write count %zd exceeds max buffer size %d", count, BT_BUFFER_SIZE);
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:	BT_LOG_PRT_DBG("count %zd pos %lld\n", count, *f_pos);
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:		BT_LOG_PRT_ERR("whole chip reset occurs! rstflag=%d\n", rstflag);
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:			BT_LOG_PRT_ERR("write count %zd exceeds max buffer size %d", count, BT_BUFFER_SIZE);
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:	BT_LOG_PRT_DBG("count %zd pos %lld\n", count, *f_pos);
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:				BT_LOG_PRT_ERR("Non-blocking read, whole chip reset occurs! rstflag=%d\n", rstflag);
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:		BT_LOG_PRT_WARN("Shorten read count from %zd to %d\n", count, BT_BUFFER_SIZE);
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:			BT_LOG_PRT_ERR("mtk_wcn_stp_receive_data fail, retval %d\n", retval);
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:				BT_LOG_PRT_ERR("Non-blocking read, no data is available!\n");
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:			BT_LOG_PRT_DBG("Read bytes %d\n", retval);
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:	BT_LOG_PRT_DBG("cmd: 0x%08x\n", cmd);
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:		BT_LOG_PRT_INFO("Host trigger FW assert......, reason:%d\n", reason);
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:			BT_LOG_PRT_INFO("HCI command timeout OpCode 0x%04x\n", ((UINT32)arg >> 16) & 0xFFFF);
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:			BT_LOG_PRT_INFO("Host trigger FW assert succeed\n");
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:			BT_LOG_PRT_ERR("Host trigger FW assert failed\n");
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:		BT_LOG_PRT_INFO("BT stack change PSM setting: %lu\n", arg);
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:		BT_LOG_PRT_INFO("HW ver: 0x%x\n", ver);
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:		BT_LOG_PRT_INFO("FW ver: 0x%x\n", ver);
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:		BT_LOG_PRT_ERR("Unknown cmd: 0x%08x\n", cmd);
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:		BT_LOG_PRT_WARN("BT already on!\n");
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:	BT_LOG_PRT_INFO("major %d minor %d (pid %d)\n", imajor(inode), iminor(inode), current->pid);
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:		BT_LOG_PRT_WARN("WMT turn on BT fail!\n");
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:	BT_LOG_PRT_INFO("WMT turn on BT OK!\n");
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:		BT_LOG_PRT_ERR("STP is not ready!\n");
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:	BT_LOG_PRT_INFO("Now it's in MTK Bluetooth Mode\n");
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:	BT_LOG_PRT_INFO("STP is ready!\n");
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:	BT_LOG_PRT_DBG("Register BT event callback!\n");
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:	BT_LOG_PRT_DBG("Register BT reset callback!\n");
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:	BT_LOG_PRT_INFO("major %d minor %d (pid %d)\n", imajor(inode), iminor(inode), current->pid);
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:		BT_LOG_PRT_ERR("WMT turn off BT fail!\n");
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:	BT_LOG_PRT_INFO("WMT turn off BT OK!\n");
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:		BT_LOG_PRT_ERR("%s: init bt_wakelock failed!\n", __func__);
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:		BT_LOG_PRT_ERR("Failed to register device numbers\n");
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:	BT_LOG_PRT_INFO("%s driver(major %d) installed\n", BT_DRIVER_NAME, BT_major);
connectivity/bt/mt66xx/legacy/stp_chrdev_bt.c:	BT_LOG_PRT_INFO("%s driver removed\n", BT_DRIVER_NAME);
hdmi/hdmi_utils.h:#define HDMI_LOG_LEVEL_INFO 0
hdmi/hdmi_utils.h:#define HDMI_LOG_LEVEL_DBG 1
hdmi/hdmi_utils.h:#define HDMI_LOG_LEVEL_ERR 2
hdmi/hdmi_utils.h:#define HDMI_LOG_INFO(fmt, arg...)
hdmi/hdmi_utils.h:#define HDMI_LOG_DBG(fmt, arg...) 
hdmi/hdmi_utils.h:#define HDMI_LOG_ERR(fmt, arg...)
hdmi/hdmi_utils.h:	if (hdmi_log_lv <= HDMI_LOG_LEVEL_DBG) \
hdmi/hdmi_utils.h:	if (hdmi_log_lv <= HDMI_LOG_LEVEL_DBG) { \
hdmi/hdmi_utils.h:	case MTK_HDMI_ENABLE_LOG:
hdmi/hdmi_utils.h:		return "MTK_HDMI_ENABLE_LOG";
mmp/src/mmprofile.c:#define MMP_LOG(prio, fmt, arg...)
mmp/src/mmprofile.c:	MMP_LOG(ANDROID_LOG_DEBUG, "+enable %u, start %u",
mmp/src/mmprofile.c:	MMP_LOG(ANDROID_LOG_DEBUG, "-size %u", size);
mmp/src/mmprofile.c:		MMP_LOG(ANDROID_LOG_DEBUG, "Ringbuffer is not initialized");
mmp/src/mmprofile.c:		MMP_LOG(ANDROID_LOG_DEBUG, "static event not register");
mmp/src/mmprofile.c:			MMP_LOG(ANDROID_LOG_DEBUG, "fail to get reg lock");
mmp/src/mmprofile.c:	MMP_LOG(ANDROID_LOG_DEBUG, "end t=%u,r =%u,block_pos=%u",
mmp/src/mmprofile.c:	MMP_LOG(ANDROID_LOG_DEBUG, "p_mmprofile_ring_buffer=0x%08lx",
mmp/src/mmprofile.c:	MMP_LOG(ANDROID_LOG_DEBUG, "p_mmprofile_meta_buffer=0x%08lx",
mmp/src/mmprofile.c:		MMP_LOG(ANDROID_LOG_DEBUG, "Cannot allocate buffer");
mmp/src/mmprofile.c:		MMP_LOG(ANDROID_LOG_DEBUG, "Cannot allocate buffer");
mmp/src/mmprofile.c:	MMP_LOG(ANDROID_LOG_DEBUG, "+start %d", start);
mmp/src/mmprofile.c:	MMP_LOG(ANDROID_LOG_DEBUG, "-start=%d", mmprofile_globals.start);
mmp/src/mmprofile.c:	MMP_LOG(ANDROID_LOG_DEBUG, "remote +start %d", start);
mmp/src/mmprofile.c:	MMP_LOG(ANDROID_LOG_DEBUG, "remote -start=%d",
mmp/src/mmprofile.c:		MMP_LOG(ANDROID_LOG_DEBUG, "n(%u,%u),o(%u, %u,%d,%u) ",
mmp/src/mmprofile.c:		MMP_LOG(ANDROID_LOG_DEBUG, "n(%u,%u,%u),o(%u, %u,%d,%u) ",
mmp/src/mmprofile.c:	MMP_LOG(ANDROID_LOG_DEBUG, "start=%d", mmprofile_globals.start);
mmp/src/mmprofile.c:	MMP_LOG(ANDROID_LOG_DEBUG, "start=%d", start);
mmp/src/mmprofile.c:	MMP_LOG(ANDROID_LOG_DEBUG, "enable=%d", mmprofile_globals.enable);
mmp/src/mmprofile.c:	MMP_LOG(ANDROID_LOG_DEBUG, "enable=%d", enable);
mmp/src/mmprofile.c:	MMP_LOG(ANDROID_LOG_VERBOSE, "size=%ld ppos=%d",
mmp/src/mmprofile.c:			MMP_LOG(ANDROID_LOG_DEBUG,
mmp/src/mmprofile.c:	case MMP_IOC_LOG:
mmp/src/mmprofile.c:	case MMP_IOC_METADATALOG:
mmp/src/mmprofile.c:	case MMP_IOC_TRYLOG:
mmp/src/mmprofile.c:#define COMPAT_MMP_IOC_METADATALOG \
mmp/src/mmprofile.c:	case MMP_IOC_LOG:
mmp/src/mmprofile.c:	case COMPAT_MMP_IOC_METADATALOG:
mmp/src/mmprofile.c:	case MMP_IOC_TRYLOG:
mmp/mmprofile_internal.h:#define MMP_IOC_LOG \
mmp/mmprofile_internal.h:#define MMP_IOC_METADATALOG _IOW(MMP_IOC_MAGIC, 9, struct mmprofile_metalog_t)
mmp/mmprofile_internal.h:#define MMP_IOC_TRYLOG _IOWR(MMP_IOC_MAGIC, 12, unsigned int)
usb20/musb_core.c:int mtk_qmu_dbg_level = LOG_WARN;
usb20/mtk_qmu.h:#define LOG_EMERG		0
usb20/mtk_qmu.h:#define LOG_ALERT		1
usb20/mtk_qmu.h:#define LOG_CRIT		2
usb20/mtk_qmu.h:#define LOG_ERR		3
usb20/mtk_qmu.h:#define LOG_WARN	4
usb20/mtk_qmu.h:#define LOG_NOTICE		5
usb20/mtk_qmu.h:#define LOG_INFO		6
usb20/mtk_qmu.h:#define LOG_DBG		7
usb20/musb_gadget.c:	|| defined(CONFIG_MTK_MD_DIRECT_LOGGING_SUPPORT)
usb20/mt6765/usb20_phy.c:	/* M_ANALOG8[4:0] => RG_USB20_INTR_CAL[4:0] */
include/mt-plat/mtk_memcfg.h:#define MTK_MEMCFG_LOG_AND_PRINTK(fmt, arg...)
include/mt-plat/mtk_ccci_common.h:#define MD1_LOGGER_FILE_PATH "/data/mdlog/mdlog1_config"
include/mt-plat/mtk_ccci_common.h:#define MD2_LOGGER_FILE_PATH "/data/mdlog/mdlog2_config"
include/mt-plat/mtk_ccci_common.h:#define CCCI_ERR_INIT_LOGIC_LAYER_FAIL \
include/mt-plat/mtk_ccci_common.h:#define CCCI_ERR_INVALID_LOGIC_CHANNEL_ID \
include/mt-plat/mtk_ccci_common.h:#define CCCI_ERR_LOGIC_CH_HAS_REGISTERED \
include/mt-plat/mtk_ccci_common.h:	SMEM_USER_SMART_LOGGING,
include/mt-plat/mtk_rtc_hal_common.h:	RTC_PWRON_LOGO,
include/mt-plat/aee.h:#define DB_OPT_FS_IO_LOG                (1<<12)
include/mt-plat/mt6765/include/mach/upmu_hw.h:#define MT6357_AFE_ADDA_MTKAIF_FIFO_LOG_MON1 (MT6357_PMIC_REG_BASE+0x212a)
include/mt-plat/mt6765/include/mach/upmu_hw.h:#define PMIC_RG_FGANALOGTEST_ADDR                          \
include/mt-plat/mt6765/include/mach/upmu_hw.h:#define PMIC_RG_FGANALOGTEST_MASK                          0x7
include/mt-plat/mt6765/include/mach/upmu_hw.h:#define PMIC_RG_FGANALOGTEST_SHIFT                         0
include/mt-plat/mt6765/include/mach/upmu_hw.h:	MT6357_AFE_ADDA_MTKAIF_FIFO_LOG_MON1
include/mt-plat/mt6765/include/mach/upmu_hw.h:	MT6357_AFE_ADDA_MTKAIF_FIFO_LOG_MON1
include/mt-plat/mt6765/include/mach/upmu_hw.h:	PMIC_RG_FGANALOGTEST,
include/mt-plat/trustzone/tz_cross/ta_modular_drm.h:#define TZCMD_MODULAR_DRM_SET_DEBUG_LOG            30
include/mt-plat/trustzone/tz_cross/ta_ddp_log.h:#ifndef __TRUSTZONE_TA_DDP_LOG__
include/mt-plat/trustzone/tz_cross/ta_ddp_log.h:#define __TRUSTZONE_TA_DDP_LOG__
include/mt-plat/trustzone/tz_cross/ta_ddp_log.h:#ifndef __MTEE_LOG_H__
include/mt-plat/trustzone/tz_cross/ta_ddp_log.h:#define MTEE_LOG_CUSTOM_LEVEL MTEE_LOG_LVL_INFO
include/mt-plat/trustzone/tz_cross/ta_ddp_log.h:#define MTEE_LOG_I(args...)
include/mt-plat/trustzone/tz_cross/ta_ddp_log.h:#define MTEE_LOG_D(args...) 
include/mt-plat/trustzone/tz_cross/ta_ddp_log.h:#define MTEE_LOG_P(args...) 
include/mt-plat/trustzone/tz_cross/ta_ddp_log.h:#define MTEE_LOG_W(args...) 
include/mt-plat/trustzone/tz_cross/ta_ddp_log.h:#define MTEE_LOG_B(args...) 
include/mt-plat/trustzone/tz_cross/ta_ddp_log.h:#define MTEE_LOG_A(args...) 
include/mt-plat/trustzone/tz_cross/ta_ddp_log.h:#endif	/* __TRUSTZONE_TA_DDP_LOG__ */
include/mt-plat/trustzone/tz_cross/ta_widevine.h:#define TZCMD_WIDEVINE_SET_DEBUG_LOG                     14
include/mt-plat/trustzone/tz_cross/tz_ddp.h:#define TZCMD_DDP_SET_DEBUG_LOG      40
include/mt-plat/trustzone/tz_cross/ta_logctrl.h:#ifndef __TA_LOG_CTRL_H__
include/mt-plat/trustzone/tz_cross/ta_logctrl.h:#define __TA_LOG_CTRL_H__
include/mt-plat/trustzone/tz_cross/ta_logctrl.h:#define TZ_TA_LOG_CTRL_UUID   "a80ef6e1-de27-11e2-a28f-0800200c9a66"
include/mt-plat/trustzone/tz_cross/ta_logctrl.h:/* should match MTEE_LOG_LVL in log.h */
include/mt-plat/trustzone/tz_cross/ta_logctrl.h:#define MTEE_LOG_CTRL_LVL_INFO    0x00000000
include/mt-plat/trustzone/tz_cross/ta_logctrl.h:#define MTEE_LOG_CTRL_LVL_DEBUG   0x00000001
include/mt-plat/trustzone/tz_cross/ta_logctrl.h:#define MTEE_LOG_CTRL_LVL_PRINTF  0x00000002
include/mt-plat/trustzone/tz_cross/ta_logctrl.h:#define MTEE_LOG_CTRL_LVL_WARN    0x00000003
include/mt-plat/trustzone/tz_cross/ta_logctrl.h:#define MTEE_LOG_CTRL_LVL_BUG     0x00000004
include/mt-plat/trustzone/tz_cross/ta_logctrl.h:#define MTEE_LOG_CTRL_LVL_ASSERT  0x00000005
include/mt-plat/trustzone/tz_cross/ta_logctrl.h:#define MTEE_LOG_CTRL_LVL_DISABLE 0x0000000f
include/mt-plat/trustzone/tz_cross/ta_logctrl.h:#define TZCMD_LOG_CTRL_SET_LVL   0
include/mt-plat/trustzone/tz_cross/ta_logctrl.h:#endif	/* __TA_LOG_CTRL_H__ */
lens/sub/common/ad5820af/AD5820AF.c:#define LOG_INF(format, args...)                                               \
lens/sub/common/ad5820af/AD5820AF.c:#define LOG_INF(format, args...)
lens/sub/common/ad5820af/AD5820AF.c:		LOG_INF("I2C read failed!!\n");
lens/sub/common/ad5820af/AD5820AF.c:		LOG_INF("I2C send failed!!\n");
lens/sub/common/ad5820af/AD5820AF.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/sub/common/ad5820af/AD5820AF.c:	LOG_INF("+\n");
lens/sub/common/ad5820af/AD5820AF.c:	LOG_INF("-\n");
lens/sub/common/ad5820af/AD5820AF.c:		LOG_INF("set I2C failed when moving the motor\n");
lens/sub/common/ad5820af/AD5820AF.c:		LOG_INF("No CMD\n");
lens/sub/common/ad5820af/AD5820AF.c:	LOG_INF("Start\n");
lens/sub/common/ad5820af/AD5820AF.c:		LOG_INF("Wait\n");
lens/sub/common/ad5820af/AD5820AF.c:		LOG_INF("Free\n");
lens/sub/common/ad5820af/AD5820AF.c:	LOG_INF("End\n");
lens/sub/common/ad5820af/AD5820AF.c:	LOG_INF("FileName : %s\n", pFileName);
lens/sub/common/bu6429af/BU6429AF.c:#define LOG_INF(format, args...)                                               
lens/sub/common/bu6429af/BU6429AF.c:#define LOG_INF(format, args...)
lens/sub/common/bu6429af/BU6429AF.c:		LOG_INF("I2C read - send failed!!\n");
lens/sub/common/bu6429af/BU6429AF.c:		LOG_INF("I2C write failed!!\n");
lens/sub/common/bu6429af/BU6429AF.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/sub/common/bu6429af/BU6429AF.c:	LOG_INF("+\n");
lens/sub/common/bu6429af/BU6429AF.c:	LOG_INF("-\n");
lens/sub/common/bu6429af/BU6429AF.c:		LOG_INF("set I2C failed when moving the motor\n");
lens/sub/common/bu6429af/BU6429AF.c:		LOG_INF("No CMD\n");
lens/sub/common/bu6429af/BU6429AF.c:	LOG_INF("Start\n");
lens/sub/common/bu6429af/BU6429AF.c:		LOG_INF("Wait\n");
lens/sub/common/bu6429af/BU6429AF.c:		LOG_INF("Free\n");
lens/sub/common/bu6429af/BU6429AF.c:	LOG_INF("End\n");
lens/sub/common/bu6429af/BU6429AF.c:	LOG_INF("FileName : %s\n", pFileName);
lens/sub/common/lc898212af/LC898212AF.c:#define LOG_INF(format, args...)                                               
lens/sub/common/lc898212af/LC898212AF.c:#define LOG_INF(format, args...)
lens/sub/common/lc898212af/LC898212AF.c:		LOG_INF("read I2C send failed!!\n");
lens/sub/common/lc898212af/LC898212AF.c:		LOG_INF("failed!!\n");
lens/sub/common/lc898212af/LC898212AF.c:	LOG_INF("EEPROM 0x%x, 0x%x\n", addr, *data);
lens/sub/common/lc898212af/LC898212AF.c:		LOG_INF("[CAMERA SENSOR] read I2C send failed!!\n");
lens/sub/common/lc898212af/LC898212AF.c:			LOG_INF("Read Reg failed!!\n");
lens/sub/common/lc898212af/LC898212AF.c:			LOG_INF("Read Reg2 failed!!\n");
lens/sub/common/lc898212af/LC898212AF.c:	LOG_INF("Read Reg 0x%x, 0x%x, 0x%x\n", length, addr, *data);
lens/sub/common/lc898212af/LC898212AF.c:	LOG_INF("WriteReg 0x%x, 0x%x, 0x%x\n", length, addr, data);
lens/sub/common/lc898212af/LC898212AF.c:			LOG_INF("WriteReg failed!!\n");
lens/sub/common/lc898212af/LC898212AF.c:			LOG_INF("WriteReg 2 failed!!\n");
lens/sub/common/lc898212af/LC898212AF.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/sub/common/lc898212af/LC898212AF.c:	LOG_INF("+\n");
lens/sub/common/lc898212af/LC898212AF.c:		LOG_INF("min %d, max %x, offset 0x%x, gain 0x%x\n",
lens/sub/common/lc898212af/LC898212AF.c:	LOG_INF("-\n");
lens/sub/common/lc898212af/LC898212AF.c:	LOG_INF("move pos 0x%x 0x%x\n", TargetPos, ExistentPos);
lens/sub/common/lc898212af/LC898212AF.c:		LOG_INF("set I2C failed when moving the motor\n");
lens/sub/common/lc898212af/LC898212AF.c:		LOG_INF("No CMD\n");
lens/sub/common/lc898212af/LC898212AF.c:	LOG_INF("Start\n");
lens/sub/common/lc898212af/LC898212AF.c:		LOG_INF("Wait\n");
lens/sub/common/lc898212af/LC898212AF.c:		LOG_INF("Free\n");
lens/sub/common/lc898212af/LC898212AF.c:	LOG_INF("End\n");
lens/sub/common/lc898212af/LC898212AF.c:	LOG_INF("FileName : %s\n", pFileName);
lens/sub/common/bu6424af/BU6424AF.c:#define LOG_INF(format, args...)                                               
lens/sub/common/bu6424af/BU6424AF.c:#define LOG_INF(format, args...)
lens/sub/common/bu6424af/BU6424AF.c:		LOG_INF("I2C read - send failed!!\n");
lens/sub/common/bu6424af/BU6424AF.c:		LOG_INF("I2C write failed!!\n");
lens/sub/common/bu6424af/BU6424AF.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/sub/common/bu6424af/BU6424AF.c:	LOG_INF("+\n");
lens/sub/common/bu6424af/BU6424AF.c:	LOG_INF("-\n");
lens/sub/common/bu6424af/BU6424AF.c:		LOG_INF("set I2C failed when moving the motor\n");
lens/sub/common/bu6424af/BU6424AF.c:		LOG_INF("No CMD\n");
lens/sub/common/bu6424af/BU6424AF.c:	LOG_INF("Start\n");
lens/sub/common/bu6424af/BU6424AF.c:		LOG_INF("Wait\n");
lens/sub/common/bu6424af/BU6424AF.c:		LOG_INF("Free\n");
lens/sub/common/bu6424af/BU6424AF.c:	LOG_INF("End\n");
lens/sub/common/bu6424af/BU6424AF.c:	LOG_INF("FileName : %s\n", pFileName);
lens/sub/common/ak7345af/AK7345AF.c:#define LOG_INF(format, args...)                                               
lens/sub/common/ak7345af/AK7345AF.c:#define LOG_INF(format, args...)
lens/sub/common/ak7345af/AK7345AF.c:		LOG_INF("I2C read - send failed!!\n");
lens/sub/common/ak7345af/AK7345AF.c:		LOG_INF("I2C read - recv failed!!\n");
lens/sub/common/ak7345af/AK7345AF.c:		LOG_INF("I2C write failed!!\n");
lens/sub/common/ak7345af/AK7345AF.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/sub/common/ak7345af/AK7345AF.c:	LOG_INF("+\n");
lens/sub/common/ak7345af/AK7345AF.c:	LOG_INF("-\n");
lens/sub/common/ak7345af/AK7345AF.c:		LOG_INF("set I2C failed when moving the motor\n");
lens/sub/common/ak7345af/AK7345AF.c:		LOG_INF("No CMD\n");
lens/sub/common/ak7345af/AK7345AF.c:	LOG_INF("Start\n");
lens/sub/common/ak7345af/AK7345AF.c:		LOG_INF("Wait\n");
lens/sub/common/ak7345af/AK7345AF.c:		LOG_INF("Free\n");
lens/sub/common/ak7345af/AK7345AF.c:	LOG_INF("End\n");
lens/sub/common/ak7345af/AK7345AF.c:	LOG_INF("FileName : %s\n", pFileName);
lens/sub/common/ak7371af/AK7371AF.c:#define LOG_INF(format, args...)                                               
lens/sub/common/ak7371af/AK7371AF.c:#define LOG_INF(format, args...)
lens/sub/common/ak7371af/AK7371AF.c:		LOG_INF("I2C read - send failed!!\n");
lens/sub/common/ak7371af/AK7371AF.c:		LOG_INF("I2C read - recv failed!!\n");
lens/sub/common/ak7371af/AK7371AF.c:		LOG_INF("I2C write failed!!\n");
lens/sub/common/ak7371af/AK7371AF.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/sub/common/ak7371af/AK7371AF.c:	LOG_INF("+\n");
lens/sub/common/ak7371af/AK7371AF.c:	LOG_INF("-\n");
lens/sub/common/ak7371af/AK7371AF.c:		LOG_INF("set I2C failed when moving the motor\n");
lens/sub/common/ak7371af/AK7371AF.c:		LOG_INF("No CMD\n");
lens/sub/common/ak7371af/AK7371AF.c:	LOG_INF("Start\n");
lens/sub/common/ak7371af/AK7371AF.c:		LOG_INF("Wait\n");
lens/sub/common/ak7371af/AK7371AF.c:		LOG_INF("Free\n");
lens/sub/common/ak7371af/AK7371AF.c:	LOG_INF("End\n");
lens/sub/common/ak7371af/AK7371AF.c:	LOG_INF("FileName : %s\n", pFileName);
lens/sub/common/dw9814af/DW9814AF.c:#define LOG_INF(format, args...)                                               
lens/sub/common/dw9814af/DW9814AF.c:#define LOG_INF(format, args...)
lens/sub/common/dw9814af/DW9814AF.c:		LOG_INF("I2C read failed!!\n");
lens/sub/common/dw9814af/DW9814AF.c:		LOG_INF("I2C send failed!!\n");
lens/sub/common/dw9814af/DW9814AF.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/sub/common/dw9814af/DW9814AF.c:	LOG_INF("+\n");
lens/sub/common/dw9814af/DW9814AF.c:	LOG_INF("-\n");
lens/sub/common/dw9814af/DW9814AF.c:		LOG_INF("set I2C failed when moving the motor\n");
lens/sub/common/dw9814af/DW9814AF.c:		LOG_INF("No CMD\n");
lens/sub/common/dw9814af/DW9814AF.c:	LOG_INF("Start\n");
lens/sub/common/dw9814af/DW9814AF.c:		LOG_INF("Wait\n");
lens/sub/common/dw9814af/DW9814AF.c:		LOG_INF("Free\n");
lens/sub/common/dw9814af/DW9814AF.c:	LOG_INF("End\n");
lens/sub/common/dw9814af/DW9814AF.c:	LOG_INF("FileName : %s\n", pFileName);
lens/sub/common/fm50af/FM50AF.c:#define LOG_INF(format, args...)                                              
lens/sub/common/fm50af/FM50AF.c:#define LOG_INF(format, args...)
lens/sub/common/fm50af/FM50AF.c:		LOG_INF("I2C read failed!!\n");
lens/sub/common/fm50af/FM50AF.c:		LOG_INF("I2C send failed!!\n");
lens/sub/common/fm50af/FM50AF.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/sub/common/fm50af/FM50AF.c:	LOG_INF("+\n");
lens/sub/common/fm50af/FM50AF.c:	LOG_INF("-\n");
lens/sub/common/fm50af/FM50AF.c:		LOG_INF("set I2C failed when moving the motor\n");
lens/sub/common/fm50af/FM50AF.c:		LOG_INF("No CMD\n");
lens/sub/common/fm50af/FM50AF.c:	LOG_INF("Start\n");
lens/sub/common/fm50af/FM50AF.c:		LOG_INF("Wait\n");
lens/sub/common/fm50af/FM50AF.c:		LOG_INF("Free\n");
lens/sub/common/fm50af/FM50AF.c:	LOG_INF("End\n");
lens/sub/common/fm50af/FM50AF.c:	LOG_INF("FileName : %s\n", pFileName);
lens/sub/common/dw9714af/DW9714AF.c:#define LOG_INF(format, args...)                                               
lens/sub/common/dw9714af/DW9714AF.c:#define LOG_INF(format, args...)
lens/sub/common/dw9714af/DW9714AF.c:		LOG_INF("I2C read failed!!\n");
lens/sub/common/dw9714af/DW9714AF.c:		LOG_INF("I2C send failed!!\n");
lens/sub/common/dw9714af/DW9714AF.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/sub/common/dw9714af/DW9714AF.c:	LOG_INF("+\n");
lens/sub/common/dw9714af/DW9714AF.c:	LOG_INF("-\n");
lens/sub/common/dw9714af/DW9714AF.c:		LOG_INF("set I2C failed when moving the motor\n");
lens/sub/common/dw9714af/DW9714AF.c:		LOG_INF("No CMD\n");
lens/sub/common/dw9714af/DW9714AF.c:	LOG_INF("Start\n");
lens/sub/common/dw9714af/DW9714AF.c:		LOG_INF("Wait\n");
lens/sub/common/dw9714af/DW9714AF.c:		LOG_INF("Free\n");
lens/sub/common/dw9714af/DW9714AF.c:	LOG_INF("End\n");
lens/sub/common/dw9714af/DW9714AF.c:	LOG_INF("FileName : %s\n", pFileName);
lens/sub/common/ad5823af/AD5823AF.c:#define LOG_INF(format, args...)                                               
lens/sub/common/ad5823af/AD5823AF.c:#define LOG_INF(format, args...)
lens/sub/common/ad5823af/AD5823AF.c:		LOG_INF("I2C read MSB send failed!!\n");
lens/sub/common/ad5823af/AD5823AF.c:		LOG_INF("I2C read MSB recv failed!!\n");
lens/sub/common/ad5823af/AD5823AF.c:		LOG_INF("I2C read LSB send failed!!\n");
lens/sub/common/ad5823af/AD5823AF.c:		LOG_INF("I2C read LSB recv failed!!\n");
lens/sub/common/ad5823af/AD5823AF.c:		LOG_INF("I2C send failed!!\n");
lens/sub/common/ad5823af/AD5823AF.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/sub/common/ad5823af/AD5823AF.c:	LOG_INF("+\n");
lens/sub/common/ad5823af/AD5823AF.c:		LOG_INF("mode_init : 0x02\n");
lens/sub/common/ad5823af/AD5823AF.c:	LOG_INF("-\n");
lens/sub/common/ad5823af/AD5823AF.c:		LOG_INF("set I2C failed when moving the motor\n");
lens/sub/common/ad5823af/AD5823AF.c:		LOG_INF("No CMD\n");
lens/sub/common/ad5823af/AD5823AF.c:	LOG_INF("Start\n");
lens/sub/common/ad5823af/AD5823AF.c:		LOG_INF("Wait\n");
lens/sub/common/ad5823af/AD5823AF.c:		LOG_INF("Free\n");
lens/sub/common/ad5823af/AD5823AF.c:	LOG_INF("End\n");
lens/sub/common/ad5823af/AD5823AF.c:	LOG_INF("FileName : %s\n", pFileName);
lens/sub/common/dw9718af/DW9718AF.c:#define LOG_INF(format, args...)                                               
lens/sub/common/dw9718af/DW9718AF.c:#define LOG_INF(format, args...)
lens/sub/common/dw9718af/DW9718AF.c:		LOG_INF(" I2C write failed!!\n");
lens/sub/common/dw9718af/DW9718AF.c:		LOG_INF(" I2C read failed!!\n");
lens/sub/common/dw9718af/DW9718AF.c:		LOG_INF("I2C send failed!!\n");
lens/sub/common/dw9718af/DW9718AF.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/sub/common/dw9718af/DW9718AF.c:	LOG_INF("+\n");
lens/sub/common/dw9718af/DW9718AF.c:			LOG_INF("I2C send 0x00 failed!!\n");
lens/sub/common/dw9718af/DW9718AF.c:			LOG_INF("I2C send 0x01 failed!!\n");
lens/sub/common/dw9718af/DW9718AF.c:			LOG_INF("I2C send 0x05 failed!!\n");
lens/sub/common/dw9718af/DW9718AF.c:		LOG_INF("driver init success!!\n");
lens/sub/common/dw9718af/DW9718AF.c:	LOG_INF("-\n");
lens/sub/common/dw9718af/DW9718AF.c:		LOG_INF("set I2C failed when moving the motor\n");
lens/sub/common/dw9718af/DW9718AF.c:		LOG_INF("No CMD\n");
lens/sub/common/dw9718af/DW9718AF.c:	LOG_INF("Start\n");
lens/sub/common/dw9718af/DW9718AF.c:		LOG_INF("Wait\n");
lens/sub/common/dw9718af/DW9718AF.c:		LOG_INF("Free\n");
lens/sub/common/dw9718af/DW9718AF.c:	LOG_INF("End\n");
lens/sub/common/dw9718af/DW9718AF.c:	LOG_INF("FileName : %s\n", pFileName);
lens/sub/common/lc898214af/LC898214AF.c:#define LOG_INF(format, args...)                                               \
lens/sub/common/lc898214af/LC898214AF.c:#define LOG_INF(format, args...)
lens/sub/common/lc898214af/LC898214AF.c:		LOG_INF("read I2C send failed!!\n");
lens/sub/common/lc898214af/LC898214AF.c:		LOG_INF("EEPROM_ReadReg failed!!\n");
lens/sub/common/lc898214af/LC898214AF.c:	LOG_INF("u8data[0] = 0x%x\n", u8data[0]);
lens/sub/common/lc898214af/LC898214AF.c:	LOG_INF("u8data[1] = 0x%x\n", u8data[1]);
lens/sub/common/lc898214af/LC898214AF.c:	LOG_INF("EEPROM 0x%x, 0x%x\n", addr, *data);
lens/sub/common/lc898214af/LC898214AF.c:		LOG_INF("ReadI2C send failed!!\n");
lens/sub/common/lc898214af/LC898214AF.c:		LOG_INF("ReadI2C recv failed!!\n");
lens/sub/common/lc898214af/LC898214AF.c:	/* LOG_INF("ReadI2C 0x%x, 0x%x\n", a_uAddr, *a_uData); */
lens/sub/common/lc898214af/LC898214AF.c:			LOG_INF("WriteI2C failed!!\n");
lens/sub/common/lc898214af/LC898214AF.c:			LOG_INF("WriteI2C 2 failed!!\n");
lens/sub/common/lc898214af/LC898214AF.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/sub/common/lc898214af/LC898214AF.c:	LOG_INF("+\n");
lens/sub/common/lc898214af/LC898214AF.c:			LOG_INF("Check Read F0h fail\n");
lens/sub/common/lc898214af/LC898214AF.c:	LOG_INF("-\n");
lens/sub/common/lc898214af/LC898214AF.c:		LOG_INF("set I2C failed when moving the motor\n");
lens/sub/common/lc898214af/LC898214AF.c:		LOG_INF("No CMD\n");
lens/sub/common/lc898214af/LC898214AF.c:	LOG_INF("Start\n");
lens/sub/common/lc898214af/LC898214AF.c:		LOG_INF("Wait\n");
lens/sub/common/lc898214af/LC898214AF.c:		LOG_INF("Close\n");
lens/sub/common/lc898214af/LC898214AF.c:		LOG_INF("Free\n");
lens/sub/common/lc898214af/LC898214AF.c:	LOG_INF("End\n");
lens/sub/common/lc898214af/LC898214AF.c:	LOG_INF("FileName : %s\n", pFileName);
lens/sub/common/wv511aaf/WV511AAF.c:#define LOG_INF(format, args...)                                               
lens/sub/common/wv511aaf/WV511AAF.c:#define LOG_INF(format, args...)
lens/sub/common/wv511aaf/WV511AAF.c:		LOG_INF("I2C read failed!!\n");
lens/sub/common/wv511aaf/WV511AAF.c:	/* LOG_INF("g_sr %d, write %d\n", g_sr, a_u2Data); */
lens/sub/common/wv511aaf/WV511AAF.c:		LOG_INF("I2C send failed!!\n");
lens/sub/common/wv511aaf/WV511AAF.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/sub/common/wv511aaf/WV511AAF.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/sub/common/wv511aaf/WV511AAF.c:	LOG_INF("+\n");
lens/sub/common/wv511aaf/WV511AAF.c:	LOG_INF("-\n");
lens/sub/common/wv511aaf/WV511AAF.c:		LOG_INF("set I2C failed when moving the motor\n");
lens/sub/common/wv511aaf/WV511AAF.c:		LOG_INF("No CMD\n");
lens/sub/common/wv511aaf/WV511AAF.c:	LOG_INF("Start\n");
lens/sub/common/wv511aaf/WV511AAF.c:		LOG_INF("Free\n");
lens/sub/common/wv511aaf/WV511AAF.c:	LOG_INF("End\n");
lens/sub/common/wv511aaf/WV511AAF.c:	LOG_INF("FileName : %s\n", pFileName);
lens/sub/sub_lens.c:#define LOG_INF(format, args...)                                               
lens/sub/sub_lens.c:#define LOG_INF(format, args...)
lens/sub/sub_lens.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/sub/sub_lens.c:		LOG_INF("Search Motor Name : %s\n", g_stAF_DrvList[i].uDrvName);
lens/sub/sub_lens.c:			LOG_INF("Motor Name : %s\n", stMotorName.uMotorName);
lens/sub/sub_lens.c:		LOG_INF("copy to user failed\n");
lens/sub/sub_lens.c:			LOG_INF("copy to user failed\n");
lens/sub/sub_lens.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/sub/sub_lens.c:	LOG_INF("GETDRVNAME : set driver name(%s)\n", stMotorName.uMotorName);
lens/sub/sub_lens.c:		LOG_INF("Search Motor Name : %s\n", g_stAF_DrvList[i].uDrvName);
lens/sub/sub_lens.c:			LOG_INF("Motor Name : %s\n", stMotorName.uMotorName);
lens/sub/sub_lens.c:			LOG_INF("GETDRVNAME : get file name(%s)\n",
lens/sub/sub_lens.c:				LOG_INF("copy to user failed\n");
lens/sub/sub_lens.c:					LOG_INF("copy to user failed\n");
lens/sub/sub_lens.c:	LOG_INF("Start\n");
lens/sub/sub_lens.c:		LOG_INF("The device is opened\n");
lens/sub/sub_lens.c:	LOG_INF("End\n");
lens/sub/sub_lens.c:	LOG_INF("Start\n");
lens/sub/sub_lens.c:	LOG_INF("End\n");
lens/sub/sub_lens.c:	LOG_INF("Start\n");
lens/sub/sub_lens.c:		LOG_INF("Allocate device no failed\n");
lens/sub/sub_lens.c:		LOG_INF("Allocate mem for kobject failed\n");
lens/sub/sub_lens.c:		LOG_INF("Attatch file operation failed\n");
lens/sub/sub_lens.c:		LOG_INF("Unable to create class, err = %d\n", ret);
lens/sub/sub_lens.c:	LOG_INF("End\n");
lens/sub/sub_lens.c:	LOG_INF("Start\n");
lens/sub/sub_lens.c:	LOG_INF("End\n");
lens/sub/sub_lens.c:	LOG_INF("Start\n");
lens/sub/sub_lens.c:		LOG_INF(" register char device failed!\n");
lens/sub/sub_lens.c:	LOG_INF("Attached!!\n");
lens/sub/sub_lens.c:		LOG_INF("failed to register AF driver\n");
lens/sub/sub_lens.c:		LOG_INF("Failed to register AF driver\n");
lens/main3/common/ak7371af/AK7371AF.c:#define LOG_INF(format, args...)                                               \
lens/main3/common/ak7371af/AK7371AF.c:#define LOG_INF(format, args...)
lens/main3/common/ak7371af/AK7371AF.c:		LOG_INF("I2C read - send failed!!\n");
lens/main3/common/ak7371af/AK7371AF.c:		LOG_INF("I2C read - recv failed!!\n");
lens/main3/common/ak7371af/AK7371AF.c:		LOG_INF("I2C write failed!!\n");
lens/main3/common/ak7371af/AK7371AF.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/main3/common/ak7371af/AK7371AF.c:	LOG_INF("+\n");
lens/main3/common/ak7371af/AK7371AF.c:	LOG_INF("-\n");
lens/main3/common/ak7371af/AK7371AF.c:		LOG_INF("set I2C failed when moving the motor\n");
lens/main3/common/ak7371af/AK7371AF.c:		LOG_INF("No CMD\n");
lens/main3/common/ak7371af/AK7371AF.c:	LOG_INF("Start\n");
lens/main3/common/ak7371af/AK7371AF.c:		LOG_INF("Wait\n");
lens/main3/common/ak7371af/AK7371AF.c:		LOG_INF("Free\n");
lens/main3/common/ak7371af/AK7371AF.c:	LOG_INF("End\n");
lens/main3/common/ak7371af/AK7371AF.c:	LOG_INF("+\n");
lens/main3/common/ak7371af/AK7371AF.c:			LOG_INF("Addr : 0x02 , Data : %x\n", data);
lens/main3/common/ak7371af/AK7371AF.c:	LOG_INF("-\n");
lens/main3/common/ak7371af/AK7371AF.c:	LOG_INF("FileName : %s\n", pFileName);
lens/main3/main3_lens.c:#define LOG_INF(format, args...)                                               \
lens/main3/main3_lens.c:#define LOG_INF(format, args...)
lens/main3/main3_lens.c:		LOG_INF("+\n");
lens/main3/main3_lens.c:		LOG_INF("-\n");
lens/main3/main3_lens.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/main3/main3_lens.c:		LOG_INF("Search Motor Name : %s\n", g_stAF_DrvList[i].uDrvName);
lens/main3/main3_lens.c:			LOG_INF("Motor Name : %s\n", stMotorName.uMotorName);
lens/main3/main3_lens.c:		LOG_INF("copy to user failed\n");
lens/main3/main3_lens.c:			LOG_INF("copy to user failed\n");
lens/main3/main3_lens.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/main3/main3_lens.c:	LOG_INF("GETDRVNAME : set driver name(%s)\n", stMotorName.uMotorName);
lens/main3/main3_lens.c:		LOG_INF("Search Motor Name : %s\n", g_stAF_DrvList[i].uDrvName);
lens/main3/main3_lens.c:			LOG_INF("Motor Name : %s\n", stMotorName.uMotorName);
lens/main3/main3_lens.c:			LOG_INF("GETDRVNAME : get file name(%s)\n",
lens/main3/main3_lens.c:				LOG_INF("copy to user failed\n");
lens/main3/main3_lens.c:					LOG_INF("copy to user failed\n");
lens/main3/main3_lens.c:	LOG_INF("Start\n");
lens/main3/main3_lens.c:		LOG_INF("The device is opened\n");
lens/main3/main3_lens.c:	LOG_INF("End\n");
lens/main3/main3_lens.c:	LOG_INF("Start\n");
lens/main3/main3_lens.c:	LOG_INF("End\n");
lens/main3/main3_lens.c:	LOG_INF("Start\n");
lens/main3/main3_lens.c:		LOG_INF("Allocate device no failed\n");
lens/main3/main3_lens.c:		LOG_INF("Allocate mem for kobject failed\n");
lens/main3/main3_lens.c:		LOG_INF("Attatch file operation failed\n");
lens/main3/main3_lens.c:		LOG_INF("Unable to create class, err = %d\n", ret);
lens/main3/main3_lens.c:	LOG_INF("End\n");
lens/main3/main3_lens.c:	LOG_INF("Start\n");
lens/main3/main3_lens.c:	LOG_INF("End\n");
lens/main3/main3_lens.c:	LOG_INF("Start\n");
lens/main3/main3_lens.c:		LOG_INF(" register char device failed!\n");
lens/main3/main3_lens.c:	LOG_INF("Attached!!\n");
lens/main3/main3_lens.c:		LOG_INF("failed to register AF driver\n");
lens/main3/main3_lens.c:		LOG_INF("Failed to register AF driver\n");
lens/main2/common/lc898217af/LC898217AF.c:#define LOG_INF(format, args...)                                               \
lens/main2/common/lc898217af/LC898217AF.c:#define LOG_INF(format, args...)
lens/main2/common/lc898217af/LC898217AF.c:		LOG_INF("ReadI2C send failed!!\n");
lens/main2/common/lc898217af/LC898217AF.c:		LOG_INF("ReadI2C recv failed!!\n");
lens/main2/common/lc898217af/LC898217AF.c:	/* LOG_INF("RDI2C 0x%x, 0x%x\n", a_uAddr, *a_uData); */
lens/main2/common/lc898217af/LC898217AF.c:	/* LOG_INF("WRI2C 0x%04x, 0x%x\n", a_uAddr, a_u2Data); */
lens/main2/common/lc898217af/LC898217AF.c:			LOG_INF("WriteI2C failed!!\n");
lens/main2/common/lc898217af/LC898217AF.c:			LOG_INF("WriteI2C 2 failed!!\n");
lens/main2/common/lc898217af/LC898217AF.c:	/* LOG_INF("DAC(%04d) -> %03x\n", UsPosition, TarPos); */
lens/main2/common/lc898217af/LC898217AF.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/main2/common/lc898217af/LC898217AF.c:	LOG_INF("+\n");
lens/main2/common/lc898217af/LC898217AF.c:			LOG_INF("Skip init driver\n");
lens/main2/common/lc898217af/LC898217AF.c:			LOG_INF("Check HW version: %x\n", Temp);
lens/main2/common/lc898217af/LC898217AF.c:	LOG_INF("-\n");
lens/main2/common/lc898217af/LC898217AF.c:		LOG_INF("set I2C failed when moving the motor\n");
lens/main2/common/lc898217af/LC898217AF.c:		LOG_INF("No CMD\n");
lens/main2/common/lc898217af/LC898217AF.c:	LOG_INF("Start\n");
lens/main2/common/lc898217af/LC898217AF.c:		LOG_INF("Wait - Excute Time %d\n", diff_ms);
lens/main2/common/lc898217af/LC898217AF.c:			LOG_INF("Wait - skip uninit\n");
lens/main2/common/lc898217af/LC898217AF.c:			LOG_INF("Wait - power down\n");
lens/main2/common/lc898217af/LC898217AF.c:		LOG_INF("Wait - power down\n");
lens/main2/common/lc898217af/LC898217AF.c:		LOG_INF("Close\n");
lens/main2/common/lc898217af/LC898217AF.c:		LOG_INF("Free\n");
lens/main2/common/lc898217af/LC898217AF.c:	LOG_INF("End\n");
lens/main2/common/lc898217af/LC898217AF.c:	LOG_INF("+\n");
lens/main2/common/lc898217af/LC898217AF.c:			LOG_INF("LC898217AF Power Down = %d\n", CurTime);
lens/main2/common/lc898217af/LC898217AF.c:	LOG_INF("-\n");
lens/main2/common/lc898217af/LC898217AF.c:	LOG_INF("FileName : %s\n", pFileName);
lens/main2/common/bu64748af/bu64748af.c:#define LOG_INF(format, args...)                                               \
lens/main2/common/bu64748af/bu64748af.c:#define LOG_INF(format, args...)
lens/main2/common/bu64748af/bu64748af.c:		LOG_INF("I2C write failed!!\n");
lens/main2/common/bu64748af/bu64748af.c:		LOG_INF("I2C read - recv failed!!\n");
lens/main2/common/bu64748af/bu64748af.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/main2/common/bu64748af/bu64748af.c:	LOG_INF("+\n");
lens/main2/common/bu64748af/bu64748af.c:			LOG_INF("bu64748af_main init failed.line:%d.\n",
lens/main2/common/bu64748af/bu64748af.c:	LOG_INF("-\n");
lens/main2/common/bu64748af/bu64748af.c:		LOG_INF("No CMD\n");
lens/main2/common/bu64748af/bu64748af.c:	LOG_INF("Start\n");
lens/main2/common/bu64748af/bu64748af.c:		LOG_INF("Wait\n");
lens/main2/common/bu64748af/bu64748af.c:		LOG_INF("Free\n");
lens/main2/common/bu64748af/bu64748af.c:	LOG_INF("End\n");
lens/main2/common/bu64748af/bu64748af.c:	LOG_INF("+\n");
lens/main2/common/bu64748af/bu64748af.c:		LOG_INF("apply\n");
lens/main2/common/bu64748af/bu64748af.c:	LOG_INF("-\n");
lens/main2/common/bu64748af/bu64748af.c:	LOG_INF("SetI2Cclient value(0x%x)\n", ret);
lens/main2/common/bu64748af/bu64748af.c:	LOG_INF("FileName : %s\n", pFileName);
lens/main2/common/ak7371af/AK7371AF.c:#define LOG_INF(format, args...)                                               \
lens/main2/common/ak7371af/AK7371AF.c:#define LOG_INF(format, args...)
lens/main2/common/ak7371af/AK7371AF.c:		LOG_INF("I2C read - send failed!!\n");
lens/main2/common/ak7371af/AK7371AF.c:		LOG_INF("I2C read - recv failed!!\n");
lens/main2/common/ak7371af/AK7371AF.c:		LOG_INF("I2C write failed!!\n");
lens/main2/common/ak7371af/AK7371AF.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/main2/common/ak7371af/AK7371AF.c:	LOG_INF("+\n");
lens/main2/common/ak7371af/AK7371AF.c:	LOG_INF("-\n");
lens/main2/common/ak7371af/AK7371AF.c:		LOG_INF("set I2C failed when moving the motor\n");
lens/main2/common/ak7371af/AK7371AF.c:		LOG_INF("No CMD\n");
lens/main2/common/ak7371af/AK7371AF.c:	LOG_INF("Start\n");
lens/main2/common/ak7371af/AK7371AF.c:		LOG_INF("Wait\n");
lens/main2/common/ak7371af/AK7371AF.c:		LOG_INF("Free\n");
lens/main2/common/ak7371af/AK7371AF.c:	LOG_INF("End\n");
lens/main2/common/ak7371af/AK7371AF.c:	LOG_INF("+\n");
lens/main2/common/ak7371af/AK7371AF.c:			LOG_INF("Addr : 0x02 , Data : %x\n", data);
lens/main2/common/ak7371af/AK7371AF.c:	LOG_INF("-\n");
lens/main2/common/ak7371af/AK7371AF.c:	LOG_INF("FileName : %s\n", pFileName);
lens/main2/common/lc898217afb/LC898217AFB.c:#define LOG_INF(format, args...)                                               \
lens/main2/common/lc898217afb/LC898217AFB.c:#define LOG_INF(format, args...)
lens/main2/common/lc898217afb/LC898217AFB.c:		LOG_INF("ReadI2C send failed!!\n");
lens/main2/common/lc898217afb/LC898217AFB.c:		LOG_INF("ReadI2C recv failed!!\n");
lens/main2/common/lc898217afb/LC898217AFB.c:	/* LOG_INF("RDI2C 0x%x, 0x%x\n", a_uAddr, *a_uData); */
lens/main2/common/lc898217afb/LC898217AFB.c:	/* LOG_INF("WRI2C 0x%04x, 0x%x\n", a_uAddr, a_u2Data); */
lens/main2/common/lc898217afb/LC898217AFB.c:			LOG_INF("WriteI2C failed!!\n");
lens/main2/common/lc898217afb/LC898217AFB.c:			LOG_INF("WriteI2C 2 failed!!\n");
lens/main2/common/lc898217afb/LC898217AFB.c:	/* LOG_INF("DAC(%04d) -> %03x\n", UsPosition, TarPos); */
lens/main2/common/lc898217afb/LC898217AFB.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/main2/common/lc898217afb/LC898217AFB.c:	LOG_INF("+\n");
lens/main2/common/lc898217afb/LC898217AFB.c:			LOG_INF("Skip init driver\n");
lens/main2/common/lc898217afb/LC898217AFB.c:			LOG_INF("Check HW version: %x\n", Temp);
lens/main2/common/lc898217afb/LC898217AFB.c:	LOG_INF("-\n");
lens/main2/common/lc898217afb/LC898217AFB.c:		LOG_INF("set I2C failed when moving the motor\n");
lens/main2/common/lc898217afb/LC898217AFB.c:		LOG_INF("No CMD\n");
lens/main2/common/lc898217afb/LC898217AFB.c:	LOG_INF("Start\n");
lens/main2/common/lc898217afb/LC898217AFB.c:		LOG_INF("Wait - Excute Time %d\n", diff_ms);
lens/main2/common/lc898217afb/LC898217AFB.c:			LOG_INF("Wait - skip uninit\n");
lens/main2/common/lc898217afb/LC898217AFB.c:			LOG_INF("Wait - power down\n");
lens/main2/common/lc898217afb/LC898217AFB.c:		LOG_INF("Wait - power down\n");
lens/main2/common/lc898217afb/LC898217AFB.c:		LOG_INF("Close\n");
lens/main2/common/lc898217afb/LC898217AFB.c:		LOG_INF("Free\n");
lens/main2/common/lc898217afb/LC898217AFB.c:	LOG_INF("End\n");
lens/main2/common/lc898217afb/LC898217AFB.c:	LOG_INF("+\n");
lens/main2/common/lc898217afb/LC898217AFB.c:			LOG_INF("LC898217AF Power Down = %d\n", CurTime);
lens/main2/common/lc898217afb/LC898217AFB.c:	LOG_INF("-\n");
lens/main2/common/lc898217afb/LC898217AFB.c:	LOG_INF("FileName : %s\n", pFileName);
lens/main2/common/lc898217afc/LC898217AFC.c:#define LOG_INF(format, args...)                                               \
lens/main2/common/lc898217afc/LC898217AFC.c:#define LOG_INF(format, args...)
lens/main2/common/lc898217afc/LC898217AFC.c:		LOG_INF("ReadI2C send failed!!\n");
lens/main2/common/lc898217afc/LC898217AFC.c:		LOG_INF("ReadI2C recv failed!!\n");
lens/main2/common/lc898217afc/LC898217AFC.c:	/* LOG_INF("RDI2C 0x%x, 0x%x\n", a_uAddr, *a_uData); */
lens/main2/common/lc898217afc/LC898217AFC.c:	/* LOG_INF("WRI2C 0x%04x, 0x%x\n", a_uAddr, a_u2Data); */
lens/main2/common/lc898217afc/LC898217AFC.c:			LOG_INF("WriteI2C failed!!\n");
lens/main2/common/lc898217afc/LC898217AFC.c:			LOG_INF("WriteI2C 2 failed!!\n");
lens/main2/common/lc898217afc/LC898217AFC.c:	/* LOG_INF("DAC(%04d) -> %03x\n", UsPosition, TarPos); */
lens/main2/common/lc898217afc/LC898217AFC.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/main2/common/lc898217afc/LC898217AFC.c:	LOG_INF("+\n");
lens/main2/common/lc898217afc/LC898217AFC.c:			LOG_INF("Skip init driver\n");
lens/main2/common/lc898217afc/LC898217AFC.c:			LOG_INF("Check HW version: %x\n", Temp);
lens/main2/common/lc898217afc/LC898217AFC.c:	LOG_INF("-\n");
lens/main2/common/lc898217afc/LC898217AFC.c:		LOG_INF("set I2C failed when moving the motor\n");
lens/main2/common/lc898217afc/LC898217AFC.c:		LOG_INF("No CMD\n");
lens/main2/common/lc898217afc/LC898217AFC.c:	LOG_INF("Start\n");
lens/main2/common/lc898217afc/LC898217AFC.c:		LOG_INF("Wait - Excute Time %d\n", diff_ms);
lens/main2/common/lc898217afc/LC898217AFC.c:			LOG_INF("Wait - skip uninit\n");
lens/main2/common/lc898217afc/LC898217AFC.c:			LOG_INF("Wait - power down\n");
lens/main2/common/lc898217afc/LC898217AFC.c:		LOG_INF("Wait - power down\n");
lens/main2/common/lc898217afc/LC898217AFC.c:		LOG_INF("Close\n");
lens/main2/common/lc898217afc/LC898217AFC.c:		LOG_INF("Free\n");
lens/main2/common/lc898217afc/LC898217AFC.c:	LOG_INF("End\n");
lens/main2/common/lc898217afc/LC898217AFC.c:	LOG_INF("+\n");
lens/main2/common/lc898217afc/LC898217AFC.c:			LOG_INF("LC898217AF Power Down = %d\n", CurTime);
lens/main2/common/lc898217afc/LC898217AFC.c:	LOG_INF("-\n");
lens/main2/common/lc898217afc/LC898217AFC.c:	LOG_INF("FileName : %s\n", pFileName);
lens/main2/common/lc898217afa/LC898217AFA.c:#define LOG_INF(format, args...)                                               \
lens/main2/common/lc898217afa/LC898217AFA.c:#define LOG_INF(format, args...)
lens/main2/common/lc898217afa/LC898217AFA.c:		LOG_INF("ReadI2C send failed!!\n");
lens/main2/common/lc898217afa/LC898217AFA.c:		LOG_INF("ReadI2C recv failed!!\n");
lens/main2/common/lc898217afa/LC898217AFA.c:	/* LOG_INF("RDI2C 0x%x, 0x%x\n", a_uAddr, *a_uData); */
lens/main2/common/lc898217afa/LC898217AFA.c:	/* LOG_INF("WRI2C 0x%04x, 0x%x\n", a_uAddr, a_u2Data); */
lens/main2/common/lc898217afa/LC898217AFA.c:			LOG_INF("WriteI2C failed!!\n");
lens/main2/common/lc898217afa/LC898217AFA.c:			LOG_INF("WriteI2C 2 failed!!\n");
lens/main2/common/lc898217afa/LC898217AFA.c:	/* LOG_INF("DAC(%04d) -> %03x\n", UsPosition, TarPos); */
lens/main2/common/lc898217afa/LC898217AFA.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/main2/common/lc898217afa/LC898217AFA.c:	LOG_INF("+\n");
lens/main2/common/lc898217afa/LC898217AFA.c:			LOG_INF("Skip init driver\n");
lens/main2/common/lc898217afa/LC898217AFA.c:			LOG_INF("Check HW version: %x\n", Temp);
lens/main2/common/lc898217afa/LC898217AFA.c:	LOG_INF("-\n");
lens/main2/common/lc898217afa/LC898217AFA.c:		LOG_INF("set I2C failed when moving the motor\n");
lens/main2/common/lc898217afa/LC898217AFA.c:		LOG_INF("No CMD\n");
lens/main2/common/lc898217afa/LC898217AFA.c:	LOG_INF("Start\n");
lens/main2/common/lc898217afa/LC898217AFA.c:		LOG_INF("Wait - Excute Time %d\n", diff_ms);
lens/main2/common/lc898217afa/LC898217AFA.c:			LOG_INF("Wait - skip uninit\n");
lens/main2/common/lc898217afa/LC898217AFA.c:			LOG_INF("Wait - power down\n");
lens/main2/common/lc898217afa/LC898217AFA.c:		LOG_INF("Wait - power down\n");
lens/main2/common/lc898217afa/LC898217AFA.c:		LOG_INF("Close\n");
lens/main2/common/lc898217afa/LC898217AFA.c:		LOG_INF("Free\n");
lens/main2/common/lc898217afa/LC898217AFA.c:	LOG_INF("End\n");
lens/main2/common/lc898217afa/LC898217AFA.c:	LOG_INF("+\n");
lens/main2/common/lc898217afa/LC898217AFA.c:			LOG_INF("LC898217AF Power Down = %d\n", CurTime);
lens/main2/common/lc898217afa/LC898217AFA.c:	LOG_INF("-\n");
lens/main2/common/lc898217afa/LC898217AFA.c:	LOG_INF("FileName : %s\n", pFileName);
lens/main2/common/lc898212xdaf_f/LC89821x_STMV.c:#ifdef DEBUG_LOG
lens/main2/common/lc898212xdaf_f/LC89821x_STMV.c:#ifdef DEBUG_LOG
lens/main2/common/lc898212xdaf_f/LC89821x_STMV.c:#define LOG_INF(format, args...)
lens/main2/common/lc898212xdaf_f/LC89821x_STMV.c:	#ifdef DEBUG_LOG
lens/main2/common/lc898212xdaf_f/LC89821x_STMV.c:	LOG_INF("RAMW\t%x\t%x\n", addr, data);
lens/main2/common/lc898212xdaf_f/LC89821x_STMV.c:	#ifdef DEBUG_LOG
lens/main2/common/lc898212xdaf_f/LC89821x_STMV.c:	LOG_INF("RAMR\t%x\t%x\n", addr, *data);
lens/main2/common/lc898212xdaf_f/LC89821x_STMV.c:	#ifdef DEBUG_LOG
lens/main2/common/lc898212xdaf_f/LC89821x_STMV.c:	LOG_INF("REGW\t%x\t%x\n", addr, data);
lens/main2/common/lc898212xdaf_f/LC89821x_STMV.c:	#ifdef DEBUG_LOG
lens/main2/common/lc898212xdaf_f/LC89821x_STMV.c:	LOG_INF("REGR\t%x\t%x\n", addr, *data);
lens/main2/common/lc898212xdaf_f/LC898212XDAF_F.c:#define LOG_INF(format, args...)                                               \
lens/main2/common/lc898212xdaf_f/LC898212XDAF_F.c:#define LOG_INF(format, args...)
lens/main2/common/lc898212xdaf_f/LC898212XDAF_F.c:		LOG_INF("I2C send failed!!, Addr = 0x%x\n", a_pSendData[0]);
lens/main2/common/lc898212xdaf_f/LC898212XDAF_F.c:		LOG_INF("I2C read failed!!\n");
lens/main2/common/lc898212xdaf_f/LC898212XDAF_F.c:		LOG_INF("I2C send failed!!, Addr = 0x%x, Data = 0x%x\n",
lens/main2/common/lc898212xdaf_f/LC898212XDAF_F.c:		LOG_INF("I2C read e2prom failed!!\n");
lens/main2/common/lc898212xdaf_f/LC898212XDAF_F.c:	LOG_INF("Addr = 0x0003 , Data = %x\n", val1);
lens/main2/common/lc898212xdaf_f/LC898212XDAF_F.c:	LOG_INF("Addr = 0x0004 , Data = %x\n", val2);
lens/main2/common/lc898212xdaf_f/LC898212XDAF_F.c:	LOG_INF("hallmax:0x%x, hallmin:0x%x, halloff:0x%x, hallbias:0x%x\n",
lens/main2/common/lc898212xdaf_f/LC898212XDAF_F.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/main2/common/lc898212xdaf_f/LC898212XDAF_F.c:	LOG_INF("+\n");
lens/main2/common/lc898212xdaf_f/LC898212XDAF_F.c:	LOG_INF("-\n");
lens/main2/common/lc898212xdaf_f/LC898212XDAF_F.c:		LOG_INF("set I2C failed when moving the motor\n");
lens/main2/common/lc898212xdaf_f/LC898212XDAF_F.c:		LOG_INF("AF_Infi : %x\n", AF_Infi);
lens/main2/common/lc898212xdaf_f/LC898212XDAF_F.c:		LOG_INF("AF_Infi : %x\n", AF_Marco);
lens/main2/common/lc898212xdaf_f/LC898212XDAF_F.c:			LOG_INF("u4AF_CalibData_INF : %d\n",
lens/main2/common/lc898212xdaf_f/LC898212XDAF_F.c:			LOG_INF("u4AF_CalibData_MACRO : %d\n",
lens/main2/common/lc898212xdaf_f/LC898212XDAF_F.c:		LOG_INF("AF_Infi : %x\n", AF_Infi);
lens/main2/common/lc898212xdaf_f/LC898212XDAF_F.c:		LOG_INF("AF_Marco : %x\n", AF_Marco);
lens/main2/common/lc898212xdaf_f/LC898212XDAF_F.c:		LOG_INF("AF_CalibData_INF : %d\n", u4AF_CalibData_INF);
lens/main2/common/lc898212xdaf_f/LC898212XDAF_F.c:		LOG_INF("AF_CalibData_MACRO : %d\n", u4AF_CalibData_MACRO);
lens/main2/common/lc898212xdaf_f/LC898212XDAF_F.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/main2/common/lc898212xdaf_f/LC898212XDAF_F.c:		LOG_INF("No CMD\n");
lens/main2/common/lc898212xdaf_f/LC898212XDAF_F.c:	LOG_INF("Start\n");
lens/main2/common/lc898212xdaf_f/LC898212XDAF_F.c:		LOG_INF("Wait\n");
lens/main2/common/lc898212xdaf_f/LC898212XDAF_F.c:		LOG_INF("Free\n");
lens/main2/common/lc898212xdaf_f/LC898212XDAF_F.c:	LOG_INF("End\n");
lens/main2/common/lc898212xdaf_f/LC898212XDAF_F.c:	LOG_INF("FileName : %s\n", pFileName);
lens/main2/main2_lens.c:#define LOG_INF(format, args...)                                               \
lens/main2/main2_lens.c:#define LOG_INF(format, args...)
lens/main2/main2_lens.c:			LOG_INF("%d/%d\n", Ret1, DrvPwrDn1);
lens/main2/main2_lens.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/main2/main2_lens.c:		LOG_INF("Search Motor Name : %s\n", g_stAF_DrvList[i].uDrvName);
lens/main2/main2_lens.c:			LOG_INF("Motor Name : %s\n", stMotorName.uMotorName);
lens/main2/main2_lens.c:		LOG_INF("copy to user failed\n");
lens/main2/main2_lens.c:			LOG_INF("copy to user failed\n");
lens/main2/main2_lens.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/main2/main2_lens.c:	LOG_INF("GETDRVNAME : set driver name(%s)\n", stMotorName.uMotorName);
lens/main2/main2_lens.c:		LOG_INF("Search Motor Name : %s\n", g_stAF_DrvList[i].uDrvName);
lens/main2/main2_lens.c:			LOG_INF("Motor Name : %s\n", stMotorName.uMotorName);
lens/main2/main2_lens.c:			LOG_INF("GETDRVNAME : get file name(%s)\n",
lens/main2/main2_lens.c:				LOG_INF("copy to user failed\n");
lens/main2/main2_lens.c:					LOG_INF("copy to user failed\n");
lens/main2/main2_lens.c:	LOG_INF("Start\n");
lens/main2/main2_lens.c:		LOG_INF("The device is opened\n");
lens/main2/main2_lens.c:	LOG_INF("End\n");
lens/main2/main2_lens.c:	LOG_INF("Start\n");
lens/main2/main2_lens.c:	LOG_INF("End\n");
lens/main2/main2_lens.c:	LOG_INF("Start\n");
lens/main2/main2_lens.c:		LOG_INF("Allocate device no failed\n");
lens/main2/main2_lens.c:		LOG_INF("Allocate mem for kobject failed\n");
lens/main2/main2_lens.c:		LOG_INF("Attatch file operation failed\n");
lens/main2/main2_lens.c:		LOG_INF("Unable to create class, err = %d\n", ret);
lens/main2/main2_lens.c:	LOG_INF("End\n");
lens/main2/main2_lens.c:	LOG_INF("Start\n");
lens/main2/main2_lens.c:	LOG_INF("End\n");
lens/main2/main2_lens.c:	LOG_INF("Start\n");
lens/main2/main2_lens.c:		LOG_INF(" register char device failed!\n");
lens/main2/main2_lens.c:	LOG_INF("Attached!!\n");
lens/main2/main2_lens.c:		LOG_INF("failed to register AF driver\n");
lens/main2/main2_lens.c:		LOG_INF("Failed to register AF driver\n");
lens/sub2/sub2_lens.c:#define LOG_INF(format, args...)                                              
lens/sub2/sub2_lens.c:#define LOG_INF(format, args...)
lens/sub2/sub2_lens.c:		LOG_INF("+\n");
lens/sub2/sub2_lens.c:		LOG_INF("-\n");
lens/sub2/sub2_lens.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/sub2/sub2_lens.c:		LOG_INF("Search Motor Name : %s\n", g_stAF_DrvList[i].uDrvName);
lens/sub2/sub2_lens.c:			LOG_INF("Motor Name : %s\n", stMotorName.uMotorName);
lens/sub2/sub2_lens.c:		LOG_INF("copy to user failed\n");
lens/sub2/sub2_lens.c:			LOG_INF("copy to user failed\n");
lens/sub2/sub2_lens.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/sub2/sub2_lens.c:	LOG_INF("GETDRVNAME : set driver name(%s)\n", stMotorName.uMotorName);
lens/sub2/sub2_lens.c:		LOG_INF("Search Motor Name : %s\n", g_stAF_DrvList[i].uDrvName);
lens/sub2/sub2_lens.c:			LOG_INF("Motor Name : %s\n", stMotorName.uMotorName);
lens/sub2/sub2_lens.c:			LOG_INF("GETDRVNAME : get file name(%s)\n",
lens/sub2/sub2_lens.c:				LOG_INF("copy to user failed\n");
lens/sub2/sub2_lens.c:					LOG_INF("copy to user failed\n");
lens/sub2/sub2_lens.c:	LOG_INF("Start\n");
lens/sub2/sub2_lens.c:		LOG_INF("The device is opened\n");
lens/sub2/sub2_lens.c:	LOG_INF("End\n");
lens/sub2/sub2_lens.c:	LOG_INF("Start\n");
lens/sub2/sub2_lens.c:	LOG_INF("End\n");
lens/sub2/sub2_lens.c:	LOG_INF("Start\n");
lens/sub2/sub2_lens.c:		LOG_INF("Allocate device no failed\n");
lens/sub2/sub2_lens.c:		LOG_INF("Allocate mem for kobject failed\n");
lens/sub2/sub2_lens.c:		LOG_INF("Attatch file operation failed\n");
lens/sub2/sub2_lens.c:		LOG_INF("Unable to create class, err = %d\n", ret);
lens/sub2/sub2_lens.c:	LOG_INF("End\n");
lens/sub2/sub2_lens.c:	LOG_INF("Start\n");
lens/sub2/sub2_lens.c:	LOG_INF("End\n");
lens/sub2/sub2_lens.c:	LOG_INF("Start\n");
lens/sub2/sub2_lens.c:		LOG_INF(" register char device failed!\n");
lens/sub2/sub2_lens.c:	LOG_INF("Attached!!\n");
lens/sub2/sub2_lens.c:		LOG_INF("failed to register AF driver\n");
lens/sub2/sub2_lens.c:		LOG_INF("Failed to register AF driver\n");
lens/sub2/common/ak7371af/AK7371AF.c:#define LOG_INF(format, args...)                                               
lens/sub2/common/ak7371af/AK7371AF.c:#define LOG_INF(format, args...)
lens/sub2/common/ak7371af/AK7371AF.c:		LOG_INF("I2C read - send failed!!\n");
lens/sub2/common/ak7371af/AK7371AF.c:		LOG_INF("I2C read - recv failed!!\n");
lens/sub2/common/ak7371af/AK7371AF.c:		LOG_INF("I2C write failed!!\n");
lens/sub2/common/ak7371af/AK7371AF.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/sub2/common/ak7371af/AK7371AF.c:	LOG_INF("+\n");
lens/sub2/common/ak7371af/AK7371AF.c:	LOG_INF("-\n");
lens/sub2/common/ak7371af/AK7371AF.c:		LOG_INF("set I2C failed when moving the motor\n");
lens/sub2/common/ak7371af/AK7371AF.c:		LOG_INF("No CMD\n");
lens/sub2/common/ak7371af/AK7371AF.c:	LOG_INF("Start\n");
lens/sub2/common/ak7371af/AK7371AF.c:		LOG_INF("Wait\n");
lens/sub2/common/ak7371af/AK7371AF.c:		LOG_INF("Free\n");
lens/sub2/common/ak7371af/AK7371AF.c:	LOG_INF("End\n");
lens/sub2/common/ak7371af/AK7371AF.c:	LOG_INF("+\n");
lens/sub2/common/ak7371af/AK7371AF.c:			LOG_INF("Addr : 0x02 , Data : %x\n", data);
lens/sub2/common/ak7371af/AK7371AF.c:	LOG_INF("-\n");
lens/sub2/common/ak7371af/AK7371AF.c:	LOG_INF("FileName : %s\n", pFileName);
lens/main/common/ad5820af/AD5820AF.c:#define LOG_INF(format, args...)                                               \
lens/main/common/ad5820af/AD5820AF.c:#define LOG_INF(format, args...)
lens/main/common/ad5820af/AD5820AF.c:		LOG_INF("I2C read failed!!\n");
lens/main/common/ad5820af/AD5820AF.c:		LOG_INF("I2C send failed!!\n");
lens/main/common/ad5820af/AD5820AF.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/main/common/ad5820af/AD5820AF.c:	LOG_INF("+\n");
lens/main/common/ad5820af/AD5820AF.c:	LOG_INF("-\n");
lens/main/common/ad5820af/AD5820AF.c:		LOG_INF("set I2C failed when moving the motor\n");
lens/main/common/ad5820af/AD5820AF.c:		LOG_INF("No CMD\n");
lens/main/common/ad5820af/AD5820AF.c:	LOG_INF("Start\n");
lens/main/common/ad5820af/AD5820AF.c:		LOG_INF("Wait\n");
lens/main/common/ad5820af/AD5820AF.c:		LOG_INF("Free\n");
lens/main/common/ad5820af/AD5820AF.c:	LOG_INF("End\n");
lens/main/common/ad5820af/AD5820AF.c:	LOG_INF("FileName : %s\n", pFileName);
lens/main/common/lc898217af/LC898217AF.c:#define LOG_INF(format, args...)                                               \
lens/main/common/lc898217af/LC898217AF.c:#define LOG_INF(format, args...)
lens/main/common/lc898217af/LC898217AF.c:		LOG_INF("ReadI2C send failed!!\n");
lens/main/common/lc898217af/LC898217AF.c:		LOG_INF("ReadI2C recv failed!!\n");
lens/main/common/lc898217af/LC898217AF.c:	/* LOG_INF("RDI2C 0x%x, 0x%x\n", a_uAddr, *a_uData); */
lens/main/common/lc898217af/LC898217AF.c:	/* LOG_INF("WRI2C 0x%04x, 0x%x\n", a_uAddr, a_u2Data); */
lens/main/common/lc898217af/LC898217AF.c:			LOG_INF("WriteI2C failed!!\n");
lens/main/common/lc898217af/LC898217AF.c:			LOG_INF("WriteI2C 2 failed!!\n");
lens/main/common/lc898217af/LC898217AF.c:	/* LOG_INF("DAC(%04d) -> %03x\n", UsPosition, TarPos); */
lens/main/common/lc898217af/LC898217AF.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/main/common/lc898217af/LC898217AF.c:	LOG_INF("+\n");
lens/main/common/lc898217af/LC898217AF.c:			LOG_INF("Skip init driver\n");
lens/main/common/lc898217af/LC898217AF.c:			LOG_INF("Check HW version: %x\n", Temp);
lens/main/common/lc898217af/LC898217AF.c:	LOG_INF("-\n");
lens/main/common/lc898217af/LC898217AF.c:		LOG_INF("set I2C failed when moving the motor\n");
lens/main/common/lc898217af/LC898217AF.c:		LOG_INF("No CMD\n");
lens/main/common/lc898217af/LC898217AF.c:	LOG_INF("Start\n");
lens/main/common/lc898217af/LC898217AF.c:		LOG_INF("Wait - Excute Time %d\n", diff_ms);
lens/main/common/lc898217af/LC898217AF.c:			LOG_INF("Wait - skip uninit\n");
lens/main/common/lc898217af/LC898217AF.c:			LOG_INF("Wait - power down\n");
lens/main/common/lc898217af/LC898217AF.c:		LOG_INF("Wait - power down\n");
lens/main/common/lc898217af/LC898217AF.c:		LOG_INF("Close\n");
lens/main/common/lc898217af/LC898217AF.c:		LOG_INF("Free\n");
lens/main/common/lc898217af/LC898217AF.c:	LOG_INF("End\n");
lens/main/common/lc898217af/LC898217AF.c:	LOG_INF("+\n");
lens/main/common/lc898217af/LC898217AF.c:			LOG_INF("LC898217AF Power Down = %d\n", CurTime);
lens/main/common/lc898217af/LC898217AF.c:	LOG_INF("-\n");
lens/main/common/lc898217af/LC898217AF.c:	LOG_INF("FileName : %s\n", pFileName);
lens/main/common/fp5510e2af/FP5510E2AF.c:#define LOG_INF(format, args...)                                               \
lens/main/common/fp5510e2af/FP5510E2AF.c:#define LOG_INF(format, args...)
lens/main/common/fp5510e2af/FP5510E2AF.c:		LOG_INF("I2C read failed!!\n");
lens/main/common/fp5510e2af/FP5510E2AF.c:		LOG_INF("I2C send failed!!\n");
lens/main/common/fp5510e2af/FP5510E2AF.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/main/common/fp5510e2af/FP5510E2AF.c:	LOG_INF("+\n");
lens/main/common/fp5510e2af/FP5510E2AF.c:			LOG_INF(" puSendCmd1 send failed.\n");
lens/main/common/fp5510e2af/FP5510E2AF.c:			LOG_INF(" puSendCmd2 send failed.\n");
lens/main/common/fp5510e2af/FP5510E2AF.c:			LOG_INF(" puSendCmd3 send failed.\n");
lens/main/common/fp5510e2af/FP5510E2AF.c:			LOG_INF(" puSendCmd4 send failed.\n");
lens/main/common/fp5510e2af/FP5510E2AF.c:			LOG_INF(" puSendCmd5 send failed.\n");
lens/main/common/fp5510e2af/FP5510E2AF.c:			LOG_INF(" puSendCmd6 send failed.\n");
lens/main/common/fp5510e2af/FP5510E2AF.c:	LOG_INF("-\n");
lens/main/common/fp5510e2af/FP5510E2AF.c:		LOG_INF("set I2C failed when moving the motor\n");
lens/main/common/fp5510e2af/FP5510E2AF.c:		LOG_INF("No CMD\n");
lens/main/common/fp5510e2af/FP5510E2AF.c:	LOG_INF("Start\n");
lens/main/common/fp5510e2af/FP5510E2AF.c:		LOG_INF("Wait\n");
lens/main/common/fp5510e2af/FP5510E2AF.c:		LOG_INF("Free\n");
lens/main/common/fp5510e2af/FP5510E2AF.c:	LOG_INF("End\n");
lens/main/common/fp5510e2af/FP5510E2AF.c:	LOG_INF("FileName : %s\n", pFileName);
lens/main/common/bu64748af/bu64748af.c:#define LOG_INF(format, args...)                                               \
lens/main/common/bu64748af/bu64748af.c:#define LOG_INF(format, args...)
lens/main/common/bu64748af/bu64748af.c:		LOG_INF("I2C write failed!!\n");
lens/main/common/bu64748af/bu64748af.c:		LOG_INF("I2C read - recv failed!!\n");
lens/main/common/bu64748af/bu64748af.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/main/common/bu64748af/bu64748af.c:	LOG_INF("+\n");
lens/main/common/bu64748af/bu64748af.c:			LOG_INF("bu64748af_main init failed.line:%d.\n",
lens/main/common/bu64748af/bu64748af.c:	LOG_INF("-\n");
lens/main/common/bu64748af/bu64748af.c:		LOG_INF("No CMD\n");
lens/main/common/bu64748af/bu64748af.c:	LOG_INF("Start\n");
lens/main/common/bu64748af/bu64748af.c:		LOG_INF("Wait\n");
lens/main/common/bu64748af/bu64748af.c:		LOG_INF("Free\n");
lens/main/common/bu64748af/bu64748af.c:	LOG_INF("End\n");
lens/main/common/bu64748af/bu64748af.c:	LOG_INF("+\n");
lens/main/common/bu64748af/bu64748af.c:		LOG_INF("apply\n");
lens/main/common/bu64748af/bu64748af.c:	LOG_INF("-\n");
lens/main/common/bu64748af/bu64748af.c:	LOG_INF("SetI2Cclient value(0x%x)\n", ret);
lens/main/common/bu64748af/bu64748af.c:	LOG_INF("FileName : %s\n", pFileName);
lens/main/common/dw9718saf/DW9718SAF.c:#define LOG_INF(format, args...)                                               \
lens/main/common/dw9718saf/DW9718SAF.c:#define LOG_INF(format, args...)
lens/main/common/dw9718saf/DW9718SAF.c:		LOG_INF(" I2C write failed!!\n");
lens/main/common/dw9718saf/DW9718SAF.c:		LOG_INF(" I2C read failed!!\n");
lens/main/common/dw9718saf/DW9718SAF.c:		LOG_INF("I2C send failed!!\n");
lens/main/common/dw9718saf/DW9718SAF.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/main/common/dw9718saf/DW9718SAF.c:	LOG_INF("+\n");
lens/main/common/dw9718saf/DW9718SAF.c:			LOG_INF("I2C send 0x00 failed!!\n");
lens/main/common/dw9718saf/DW9718SAF.c:			LOG_INF("I2C send 0x00 failed!!\n");
lens/main/common/dw9718saf/DW9718SAF.c:		LOG_INF("Addr:0x00 Data:0x%x\n", data);
lens/main/common/dw9718saf/DW9718SAF.c:			LOG_INF("I2C send 0x02 failed!!\n");
lens/main/common/dw9718saf/DW9718SAF.c:			LOG_INF("I2C send 0x03 failed!!\n");
lens/main/common/dw9718saf/DW9718SAF.c:			LOG_INF("I2C send 0x01 failed!!\n");
lens/main/common/dw9718saf/DW9718SAF.c:			LOG_INF("I2C send 0x05 failed!!\n");
lens/main/common/dw9718saf/DW9718SAF.c:		LOG_INF("driver init success!!\n");
lens/main/common/dw9718saf/DW9718SAF.c:	LOG_INF("-\n");
lens/main/common/dw9718saf/DW9718SAF.c:		LOG_INF("set I2C failed when moving the motor\n");
lens/main/common/dw9718saf/DW9718SAF.c:		LOG_INF("No CMD\n");
lens/main/common/dw9718saf/DW9718SAF.c:	LOG_INF("Start\n");
lens/main/common/dw9718saf/DW9718SAF.c:		LOG_INF("apply +\n");
lens/main/common/dw9718saf/DW9718SAF.c:		LOG_INF("apply -\n");
lens/main/common/dw9718saf/DW9718SAF.c:		LOG_INF("Free\n");
lens/main/common/dw9718saf/DW9718SAF.c:		LOG_INF("DW9718S Power down mode fail!\n");
lens/main/common/dw9718saf/DW9718SAF.c:	LOG_INF("End\n");
lens/main/common/dw9718saf/DW9718SAF.c:	LOG_INF("+\n");
lens/main/common/dw9718saf/DW9718SAF.c:		LOG_INF("Addr:0x00 Data:0x%x\n", data);
lens/main/common/dw9718saf/DW9718SAF.c:		LOG_INF("apply - %d\n", i4RetValue);
lens/main/common/dw9718saf/DW9718SAF.c:	LOG_INF("-\n");
lens/main/common/dw9718saf/DW9718SAF.c:	LOG_INF("FileName : %s\n", pFileName);
lens/main/common/bu6429af/BU6429AF.c:#define LOG_INF(format, args...)                                               \
lens/main/common/bu6429af/BU6429AF.c:#define LOG_INF(format, args...)
lens/main/common/bu6429af/BU6429AF.c:		LOG_INF("I2C read - send failed!!\n");
lens/main/common/bu6429af/BU6429AF.c:		LOG_INF("I2C write failed!!\n");
lens/main/common/bu6429af/BU6429AF.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/main/common/bu6429af/BU6429AF.c:	LOG_INF("+\n");
lens/main/common/bu6429af/BU6429AF.c:	LOG_INF("-\n");
lens/main/common/bu6429af/BU6429AF.c:		LOG_INF("set I2C failed when moving the motor\n");
lens/main/common/bu6429af/BU6429AF.c:		LOG_INF("No CMD\n");
lens/main/common/bu6429af/BU6429AF.c:	LOG_INF("Start\n");
lens/main/common/bu6429af/BU6429AF.c:		LOG_INF("Wait\n");
lens/main/common/bu6429af/BU6429AF.c:		LOG_INF("Free\n");
lens/main/common/bu6429af/BU6429AF.c:	LOG_INF("End\n");
lens/main/common/bu6429af/BU6429AF.c:	LOG_INF("FileName : %s\n", pFileName);
lens/main/common/lc898212af/LC898212AF.c:#define LOG_INF(format, args...)                                               \
lens/main/common/lc898212af/LC898212AF.c:#define LOG_INF(format, args...)
lens/main/common/lc898212af/LC898212AF.c:		LOG_INF("read I2C send failed!!\n");
lens/main/common/lc898212af/LC898212AF.c:		LOG_INF("failed!!\n");
lens/main/common/lc898212af/LC898212AF.c:	LOG_INF("EEPROM 0x%x, 0x%x\n", addr, *data);
lens/main/common/lc898212af/LC898212AF.c:		LOG_INF("[CAMERA SENSOR] read I2C send failed!!\n");
lens/main/common/lc898212af/LC898212AF.c:			LOG_INF("Read Reg failed!!\n");
lens/main/common/lc898212af/LC898212AF.c:			LOG_INF("Read Reg2 failed!!\n");
lens/main/common/lc898212af/LC898212AF.c:	LOG_INF("Read Reg 0x%x, 0x%x, 0x%x\n", length, addr, *data);
lens/main/common/lc898212af/LC898212AF.c:	LOG_INF("WriteReg 0x%x, 0x%x, 0x%x\n", length, addr, data);
lens/main/common/lc898212af/LC898212AF.c:			LOG_INF("WriteReg failed!!\n");
lens/main/common/lc898212af/LC898212AF.c:			LOG_INF("WriteReg 2 failed!!\n");
lens/main/common/lc898212af/LC898212AF.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/main/common/lc898212af/LC898212AF.c:	LOG_INF("+\n");
lens/main/common/lc898212af/LC898212AF.c:		LOG_INF("min %d, max %x, offset 0x%x, gain 0x%x\n",
lens/main/common/lc898212af/LC898212AF.c:	LOG_INF("-\n");
lens/main/common/lc898212af/LC898212AF.c:	LOG_INF("move pos 0x%x 0x%x\n", TargetPos, ExistentPos);
lens/main/common/lc898212af/LC898212AF.c:		LOG_INF("set I2C failed when moving the motor\n");
lens/main/common/lc898212af/LC898212AF.c:		LOG_INF("No CMD\n");
lens/main/common/lc898212af/LC898212AF.c:	LOG_INF("Start\n");
lens/main/common/lc898212af/LC898212AF.c:		LOG_INF("Wait\n");
lens/main/common/lc898212af/LC898212AF.c:		LOG_INF("Free\n");
lens/main/common/lc898212af/LC898212AF.c:	LOG_INF("End\n");
lens/main/common/lc898212af/LC898212AF.c:	LOG_INF("FileName : %s\n", pFileName);
lens/main/common/bu6424af/BU6424AF.c:#define LOG_INF(format, args...)                                               \
lens/main/common/bu6424af/BU6424AF.c:#define LOG_INF(format, args...)
lens/main/common/bu6424af/BU6424AF.c:		LOG_INF("I2C read - send failed!!\n");
lens/main/common/bu6424af/BU6424AF.c:		LOG_INF("I2C write failed!!\n");
lens/main/common/bu6424af/BU6424AF.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/main/common/bu6424af/BU6424AF.c:	LOG_INF("+\n");
lens/main/common/bu6424af/BU6424AF.c:	LOG_INF("-\n");
lens/main/common/bu6424af/BU6424AF.c:		LOG_INF("set I2C failed when moving the motor\n");
lens/main/common/bu6424af/BU6424AF.c:		LOG_INF("No CMD\n");
lens/main/common/bu6424af/BU6424AF.c:	LOG_INF("Start\n");
lens/main/common/bu6424af/BU6424AF.c:		LOG_INF("Wait\n");
lens/main/common/bu6424af/BU6424AF.c:		LOG_INF("Free\n");
lens/main/common/bu6424af/BU6424AF.c:	LOG_INF("End\n");
lens/main/common/bu6424af/BU6424AF.c:	LOG_INF("FileName : %s\n", pFileName);
lens/main/common/cn3927af/CN3927AF.c:#define LOG_INF(format, args...) pr_debug(AF_DRVNAME " [%s] " format, __func__, ##args)
lens/main/common/cn3927af/CN3927AF.c://#define LOG_INF(format, args...) pr_err(AF_DRVNAME " [%s] " format, __func__, ##args)
lens/main/common/cn3927af/CN3927AF.c:#define LOG_INF(format, args...)
lens/main/common/cn3927af/CN3927AF.c:		LOG_INF("I2C read failed!!\n");
lens/main/common/cn3927af/CN3927AF.c:		LOG_INF("I2C send failed!!\n");
lens/main/common/cn3927af/CN3927AF.c:		LOG_INF("I2C send failed!!\n");
lens/main/common/cn3927af/CN3927AF.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/main/common/cn3927af/CN3927AF.c:	LOG_INF("lxl guoameng-the value of holitech af position=%ld\n",a_u4Position);
lens/main/common/cn3927af/CN3927AF.c:		LOG_INF("out of range\n");
lens/main/common/cn3927af/CN3927AF.c:			LOG_INF("Init Pos %6d\n", InitPos);
lens/main/common/cn3927af/CN3927AF.c:	/* LOG_INF("move [curr] %d [target] %d\n", g_u4CurrPosition, g_u4TargetPosition); */
lens/main/common/cn3927af/CN3927AF.c:		LOG_INF("set I2C failed when moving the motor\n");
lens/main/common/cn3927af/CN3927AF.c:		LOG_INF("No CMD\n");
lens/main/common/cn3927af/CN3927AF.c:	LOG_INF("Start\n");
lens/main/common/cn3927af/CN3927AF.c:		LOG_INF("lxl test 4 CN Wait\n");
lens/main/common/cn3927af/CN3927AF.c:		LOG_INF("Free\n");
lens/main/common/cn3927af/CN3927AF.c:	LOG_INF("End\n");
lens/main/common/cn3927af/CN3927AF.c:	LOG_INF("FileName : %s\n", pFileName);
lens/main/common/ak7345af/AK7345AF.c:#define LOG_INF(format, args...)                                               \
lens/main/common/ak7345af/AK7345AF.c:#define LOG_INF(format, args...)
lens/main/common/ak7345af/AK7345AF.c:		LOG_INF("I2C read - send failed!!\n");
lens/main/common/ak7345af/AK7345AF.c:		LOG_INF("I2C read - recv failed!!\n");
lens/main/common/ak7345af/AK7345AF.c:		LOG_INF("I2C write failed!!\n");
lens/main/common/ak7345af/AK7345AF.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/main/common/ak7345af/AK7345AF.c:	LOG_INF("+\n");
lens/main/common/ak7345af/AK7345AF.c:	LOG_INF("-\n");
lens/main/common/ak7345af/AK7345AF.c:		LOG_INF("set I2C failed when moving the motor\n");
lens/main/common/ak7345af/AK7345AF.c:		LOG_INF("No CMD\n");
lens/main/common/ak7345af/AK7345AF.c:	LOG_INF("Start\n");
lens/main/common/ak7345af/AK7345AF.c:		LOG_INF("Wait\n");
lens/main/common/ak7345af/AK7345AF.c:		LOG_INF("Free\n");
lens/main/common/ak7345af/AK7345AF.c:	LOG_INF("End\n");
lens/main/common/ak7345af/AK7345AF.c:	LOG_INF("FileName : %s\n", pFileName);
lens/main/common/ak7371af/AK7371AF.c:#define LOG_INF(format, args...)                                               \
lens/main/common/ak7371af/AK7371AF.c:#define LOG_INF(format, args...)
lens/main/common/ak7371af/AK7371AF.c:		LOG_INF("I2C read - send failed!!\n");
lens/main/common/ak7371af/AK7371AF.c:		LOG_INF("I2C read - recv failed!!\n");
lens/main/common/ak7371af/AK7371AF.c:		LOG_INF("I2C write failed!!\n");
lens/main/common/ak7371af/AK7371AF.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/main/common/ak7371af/AK7371AF.c:	LOG_INF("+\n");
lens/main/common/ak7371af/AK7371AF.c:	LOG_INF("-\n");
lens/main/common/ak7371af/AK7371AF.c:		LOG_INF("set I2C failed when moving the motor\n");
lens/main/common/ak7371af/AK7371AF.c:		LOG_INF("No CMD\n");
lens/main/common/ak7371af/AK7371AF.c:	LOG_INF("Start\n");
lens/main/common/ak7371af/AK7371AF.c:		LOG_INF("Wait\n");
lens/main/common/ak7371af/AK7371AF.c:		LOG_INF("Free\n");
lens/main/common/ak7371af/AK7371AF.c:	LOG_INF("End\n");
lens/main/common/ak7371af/AK7371AF.c:	LOG_INF("+\n");
lens/main/common/ak7371af/AK7371AF.c:			LOG_INF("Addr : 0x02 , Data : %x\n", data);
lens/main/common/ak7371af/AK7371AF.c:	LOG_INF("-\n");
lens/main/common/ak7371af/AK7371AF.c:	LOG_INF("FileName : %s\n", pFileName);
lens/main/common/bu63165af/BU63165AF.c:#define LOG_INF(format, args...)                                               \
lens/main/common/bu63165af/BU63165AF.c:#define LOG_INF(format, args...)
lens/main/common/bu63165af/BU63165AF.c:		LOG_INF("read I2C send failed!!\n");
lens/main/common/bu63165af/BU63165AF.c:		LOG_INF("EEPROM_ReadReg failed!!\n");
lens/main/common/bu63165af/BU63165AF.c:	LOG_INF("u8data[0] = 0x%x\n", u8data[0]);
lens/main/common/bu63165af/BU63165AF.c:	LOG_INF("u8data[1] = 0x%x\n", u8data[1]);
lens/main/common/bu63165af/BU63165AF.c:	LOG_INF("s4EEPROM_ReadReg2 0x%x, 0x%x\n", addr, *data);
lens/main/common/bu63165af/BU63165AF.c:		LOG_INF("I2C send failed!!, Addr = 0x%x, Data = 0x%x\n",
lens/main/common/bu63165af/BU63165AF.c:		LOG_INF("I2C Read failed!!\n");
lens/main/common/bu63165af/BU63165AF.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/main/common/bu63165af/BU63165AF.c:	LOG_INF("+\n");
lens/main/common/bu63165af/BU63165AF.c:	LOG_INF("-\n");
lens/main/common/bu63165af/BU63165AF.c:		LOG_INF("set I2C failed when moving the motor\n");
lens/main/common/bu63165af/BU63165AF.c:		LOG_INF("copy to user failed when getting motor command\n");
lens/main/common/bu63165af/BU63165AF.c:	LOG_INF("Motor CmdID : %x\n", stMotorCmd.u4CmdID);
lens/main/common/bu63165af/BU63165AF.c:	LOG_INF("Motor Param : %x\n", stMotorCmd.u4Param);
lens/main/common/bu63165af/BU63165AF.c:		LOG_INF("No CMD\n");
lens/main/common/bu63165af/BU63165AF.c:	LOG_INF("Start\n");
lens/main/common/bu63165af/BU63165AF.c:		LOG_INF("Wait\n");
lens/main/common/bu63165af/BU63165AF.c:		LOG_INF("Free\n");
lens/main/common/bu63165af/BU63165AF.c:	LOG_INF("End\n");
lens/main/common/bu63165af/BU63165AF.c:	LOG_INF("SetI2Cclient\n");
lens/main/common/bu63165af/BU63165AF.c:	LOG_INF("FileName : %s\n", pFileName);
lens/main/common/bu63165af/OIS_main.c:#define LOG_INF(format, args...)                                               \
lens/main/common/bu63165af/OIS_main.c:	LOG_INF("gl_CURDAT = 0x%04X\n", fadj.gl_CURDAT);
lens/main/common/bu63165af/OIS_main.c:	LOG_INF("gl_HALOFS_X = 0x%04X\n", fadj.gl_HALOFS_X);
lens/main/common/bu63165af/OIS_main.c:	LOG_INF("gl_HALOFS_Y = 0x%04X\n", fadj.gl_HALOFS_Y);
lens/main/common/bu63165af/OIS_main.c:	LOG_INF("gl_PSTXOF = 0x%04X\n", fadj.gl_PSTXOF);
lens/main/common/bu63165af/OIS_main.c:	LOG_INF("gl_PSTYOF = 0x%04X\n", fadj.gl_PSTYOF);
lens/main/common/bu63165af/OIS_main.c:	LOG_INF("gl_HX_OFS = 0x%04X\n", fadj.gl_HX_OFS);
lens/main/common/bu63165af/OIS_main.c:	LOG_INF("gl_HY_OFS = 0x%04X\n", fadj.gl_HY_OFS);
lens/main/common/bu63165af/OIS_main.c:	LOG_INF("gl_GX_OFS = 0x%04X\n", fadj.gl_GX_OFS);
lens/main/common/bu63165af/OIS_main.c:	LOG_INF("gl_GY_OFS = 0x%04X\n", fadj.gl_GY_OFS);
lens/main/common/bu63165af/OIS_main.c:	LOG_INF("gl_KgxHG  = 0x%04X\n", fadj.gl_KgxHG);
lens/main/common/bu63165af/OIS_main.c:	LOG_INF("gl_KgyHG  = 0x%04X\n", fadj.gl_KgyHG);
lens/main/common/bu63165af/OIS_main.c:	LOG_INF("gl_KGXG   = 0x%04X\n", fadj.gl_KGXG);
lens/main/common/bu63165af/OIS_main.c:	LOG_INF("gl_KGYG   = 0x%04X\n", fadj.gl_KGYG);
lens/main/common/bu63165af/OIS_main.c:	LOG_INF("gl_SFTHAL_X = 0x%04X\n", fadj.gl_SFTHAL_X);
lens/main/common/bu63165af/OIS_main.c:	LOG_INF("gl_SFTHAL_Y = 0x%04X\n", fadj.gl_SFTHAL_Y);
lens/main/common/bu63165af/OIS_main.c:	LOG_INF("gl_TMP_X_ = 0x%04X\n", fadj.gl_TMP_X_);
lens/main/common/bu63165af/OIS_main.c:	LOG_INF("gl_TMP_Y_ = 0x%04X\n", fadj.gl_TMP_Y_);
lens/main/common/bu63165af/OIS_main.c:	LOG_INF("gl_KgxH0 = 0x%04X\n", fadj.gl_KgxH0);
lens/main/common/bu63165af/OIS_main.c:	LOG_INF("gl_KgyH0 = 0x%04X\n", fadj.gl_KgyH0);
lens/main/common/dw9719taf/DW9719TAF.c:#define LOG_INF(format, args...)                                               \
lens/main/common/dw9719taf/DW9719TAF.c:#define LOG_INF(format, args...)
lens/main/common/dw9719taf/DW9719TAF.c:		LOG_INF(" I2C write failed!!\n");
lens/main/common/dw9719taf/DW9719TAF.c:		LOG_INF(" I2C read failed!!\n");
lens/main/common/dw9719taf/DW9719TAF.c:		LOG_INF("I2C send failed!!\n");
lens/main/common/dw9719taf/DW9719TAF.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/main/common/dw9719taf/DW9719TAF.c:	LOG_INF("+\n");
lens/main/common/dw9719taf/DW9719TAF.c:		LOG_INF("InitDrv[1] %p, %p\n", &(puSendCmdArray[1][0]),
lens/main/common/dw9719taf/DW9719TAF.c:		LOG_INF("InitDrv[2] %p, %p\n", &(puSendCmdArray[2][0]),
lens/main/common/dw9719taf/DW9719TAF.c:	LOG_INF("-\n");
lens/main/common/dw9719taf/DW9719TAF.c:		LOG_INF("set I2C failed when moving the motor\n");
lens/main/common/dw9719taf/DW9719TAF.c:		LOG_INF("No CMD\n");
lens/main/common/dw9719taf/DW9719TAF.c:	LOG_INF("Start\n");
lens/main/common/dw9719taf/DW9719TAF.c:		LOG_INF("Wait\n");
lens/main/common/dw9719taf/DW9719TAF.c:		LOG_INF("Free\n");
lens/main/common/dw9719taf/DW9719TAF.c:	LOG_INF("End\n");
lens/main/common/dw9719taf/DW9719TAF.c:	LOG_INF("FileName : %s\n", pFileName);
lens/main/common/bu63169af/OIS_main.c:#define LOG_INF(format, args...)                                               \
lens/main/common/bu63169af/OIS_main.c:	LOG_INF("gl_CURDAT = 0x%04X\n", fadj.gl_CURDAT);
lens/main/common/bu63169af/OIS_main.c:	LOG_INF("gl_HALOFS_X = 0x%04X\n", fadj.gl_HALOFS_X);
lens/main/common/bu63169af/OIS_main.c:	LOG_INF("gl_HALOFS_Y = 0x%04X\n", fadj.gl_HALOFS_Y);
lens/main/common/bu63169af/OIS_main.c:	LOG_INF("gl_PSTXOF = 0x%04X\n", fadj.gl_PSTXOF);
lens/main/common/bu63169af/OIS_main.c:	LOG_INF("gl_PSTYOF = 0x%04X\n", fadj.gl_PSTYOF);
lens/main/common/bu63169af/OIS_main.c:	LOG_INF("gl_HX_OFS = 0x%04X\n", fadj.gl_HX_OFS);
lens/main/common/bu63169af/OIS_main.c:	LOG_INF("gl_HY_OFS = 0x%04X\n", fadj.gl_HY_OFS);
lens/main/common/bu63169af/OIS_main.c:	LOG_INF("gl_GX_OFS = 0x%04X\n", fadj.gl_GX_OFS);
lens/main/common/bu63169af/OIS_main.c:	LOG_INF("gl_GY_OFS = 0x%04X\n", fadj.gl_GY_OFS);
lens/main/common/bu63169af/OIS_main.c:	LOG_INF("gl_KgxHG  = 0x%04X\n", fadj.gl_KgxHG);
lens/main/common/bu63169af/OIS_main.c:	LOG_INF("gl_KgyHG  = 0x%04X\n", fadj.gl_KgyHG);
lens/main/common/bu63169af/OIS_main.c:	LOG_INF("gl_KGXG   = 0x%04X\n", fadj.gl_KGXG);
lens/main/common/bu63169af/OIS_main.c:	LOG_INF("gl_KGYG   = 0x%04X\n", fadj.gl_KGYG);
lens/main/common/bu63169af/OIS_main.c:	LOG_INF("gl_SFTHAL_X = 0x%04X\n", fadj.gl_SFTHAL_X);
lens/main/common/bu63169af/OIS_main.c:	LOG_INF("gl_SFTHAL_Y = 0x%04X\n", fadj.gl_SFTHAL_Y);
lens/main/common/bu63169af/OIS_main.c:	LOG_INF("gl_TMP_X_ = 0x%04X\n", fadj.gl_TMP_X_);
lens/main/common/bu63169af/OIS_main.c:	LOG_INF("gl_TMP_Y_ = 0x%04X\n", fadj.gl_TMP_Y_);
lens/main/common/bu63169af/OIS_main.c:	LOG_INF("gl_KgxH0 = 0x%04X\n", fadj.gl_KgxH0);
lens/main/common/bu63169af/OIS_main.c:	LOG_INF("gl_KgyH0 = 0x%04X\n", fadj.gl_KgyH0);
lens/main/common/bu63169af/BU63169AF.c:#define LOG_INF(format, args...)                                               \
lens/main/common/bu63169af/BU63169AF.c:#define LOG_INF(format, args...)
lens/main/common/bu63169af/BU63169AF.c:	LOG_INF("BU63169 Timeout Handle Flow\n");
lens/main/common/bu63169af/BU63169AF.c:		LOG_INF("Camera Power enable\n");
lens/main/common/bu63169af/BU63169AF.c:				LOG_INF("Fail to regulator_disable\n");
lens/main/common/bu63169af/BU63169AF.c:				LOG_INF("Fail to regulator_disable\n");
lens/main/common/bu63169af/BU63169AF.c:			LOG_INF("AF Power off\n");
lens/main/common/bu63169af/BU63169AF.c:				LOG_INF("regulator_set_voltage fail\n");
lens/main/common/bu63169af/BU63169AF.c:				LOG_INF("regulator_set_voltage fail\n");
lens/main/common/bu63169af/BU63169AF.c:			LOG_INF("AF Power On\n");
lens/main/common/bu63169af/BU63169AF.c:				LOG_INF("regulator_enable fail\n");
lens/main/common/bu63169af/BU63169AF.c:				LOG_INF("regulator_enable fail\n");
lens/main/common/bu63169af/BU63169AF.c:		LOG_INF("Camera Power disable\n");
lens/main/common/bu63169af/BU63169AF.c:		LOG_INF("I2C write failed!!\n");
lens/main/common/bu63169af/BU63169AF.c:		LOG_INF("I2C read - send failed!!\n");
lens/main/common/bu63169af/BU63169AF.c:		LOG_INF("I2C read - recv failed!!\n");
lens/main/common/bu63169af/BU63169AF.c:		LOG_INF("read I2C send failed!!\n");
lens/main/common/bu63169af/BU63169AF.c:		LOG_INF("EEPROM_ReadReg failed!!\n");
lens/main/common/bu63169af/BU63169AF.c:	LOG_INF("u8data[0] = 0x%x\n", u8data[0]);
lens/main/common/bu63169af/BU63169AF.c:	LOG_INF("u8data[1] = 0x%x\n", u8data[1]);
lens/main/common/bu63169af/BU63169AF.c:	LOG_INF("s4EEPROM_ReadReg2 0x%x, 0x%x\n", addr, *data);
lens/main/common/bu63169af/BU63169AF.c:		LOG_INF("I2C send failed!!, Addr = 0x%x, Data = 0x%x\n",
lens/main/common/bu63169af/BU63169AF.c:		LOG_INF("I2C Read failed!!\n");
lens/main/common/bu63169af/BU63169AF.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/main/common/bu63169af/BU63169AF.c:	LOG_INF("+\n");
lens/main/common/bu63169af/BU63169AF.c:	LOG_INF("-\n");
lens/main/common/bu63169af/BU63169AF.c:		LOG_INF("set I2C failed when moving the motor\n");
lens/main/common/bu63169af/BU63169AF.c:		LOG_INF("copy to user failed when getting motor command\n");
lens/main/common/bu63169af/BU63169AF.c:	LOG_INF("Motor CmdID : %x\n", stMotorCmd.u4CmdID);
lens/main/common/bu63169af/BU63169AF.c:	LOG_INF("Motor Param : %x\n", stMotorCmd.u4Param);
lens/main/common/bu63169af/BU63169AF.c:			LOG_INF("OIS %x\n", I2C_OIS_mem__read(0x7F));
lens/main/common/bu63169af/BU63169AF.c:			LOG_INF("Targe (%d , %d)\n", PosX, PosY);
lens/main/common/bu63169af/BU63169AF.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/main/common/bu63169af/BU63169AF.c:		LOG_INF("No CMD\n");
lens/main/common/bu63169af/BU63169AF.c:	LOG_INF("Start\n");
lens/main/common/bu63169af/BU63169AF.c:		LOG_INF("Wait\n");
lens/main/common/bu63169af/BU63169AF.c:		LOG_INF("Free\n");
lens/main/common/bu63169af/BU63169AF.c:	LOG_INF("End\n");
lens/main/common/bu63169af/BU63169AF.c:	LOG_INF("+\n");
lens/main/common/bu63169af/BU63169AF.c:			LOG_INF("Addr : 0x02 , Data : %x\n", data);
lens/main/common/bu63169af/BU63169AF.c:	LOG_INF("-\n");
lens/main/common/bu63169af/BU63169AF.c:	LOG_INF("SetI2Cclient\n");
lens/main/common/bu63169af/BU63169AF.c:	LOG_INF("FileName : %s\n", pFileName);
lens/main/common/lc898217afb/LC898217AFB.c:#define LOG_INF(format, args...)                                               \
lens/main/common/lc898217afb/LC898217AFB.c:#define LOG_INF(format, args...)
lens/main/common/lc898217afb/LC898217AFB.c:		LOG_INF("ReadI2C send failed!!\n");
lens/main/common/lc898217afb/LC898217AFB.c:		LOG_INF("ReadI2C recv failed!!\n");
lens/main/common/lc898217afb/LC898217AFB.c:	/* LOG_INF("RDI2C 0x%x, 0x%x\n", a_uAddr, *a_uData); */
lens/main/common/lc898217afb/LC898217AFB.c:	/* LOG_INF("WRI2C 0x%04x, 0x%x\n", a_uAddr, a_u2Data); */
lens/main/common/lc898217afb/LC898217AFB.c:			LOG_INF("WriteI2C failed!!\n");
lens/main/common/lc898217afb/LC898217AFB.c:			LOG_INF("WriteI2C 2 failed!!\n");
lens/main/common/lc898217afb/LC898217AFB.c:	/* LOG_INF("DAC(%04d) -> %03x\n", UsPosition, TarPos); */
lens/main/common/lc898217afb/LC898217AFB.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/main/common/lc898217afb/LC898217AFB.c:	LOG_INF("+\n");
lens/main/common/lc898217afb/LC898217AFB.c:			LOG_INF("Skip init driver\n");
lens/main/common/lc898217afb/LC898217AFB.c:			LOG_INF("Check HW version: %x\n", Temp);
lens/main/common/lc898217afb/LC898217AFB.c:	LOG_INF("-\n");
lens/main/common/lc898217afb/LC898217AFB.c:		LOG_INF("set I2C failed when moving the motor\n");
lens/main/common/lc898217afb/LC898217AFB.c:		LOG_INF("No CMD\n");
lens/main/common/lc898217afb/LC898217AFB.c:	LOG_INF("Start\n");
lens/main/common/lc898217afb/LC898217AFB.c:		LOG_INF("Wait - Excute Time %d\n", diff_ms);
lens/main/common/lc898217afb/LC898217AFB.c:			LOG_INF("Wait - skip uninit\n");
lens/main/common/lc898217afb/LC898217AFB.c:			LOG_INF("Wait - power down\n");
lens/main/common/lc898217afb/LC898217AFB.c:		LOG_INF("Wait - power down\n");
lens/main/common/lc898217afb/LC898217AFB.c:		LOG_INF("Close\n");
lens/main/common/lc898217afb/LC898217AFB.c:		LOG_INF("Free\n");
lens/main/common/lc898217afb/LC898217AFB.c:	LOG_INF("End\n");
lens/main/common/lc898217afb/LC898217AFB.c:	LOG_INF("+\n");
lens/main/common/lc898217afb/LC898217AFB.c:			LOG_INF("LC898217AF Power Down = %d\n", CurTime);
lens/main/common/lc898217afb/LC898217AFB.c:	LOG_INF("-\n");
lens/main/common/lc898217afb/LC898217AFB.c:	LOG_INF("FileName : %s\n", pFileName);
lens/main/common/lc898122af/LC898122AF.c:#define LOG_INF(format, args...)                                               \
lens/main/common/lc898122af/LC898122AF.c:#define LOG_INF(format, args...)
lens/main/common/lc898122af/LC898122AF.c:	/* LOG_INF("I2C w (%x %x)\n", RegAddr, RegData); */
lens/main/common/lc898122af/LC898122AF.c:		LOG_INF("I2C send failed!!\n");
lens/main/common/lc898122af/LC898122AF.c:		LOG_INF("[CAMERA SENSOR] read I2C send failed!!\n");
lens/main/common/lc898122af/LC898122AF.c:	/* LOG_INF("I2C r (%x %x)\n", RegAddr, *RegData); */
lens/main/common/lc898122af/LC898122AF.c:		LOG_INF("[CAMERA SENSOR] I2C read failed!!\n");
lens/main/common/lc898122af/LC898122AF.c:	/* LOG_INF("I2C w2 (%x %x)\n", RamAddr, RamData); */
lens/main/common/lc898122af/LC898122AF.c:		LOG_INF("I2C send failed!!\n");
lens/main/common/lc898122af/LC898122AF.c:		LOG_INF("[CAMERA SENSOR] read I2C send failed!!\n");
lens/main/common/lc898122af/LC898122AF.c:		LOG_INF("[CAMERA SENSOR] I2C read failed!!\n");
lens/main/common/lc898122af/LC898122AF.c:	/* LOG_INF("I2C r2 (%x %x)\n", RamAddr, (unsigned int)*pRcvBuff); */
lens/main/common/lc898122af/LC898122AF.c:	/* LOG_INF("I2C w4 (%x %x)\n", RamAddr, (unsigned int)RamData); */
lens/main/common/lc898122af/LC898122AF.c:		LOG_INF("I2C send failed!!\n");
lens/main/common/lc898122af/LC898122AF.c:		LOG_INF("[CAMERA SENSOR] read I2C send failed!!\n");
lens/main/common/lc898122af/LC898122AF.c:		LOG_INF("[CAMERA SENSOR] I2C read failed!!\n");
lens/main/common/lc898122af/LC898122AF.c:	/* LOG_INF("I2C r4 (%x %x)\n", RamAddr, (unsigned int)*pRcvBuff); */
lens/main/common/lc898122af/LC898122AF.c:	LOG_INF("printvalue ======%x\n", prtvalue);
lens/main/common/lc898122af/LC898122AF.c:		LOG_INF("[CAMERA SENSOR] read I2C send failed!!\n");
lens/main/common/lc898122af/LC898122AF.c:	LOG_INF("OTPI2C r (%x %x)\n", RegAddr, RegData);
lens/main/common/lc898122af/LC898122AF.c:		LOG_INF("[CAMERA SENSOR] I2C read failed!!\n");
lens/main/common/lc898122af/LC898122AF.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/main/common/lc898122af/LC898122AF.c:	LOG_INF("+\n");
lens/main/common/lc898122af/LC898122AF.c:	LOG_INF("[OTP]0x%x 0x%x\n", addrotp, (unsigned int)dataotp);
lens/main/common/lc898122af/LC898122AF.c:	LOG_INF("[OTP]0x%x 0x%x\n", addrotp, (unsigned int)dataotp);
lens/main/common/lc898122af/LC898122AF.c:	LOG_INF("[OTP]0x%x 0x%x\n", addrotp, (unsigned int)dataotp);
lens/main/common/lc898122af/LC898122AF.c:	LOG_INF("[OTP]0x%x 0x%x\n", addrotp, (unsigned int)dataotp);
lens/main/common/lc898122af/LC898122AF.c:	LOG_INF("[OTP]0x%x 0x%x\n", addrotp, (unsigned int)dataotp);
lens/main/common/lc898122af/LC898122AF.c:	LOG_INF("[OTP]0x%x 0x%x\n", addrotp, (unsigned int)dataotp);
lens/main/common/lc898122af/LC898122AF.c:	LOG_INF("[OTP]0x%x 0x%x\n", addrotp, (unsigned int)dataotp);
lens/main/common/lc898122af/LC898122AF.c:	LOG_INF("[OTP]0x%x 0x%x\n", addrotp, (unsigned int)dataotp);
lens/main/common/lc898122af/LC898122AF.c:	LOG_INF("[OTP]0x%x 0x%x\n", addrotp, (unsigned int)dataotp);
lens/main/common/lc898122af/LC898122AF.c:	LOG_INF("[OTP]0x%x 0x%x\n", addrotp, (unsigned int)dataotp);
lens/main/common/lc898122af/LC898122AF.c:	LOG_INF("[OTP]0x%x 0x%x\n", addrotp, (unsigned int)dataotp);
lens/main/common/lc898122af/LC898122AF.c:	LOG_INF("[OTP]0x%x 0x%x\n", addrotp, (unsigned int)dataotp);
lens/main/common/lc898122af/LC898122AF.c:	LOG_INF("[OTP]0x%x 0x%x\n", addrotp, (unsigned int)dataotp);
lens/main/common/lc898122af/LC898122AF.c:	LOG_INF("[OTP]0x%x 0x%x\n", addrotp, (unsigned int)dataotp);
lens/main/common/lc898122af/LC898122AF.c:	LOG_INF("[OTP]0x%x 0x%x\n", addrotp, (unsigned int)dataotp);
lens/main/common/lc898122af/LC898122AF.c:	LOG_INF("[OTP]AF start current 0x%x 0x%x\n", addrotp,
lens/main/common/lc898122af/LC898122AF.c:	LOG_INF("[OTP]AF start current 0x%x 0x%x\n", addrotp,
lens/main/common/lc898122af/LC898122AF.c:	LOG_INF("[OTP]AF start current 0x%x 0x%x\n", addrotp,
lens/main/common/lc898122af/LC898122AF.c:	LOG_INF("[OTP]AF Infinit 0x%x 0x%x\n", addrotp, (unsigned int)dataotp);
lens/main/common/lc898122af/LC898122AF.c:	LOG_INF("[OTP]AF Infinit 0x%x 0x%x\n", addrotp, (unsigned int)dataotp);
lens/main/common/lc898122af/LC898122AF.c:	LOG_INF("[OTP]AF Infinit 0x%x 0x%x\n", addrotp, (unsigned int)dataotp);
lens/main/common/lc898122af/LC898122AF.c:	LOG_INF("[OTP]AF Macro 0x%x 0x%x\n", addrotp, (unsigned int)dataotp);
lens/main/common/lc898122af/LC898122AF.c:	LOG_INF("[OTP]AF Macro 0x%x 0x%x\n", addrotp, (unsigned int)dataotp);
lens/main/common/lc898122af/LC898122AF.c:	LOG_INF("[OTP]AF Macro 0x%x 0x%x\n", addrotp, (unsigned int)dataotp);
lens/main/common/lc898122af/LC898122AF.c:	LOG_INF("LC898122AF_Open - End\n");
lens/main/common/lc898122af/LC898122AF.c:	LOG_INF("-\n");
lens/main/common/lc898122af/LC898122AF.c:		LOG_INF("No CMD\n");
lens/main/common/lc898122af/LC898122AF.c:	LOG_INF("Start\n");
lens/main/common/lc898122af/LC898122AF.c:		LOG_INF("Wait\n");
lens/main/common/lc898122af/LC898122AF.c:		LOG_INF("Free\n");
lens/main/common/lc898122af/LC898122AF.c:	LOG_INF("End\n");
lens/main/common/lc898122af/LC898122AF.c:	LOG_INF("FileName : %s\n", pFileName);
lens/main/common/dw9814af/DW9814AF.c:#define LOG_INF(format, args...)                                               \
lens/main/common/dw9814af/DW9814AF.c:#define LOG_INF(format, args...)
lens/main/common/dw9814af/DW9814AF.c:		LOG_INF("I2C read failed!!\n");
lens/main/common/dw9814af/DW9814AF.c:		LOG_INF("I2C send failed!!\n");
lens/main/common/dw9814af/DW9814AF.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/main/common/dw9814af/DW9814AF.c:	LOG_INF("+\n");
lens/main/common/dw9814af/DW9814AF.c:	LOG_INF("-\n");
lens/main/common/dw9814af/DW9814AF.c:		LOG_INF("set I2C failed when moving the motor\n");
lens/main/common/dw9814af/DW9814AF.c:		LOG_INF("No CMD\n");
lens/main/common/dw9814af/DW9814AF.c:	LOG_INF("Start\n");
lens/main/common/dw9814af/DW9814AF.c:		LOG_INF("Wait\n");
lens/main/common/dw9814af/DW9814AF.c:		LOG_INF("Free\n");
lens/main/common/dw9814af/DW9814AF.c:	LOG_INF("End\n");
lens/main/common/dw9814af/DW9814AF.c:	LOG_INF("FileName : %s\n", pFileName);
lens/main/common/lc898212xdaf/LC898212XDAF.c:#define LOG_INF(format, args...)                                               \
lens/main/common/lc898212xdaf/LC898212XDAF.c:#define LOG_INF(format, args...)
lens/main/common/lc898212xdaf/LC898212XDAF.c:		LOG_INF("I2C send failed!!, Addr = 0x%x\n", a_pSendData[0]);
lens/main/common/lc898212xdaf/LC898212XDAF.c:		LOG_INF("I2C read failed!!\n");
lens/main/common/lc898212xdaf/LC898212XDAF.c:		LOG_INF("I2C send failed!!, Addr = 0x%x, Data = 0x%x\n",
lens/main/common/lc898212xdaf/LC898212XDAF.c:		LOG_INF("I2C read e2prom failed!!\n");
lens/main/common/lc898212xdaf/LC898212XDAF.c:		LOG_INF("I2C read e2prom failed!!\n");
lens/main/common/lc898212xdaf/LC898212XDAF.c:		LOG_INF("CONFIG_ARCH_MTK_PROJECT = %s\n",
lens/main/common/lc898212xdaf/LC898212XDAF.c:		LOG_INF("CONFIG_ARCH_MTK_PROJECT = %s\n",
lens/main/common/lc898212xdaf/LC898212XDAF.c:		LOG_INF("Addr = 0x0003 , Data = %x\n", val1);
lens/main/common/lc898212xdaf/LC898212XDAF.c:		LOG_INF("Addr = 0x0004 , Data = %x\n", val2);
lens/main/common/lc898212xdaf/LC898212XDAF.c:		LOG_INF("CONFIG_ARCH_MTK_PROJECT = %s\n",
lens/main/common/lc898212xdaf/LC898212XDAF.c:			LOG_INF("Select ov23850 e2prom!!\n");
lens/main/common/lc898212xdaf/LC898212XDAF.c:	LOG_INF("hallmax:0x%x, hallmin:0x%x, halloff:0x%x, hallbias:0x%x\n",
lens/main/common/lc898212xdaf/LC898212XDAF.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/main/common/lc898212xdaf/LC898212XDAF.c:	LOG_INF("+\n");
lens/main/common/lc898212xdaf/LC898212XDAF.c:	LOG_INF("-\n");
lens/main/common/lc898212xdaf/LC898212XDAF.c:		LOG_INF("set I2C failed when moving the motor\n");
lens/main/common/lc898212xdaf/LC898212XDAF.c:		LOG_INF("AF_Infi : %x\n", AF_Infi);
lens/main/common/lc898212xdaf/LC898212XDAF.c:		LOG_INF("AF_Marco : %x\n", AF_Marco);
lens/main/common/lc898212xdaf/LC898212XDAF.c:	LOG_INF("AF_CalibData_INF : %d\n", u4AF_CalibData_INF);
lens/main/common/lc898212xdaf/LC898212XDAF.c:	LOG_INF("AF_CalibData_MACRO : %d\n", u4AF_CalibData_MACRO);
lens/main/common/lc898212xdaf/LC898212XDAF.c:		LOG_INF("AF_Infi : %x\n", AF_Infi);
lens/main/common/lc898212xdaf/LC898212XDAF.c:		LOG_INF("AF_Infi : %x\n", AF_Marco);
lens/main/common/lc898212xdaf/LC898212XDAF.c:			LOG_INF("u4AF_CalibData_INF : %d\n",
lens/main/common/lc898212xdaf/LC898212XDAF.c:			LOG_INF("u4AF_CalibData_MACRO : %d\n",
lens/main/common/lc898212xdaf/LC898212XDAF.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/main/common/lc898212xdaf/LC898212XDAF.c:		LOG_INF("No CMD\n");
lens/main/common/lc898212xdaf/LC898212XDAF.c:	LOG_INF("Start\n");
lens/main/common/lc898212xdaf/LC898212XDAF.c:		LOG_INF("Wait\n");
lens/main/common/lc898212xdaf/LC898212XDAF.c:		LOG_INF("Free\n");
lens/main/common/lc898212xdaf/LC898212XDAF.c:	LOG_INF("End\n");
lens/main/common/lc898212xdaf/LC898212XDAF.c:	LOG_INF("FileName : %s\n", pFileName);
lens/main/common/lc898212xdaf/AfInter.c:#ifdef DEBUG_LOG
lens/main/common/lc898212xdaf/AfInter.c:#ifdef DEBUG_LOG
lens/main/common/lc898212xdaf/AfInter.c:#define LOG_INF(format, args...) 
lens/main/common/lc898212xdaf/AfInter.c:#ifdef DEBUG_LOG
lens/main/common/lc898212xdaf/AfInter.c:	LOG_INF("RAMW\t%x\t%x\n", addr, data);
lens/main/common/lc898212xdaf/AfInter.c:#ifdef DEBUG_LOG
lens/main/common/lc898212xdaf/AfInter.c:	LOG_INF("RAMR\t%x\t%x\n", addr, *data);
lens/main/common/lc898212xdaf/AfInter.c:#ifdef DEBUG_LOG
lens/main/common/lc898212xdaf/AfInter.c:	LOG_INF("REGW\t%x\t%x\n", addr, data);
lens/main/common/lc898212xdaf/AfInter.c:#ifdef DEBUG_LOG
lens/main/common/lc898212xdaf/AfInter.c:	LOG_INF("REGR\t%x\t%x\n", addr, *data);
lens/main/common/lc898212xdaf_tvc700/LC898212XDAF_TVC700.c:#define LOG_INF(format, args...)                                               \
lens/main/common/lc898212xdaf_tvc700/LC898212XDAF_TVC700.c:#define LOG_INF(format, args...)
lens/main/common/lc898212xdaf_tvc700/LC898212XDAF_TVC700.c:		LOG_INF("I2C send failed!!, Addr = 0x%x\n", a_pSendData[0]);
lens/main/common/lc898212xdaf_tvc700/LC898212XDAF_TVC700.c:		LOG_INF("I2C read failed!!\n");
lens/main/common/lc898212xdaf_tvc700/LC898212XDAF_TVC700.c:		LOG_INF("I2C send failed!!, Addr = 0x%x, Data = 0x%x\n",
lens/main/common/lc898212xdaf_tvc700/LC898212XDAF_TVC700.c:#ifdef DEBUG_LOG
lens/main/common/lc898212xdaf_tvc700/LC898212XDAF_TVC700.c:#define LOG_INF(format, args...)
lens/main/common/lc898212xdaf_tvc700/LC898212XDAF_TVC700.c:#ifdef DEBUG_LOG
lens/main/common/lc898212xdaf_tvc700/LC898212XDAF_TVC700.c:	LOG_INF("RAMW\t%x\t%x\n", addr, data);
lens/main/common/lc898212xdaf_tvc700/LC898212XDAF_TVC700.c:#ifdef DEBUG_LOG
lens/main/common/lc898212xdaf_tvc700/LC898212XDAF_TVC700.c:	LOG_INF("RAMR\t%x\t%x\n", addr, *data);
lens/main/common/lc898212xdaf_tvc700/LC898212XDAF_TVC700.c:#ifdef DEBUG_LOG
lens/main/common/lc898212xdaf_tvc700/LC898212XDAF_TVC700.c:	LOG_INF("REGW\t%x\t%x\n", addr, data);
lens/main/common/lc898212xdaf_tvc700/LC898212XDAF_TVC700.c:#ifdef DEBUG_LOG
lens/main/common/lc898212xdaf_tvc700/LC898212XDAF_TVC700.c:	LOG_INF("REGR\t%x\t%x\n", addr, *data);
lens/main/common/lc898212xdaf_tvc700/LC898212XDAF_TVC700.c:		LOG_INF("I2C read e2prom failed!!\n");
lens/main/common/lc898212xdaf_tvc700/LC898212XDAF_TVC700.c:	LOG_INF("hallmax:0x%x, hallmin:0x%x, halloff:0x%x, hallbias:0x%x\n",
lens/main/common/lc898212xdaf_tvc700/LC898212XDAF_TVC700.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/main/common/lc898212xdaf_tvc700/LC898212XDAF_TVC700.c:	LOG_INF("+\n");
lens/main/common/lc898212xdaf_tvc700/LC898212XDAF_TVC700.c:	LOG_INF("-\n");
lens/main/common/lc898212xdaf_tvc700/LC898212XDAF_TVC700.c:		LOG_INF("set I2C failed when moving the motor\n");
lens/main/common/lc898212xdaf_tvc700/LC898212XDAF_TVC700.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/main/common/lc898212xdaf_tvc700/LC898212XDAF_TVC700.c:		LOG_INF("No CMD\n");
lens/main/common/lc898212xdaf_tvc700/LC898212XDAF_TVC700.c:	LOG_INF("Start\n");
lens/main/common/lc898212xdaf_tvc700/LC898212XDAF_TVC700.c:		LOG_INF("Wait\n");
lens/main/common/lc898212xdaf_tvc700/LC898212XDAF_TVC700.c:		LOG_INF("Free\n");
lens/main/common/lc898212xdaf_tvc700/LC898212XDAF_TVC700.c:	LOG_INF("End\n");
lens/main/common/lc898212xdaf_tvc700/LC898212XDAF_TVC700.c:	LOG_INF("FileName : %s\n", pFileName);
lens/main/common/fm50af/FM50AF.c:#define LOG_INF(format, args...)                                               \
lens/main/common/fm50af/FM50AF.c:#define LOG_INF(format, args...)
lens/main/common/fm50af/FM50AF.c:		LOG_INF("I2C read failed!!\n");
lens/main/common/fm50af/FM50AF.c:		LOG_INF("I2C send failed!!\n");
lens/main/common/fm50af/FM50AF.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/main/common/fm50af/FM50AF.c:	LOG_INF("+\n");
lens/main/common/fm50af/FM50AF.c:	LOG_INF("-\n");
lens/main/common/fm50af/FM50AF.c:		LOG_INF("set I2C failed when moving the motor\n");
lens/main/common/fm50af/FM50AF.c:		LOG_INF("No CMD\n");
lens/main/common/fm50af/FM50AF.c:	LOG_INF("Start\n");
lens/main/common/fm50af/FM50AF.c:		LOG_INF("Wait\n");
lens/main/common/fm50af/FM50AF.c:		LOG_INF("Free\n");
lens/main/common/fm50af/FM50AF.c:	LOG_INF("End\n");
lens/main/common/fm50af/FM50AF.c:	LOG_INF("FileName : %s\n", pFileName);
lens/main/common/lc898217afc/LC898217AFC.c:#define LOG_INF(format, args...)                                               \
lens/main/common/lc898217afc/LC898217AFC.c:#define LOG_INF(format, args...)
lens/main/common/lc898217afc/LC898217AFC.c:		LOG_INF("ReadI2C send failed!!\n");
lens/main/common/lc898217afc/LC898217AFC.c:		LOG_INF("ReadI2C recv failed!!\n");
lens/main/common/lc898217afc/LC898217AFC.c:	/* LOG_INF("RDI2C 0x%x, 0x%x\n", a_uAddr, *a_uData); */
lens/main/common/lc898217afc/LC898217AFC.c:	/* LOG_INF("WRI2C 0x%04x, 0x%x\n", a_uAddr, a_u2Data); */
lens/main/common/lc898217afc/LC898217AFC.c:			LOG_INF("WriteI2C failed!!\n");
lens/main/common/lc898217afc/LC898217AFC.c:			LOG_INF("WriteI2C 2 failed!!\n");
lens/main/common/lc898217afc/LC898217AFC.c:	/* LOG_INF("DAC(%04d) -> %03x\n", UsPosition, TarPos); */
lens/main/common/lc898217afc/LC898217AFC.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/main/common/lc898217afc/LC898217AFC.c:	LOG_INF("+\n");
lens/main/common/lc898217afc/LC898217AFC.c:			LOG_INF("Skip init driver\n");
lens/main/common/lc898217afc/LC898217AFC.c:			LOG_INF("Check HW version: %x\n", Temp);
lens/main/common/lc898217afc/LC898217AFC.c:	LOG_INF("-\n");
lens/main/common/lc898217afc/LC898217AFC.c:		LOG_INF("set I2C failed when moving the motor\n");
lens/main/common/lc898217afc/LC898217AFC.c:		LOG_INF("No CMD\n");
lens/main/common/lc898217afc/LC898217AFC.c:	LOG_INF("Start\n");
lens/main/common/lc898217afc/LC898217AFC.c:		LOG_INF("Wait - Excute Time %d\n", diff_ms);
lens/main/common/lc898217afc/LC898217AFC.c:			LOG_INF("Wait - skip uninit\n");
lens/main/common/lc898217afc/LC898217AFC.c:			LOG_INF("Wait - power down\n");
lens/main/common/lc898217afc/LC898217AFC.c:		LOG_INF("Wait - power down\n");
lens/main/common/lc898217afc/LC898217AFC.c:		LOG_INF("Close\n");
lens/main/common/lc898217afc/LC898217AFC.c:		LOG_INF("Free\n");
lens/main/common/lc898217afc/LC898217AFC.c:	LOG_INF("End\n");
lens/main/common/lc898217afc/LC898217AFC.c:	LOG_INF("+\n");
lens/main/common/lc898217afc/LC898217AFC.c:			LOG_INF("LC898217AF Power Down = %d\n", CurTime);
lens/main/common/lc898217afc/LC898217AFC.c:	LOG_INF("-\n");
lens/main/common/lc898217afc/LC898217AFC.c:	LOG_INF("FileName : %s\n", pFileName);
lens/main/common/lc898217afa/LC898217AFA.c:#define LOG_INF(format, args...)                                               \
lens/main/common/lc898217afa/LC898217AFA.c:#define LOG_INF(format, args...)
lens/main/common/lc898217afa/LC898217AFA.c:		LOG_INF("ReadI2C send failed!!\n");
lens/main/common/lc898217afa/LC898217AFA.c:		LOG_INF("ReadI2C recv failed!!\n");
lens/main/common/lc898217afa/LC898217AFA.c:	/* LOG_INF("RDI2C 0x%x, 0x%x\n", a_uAddr, *a_uData); */
lens/main/common/lc898217afa/LC898217AFA.c:	/* LOG_INF("WRI2C 0x%04x, 0x%x\n", a_uAddr, a_u2Data); */
lens/main/common/lc898217afa/LC898217AFA.c:			LOG_INF("WriteI2C failed!!\n");
lens/main/common/lc898217afa/LC898217AFA.c:			LOG_INF("WriteI2C 2 failed!!\n");
lens/main/common/lc898217afa/LC898217AFA.c:	/* LOG_INF("DAC(%04d) -> %03x\n", UsPosition, TarPos); */
lens/main/common/lc898217afa/LC898217AFA.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/main/common/lc898217afa/LC898217AFA.c:	LOG_INF("+\n");
lens/main/common/lc898217afa/LC898217AFA.c:			LOG_INF("Skip init driver\n");
lens/main/common/lc898217afa/LC898217AFA.c:			LOG_INF("Check HW version: %x\n", Temp);
lens/main/common/lc898217afa/LC898217AFA.c:	LOG_INF("-\n");
lens/main/common/lc898217afa/LC898217AFA.c:		LOG_INF("set I2C failed when moving the motor\n");
lens/main/common/lc898217afa/LC898217AFA.c:		LOG_INF("No CMD\n");
lens/main/common/lc898217afa/LC898217AFA.c:	LOG_INF("Start\n");
lens/main/common/lc898217afa/LC898217AFA.c:		LOG_INF("Wait - Excute Time %d\n", diff_ms);
lens/main/common/lc898217afa/LC898217AFA.c:			LOG_INF("Wait - skip uninit\n");
lens/main/common/lc898217afa/LC898217AFA.c:			LOG_INF("Wait - power down\n");
lens/main/common/lc898217afa/LC898217AFA.c:		LOG_INF("Wait - power down\n");
lens/main/common/lc898217afa/LC898217AFA.c:		LOG_INF("Close\n");
lens/main/common/lc898217afa/LC898217AFA.c:		LOG_INF("Free\n");
lens/main/common/lc898217afa/LC898217AFA.c:	LOG_INF("End\n");
lens/main/common/lc898217afa/LC898217AFA.c:	LOG_INF("+\n");
lens/main/common/lc898217afa/LC898217AFA.c:			LOG_INF("LC898217AF Power Down = %d\n", CurTime);
lens/main/common/lc898217afa/LC898217AFA.c:	LOG_INF("-\n");
lens/main/common/lc898217afa/LC898217AFA.c:	LOG_INF("FileName : %s\n", pFileName);
lens/main/common/dw9714af/DW9714AF.c:#define LOG_INF(format, args...)                                               \
lens/main/common/dw9714af/DW9714AF.c:#define LOG_INF(format, args...)
lens/main/common/dw9714af/DW9714AF.c:		LOG_INF("I2C read failed!!\n");
lens/main/common/dw9714af/DW9714AF.c:		LOG_INF("I2C send failed!!\n");
lens/main/common/dw9714af/DW9714AF.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/main/common/dw9714af/DW9714AF.c:	LOG_INF("+\n");
lens/main/common/dw9714af/DW9714AF.c:	LOG_INF("-\n");
lens/main/common/dw9714af/DW9714AF.c:		LOG_INF("set I2C failed when moving the motor\n");
lens/main/common/dw9714af/DW9714AF.c:		LOG_INF("No CMD\n");
lens/main/common/dw9714af/DW9714AF.c:	LOG_INF("Start\n");
lens/main/common/dw9714af/DW9714AF.c:		LOG_INF("Wait\n");
lens/main/common/dw9714af/DW9714AF.c:		LOG_INF("Free\n");
lens/main/common/dw9714af/DW9714AF.c:	LOG_INF("End\n");
lens/main/common/dw9714af/DW9714AF.c:	LOG_INF("FileName : %s\n", pFileName);
lens/main/common/dw9763af/DW9763AF.c:#define LOG_INF(format, args...)                                               \
lens/main/common/dw9763af/DW9763AF.c:#define LOG_INF(format, args...)
lens/main/common/dw9763af/DW9763AF.c:		LOG_INF(" I2C write failed!!\n");
lens/main/common/dw9763af/DW9763AF.c:		LOG_INF(" I2C read failed!!\n");
lens/main/common/dw9763af/DW9763AF.c:		LOG_INF("%s failed.\n", __func__);
lens/main/common/dw9763af/DW9763AF.c:		LOG_INF("%s failed.\n", __func__);
lens/main/common/dw9763af/DW9763AF.c:	LOG_INF("Start\n");
lens/main/common/dw9763af/DW9763AF.c:		LOG_INF("puSendCmd2 send failed\n");
lens/main/common/dw9763af/DW9763AF.c:		LOG_INF("puSendCmd3 send failed\n");
lens/main/common/dw9763af/DW9763AF.c:		LOG_INF("puSendCmd4 send failed\n");
lens/main/common/dw9763af/DW9763AF.c:	LOG_INF("End\n");
lens/main/common/dw9763af/DW9763AF.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/main/common/dw9763af/DW9763AF.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/main/common/dw9763af/DW9763AF.c:	LOG_INF("+\n");
lens/main/common/dw9763af/DW9763AF.c:	LOG_INF("-\n");
lens/main/common/dw9763af/DW9763AF.c:		LOG_INF("set I2C failed when moving the motor\n");
lens/main/common/dw9763af/DW9763AF.c:		LOG_INF("No CMD\n");
lens/main/common/dw9763af/DW9763AF.c:	LOG_INF("Start\n");
lens/main/common/dw9763af/DW9763AF.c:		LOG_INF("Wait\n");
lens/main/common/dw9763af/DW9763AF.c:		LOG_INF("Free\n");
lens/main/common/dw9763af/DW9763AF.c:	LOG_INF("End\n");
lens/main/common/dw9763af/DW9763AF.c:	LOG_INF("+\n");
lens/main/common/dw9763af/DW9763AF.c:		LOG_INF("Addr:0x00 Data:0x%x\n", data);
lens/main/common/dw9763af/DW9763AF.c:		LOG_INF("apply - %d\n", i4RetValue);
lens/main/common/dw9763af/DW9763AF.c:	LOG_INF("-\n");
lens/main/common/dw9763af/DW9763AF.c:	LOG_INF("FileName : %s\n", pFileName);
lens/main/common/ad5823af/AD5823AF.c:#define LOG_INF(format, args...)                                               \
lens/main/common/ad5823af/AD5823AF.c:#define LOG_INF(format, args...)
lens/main/common/ad5823af/AD5823AF.c:		LOG_INF("I2C read MSB send failed!!\n");
lens/main/common/ad5823af/AD5823AF.c:		LOG_INF("I2C read MSB recv failed!!\n");
lens/main/common/ad5823af/AD5823AF.c:		LOG_INF("I2C read LSB send failed!!\n");
lens/main/common/ad5823af/AD5823AF.c:		LOG_INF("I2C read LSB recv failed!!\n");
lens/main/common/ad5823af/AD5823AF.c:		LOG_INF("I2C send failed!!\n");
lens/main/common/ad5823af/AD5823AF.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/main/common/ad5823af/AD5823AF.c:	LOG_INF("+\n");
lens/main/common/ad5823af/AD5823AF.c:		LOG_INF("mode_init : 0x02\n");
lens/main/common/ad5823af/AD5823AF.c:	LOG_INF("-\n");
lens/main/common/ad5823af/AD5823AF.c:		LOG_INF("set I2C failed when moving the motor\n");
lens/main/common/ad5823af/AD5823AF.c:		LOG_INF("No CMD\n");
lens/main/common/ad5823af/AD5823AF.c:	LOG_INF("Start\n");
lens/main/common/ad5823af/AD5823AF.c:		LOG_INF("Wait\n");
lens/main/common/ad5823af/AD5823AF.c:		LOG_INF("Free\n");
lens/main/common/ad5823af/AD5823AF.c:	LOG_INF("End\n");
lens/main/common/ad5823af/AD5823AF.c:	LOG_INF("FileName : %s\n", pFileName);
lens/main/common/dw9718af/DW9718AF.c:#define LOG_INF(format, args...)                                               \
lens/main/common/dw9718af/DW9718AF.c:#define LOG_INF(format, args...)
lens/main/common/dw9718af/DW9718AF.c:		LOG_INF(" I2C write failed!!\n");
lens/main/common/dw9718af/DW9718AF.c:		LOG_INF(" I2C read failed!!\n");
lens/main/common/dw9718af/DW9718AF.c:		LOG_INF("I2C send failed!!\n");
lens/main/common/dw9718af/DW9718AF.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/main/common/dw9718af/DW9718AF.c:	LOG_INF("+\n");
lens/main/common/dw9718af/DW9718AF.c:			LOG_INF("I2C send 0x00 failed!!\n");
lens/main/common/dw9718af/DW9718AF.c:			LOG_INF("I2C send 0x01 failed!!\n");
lens/main/common/dw9718af/DW9718AF.c:			LOG_INF("I2C send 0x05 failed!!\n");
lens/main/common/dw9718af/DW9718AF.c:		LOG_INF("driver init success!!\n");
lens/main/common/dw9718af/DW9718AF.c:	LOG_INF("-\n");
lens/main/common/dw9718af/DW9718AF.c:		LOG_INF("set I2C failed when moving the motor\n");
lens/main/common/dw9718af/DW9718AF.c:		LOG_INF("No CMD\n");
lens/main/common/dw9718af/DW9718AF.c:	LOG_INF("Start\n");
lens/main/common/dw9718af/DW9718AF.c:		LOG_INF("apply\n");
lens/main/common/dw9718af/DW9718AF.c:		LOG_INF("Free\n");
lens/main/common/dw9718af/DW9718AF.c:	LOG_INF("End\n");
lens/main/common/dw9718af/DW9718AF.c:	LOG_INF("FileName : %s\n", pFileName);
lens/main/common/lc898214af/LC898214AF.c:#define LOG_INF(format, args...)                                               \
lens/main/common/lc898214af/LC898214AF.c:#define LOG_INF(format, args...)
lens/main/common/lc898214af/LC898214AF.c:		LOG_INF("read I2C send failed!!\n");
lens/main/common/lc898214af/LC898214AF.c:		LOG_INF("EEPROM_ReadReg failed!!\n");
lens/main/common/lc898214af/LC898214AF.c:	LOG_INF("u8data[0] = 0x%x\n", u8data[0]);
lens/main/common/lc898214af/LC898214AF.c:	LOG_INF("u8data[1] = 0x%x\n", u8data[1]);
lens/main/common/lc898214af/LC898214AF.c:	LOG_INF("EEPROM 0x%x, 0x%x\n", addr, *data);
lens/main/common/lc898214af/LC898214AF.c:		LOG_INF("ReadI2C send failed!!\n");
lens/main/common/lc898214af/LC898214AF.c:		LOG_INF("ReadI2C recv failed!!\n");
lens/main/common/lc898214af/LC898214AF.c:	/* LOG_INF("ReadI2C 0x%x, 0x%x\n", a_uAddr, *a_uData); */
lens/main/common/lc898214af/LC898214AF.c:			LOG_INF("WriteI2C failed!!\n");
lens/main/common/lc898214af/LC898214AF.c:			LOG_INF("WriteI2C 2 failed!!\n");
lens/main/common/lc898214af/LC898214AF.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/main/common/lc898214af/LC898214AF.c:	LOG_INF("+\n");
lens/main/common/lc898214af/LC898214AF.c:			LOG_INF("Check Read F0h fail\n");
lens/main/common/lc898214af/LC898214AF.c:	LOG_INF("-\n");
lens/main/common/lc898214af/LC898214AF.c:		LOG_INF("set I2C failed when moving the motor\n");
lens/main/common/lc898214af/LC898214AF.c:		LOG_INF("No CMD\n");
lens/main/common/lc898214af/LC898214AF.c:	LOG_INF("Start\n");
lens/main/common/lc898214af/LC898214AF.c:		LOG_INF("Wait\n");
lens/main/common/lc898214af/LC898214AF.c:		LOG_INF("Close\n");
lens/main/common/lc898214af/LC898214AF.c:		LOG_INF("Free\n");
lens/main/common/lc898214af/LC898214AF.c:	LOG_INF("End\n");
lens/main/common/lc898214af/LC898214AF.c:	LOG_INF("FileName : %s\n", pFileName);
lens/main/common/gt9769af/GT9769AF.c:#define LOG_INF(format, args...) pr_debug(AF_DRVNAME " [%s] " format, __func__, ##args)
lens/main/common/gt9769af/GT9769AF.c:#define LOG_INF(format, args...)
lens/main/common/gt9769af/GT9769AF.c:		LOG_INF("I2C read failed!!\n");
lens/main/common/gt9769af/GT9769AF.c:		LOG_INF("I2C send failed!!\n");
lens/main/common/gt9769af/GT9769AF.c:	LOG_INF("[GT9769AF] GT9766A SRC Init End!! \n");
lens/main/common/gt9769af/GT9769AF.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/main/common/gt9769af/GT9769AF.c:       /* LOG_INF("move [curr] %d [target] %d\n", g_u4CurrPosition, g_u4TargetPosition); */
lens/main/common/gt9769af/GT9769AF.c:		LOG_INF("GT9769AF_Ioctl():AFIOC_G_MOTORINFO = %d\n", AFIOC_G_MOTORINFO);
lens/main/common/gt9769af/GT9769AF.c:		LOG_INF("GT9769AF_Ioctl():AFIOC_T_MOVETO = %d\n", AFIOC_T_MOVETO);
lens/main/common/gt9769af/GT9769AF.c:		LOG_INF("GT9769AF_Ioctl():AFIOC_T_SETINFPOS = %d\n", AFIOC_T_SETINFPOS);
lens/main/common/gt9769af/GT9769AF.c:		LOG_INF("GT9769AF_Ioctl():AFIOC_T_SETMACROPOS = %d\n", AFIOC_T_SETMACROPOS);
lens/main/common/gt9769af/GT9769AF.c:		LOG_INF("No CMD\n");
lens/main/common/gt9769af/GT9769AF.c:		LOG_INF("Wait\n");
lens/main/common/gt9769af/GT9769AF.c:		LOG_INF("Free\n");
lens/main/common/gt9769af/GT9769AF.c:	LOG_INF("End\n");
lens/main/common/gt9769af/GT9769AF.c:	LOG_INF("FileName : %s\n", pFileName);
lens/main/common/wv511aaf/WV511AAF.c:#define LOG_INF(format, args...)                                               \
lens/main/common/wv511aaf/WV511AAF.c:#define LOG_INF(format, args...)
lens/main/common/wv511aaf/WV511AAF.c:		LOG_INF("I2C read failed!!\n");
lens/main/common/wv511aaf/WV511AAF.c:	/* LOG_INF("g_sr %d, write %d\n", g_sr, a_u2Data); */
lens/main/common/wv511aaf/WV511AAF.c:		LOG_INF("I2C send failed!!\n");
lens/main/common/wv511aaf/WV511AAF.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/main/common/wv511aaf/WV511AAF.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/main/common/wv511aaf/WV511AAF.c:	LOG_INF("+\n");
lens/main/common/wv511aaf/WV511AAF.c:	LOG_INF("-\n");
lens/main/common/wv511aaf/WV511AAF.c:		LOG_INF("set I2C failed when moving the motor\n");
lens/main/common/wv511aaf/WV511AAF.c:		LOG_INF("No CMD\n");
lens/main/common/wv511aaf/WV511AAF.c:	LOG_INF("Start\n");
lens/main/common/wv511aaf/WV511AAF.c:		LOG_INF("Free\n");
lens/main/common/wv511aaf/WV511AAF.c:	LOG_INF("End\n");
lens/main/common/wv511aaf/WV511AAF.c:	LOG_INF("FileName : %s\n", pFileName);
lens/main/main_lens.c:#define LOG_INF(format, args...)                                               \
lens/main/main_lens.c:#define LOG_INF(format, args...)
lens/main/main_lens.c:	LOG_INF("AFIOC_S_SETPOWERCTRL regulator_put %p\n", regVCAMAF);
lens/main/main_lens.c:				    LOG_INF("[Init] regulator_get vldo28 %p\n", regVCAMAF);
lens/main/main_lens.c:				LOG_INF("[Init] regulator_get %p\n", regVCAMAF);
lens/main/main_lens.c:			LOG_INF("regulator_is_enabled %d\n", Status);
lens/main/main_lens.c:				LOG_INF("regulator_set_voltage %d\n", Status);
lens/main/main_lens.c:					LOG_INF("regulator_set_voltage fail\n");
lens/main/main_lens.c:				LOG_INF("regulator_enable %d\n", Status);
lens/main/main_lens.c:					LOG_INF("regulator_enable fail\n");
lens/main/main_lens.c:				LOG_INF("AF Power on\n");
lens/main/main_lens.c:			LOG_INF("regulator_is_enabled %d\n", Status);
lens/main/main_lens.c:				LOG_INF("Camera Power enable\n");
lens/main/main_lens.c:				LOG_INF("regulator_disable %d\n", Status);
lens/main/main_lens.c:					LOG_INF("Fail to regulator_disable\n");
lens/main/main_lens.c:			LOG_INF("AFIOC_S_SETPOWERCTRL regulator_put %p\n",
lens/main/main_lens.c:			LOG_INF("%d/%d , %d/%d, %d/%d\n", Ret1, DrvPwrDn1,
lens/main/main_lens.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/main/main_lens.c:		LOG_INF("Search Motor Name : %s\n", g_stAF_DrvList[i].uDrvName);
lens/main/main_lens.c:			LOG_INF("Motor Name : %s\n", stMotorName.uMotorName);
lens/main/main_lens.c:		LOG_INF("copy to user failed\n");
lens/main/main_lens.c:			LOG_INF("copy to user failed\n");
lens/main/main_lens.c:		LOG_INF("copy to user failed when getting motor information\n");
lens/main/main_lens.c:	LOG_INF("GETDRVNAME : set driver name(%s)\n", stMotorName.uMotorName);
lens/main/main_lens.c:		LOG_INF("Search Motor Name : %s\n", g_stAF_DrvList[i].uDrvName);
lens/main/main_lens.c:			LOG_INF("Motor Name : %s\n", stMotorName.uMotorName);
lens/main/main_lens.c:			LOG_INF("GETDRVNAME : get file name(%s)\n",
lens/main/main_lens.c:				LOG_INF("copy to user failed\n");
lens/main/main_lens.c:					LOG_INF("copy to user failed\n");
lens/main/main_lens.c:	LOG_INF("Start\n");
lens/main/main_lens.c:		LOG_INF("The device is opened\n");
lens/main/main_lens.c:	LOG_INF("End\n");
lens/main/main_lens.c:	LOG_INF("Start\n");
lens/main/main_lens.c:	LOG_INF("End\n");
lens/main/main_lens.c:	LOG_INF("Start\n");
lens/main/main_lens.c:		LOG_INF("Allocate device no failed\n");
lens/main/main_lens.c:		LOG_INF("Allocate mem for kobject failed\n");
lens/main/main_lens.c:		LOG_INF("Attatch file operation failed\n");
lens/main/main_lens.c:		LOG_INF("Unable to create class, err = %d\n", ret);
lens/main/main_lens.c:	LOG_INF("End\n");
lens/main/main_lens.c:	LOG_INF("Start\n");
lens/main/main_lens.c:	LOG_INF("End\n");
lens/main/main_lens.c:	LOG_INF("Start\n");
lens/main/main_lens.c:		LOG_INF(" register char device failed!\n");
lens/main/main_lens.c:	LOG_INF("Attached!!\n");
lens/main/main_lens.c:		LOG_INF("failed to register AF driver\n");
lens/main/main_lens.c:		LOG_INF("Failed to register AF driver\n");
rtc/mt6357/mtk_rtc_hal.c: *	RTC_PWRON_LOGO,
rtc/mt6357/mtk_rtc_hal.c:	    (pdn1 & RTC_PDN1_PWRON_TIME ? (pdn2 & RTC_PDN2_PWRON_LOGO ? 3 : 2) :
rtc/mt6357/mtk_rtc_hal.c:		pdn2 = rtc_read(RTC_PDN2) | RTC_PDN2_PWRON_LOGO;
rtc/mt6357/mtk_rtc_hal.c:		pdn2 = rtc_read(RTC_PDN2) & ~RTC_PDN2_PWRON_LOGO;
rtc/mt6357/mtk_rtc_hw.h:#define OSC32CON_ANALOG_SETTING	(RTC_GP_OSC32_CON | RTC_EOSC32_CHOP_EN | \
rtc/mt6357/mtk_rtc_hw.h:#define RTC_PDN2_PWRON_LOGO			(1U << 15)
rtc/mt6356/mtk_rtc_hal.c: *	RTC_PWRON_LOGO,
rtc/mt6356/mtk_rtc_hal.c:	    (pdn1 & RTC_PDN1_PWRON_TIME ? (pdn2 & RTC_PDN2_PWRON_LOGO ? 3 : 2) :
rtc/mt6356/mtk_rtc_hal.c:		pdn2 = rtc_read(RTC_PDN2) | RTC_PDN2_PWRON_LOGO;
rtc/mt6356/mtk_rtc_hal.c:		pdn2 = rtc_read(RTC_PDN2) & ~RTC_PDN2_PWRON_LOGO;
rtc/mt6356/mtk_rtc_hw.h:#define OSC32CON_ANALOG_SETTING	(RTC_GP_OSC32_CON | \
rtc/mt6356/mtk_rtc_hw.h:#define RTC_PDN2_PWRON_LOGO            (1U << 15)
rtc/mt6355/mtk_rtc_hal.c: *	RTC_PWRON_LOGO,
rtc/mt6355/mtk_rtc_hal.c:		(pdn2 & RTC_PDN2_PWRON_LOGO ? 3 : 2) : 0);
rtc/mt6355/mtk_rtc_hal.c:		pdn2 = rtc_read(RTC_PDN2) | RTC_PDN2_PWRON_LOGO;
rtc/mt6355/mtk_rtc_hal.c:		pdn2 = rtc_read(RTC_PDN2) & ~RTC_PDN2_PWRON_LOGO;
rtc/mt6355/mtk_rtc_hw.h:#define OSC32CON_ANALOG_SETTING    (RTC_GP_OSC32_CON | \
rtc/mt6355/mtk_rtc_hw.h:#define RTC_PDN2_PWRON_LOGO            (1U << 15)
rtc/mt6358/mtk_rtc_hal.c: *	RTC_PWRON_LOGO,
rtc/mt6358/mtk_rtc_hal.c:	    (pdn1 & RTC_PDN1_PWRON_TIME ? (pdn2 & RTC_PDN2_PWRON_LOGO ? 3 : 2) :
rtc/mt6358/mtk_rtc_hal.c:		pdn2 = rtc_read(RTC_PDN2) | RTC_PDN2_PWRON_LOGO;
rtc/mt6358/mtk_rtc_hal.c:		pdn2 = rtc_read(RTC_PDN2) & ~RTC_PDN2_PWRON_LOGO;
rtc/mt6358/mtk_rtc_hw.h:#define OSC32CON_ANALOG_SETTING	(RTC_GP_OSC32_CON | RTC_EOSC32_CHOP_EN | \
rtc/mt6358/mtk_rtc_hw.h:#define RTC_PDN2_PWRON_LOGO			(1U << 15)
rtc/mt6359/mtk_rtc_hal.c: *	RTC_PWRON_LOGO,
rtc/mt6359/mtk_rtc_hal.c:	    (pdn1 & RTC_PDN1_PWRON_TIME ? (pdn2 & RTC_PDN2_PWRON_LOGO ? 3 : 2) :
rtc/mt6359/mtk_rtc_hal.c:		pdn2 = rtc_read(RTC_PDN2) | RTC_PDN2_PWRON_LOGO;
rtc/mt6359/mtk_rtc_hal.c:		pdn2 = rtc_read(RTC_PDN2) & ~RTC_PDN2_PWRON_LOGO;
rtc/mt6359/mtk_rtc_hw.h:#define OSC32CON_ANALOG_SETTING	(RTC_GP_OSC32_CON | RTC_EOSC32_CHOP_EN | \
rtc/mt6359/mtk_rtc_hw.h:#define RTC_PDN2_PWRON_LOGO			(1U << 15)
lcm/nt36525b_vdo_hdp_panda_shengchao/nt36525b_vdo_hdp_panda_shengchao.c:#define LOG_TAG "LCM"
lcm/nt36525b_vdo_hdp_boe_helitai/nt36525b_vdo_hdp_boe_helitai.c:#define LOG_TAG "LCM"
lcm/hx83102d_vdo_hdp_boe_xinli/hx83102d_vdo_hdp_boe_xinli.c:#define LOG_TAG "LCM"
lcm/icnl9911c_vdo_hdp_boe_xinli/icnl9911c_vdo_hdp_boe_xinli.c:#define LOG_TAG "LCM"
lcm/ft8006s_vdo_hdp_boe_helitai/ft8006s_vdo_hdp_boe_helitai.c:#define LOG_TAG "LCM"
lcm/ft8006s_ab_vdo_hdp_boe_helitai/ft8006s_ab_vdo_hdp_boe_helitai.c:#define LOG_TAG "LCM"
lcm/nt36525b_vdo_hdp_boe_xinli/nt36525b_vdo_hdp_boe_xinli.c:#define LOG_TAG "LCM"
lcm/icnl9911c_vdo_hdp_boe_tianma/icnl9911c_vdo_hdp_boe_tianma.c:#define LOG_TAG "LCM"
lcm/nt36525b_vdo_hdp_boe_dijing/nt36525b_vdo_hdp_boe_dijing.c:#define LOG_TAG "LCM"
Kconfig.default:	select NETFILTER_XT_TARGET_NFLOG
ccu/src/1.0/ccu_drv.c:	LOG_DBG("%s:0x%x\n", __func__, irq);
ccu/src/1.0/ccu_drv.c:	LOG_DBG("[m4u] fault callback: port=%d, mva=0x%x", port, mva);
ccu/src/1.0/ccu_drv.c:	LOG_DBG("+:%s\n", __func__);
ccu/src/1.0/ccu_drv.c:		LOG_ERR("empty user");
ccu/src/1.0/ccu_drv.c:	LOG_DBG("+:%s\n", __func__);
ccu/src/1.0/ccu_drv.c:		LOG_ERR("empty user");
ccu/src/1.0/ccu_drv.c:		LOG_ERR("timeout: pop a command! ret=%d\n", ret);
ccu/src/1.0/ccu_drv.c:		LOG_ERR("interrupted by system signal: %d\n", ret);
ccu/src/1.0/ccu_drv.c:			LOG_ERR("interrupted as -ERESTARTSYS\n");
ccu/src/1.0/ccu_drv.c:		LOG_ERR("pop a command from empty queue! ret=%d\n", ret);
ccu/src/1.0/ccu_drv.c:		LOG_ERR("delete empty user!\n");
ccu/src/1.0/ccu_drv.c:		LOG_ERR("fail to create user\n");
ccu/src/1.0/ccu_drv.c:	LOG_DBG("+, cmd: %d\n", cmd);
ccu/src/1.0/ccu_drv.c:		LOG_DBG("CCU_IOCTL_SET_POWER+\n");
ccu/src/1.0/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] struct ccu_power_s size: %zu\n",
ccu/src/1.0/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] ccu_working_buffer_t size: %zu\n",
ccu/src/1.0/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] arg: %p\n", (void *)arg);
ccu/src/1.0/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] long size: %zu\n", sizeof(long));
ccu/src/1.0/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] long long: %zu\n",
ccu/src/1.0/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] char *size: %zu\n",
ccu/src/1.0/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] power.workBuf.va_log[0]: %p\n",
ccu/src/1.0/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] (void *)arg: %p\n", (void *)arg);
ccu/src/1.0/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] ptr_power32: %p\n", ptr_power32);
ccu/src/1.0/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] ptr_power64: %p\n", ptr_power64);
ccu/src/1.0/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] *ptr_power32 size: %zu\n",
ccu/src/1.0/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] *ptr_power64 size: %zu\n",
ccu/src/1.0/ccu_drv.c:		for (i = 0; i < MAX_LOG_BUF_NUM; i++) {
ccu/src/1.0/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] err: %d\n", err);
ccu/src/1.0/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] ptr_power32->workBuf.va_pool: %x\n",
ccu/src/1.0/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] ptr_power64->workBuf.va_pool: %p\n",
ccu/src/1.0/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] ptr_power32->workBuf.va_log: %x\n",
ccu/src/1.0/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] ptr_power64->workBuf.va_log: %p\n",
ccu/src/1.0/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] ptr_power32->workBuf.mva_log: %x\n",
ccu/src/1.0/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] ptr_power64->workBuf.mva_log: %x\n",
ccu/src/1.0/ccu_drv.c:		LOG_DBG("CCU_IOCTL_SET_POWER-");
ccu/src/1.0/ccu_drv.c:	LOG_ERR(
ccu/src/1.0/ccu_drv.c:		LOG_ERR("%s, node=0x%p\n", __func__, cmd);
ccu/src/1.0/ccu_drv.c:	LOG_DBG_MUST("%s.\n", __func__);
ccu/src/1.0/ccu_drv.c:		LOG_ERR("clock enable fail.\n");
ccu/src/1.0/ccu_drv.c:	LOG_DBG_MUST("%s.\n", __func__);
ccu/src/1.0/ccu_drv.c:	LOG_DBG("%s+, cmd:%d\n", __func__, cmd);
ccu/src/1.0/ccu_drv.c:			LOG_WRN("ccuk: ioctl without powered on\n");
ccu/src/1.0/ccu_drv.c:		LOG_DBG("ccuk: ioctl set powerk+: %p\n", (void *)arg);
ccu/src/1.0/ccu_drv.c:		LOG_ERR(
ccu/src/1.0/ccu_drv.c:			LOG_WRN(
ccu/src/1.0/ccu_drv.c:		LOG_DBG("ccuk: ioctl set powerk-\n");
ccu/src/1.0/ccu_drv.c:		LOG_ERR(
ccu/src/1.0/ccu_drv.c:		LOG_ERR(
ccu/src/1.0/ccu_drv.c:		LOG_ERR(
ccu/src/1.0/ccu_drv.c:		LOG_ERR(
ccu/src/1.0/ccu_drv.c:		LOG_ERR(
ccu/src/1.0/ccu_drv.c:				LOG_ERR("invalid type(%d)\n", IrqInfo.Type);
ccu/src/1.0/ccu_drv.c:			LOG_DBG(
ccu/src/1.0/ccu_drv.c:				LOG_ERR("copy_to_user failed\n");
ccu/src/1.0/ccu_drv.c:			LOG_ERR("copy_from_user failed\n");
ccu/src/1.0/ccu_drv.c:		LOG_ERR(
ccu/src/1.0/ccu_drv.c:	case CCU_IOCTL_FLUSH_LOG:
ccu/src/1.0/ccu_drv.c:			LOG_DBG("ccu_get_i2c_dma_buf_addr fail: %d\n", ret);
ccu/src/1.0/ccu_drv.c:			LOG_ERR("invalid i2c channel: %d\n", channel);
ccu/src/1.0/ccu_drv.c:				LOG_ERR("copy_to_user 1 failed: %d\n", ret);
ccu/src/1.0/ccu_drv.c:				LOG_ERR("copy_to_user 2 failed: %d\n", ret);
ccu/src/1.0/ccu_drv.c:				LOG_ERR("copy_to_user 3 failed: %d\n", ret);
ccu/src/1.0/ccu_drv.c:		LOG_WRN("ioctl:No such command: %d!\n", cmd);
ccu/src/1.0/ccu_drv.c:		LOG_ERR(
ccu/src/1.0/ccu_drv.c:	LOG_INF_MUST("%s +", __func__);
ccu/src/1.0/ccu_drv.c:	LOG_INF_MUST("+:%s, delete_user done.\n", __func__);
ccu/src/1.0/ccu_drv.c:	LOG_INF_MUST("%s -", __func__);
ccu/src/1.0/ccu_drv.c:	LOG_DBG(
ccu/src/1.0/ccu_drv.c:	LOG_DBG(
ccu/src/1.0/ccu_drv.c:			LOG_ERR(
ccu/src/1.0/ccu_drv.c:			LOG_ERR(
ccu/src/1.0/ccu_drv.c:			LOG_ERR(
ccu/src/1.0/ccu_drv.c:			LOG_ERR(
ccu/src/1.0/ccu_drv.c:		LOG_ERR("Illegal starting HW addr for mmap!\n");
ccu/src/1.0/ccu_drv.c:		LOG_ERR("remap_pfn_range\n");
ccu/src/1.0/ccu_drv.c:	LOG_DBG("map_check_1\n");
ccu/src/1.0/ccu_drv.c:		LOG_ERR("alloc_chrdev_region failed, %d\n", ret);
ccu/src/1.0/ccu_drv.c:		LOG_ERR("cdev_alloc failed\n");
ccu/src/1.0/ccu_drv.c:		LOG_ERR("Attatch file operation failed, %d\n", ret);
ccu/src/1.0/ccu_drv.c:		LOG_ERR("of_property_read_u32_array ERR : %d\n", ret);
ccu/src/1.0/ccu_drv.c:	LOG_DBG(
ccu/src/1.0/ccu_drv.c:	LOG_DBG(
ccu/src/1.0/ccu_drv.c:	LOG_DBG(
ccu/src/1.0/ccu_drv.c:	LOG_DBG(
ccu/src/1.0/ccu_drv.c:	LOG_DBG(
ccu/src/1.0/ccu_drv.c:	LOG_DBG(
ccu/src/1.0/ccu_drv.c:	LOG_DBG(
ccu/src/1.0/ccu_drv.c:	LOG_DBG(
ccu/src/1.0/ccu_drv.c:	LOG_DBG(
ccu/src/1.0/ccu_drv.c:	LOG_DBG(
ccu/src/1.0/ccu_drv.c:	LOG_DBG(
ccu/src/1.0/ccu_drv.c:	LOG_DBG(
ccu/src/1.0/ccu_drv.c:	LOG_DBG(
ccu/src/1.0/ccu_drv.c:	LOG_DBG(
ccu/src/1.0/ccu_drv.c:	LOG_DBG(
ccu/src/1.0/ccu_drv.c:	LOG_DBG(
ccu/src/1.0/ccu_drv.c:	LOG_DBG("probe 0, pdev id = %d name = %s\n", pdev->id, pdev->name);
ccu/src/1.0/ccu_drv.c:			LOG_INF(
ccu/src/1.0/ccu_drv.c:			LOG_INF(
ccu/src/1.0/ccu_drv.c:			LOG_INF(
ccu/src/1.0/ccu_drv.c:			LOG_INF(
ccu/src/1.0/ccu_drv.c:			LOG_INF(
ccu/src/1.0/ccu_drv.c:			LOG_INF(
ccu/src/1.0/ccu_drv.c:			LOG_INF(
ccu/src/1.0/ccu_drv.c:			LOG_INF(
ccu/src/1.0/ccu_drv.c:				LOG_ERR("Get ccu clock ctrl fail.\n");
ccu/src/1.0/ccu_drv.c:		LOG_DBG(
ccu/src/1.0/ccu_drv.c:			LOG_DERR(g_ccu_device->dev,
ccu/src/1.0/ccu_drv.c:			LOG_DBG(
ccu/src/1.0/ccu_drv.c:				LOG_DERR(g_ccu_device->dev,
ccu/src/1.0/ccu_drv.c:				LOG_ERR("Unable to create class, err = %d\n",
ccu/src/1.0/ccu_drv.c:				LOG_DERR(g_ccu_device->dev,
ccu/src/1.0/ccu_drv.c:		LOG_ERR("ccu probe cuccess...\n");
ccu/src/1.0/ccu_drv.c:	LOG_DBG("- X. CCU driver probe.\n");
ccu/src/1.0/ccu_drv.c:	LOG_DBG("- E.");
ccu/src/1.0/ccu_drv.c:	LOG_DBG("register m4u callback");
ccu/src/1.0/ccu_drv.c:	LOG_DBG("platform_driver_register start\n");
ccu/src/1.0/ccu_drv.c:		LOG_ERR("failed to register CCU driver");
ccu/src/1.0/ccu_drv.c:	LOG_DBG("platform_driver_register finsish\n");
ccu/src/1.0/ccu_drv.c:	LOG_DBG("un-register m4u callback");
ccu/src/1.0/ccu_drv.h:struct CCU_TIME_LOG_STRUCT {
ccu/src/1.0/ccu_drv.h:	struct CCU_TIME_LOG_STRUCT TimeLog;
ccu/src/1.0/ccu_drv.h:#define MAX_LOG_BUF_NUM 2
ccu/src/1.0/ccu_drv.h:	char *va_log[MAX_LOG_BUF_NUM];	/* log buffer           */
ccu/src/1.0/ccu_drv.h:	uint32_t mva_log[MAX_LOG_BUF_NUM];
ccu/src/1.0/ccu_drv.h:	uint32_t sz_log[MAX_LOG_BUF_NUM];
ccu/src/1.0/ccu_drv.h:	int32_t fd_log[MAX_LOG_BUF_NUM];
ccu/src/1.0/ccu_drv.h:	compat_uptr_t va_log[MAX_LOG_BUF_NUM];	/* log buffer           */
ccu/src/1.0/ccu_drv.h:	uint32_t mva_log[MAX_LOG_BUF_NUM];
ccu/src/1.0/ccu_drv.h:	uint32_t sz_log[MAX_LOG_BUF_NUM];
ccu/src/1.0/ccu_drv.h:	int32_t fd_log[MAX_LOG_BUF_NUM];
ccu/src/1.0/ccu_drv.h:#define CCU_IOCTL_FLUSH_LOG                 _IOW(CCU_MAGICNO,  19, int)
ccu/src/1.0/ccu_i2c.c:	LOG_DBG("[ccu_i2c_probe] Attach g_ccuI2cClientMain %p\n", client);
ccu/src/1.0/ccu_i2c.c:	LOG_DBG("[ccu_i2c_probe] Attached!!\n");
ccu/src/1.0/ccu_i2c.c:	LOG_DBG("[ccu_i2c_probe] Attach g_ccuI2cClientSub %p\n", client);
ccu/src/1.0/ccu_i2c.c:	LOG_DBG("[ccu_i2c_probe] Attached!!\n");
ccu/src/1.0/ccu_i2c.c:	LOG_DBG("i2c_add_driver(&ccu_i2c_main_driver)++\n");
ccu/src/1.0/ccu_i2c.c:	LOG_DBG("i2c_add_driver(&ccu_i2c_main_driver), ret: %d--\n", i2c_ret);
ccu/src/1.0/ccu_i2c.c:	LOG_DBG("i2c_add_driver(&ccu_i2c_sub_driver)++\n");
ccu/src/1.0/ccu_i2c.c:	LOG_DBG("i2c_add_driver(&ccu_i2c_sub_driver), ret: %d--\n", i2c_ret);
ccu/src/1.0/ccu_i2c.c:	LOG_DBG_MUST("i2c_buf_mode_en %d\n", enable);
ccu/src/1.0/ccu_i2c.c:	LOG_DBG("i2c_buf_mode_en, pClient: %p\n", pClient);
ccu/src/1.0/ccu_i2c.c:			LOG_DBG_MUST("hw_trig_i2c_enable done.\n");
ccu/src/1.0/ccu_i2c.c:			LOG_DBG_MUST("hw_trig_i2c_disable done.\n");
ccu/src/1.0/ccu_i2c.c:		LOG_ERR("ccu client is NULL");
ccu/src/1.0/ccu_i2c.c:	LOG_DBG("got i2c buf va: %p\n", *va);
ccu/src/1.0/ccu_cmn.h:/* LOG & AEE */
ccu/src/1.0/ccu_cmn.h:#define LOG_DBG_MUST(format, args...)
ccu/src/1.0/ccu_cmn.h:#define LOG_INF_MUST(format, args...)
ccu/src/1.0/ccu_cmn.h:#define LOG_WRN_MUST(format, args...) 
ccu/src/1.0/ccu_cmn.h:#define LOG_DBG(format, args...)
ccu/src/1.0/ccu_cmn.h:#define LOG_INF(format, args...)
ccu/src/1.0/ccu_cmn.h:#define LOG_WRN(format, args...) 
ccu/src/1.0/ccu_cmn.h:#define LOG_ERR(format, args...) 
ccu/src/1.0/ccu_cmn.h:#define LOG_DERR(device, format, args...) 
ccu/src/1.2/ccu_drv.c:	LOG_DBG("%s:0x%x\n", __func__, irq);
ccu/src/1.2/ccu_drv.c:	LOG_DBG("[m4u] fault callback: port=%d, mva=0x%x", port, mva);
ccu/src/1.2/ccu_drv.c:		LOG_ERR("empty user");
ccu/src/1.2/ccu_drv.c:	LOG_DBG("+:%s\n", __func__);
ccu/src/1.2/ccu_drv.c:		LOG_ERR("timeout: pop a command! ret=%ld\n", ret);
ccu/src/1.2/ccu_drv.c:		LOG_ERR("interrupted by system signal: %ld\n", ret);
ccu/src/1.2/ccu_drv.c:			LOG_ERR("interrupted as -ERESTARTSYS\n");
ccu/src/1.2/ccu_drv.c:		LOG_ERR("pop a command from empty queue! ret=%ld\n", ret);
ccu/src/1.2/ccu_drv.c:		LOG_ERR("delete empty user!\n");
ccu/src/1.2/ccu_drv.c:		LOG_ERR("fail to create user\n");
ccu/src/1.2/ccu_drv.c:	LOG_DBG("+, cmd: %d\n", cmd);
ccu/src/1.2/ccu_drv.c:		LOG_DBG("CCU_IOCTL_SET_POWER+\n");
ccu/src/1.2/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] struct ccu_power_s size: %zu\n",
ccu/src/1.2/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] struct ccu_working_buffer_s size: %zu\n",
ccu/src/1.2/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] arg: %p\n", (void *)arg);
ccu/src/1.2/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] long size: %zu\n", sizeof(long));
ccu/src/1.2/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] long long: %zu\n", sizeof(long long));
ccu/src/1.2/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] char *size: %zu\n", sizeof(char *));
ccu/src/1.2/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] power.workBuf.va_log[0]: %p\n",
ccu/src/1.2/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] (void *)arg: %p\n", (void *)arg);
ccu/src/1.2/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] ptr_power32: %p\n", ptr_power32);
ccu/src/1.2/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] ptr_power64: %p\n", ptr_power64);
ccu/src/1.2/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] *ptr_power32 size: %zu\n",
ccu/src/1.2/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] *ptr_power64 size: %zu\n",
ccu/src/1.2/ccu_drv.c:		for (i = 0; i < MAX_LOG_BUF_NUM; i++) {
ccu/src/1.2/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] err: %d\n", err);
ccu/src/1.2/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] ptr_power32->workBuf.va_pool: %x\n",
ccu/src/1.2/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] ptr_power64->workBuf.va_pool: %p\n",
ccu/src/1.2/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] ptr_power32->workBuf.va_log: %x\n",
ccu/src/1.2/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] ptr_power64->workBuf.va_log: %p\n",
ccu/src/1.2/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] ptr_power32->workBuf.mva_log: %x\n",
ccu/src/1.2/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] ptr_power64->workBuf.mva_log: %x\n",
ccu/src/1.2/ccu_drv.c:		LOG_DBG("CCU_IOCTL_SET_POWER-");
ccu/src/1.2/ccu_drv.c:		LOG_ERR("fail, cmd(%d), pid(%d), ",
ccu/src/1.2/ccu_drv.c:		LOG_ERR("(process, pid, tgid)=(%s, %d, %d)\n",
ccu/src/1.2/ccu_drv.c:		LOG_ERR("%s(), node=0x%p\n", __func__, cmd);
ccu/src/1.2/ccu_drv.c:	LOG_DBG_MUST("%s %d.\n", __func__, _clk_count);
ccu/src/1.2/ccu_drv.c:		LOG_ERR("clock enable fail.\n");
ccu/src/1.2/ccu_drv.c:	LOG_DBG_MUST("%s %d.\n", __func__, _clk_count);
ccu/src/1.2/ccu_drv.c:	LOG_DBG("%s+, cmd:%d\n", __func__, cmd);
ccu/src/1.2/ccu_drv.c:		(cmd != CCU_IOCTL_FLUSH_LOG) &&
ccu/src/1.2/ccu_drv.c:			LOG_WARN("ccuk: ioctl without powered on\n");
ccu/src/1.2/ccu_drv.c:			LOG_DBG("ccuk: ioctl set powerk+\n");
ccu/src/1.2/ccu_drv.c:				LOG_ERR(
ccu/src/1.2/ccu_drv.c:			LOG_DBG("ccuk: ioctl set powerk-\n");
ccu/src/1.2/ccu_drv.c:				LOG_ERR(
ccu/src/1.2/ccu_drv.c:				LOG_ERR(
ccu/src/1.2/ccu_drv.c:				LOG_DBG("CCU_FAST_CMD_E.%d\n",
ccu/src/1.2/ccu_drv.c:				LOG_DBG("CCU_FAST_CMD_D.%d\n",
ccu/src/1.2/ccu_drv.c:				LOG_ERR(
ccu/src/1.2/ccu_drv.c:				LOG_ERR(
ccu/src/1.2/ccu_drv.c:				LOG_ERR(
ccu/src/1.2/ccu_drv.c:				LOG_ERR(
ccu/src/1.2/ccu_drv.c:					LOG_ERR("invalid type(%d)\n",
ccu/src/1.2/ccu_drv.c:				LOG_DBG("IRQ type(%d), userKey(%d), ",
ccu/src/1.2/ccu_drv.c:				LOG_DBG("timeout(%d), sttype(%d), st(%d)\n",
ccu/src/1.2/ccu_drv.c:					LOG_ERR("copy_to_user failed\n");
ccu/src/1.2/ccu_drv.c:				LOG_ERR("copy_from_user failed\n");
ccu/src/1.2/ccu_drv.c:				LOG_ERR(
ccu/src/1.2/ccu_drv.c:	case CCU_IOCTL_FLUSH_LOG:
ccu/src/1.2/ccu_drv.c:				LOG_DBG(
ccu/src/1.2/ccu_drv.c:			LOG_ERR("invalid i2c sensor_idx: %d\n", sensor_idx);
ccu/src/1.2/ccu_drv.c:					LOG_ERR(
ccu/src/1.2/ccu_drv.c:		LOG_WARN("ioctl:No such command!\n");
ccu/src/1.2/ccu_drv.c:		LOG_ERR("fail, cmd(%d), pid(%d), ",
ccu/src/1.2/ccu_drv.c:		LOG_ERR("(process, pid, tgid)=(%s, %d, %d)\n",
ccu/src/1.2/ccu_drv.c:	LOG_INF_MUST("%s +", __func__);
ccu/src/1.2/ccu_drv.c:	LOG_INF_MUST("%s -", __func__);
ccu/src/1.2/ccu_drv.c:	LOG_DBG("CCU_mmap: vm_pgoff(0x%lx),pfn(0x%x),phy(0x%lx), ",
ccu/src/1.2/ccu_drv.c:	LOG_DBG("vm_start(0x%lx),vm_end(0x%lx),length(0x%lx)\n",
ccu/src/1.2/ccu_drv.c:			LOG_ERR("mmap range error :module(0x%x), ",
ccu/src/1.2/ccu_drv.c:			LOG_ERR
ccu/src/1.2/ccu_drv.c:			LOG_ERR("mmap range error :module(0x%x), ",
ccu/src/1.2/ccu_drv.c:			LOG_ERR
ccu/src/1.2/ccu_drv.c:			LOG_ERR("mmap range error :module(0x%x), ",
ccu/src/1.2/ccu_drv.c:			LOG_ERR
ccu/src/1.2/ccu_drv.c:			LOG_ERR("mmap range error :module(0x%x), ",
ccu/src/1.2/ccu_drv.c:			LOG_ERR
ccu/src/1.2/ccu_drv.c:		LOG_ERR("Illegal starting HW addr for mmap!\n");
ccu/src/1.2/ccu_drv.c:		LOG_ERR("remap_pfn_range\n");
ccu/src/1.2/ccu_drv.c:	LOG_DBG("map_check_1\n");
ccu/src/1.2/ccu_drv.c:	 *	LOG_DBG("map_check_2\n");
ccu/src/1.2/ccu_drv.c:		LOG_ERR("alloc_chrdev_region failed, %d\n", ret);
ccu/src/1.2/ccu_drv.c:		LOG_ERR("cdev_alloc failed\n");
ccu/src/1.2/ccu_drv.c:		LOG_ERR("Attatch file operation failed, %d\n", ret);
ccu/src/1.2/ccu_drv.c:		LOG_ERR("of_property_read_u32_array ERR : %d\n", ret);
ccu/src/1.2/ccu_drv.c:	LOG_DBG("ccu read dt property ccu_hw_base = %x\n", ccu_hw_base);
ccu/src/1.2/ccu_drv.c:	LOG_DBG("CCU_HW_OFFSET = %x\n", CCU_HW_OFFSET);
ccu/src/1.2/ccu_drv.c:	LOG_DBG("CCU_PMEM_BASE = %x\n", CCU_PMEM_BASE);
ccu/src/1.2/ccu_drv.c:	LOG_DBG("CCU_PMEM_SIZE = %x\n", CCU_PMEM_SIZE);
ccu/src/1.2/ccu_drv.c:	LOG_DBG("CCU_DMEM_BASE = %x\n", CCU_DMEM_BASE);
ccu/src/1.2/ccu_drv.c:	LOG_DBG("CCU_DMEM_SIZE = %x\n", CCU_DMEM_SIZE);
ccu/src/1.2/ccu_drv.c:	LOG_DBG("CCU_DMEM_OFFSET = %x\n", CCU_DMEM_OFFSET);
ccu/src/1.2/ccu_drv.c:	LOG_DBG("CCU_LOG_BASE = %x\n", CCU_LOG_BASE);
ccu/src/1.2/ccu_drv.c:	LOG_DBG("CCU_LOG_SIZE = %x\n", CCU_LOG_SIZE);
ccu/src/1.2/ccu_drv.c:	LOG_DBG("CCU_HW_DUMP_SIZE = %x\n", CCU_HW_DUMP_SIZE);
ccu/src/1.2/ccu_drv.c:	LOG_DBG("CCU_CAMSYS_BASE = %x\n", CCU_CAMSYS_BASE);
ccu/src/1.2/ccu_drv.c:	LOG_DBG("CCU_CAMSYS_SIZE = %x\n", CCU_CAMSYS_SIZE);
ccu/src/1.2/ccu_drv.c:	LOG_DBG("CCU_N3D_A_BASE = %x\n", CCU_N3D_A_BASE);
ccu/src/1.2/ccu_drv.c:	LOG_DBG("CCU_N3D_A_SIZE = %x\n", CCU_N3D_A_SIZE);
ccu/src/1.2/ccu_drv.c:	LOG_DBG("CCU_SENSOR_PM_SIZE = %x\n", CCU_SENSOR_PM_SIZE);
ccu/src/1.2/ccu_drv.c:	LOG_DBG("CCU_SENSOR_DM_SIZE = %x\n", CCU_SENSOR_DM_SIZE);
ccu/src/1.2/ccu_drv.c:	LOG_DBG("probe 0, pdev id = %d name = %s\n", pdev->id, pdev->name);
ccu/src/1.2/ccu_drv.c:			LOG_INF("ccu_base pa: 0x%x, size: 0x%x\n",
ccu/src/1.2/ccu_drv.c:			LOG_INF("ccu_base va: 0x%lx\n",
ccu/src/1.2/ccu_drv.c:			LOG_INF("dmem_base pa: 0x%x, size: 0x%x\n",
ccu/src/1.2/ccu_drv.c:			LOG_INF("dmem_base va: 0x%lx\n",
ccu/src/1.2/ccu_drv.c:			LOG_INF("camsys_base pa: 0x%x, size: 0x%x\n",
ccu/src/1.2/ccu_drv.c:			LOG_INF("camsys_base va: 0x%lx\n",
ccu/src/1.2/ccu_drv.c:			LOG_INF("n3d_a_base pa: 0x%x, size: 0x%x\n",
ccu/src/1.2/ccu_drv.c:			LOG_INF("n3d_a_base va: 0x%lx\n",
ccu/src/1.2/ccu_drv.c:				LOG_ERR("Get ccu clock ctrl fail.\n");
ccu/src/1.2/ccu_drv.c:		LOG_DBG("probe 1, ccu_base: 0x%lx, bin_base: 0x%lx, ",
ccu/src/1.2/ccu_drv.c:		LOG_DBG("irq_num: %d, pdev: %p\n",
ccu/src/1.2/ccu_drv.c:				LOG_DERR(g_ccu_device->dev,
ccu/src/1.2/ccu_drv.c:			LOG_DBG("No IRQ!!: ccu_num_devs=%d, ",
ccu/src/1.2/ccu_drv.c:			LOG_DBG("devnode(%s), irq=%d\n",
ccu/src/1.2/ccu_drv.c:				LOG_DERR(g_ccu_device->dev,
ccu/src/1.2/ccu_drv.c:				LOG_ERR(
ccu/src/1.2/ccu_drv.c:				LOG_DERR(g_ccu_device->dev,
ccu/src/1.2/ccu_drv.c:		LOG_INF_MUST("ccu probe cuccess...\n");
ccu/src/1.2/ccu_drv.c:	LOG_DBG("- X. CCU driver probe.\n");
ccu/src/1.2/ccu_drv.c:	LOG_DBG("- E.");
ccu/src/1.2/ccu_drv.c:	LOG_DBG("register m4u callback");
ccu/src/1.2/ccu_drv.c:	LOG_DBG("platform_driver_register start\n");
ccu/src/1.2/ccu_drv.c:		LOG_ERR("failed to register CCU driver");
ccu/src/1.2/ccu_drv.c:	LOG_DBG("platform_driver_register finsish\n");
ccu/src/1.2/ccu_drv.c:	LOG_DBG("un-register m4u callback");
ccu/src/1.2/ccu_drv.h:struct CCU_TIME_LOG_STRUCT {
ccu/src/1.2/ccu_drv.h:	struct CCU_TIME_LOG_STRUCT TimeLog;
ccu/src/1.2/ccu_drv.h:#define MAX_LOG_BUF_NUM 2
ccu/src/1.2/ccu_drv.h:	char *va_log[MAX_LOG_BUF_NUM];	/* log buffer           */
ccu/src/1.2/ccu_drv.h:	uint32_t mva_log[MAX_LOG_BUF_NUM];
ccu/src/1.2/ccu_drv.h:	uint32_t sz_log[MAX_LOG_BUF_NUM];
ccu/src/1.2/ccu_drv.h:	int32_t fd_log[MAX_LOG_BUF_NUM];
ccu/src/1.2/ccu_drv.h:	compat_uptr_t va_log[MAX_LOG_BUF_NUM];	/* log buffer           */
ccu/src/1.2/ccu_drv.h:	uint32_t mva_log[MAX_LOG_BUF_NUM];
ccu/src/1.2/ccu_drv.h:	uint32_t sz_log[MAX_LOG_BUF_NUM];
ccu/src/1.2/ccu_drv.h:	int32_t fd_log[MAX_LOG_BUF_NUM];
ccu/src/1.2/ccu_drv.h:#define CCU_IOCTL_FLUSH_LOG                 _IOW(CCU_MAGICNO,  19, int)
ccu/src/1.2/ccu_i2c.c:	LOG_DBG("[%s] Attach I2C for HW trriger g_ccuI2cClient2 %p\n",
ccu/src/1.2/ccu_i2c.c:	LOG_DBG("[ccu_i2c_probe] Attached!!\n");
ccu/src/1.2/ccu_i2c.c:	LOG_DBG("[%s] Attach I2C for HW trriger g_ccuI2cClient4 %p\n",
ccu/src/1.2/ccu_i2c.c:	LOG_DBG("[ccu_i2c_probe] Attached!!\n");
ccu/src/1.2/ccu_i2c.c:	LOG_DBG("i2c_add_driver(&ccu_i2c_2_driver)++\n");
ccu/src/1.2/ccu_i2c.c:	LOG_DBG("i2c_add_driver(&ccu_i2c_2_driver), ret: %d--\n", i2c_ret);
ccu/src/1.2/ccu_i2c.c:	LOG_DBG("i2c_add_driver(&ccu_i2c_4_driver)++\n");
ccu/src/1.2/ccu_i2c.c:	LOG_DBG("i2c_add_driver(&ccu_i2c_4_driver), ret: %d--\n", i2c_ret);
ccu/src/1.2/ccu_i2c.c:		LOG_DBG("i2c_buf_mode_en fail\n");
ccu/src/1.2/ccu_i2c.c:	LOG_DBG_MUST("%s done.\n", __func__);
ccu/src/1.2/ccu_i2c.c:	LOG_DBG_MUST("i2c_buf_mode_en %d\n", enable);
ccu/src/1.2/ccu_i2c.c:	LOG_DBG("i2c_buf_mode_en, pClient: %p\n", pClient);
ccu/src/1.2/ccu_i2c.c:		LOG_ERR("i2c_client is null\n");
ccu/src/1.2/ccu_i2c.c:	LOG_DBG_MUST("ccu_i2c_enabled %d\n", ccu_i2c_enabled);
ccu/src/1.2/ccu_i2c.c:			LOG_DBG_MUST("i2c_ccu_enable done(%d).\n", ret);
ccu/src/1.2/ccu_i2c.c:			LOG_DBG_MUST("i2c_ccu_disable done(%d).\n", ret);
ccu/src/1.2/ccu_i2c.c:		LOG_ERR("ccu client is NULL");
ccu/src/1.2/ccu_i2c.c:	LOG_DBG_MUST("va(%p), pal(%d), pah(%d), id(%d)\n",
ccu/src/1.2/ccu_i2c.c:	LOG_DBG_MUST("CCU Dump I2C reg\n");
ccu/src/1.2/ccu_cmn.h:/* LOG & AEE */
ccu/src/1.2/ccu_cmn.h:#define LOG_DBG_MUST(format, args...)
ccu/src/1.2/ccu_cmn.h:#define LOG_INF_MUST(format, args...) 
ccu/src/1.2/ccu_cmn.h:#define LOG_DBG(format, args...)
ccu/src/1.2/ccu_cmn.h:#define LOG_INF(format, args...)
ccu/src/1.2/ccu_cmn.h:#define LOG_WARN(format, args...)
ccu/src/1.2/ccu_cmn.h:#define LOG_ERR(format, args...) 
ccu/src/1.2/ccu_cmn.h:#define LOG_DERR(device, format, args...) 
ccu/src/1.1/ccu_drv.c:	LOG_DBG("ccu_isr_callback_xxx:0x%x\n", irq);
ccu/src/1.1/ccu_drv.c:	LOG_DBG("[m4u] fault callback: port=%d, mva=0x%x", port, mva);
ccu/src/1.1/ccu_drv.c:		LOG_ERR("empty user");
ccu/src/1.1/ccu_drv.c:	LOG_DBG("+:%s\n", __func__);
ccu/src/1.1/ccu_drv.c:		LOG_ERR("timeout: pop a command! ret=%d\n", ret);
ccu/src/1.1/ccu_drv.c:		LOG_ERR("interrupted by system signal: %d\n", ret);
ccu/src/1.1/ccu_drv.c:			LOG_ERR("interrupted as -ERESTARTSYS\n");
ccu/src/1.1/ccu_drv.c:		LOG_ERR("pop a command from empty queue! ret=%d\n", ret);
ccu/src/1.1/ccu_drv.c:		LOG_ERR("delete empty user!\n");
ccu/src/1.1/ccu_drv.c:		LOG_ERR("fail to create user\n");
ccu/src/1.1/ccu_drv.c:	LOG_DBG("+, cmd: %d\n", cmd);
ccu/src/1.1/ccu_drv.c:		LOG_DBG("CCU_IOCTL_SET_POWER+\n");
ccu/src/1.1/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] struct ccu_power_s size: %zu\n",
ccu/src/1.1/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] struct ccu_working_buffer_s size: %zu\n",
ccu/src/1.1/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] arg: %p\n", (void *)arg);
ccu/src/1.1/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] long size: %zu\n", sizeof(long));
ccu/src/1.1/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] long long: %zu\n", sizeof(long long));
ccu/src/1.1/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] char *size: %zu\n", sizeof(char *));
ccu/src/1.1/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] power.workBuf.va_log[0]: %p\n",
ccu/src/1.1/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] (void *)arg: %p\n", (void *)arg);
ccu/src/1.1/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] ptr_power32: %p\n", ptr_power32);
ccu/src/1.1/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] ptr_power64: %p\n", ptr_power64);
ccu/src/1.1/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] *ptr_power32 size: %zu\n",
ccu/src/1.1/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] *ptr_power64 size: %zu\n",
ccu/src/1.1/ccu_drv.c:		for (i = 0; i < MAX_LOG_BUF_NUM; i++) {
ccu/src/1.1/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] err: %d\n", err);
ccu/src/1.1/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] ptr_power32->workBuf.va_pool: %x\n",
ccu/src/1.1/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] ptr_power64->workBuf.va_pool: %p\n",
ccu/src/1.1/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] ptr_power32->workBuf.va_log: %x\n",
ccu/src/1.1/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] ptr_power64->workBuf.va_log: %p\n",
ccu/src/1.1/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] ptr_power32->workBuf.mva_log: %x\n",
ccu/src/1.1/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] ptr_power64->workBuf.mva_log: %x\n",
ccu/src/1.1/ccu_drv.c:		LOG_DBG("CCU_IOCTL_SET_POWER-");
ccu/src/1.1/ccu_drv.c:		LOG_ERR("fail, cmd(%d), pid(%d), ",
ccu/src/1.1/ccu_drv.c:		LOG_ERR("(process, pid, tgid)=(%s, %d, %d)\n",
ccu/src/1.1/ccu_drv.c:		LOG_ERR("ccu_alloc_command(), node=0x%p\n", cmd);
ccu/src/1.1/ccu_drv.c:	LOG_DBG_MUST("ccu_clock_enable.\n");
ccu/src/1.1/ccu_drv.c:		LOG_ERR("clock enable fail.\n");
ccu/src/1.1/ccu_drv.c:	LOG_DBG_MUST("ccu_clock_disable.\n");
ccu/src/1.1/ccu_drv.c:	LOG_DBG("ccu_ioctl+, cmd:%d\n", cmd);
ccu/src/1.1/ccu_drv.c:		(cmd != CCU_IOCTL_FLUSH_LOG) &&
ccu/src/1.1/ccu_drv.c:			LOG_WARN("ccuk: ioctl without powered on\n");
ccu/src/1.1/ccu_drv.c:			LOG_DBG("ccuk: ioctl set powerk+\n");
ccu/src/1.1/ccu_drv.c:				LOG_ERR(
ccu/src/1.1/ccu_drv.c:			LOG_DBG("ccuk: ioctl set powerk-\n");
ccu/src/1.1/ccu_drv.c:				LOG_ERR(
ccu/src/1.1/ccu_drv.c:				LOG_ERR(
ccu/src/1.1/ccu_drv.c:				LOG_DBG("CCU_FAST_CMD_E.%d\n",
ccu/src/1.1/ccu_drv.c:				LOG_DBG("CCU_FAST_CMD_D.%d\n",
ccu/src/1.1/ccu_drv.c:				LOG_ERR(
ccu/src/1.1/ccu_drv.c:				LOG_ERR(
ccu/src/1.1/ccu_drv.c:				LOG_ERR(
ccu/src/1.1/ccu_drv.c:				LOG_ERR(
ccu/src/1.1/ccu_drv.c:					LOG_ERR("invalid type(%d)\n",
ccu/src/1.1/ccu_drv.c:				LOG_DBG("IRQ type(%d), userKey(%d), ",
ccu/src/1.1/ccu_drv.c:				LOG_DBG("timeout(%d), sttype(%d), st(%d)\n",
ccu/src/1.1/ccu_drv.c:					LOG_ERR("copy_to_user failed\n");
ccu/src/1.1/ccu_drv.c:				LOG_ERR("copy_from_user failed\n");
ccu/src/1.1/ccu_drv.c:					LOG_ERR("invalid type(%d)\n",
ccu/src/1.1/ccu_drv.c:				LOG_DBG("AFIRQ type(%d), userKey(%d), ",
ccu/src/1.1/ccu_drv.c:				LOG_DBG("timeout(%d), sttype(%d), st(%d)\n",
ccu/src/1.1/ccu_drv.c:					LOG_ERR("copy_to_user failed\n");
ccu/src/1.1/ccu_drv.c:				LOG_ERR("copy_from_user failed\n");
ccu/src/1.1/ccu_drv.c:					LOG_ERR("invalid type(%d)\n",
ccu/src/1.1/ccu_drv.c:				LOG_DBG("AFBIRQ type(%d), userKey(%d), ",
ccu/src/1.1/ccu_drv.c:				LOG_DBG("timeout(%d), sttype(%d), st(%d)\n",
ccu/src/1.1/ccu_drv.c:					LOG_ERR("copy_to_user failed\n");
ccu/src/1.1/ccu_drv.c:				LOG_ERR("copy_from_user failed\n");
ccu/src/1.1/ccu_drv.c:				LOG_ERR(
ccu/src/1.1/ccu_drv.c:	case CCU_IOCTL_FLUSH_LOG:
ccu/src/1.1/ccu_drv.c:				LOG_DBG(
ccu/src/1.1/ccu_drv.c:				LOG_ERR("invalid i2c channel: %d\n", channel);
ccu/src/1.1/ccu_drv.c:					LOG_ERR("%s 1 failed: %d\n",
ccu/src/1.1/ccu_drv.c:					LOG_ERR("%s 2 failed: %d\n",
ccu/src/1.1/ccu_drv.c:					LOG_ERR("%s 3 failed: %d\n",
ccu/src/1.1/ccu_drv.c:					LOG_ERR("%s 4 failed: %d\n",
ccu/src/1.1/ccu_drv.c:		LOG_WARN("ioctl:No such command!\n");
ccu/src/1.1/ccu_drv.c:		LOG_ERR("fail, cmd(%d), pid(%d), ",
ccu/src/1.1/ccu_drv.c:		LOG_ERR("(process, pid, tgid)=(%s, %d, %d)\n",
ccu/src/1.1/ccu_drv.c:	LOG_INF_MUST("ccu_release +");
ccu/src/1.1/ccu_drv.c:	LOG_INF_MUST("ccu_release -");
ccu/src/1.1/ccu_drv.c:	LOG_DBG("CCU_mmap: vm_pgoff(0x%lx),pfn(0x%x),phy(0x%lx), ",
ccu/src/1.1/ccu_drv.c:	LOG_DBG("vm_start(0x%lx),vm_end(0x%lx),length(0x%lx)\n",
ccu/src/1.1/ccu_drv.c:				LOG_ERR("mmap range error :module(0x%x), ",
ccu/src/1.1/ccu_drv.c:				LOG_ERR
ccu/src/1.1/ccu_drv.c:				LOG_ERR("mmap range error :module(0x%x), ",
ccu/src/1.1/ccu_drv.c:				LOG_ERR
ccu/src/1.1/ccu_drv.c:				LOG_ERR("mmap range error :module(0x%x), ",
ccu/src/1.1/ccu_drv.c:				LOG_ERR
ccu/src/1.1/ccu_drv.c:				LOG_ERR("mmap range error :module(0x%x), ",
ccu/src/1.1/ccu_drv.c:				LOG_ERR
ccu/src/1.1/ccu_drv.c:			LOG_ERR("Illegal starting HW addr for mmap!\n");
ccu/src/1.1/ccu_drv.c:			LOG_ERR("remap_pfn_range\n");
ccu/src/1.1/ccu_drv.c:		LOG_DBG("map_check_1\n");
ccu/src/1.1/ccu_drv.c:	 *	LOG_DBG("map_check_2\n");
ccu/src/1.1/ccu_drv.c:		LOG_ERR("alloc_chrdev_region failed, %d\n", ret);
ccu/src/1.1/ccu_drv.c:		LOG_ERR("cdev_alloc failed\n");
ccu/src/1.1/ccu_drv.c:		LOG_ERR("Attatch file operation failed, %d\n", ret);
ccu/src/1.1/ccu_drv.c:		LOG_ERR("of_property_read_u32_array ERR : %d\n", ret);
ccu/src/1.1/ccu_drv.c:	LOG_DBG("ccu read dt property ccu_hw_base = %x\n", ccu_hw_base);
ccu/src/1.1/ccu_drv.c:	LOG_DBG("CCU_HW_OFFSET = %x\n", CCU_HW_OFFSET);
ccu/src/1.1/ccu_drv.c:	LOG_DBG("CCU_PMEM_BASE = %x\n", CCU_PMEM_BASE);
ccu/src/1.1/ccu_drv.c:	LOG_DBG("CCU_PMEM_SIZE = %x\n", CCU_PMEM_SIZE);
ccu/src/1.1/ccu_drv.c:	LOG_DBG("CCU_DMEM_BASE = %x\n", CCU_DMEM_BASE);
ccu/src/1.1/ccu_drv.c:	LOG_DBG("CCU_DMEM_SIZE = %x\n", CCU_DMEM_SIZE);
ccu/src/1.1/ccu_drv.c:	LOG_DBG("CCU_DMEM_OFFSET = %x\n", CCU_DMEM_OFFSET);
ccu/src/1.1/ccu_drv.c:	LOG_DBG("CCU_LOG_BASE = %x\n", CCU_LOG_BASE);
ccu/src/1.1/ccu_drv.c:	LOG_DBG("CCU_LOG_SIZE = %x\n", CCU_LOG_SIZE);
ccu/src/1.1/ccu_drv.c:	LOG_DBG("CCU_HW_DUMP_SIZE = %x\n", CCU_HW_DUMP_SIZE);
ccu/src/1.1/ccu_drv.c:	LOG_DBG("CCU_CAMSYS_BASE = %x\n", CCU_CAMSYS_BASE);
ccu/src/1.1/ccu_drv.c:	LOG_DBG("CCU_CAMSYS_SIZE = %x\n", CCU_CAMSYS_SIZE);
ccu/src/1.1/ccu_drv.c:	LOG_DBG("CCU_N3D_A_BASE = %x\n", CCU_N3D_A_BASE);
ccu/src/1.1/ccu_drv.c:	LOG_DBG("CCU_N3D_A_SIZE = %x\n", CCU_N3D_A_SIZE);
ccu/src/1.1/ccu_drv.c:	LOG_DBG("CCU_SENSOR_PM_SIZE = %x\n", CCU_SENSOR_PM_SIZE);
ccu/src/1.1/ccu_drv.c:	LOG_DBG("CCU_SENSOR_DM_SIZE = %x\n", CCU_SENSOR_DM_SIZE);
ccu/src/1.1/ccu_drv.c:	LOG_DBG("probe 0, pdev id = %d name = %s\n", pdev->id, pdev->name);
ccu/src/1.1/ccu_drv.c:			LOG_INF("ccu_base pa: 0x%x, size: 0x%x\n",
ccu/src/1.1/ccu_drv.c:			LOG_INF("ccu_base va: 0x%lx\n",
ccu/src/1.1/ccu_drv.c:			LOG_INF("dmem_base pa: 0x%x, size: 0x%x\n",
ccu/src/1.1/ccu_drv.c:			LOG_INF("dmem_base va: 0x%lx\n",
ccu/src/1.1/ccu_drv.c:			LOG_INF("camsys_base pa: 0x%x, size: 0x%x\n",
ccu/src/1.1/ccu_drv.c:			LOG_INF("camsys_base va: 0x%lx\n",
ccu/src/1.1/ccu_drv.c:			LOG_INF("n3d_a_base pa: 0x%x, size: 0x%x\n",
ccu/src/1.1/ccu_drv.c:			LOG_INF("n3d_a_base va: 0x%lx\n",
ccu/src/1.1/ccu_drv.c:				LOG_ERR("Get ccu clock ctrl fail.\n");
ccu/src/1.1/ccu_drv.c:		LOG_DBG("probe 1, ccu_base: 0x%lx, bin_base: 0x%lx, ",
ccu/src/1.1/ccu_drv.c:		LOG_DBG("irq_num: %d, pdev: %p\n",
ccu/src/1.1/ccu_drv.c:				LOG_DERR(g_ccu_device->dev,
ccu/src/1.1/ccu_drv.c:			LOG_DBG("No IRQ!!: ccu_num_devs=%d, ",
ccu/src/1.1/ccu_drv.c:			LOG_DBG("devnode(%s), irq=%d\n",
ccu/src/1.1/ccu_drv.c:				LOG_DERR(g_ccu_device->dev,
ccu/src/1.1/ccu_drv.c:				LOG_ERR(
ccu/src/1.1/ccu_drv.c:				LOG_DERR(g_ccu_device->dev,
ccu/src/1.1/ccu_drv.c:		LOG_INF_MUST("ccu probe cuccess...\n");
ccu/src/1.1/ccu_drv.c:	LOG_DBG("- X. CCU driver probe.\n");
ccu/src/1.1/ccu_drv.c:	LOG_DBG("- E.");
ccu/src/1.1/ccu_drv.c:	LOG_DBG("register m4u callback");
ccu/src/1.1/ccu_drv.c:	LOG_DBG("platform_driver_register start\n");
ccu/src/1.1/ccu_drv.c:		LOG_ERR("failed to register CCU driver");
ccu/src/1.1/ccu_drv.c:	LOG_DBG("platform_driver_register finsish\n");
ccu/src/1.1/ccu_drv.c:	LOG_DBG("un-register m4u callback");
ccu/src/1.1/ccu_drv.h:struct CCU_TIME_LOG_STRUCT {
ccu/src/1.1/ccu_drv.h:	struct CCU_TIME_LOG_STRUCT TimeLog;
ccu/src/1.1/ccu_drv.h:#define MAX_LOG_BUF_NUM 2
ccu/src/1.1/ccu_drv.h:	char *va_log[MAX_LOG_BUF_NUM];	/* log buffer           */
ccu/src/1.1/ccu_drv.h:	uint32_t mva_log[MAX_LOG_BUF_NUM];
ccu/src/1.1/ccu_drv.h:	uint32_t sz_log[MAX_LOG_BUF_NUM];
ccu/src/1.1/ccu_drv.h:	int32_t fd_log[MAX_LOG_BUF_NUM];
ccu/src/1.1/ccu_drv.h:	compat_uptr_t va_log[MAX_LOG_BUF_NUM];	/* log buffer           */
ccu/src/1.1/ccu_drv.h:	uint32_t mva_log[MAX_LOG_BUF_NUM];
ccu/src/1.1/ccu_drv.h:	uint32_t sz_log[MAX_LOG_BUF_NUM];
ccu/src/1.1/ccu_drv.h:	int32_t fd_log[MAX_LOG_BUF_NUM];
ccu/src/1.1/ccu_drv.h:#define CCU_IOCTL_FLUSH_LOG                 _IOW(CCU_MAGICNO,  19, int)
ccu/src/1.1/ccu_i2c.c:	LOG_DBG("[%s] Attach I2C for HW trriger g_ccuI2cClientMain %p\n",
ccu/src/1.1/ccu_i2c.c:	LOG_DBG("[ccu_i2c_probe] Attached!!\n");
ccu/src/1.1/ccu_i2c.c:	LOG_DBG("[%s] Attach I2C for HW trriger g_ccuI2cClientMain3 %p\n",
ccu/src/1.1/ccu_i2c.c:	LOG_DBG("[ccu_i2c_probe] Attached!!\n");
ccu/src/1.1/ccu_i2c.c:	LOG_DBG("[%s] Attach I2C for HW trriger g_ccuI2cClientSub %p\n",
ccu/src/1.1/ccu_i2c.c:	LOG_DBG("[ccu_i2c_probe] Attached!!\n");
ccu/src/1.1/ccu_i2c.c:	LOG_DBG("i2c_add_driver(&ccu_i2c_main_driver)++\n");
ccu/src/1.1/ccu_i2c.c:	LOG_DBG("i2c_add_driver(&ccu_i2c_main_driver), ret: %d--\n", i2c_ret);
ccu/src/1.1/ccu_i2c.c:	LOG_DBG("i2c_add_driver(&ccu_i2c_main3_driver)++\n");
ccu/src/1.1/ccu_i2c.c:	LOG_DBG("i2c_add_driver(&ccu_i2c_main3_driver), ret: %d--\n", i2c_ret);
ccu/src/1.1/ccu_i2c.c:	LOG_DBG("i2c_add_driver(&ccu_i2c_sub_driver)++\n");
ccu/src/1.1/ccu_i2c.c:	LOG_DBG("i2c_add_driver(&ccu_i2c_sub_driver), ret: %d--\n", i2c_ret);
ccu/src/1.1/ccu_i2c.c:		LOG_DBG("i2c_buf_mode_en fail\n");
ccu/src/1.1/ccu_i2c.c:	LOG_DBG_MUST("ccu_i2c_buf_mode_init done.\n");
ccu/src/1.1/ccu_i2c.c:	LOG_DBG_MUST("i2c_buf_mode_en %d\n", enable);
ccu/src/1.1/ccu_i2c.c:	LOG_DBG("i2c_buf_mode_en, pClient: %p\n", pClient);
ccu/src/1.1/ccu_i2c.c:		LOG_ERR("i2c_client is null\n");
ccu/src/1.1/ccu_i2c.c:	LOG_DBG_MUST("ccu_i2c_enabled %d\n", ccu_i2c_enabled);
ccu/src/1.1/ccu_i2c.c:			LOG_DBG_MUST("i2c_ccu_enable done(%d).\n", ret);
ccu/src/1.1/ccu_i2c.c:			LOG_DBG_MUST("i2c_ccu_disable done(%d).\n", ret);
ccu/src/1.1/ccu_i2c.c:		LOG_ERR("ccu client is NULL");
ccu/src/1.1/ccu_i2c.c:	LOG_DBG_MUST("va(%p), pal(%d), pah(%d), id(%d)\n",
ccu/src/1.1/ccu_i2c.c:	LOG_DBG_MUST("CCU Dump I2C reg\n");
ccu/src/1.1/ccu_cmn.h:/* LOG & AEE */
ccu/src/1.1/ccu_cmn.h:#define LOG_DBG_MUST(format, args...)
ccu/src/1.1/ccu_cmn.h:#define LOG_INF_MUST(format, args...)
ccu/src/1.1/ccu_cmn.h:#define LOG_DBG(format, args...)
ccu/src/1.1/ccu_cmn.h:#define LOG_INF(format, args...)
ccu/src/1.1/ccu_cmn.h:#define LOG_WARN(format, args...)
ccu/src/1.1/ccu_cmn.h:#define LOG_ERR(format, args...)
ccu/src/1.1/ccu_cmn.h:#define LOG_DERR(device, format, args...) 
ccu/src/2.1/ccu_drv.c:	LOG_DBG("%s:0x%x\n", __func__, irq);
ccu/src/2.1/ccu_drv.c:	LOG_INF_MUST("%s+\n",
ccu/src/2.1/ccu_drv.c:	LOG_INF_MUST("%s-\n",
ccu/src/2.1/ccu_drv.c:		LOG_ERR("empty user");
ccu/src/2.1/ccu_drv.c:	LOG_DBG("+:%s\n", __func__);
ccu/src/2.1/ccu_drv.c:		LOG_ERR("timeout: pop a command! ret=%d\n", ret);
ccu/src/2.1/ccu_drv.c:		LOG_ERR("interrupted by system signal: %d\n", ret);
ccu/src/2.1/ccu_drv.c:			LOG_ERR("interrupted as -ERESTARTSYS\n");
ccu/src/2.1/ccu_drv.c:		LOG_ERR("pop a command from empty queue! ret=%d\n", ret);
ccu/src/2.1/ccu_drv.c:		LOG_ERR("delete empty user!\n");
ccu/src/2.1/ccu_drv.c:	LOG_INF_MUST("%s+\n",
ccu/src/2.1/ccu_drv.c:		LOG_ERR("fail to create user\n");
ccu/src/2.1/ccu_drv.c:	LOG_INF_MUST("%s-\n",
ccu/src/2.1/ccu_drv.c:	LOG_DBG("+, cmd: %d\n", cmd);
ccu/src/2.1/ccu_drv.c:		LOG_DBG("CCU_IOCTL_SET_POWER+\n");
ccu/src/2.1/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] struct ccu_power_s size: %zu\n",
ccu/src/2.1/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] struct ccu_working_buffer_s size: %zu\n",
ccu/src/2.1/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] arg: %p\n", (void *)arg);
ccu/src/2.1/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] long size: %zu\n", sizeof(long));
ccu/src/2.1/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] long long: %zu\n", sizeof(long long));
ccu/src/2.1/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] char *size: %zu\n", sizeof(char *));
ccu/src/2.1/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] power.workBuf.va_log[0]: %p\n",
ccu/src/2.1/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] (void *)arg: %p\n", (void *)arg);
ccu/src/2.1/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] ptr_power32: %p\n", ptr_power32);
ccu/src/2.1/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] ptr_power64: %p\n", ptr_power64);
ccu/src/2.1/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] *ptr_power32 size: %zu\n",
ccu/src/2.1/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] *ptr_power64 size: %zu\n",
ccu/src/2.1/ccu_drv.c:		for (i = 0; i < MAX_LOG_BUF_NUM; i++) {
ccu/src/2.1/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] err: %d\n", err);
ccu/src/2.1/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] ptr_power32->workBuf.va_pool: %x\n",
ccu/src/2.1/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] ptr_power64->workBuf.va_pool: %p\n",
ccu/src/2.1/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] ptr_power32->workBuf.va_log: %x\n",
ccu/src/2.1/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] ptr_power64->workBuf.va_log: %p\n",
ccu/src/2.1/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] ptr_power32->workBuf.mva_log: %x\n",
ccu/src/2.1/ccu_drv.c:		LOG_DBG("[IOCTL_DBG] ptr_power64->workBuf.mva_log: %x\n",
ccu/src/2.1/ccu_drv.c:		LOG_DBG("CCU_IOCTL_SET_POWER-");
ccu/src/2.1/ccu_drv.c:		LOG_ERR("fail, cmd(%d), pid(%d), (process, pid, tgid)=(%s, %d, %d)\n",
ccu/src/2.1/ccu_drv.c:		LOG_ERR("%s(), node=0x%p\n", __func__, cmd);
ccu/src/2.1/ccu_drv.c:	LOG_DBG_MUST("%s, 3 clks.\n", __func__);
ccu/src/2.1/ccu_drv.c:		LOG_ERR("clock enable fail.\n");
ccu/src/2.1/ccu_drv.c:	LOG_DBG_MUST("%s.\n", __func__);
ccu/src/2.1/ccu_drv.c:	LOG_DBG("%s+, cmd:%d\n", __func__, cmd);
ccu/src/2.1/ccu_drv.c:	if ((cmd != CCU_IOCTL_SET_POWER) && (cmd != CCU_IOCTL_FLUSH_LOG)
ccu/src/2.1/ccu_drv.c:			LOG_WARN("ccuk: ioctl(%d) without powered on\n", cmd);
ccu/src/2.1/ccu_drv.c:		LOG_DBG("ccuk: ioctl set powerk+\n");
ccu/src/2.1/ccu_drv.c:		LOG_DBG("ccuk: ioctl set powerk-\n");
ccu/src/2.1/ccu_drv.c:				LOG_ERR("invalid type(%d)\n", IrqInfo.Type);
ccu/src/2.1/ccu_drv.c:			LOG_DBG("IRQ type(%d), userKey(%d), timeout(%d), sttype(%d), st(%d)\n",
ccu/src/2.1/ccu_drv.c:				LOG_ERR("copy_to_user failed\n");
ccu/src/2.1/ccu_drv.c:			LOG_ERR("copy_from_user failed\n");
ccu/src/2.1/ccu_drv.c:				LOG_ERR("invalid type(%d)\n", IrqInfo.Type);
ccu/src/2.1/ccu_drv.c:			LOG_DBG("AFIRQ type(%d), userKey(%d), timeout(%d), sttype(%d), st(%d)\n",
ccu/src/2.1/ccu_drv.c:				LOG_DBG_MUST(
ccu/src/2.1/ccu_drv.c:				LOG_ERR("copy_to_user failed\n");
ccu/src/2.1/ccu_drv.c:			LOG_ERR("copy_from_user failed\n");
ccu/src/2.1/ccu_drv.c:	case CCU_IOCTL_FLUSH_LOG: {
ccu/src/2.1/ccu_drv.c:		LOG_DBG_MUST("request freq level: %d\n", freq_level);
ccu/src/2.1/ccu_drv.c:		LOG_DBG_MUST("current freq: %d\n",
ccu/src/2.1/ccu_drv.c:			LOG_ERR("CCU_IOCTL_GET_I2C_DMA_BUF_ADDR copy_from_user fail: %d\n",
ccu/src/2.1/ccu_drv.c:			LOG_ERR("ccu_get_i2c_dma_buf_addr fail: %d\n", ret);
ccu/src/2.1/ccu_drv.c:			LOG_DBG("ccu_i2c_controller_init fail\n");
ccu/src/2.1/ccu_drv.c:				LOG_ERR("copy_to_user failed: %d\n", ret);
ccu/src/2.1/ccu_drv.c:			LOG_ERR("CCU_IOCTL_IMPORT_MEM copy_to_user failed: %d\n", ret);
ccu/src/2.1/ccu_drv.c:				LOG_INF_MUST("imported buffer count: %d\n", i);
ccu/src/2.1/ccu_drv.c:				LOG_ERR("CCU ccu_ion_import_handle failed: %d\n", ret);
ccu/src/2.1/ccu_drv.c:		LOG_WARN("ioctl:No such command!\n");
ccu/src/2.1/ccu_drv.c:		LOG_ERR(
ccu/src/2.1/ccu_drv.c:	LOG_INF_MUST("%s +", __func__);
ccu/src/2.1/ccu_drv.c:			LOG_INF_MUST("freed buffer count: %d\n", i);
ccu/src/2.1/ccu_drv.c:	LOG_INF_MUST("%s -", __func__);
ccu/src/2.1/ccu_drv.c:	LOG_DBG
ccu/src/2.1/ccu_drv.c:			LOG_ERR
ccu/src/2.1/ccu_drv.c:			LOG_ERR
ccu/src/2.1/ccu_drv.c:			LOG_ERR
ccu/src/2.1/ccu_drv.c:			LOG_ERR
ccu/src/2.1/ccu_drv.c:		LOG_ERR("Illegal starting HW addr for mmap!\n");
ccu/src/2.1/ccu_drv.c:		LOG_ERR("remap_pfn_range\n");
ccu/src/2.1/ccu_drv.c:	LOG_DBG("map_check_1\n");
ccu/src/2.1/ccu_drv.c:	 *	LOG_DBG("map_check_2\n");
ccu/src/2.1/ccu_drv.c:		LOG_ERR("alloc_chrdev_region failed, %d\n", ret);
ccu/src/2.1/ccu_drv.c:		LOG_ERR("cdev_alloc failed\n");
ccu/src/2.1/ccu_drv.c:		LOG_ERR("Attatch file operation failed, %d\n", ret);
ccu/src/2.1/ccu_drv.c:		LOG_ERR("of_property_read_u32_array ERR : %d\n", ret);
ccu/src/2.1/ccu_drv.c:	LOG_DBG("ccu read dt property ccu_hw_base = %x\n", ccu_hw_base);
ccu/src/2.1/ccu_drv.c:	LOG_DBG("probe 0, pdev id = %d name = %s\n", pdev->id,
ccu/src/2.1/ccu_drv.c:			LOG_INF("ccu_base pa: 0x%x, size: 0x%x\n", phy_addr, phy_size);
ccu/src/2.1/ccu_drv.c:			LOG_INF("ccu_base va: 0x%lx\n", g_ccu_device->ccu_base);
ccu/src/2.1/ccu_drv.c:			LOG_INF("dmem_base pa: 0x%x, size: 0x%x\n", phy_addr, phy_size);
ccu/src/2.1/ccu_drv.c:			LOG_INF("dmem_base va: 0x%lx\n", g_ccu_device->dmem_base);
ccu/src/2.1/ccu_drv.c:			LOG_INF("camsys_base pa: 0x%x, size: 0x%x\n", phy_addr,
ccu/src/2.1/ccu_drv.c:			LOG_INF("camsys_base va: 0x%lx\n", g_ccu_device->camsys_base);
ccu/src/2.1/ccu_drv.c:			LOG_INF("n3d_a_base pa: 0x%x, size: 0x%x\n", phy_addr, phy_size);
ccu/src/2.1/ccu_drv.c:			LOG_INF("n3d_a_base va: 0x%lx\n", g_ccu_device->n3d_a_base);
ccu/src/2.1/ccu_drv.c:			LOG_ERR("Get ccu clock ctrl camsys fail.\n");
ccu/src/2.1/ccu_drv.c:			LOG_ERR("Get ccu clock ctrl mmsys fail.\n");
ccu/src/2.1/ccu_drv.c:			LOG_ERR("Get ccu clock ctrl mmsys fail.\n");
ccu/src/2.1/ccu_drv.c:		LOG_DBG("probe 1, ccu_base: 0x%lx, bin_base: 0x%lx, irq_num: %d, pdev: %p\n",
ccu/src/2.1/ccu_drv.c:				LOG_DERR(g_ccu_device->dev, "get irq flags from DTS fail!\n");
ccu/src/2.1/ccu_drv.c:			LOG_DBG("No IRQ!!: ccu_num_devs=%d, devnode(%s), irq=%d\n",
ccu/src/2.1/ccu_drv.c:				LOG_DERR(g_ccu_device->dev, "register char failed");
ccu/src/2.1/ccu_drv.c:				LOG_ERR("Unable to create class, err = %d\n", ret);
ccu/src/2.1/ccu_drv.c:				LOG_DERR(g_ccu_device->dev,
ccu/src/2.1/ccu_drv.c:				LOG_DERR(g_ccu_device->dev, "dma_set_mask return error.");
ccu/src/2.1/ccu_drv.c:				LOG_DERR(g_ccu_device->dev, "dma_alloc_coherent fail\n");
ccu/src/2.1/ccu_drv.c:		LOG_INF_MUST("ccu probe cuccess...\n");
ccu/src/2.1/ccu_drv.c:	LOG_DBG("- X. CCU driver probe.\n");
ccu/src/2.1/ccu_drv.c:	LOG_DBG("- E.");
ccu/src/2.1/ccu_drv.c:	LOG_DBG("platform_driver_register start\n");
ccu/src/2.1/ccu_drv.c:		LOG_ERR("failed to register CCU driver");
ccu/src/2.1/ccu_drv.c:	LOG_DBG("platform_driver_register finsish\n");
ccu/src/2.1/ccu_drv.c:		LOG_ERR("get MMDVFS freq steps failed, result: %d\n", result);
ccu/src/2.1/ccu_drv.h:struct CCU_TIME_LOG_STRUCT {
ccu/src/2.1/ccu_drv.h:	struct CCU_TIME_LOG_STRUCT TimeLog;
ccu/src/2.1/ccu_drv.h:#define MAX_LOG_BUF_NUM 2
ccu/src/2.1/ccu_drv.h:	char *va_log[MAX_LOG_BUF_NUM];	/* log buffer           */
ccu/src/2.1/ccu_drv.h:	uint32_t mva_log[MAX_LOG_BUF_NUM];
ccu/src/2.1/ccu_drv.h:	uint32_t sz_log[MAX_LOG_BUF_NUM];
ccu/src/2.1/ccu_drv.h:	int32_t fd_log[MAX_LOG_BUF_NUM];
ccu/src/2.1/ccu_drv.h:	compat_uptr_t va_log[MAX_LOG_BUF_NUM];	/* log buffer           */
ccu/src/2.1/ccu_drv.h:	uint32_t mva_log[MAX_LOG_BUF_NUM];
ccu/src/2.1/ccu_drv.h:	uint32_t sz_log[MAX_LOG_BUF_NUM];
ccu/src/2.1/ccu_drv.h:	int32_t fd_log[MAX_LOG_BUF_NUM];
ccu/src/2.1/ccu_drv.h:#define CCU_IOCTL_FLUSH_LOG                 _IOW(CCU_MAGICNO,  19, int)
ccu/src/2.1/ccu_i2c.c:	LOG_DBG_MUST(
ccu/src/2.1/ccu_i2c.c:	LOG_DBG_MUST("[ccu_i2c_probe] Attached!!\n");
ccu/src/2.1/ccu_i2c.c:	LOG_DBG_MUST(
ccu/src/2.1/ccu_i2c.c:	LOG_DBG_MUST("[ccu_i2c_probe] Attached!!\n");
ccu/src/2.1/ccu_i2c.c:	LOG_DBG_MUST(
ccu/src/2.1/ccu_i2c.c:	LOG_DBG_MUST("[ccu_i2c_probe] Attached!!\n");
ccu/src/2.1/ccu_i2c.c:	LOG_DBG_MUST(
ccu/src/2.1/ccu_i2c.c:	LOG_DBG_MUST("[ccu_i2c_probe] Attached!!\n");
ccu/src/2.1/ccu_i2c.c:	LOG_DBG_MUST("i2c_add_driver(&ccu_i2c_2_driver)++\n");
ccu/src/2.1/ccu_i2c.c:	LOG_DBG_MUST("i2c_add_driver(&ccu_i2c_2_driver), ret: %d--\n",
ccu/src/2.1/ccu_i2c.c:	LOG_DBG_MUST("i2c_add_driver(&ccu_i2c_4_driver)++\n");
ccu/src/2.1/ccu_i2c.c:	LOG_DBG_MUST("i2c_add_driver(&ccu_i2c_4_driver), ret: %d--\n",
ccu/src/2.1/ccu_i2c.c:	LOG_DBG_MUST("i2c_add_driver(&ccu_i2c_6_driver)++\n");
ccu/src/2.1/ccu_i2c.c:	LOG_DBG_MUST("i2c_add_driver(&ccu_i2c_6_driver), ret: %d--\n",
ccu/src/2.1/ccu_i2c.c:	LOG_DBG_MUST("i2c_add_driver(&ccu_i2c_7_driver)++\n");
ccu/src/2.1/ccu_i2c.c:	LOG_DBG_MUST("i2c_add_driver(&ccu_i2c_7_driver), ret: %d--\n",
ccu/src/2.1/ccu_i2c.c:		LOG_DBG_MUST("reinit, temporily release mutex.\n");
ccu/src/2.1/ccu_i2c.c:		LOG_DBG("ccu_i2c_controller_en 1 fail\n");
ccu/src/2.1/ccu_i2c.c:	LOG_DBG_MUST("%s done.\n", __func__);
ccu/src/2.1/ccu_i2c.c:	LOG_INF_MUST("%s done.\n", __func__);
ccu/src/2.1/ccu_i2c.c:	LOG_INF_MUST("%s done.\n", __func__);
ccu/src/2.1/ccu_i2c.c:		LOG_INF_MUST(
ccu/src/2.1/ccu_i2c.c:			LOG_INF_MUST("I2C controller[%d] CCU client is null\n", i);
ccu/src/2.1/ccu_i2c.c:		LOG_ERR("ccu client is NULL");
ccu/src/2.1/ccu_i2c.c:		LOG_ERR("ccu device is NULL");
ccu/src/2.1/ccu_i2c.c:			LOG_ERR("ccu alloc mva fail");
ccu/src/2.1/ccu_i2c.c:	LOG_DBG_MUST("$$pa(%lld), mva(%x), i2c-id(%d)\n",
ccu/src/2.1/ccu_i2c.c:	LOG_INF_MUST("%s, id(%d):(%d)->(%d)\n",
ccu/src/2.1/ccu_i2c.c:	LOG_DBG("%s, pClient: %p\n", __func__, pClient);
ccu/src/2.1/ccu_i2c.c:		LOG_ERR("i2c_client is null\n");
ccu/src/2.1/ccu_i2c.c:			LOG_INF_MUST("i2c_ccu_enable done.\n");
ccu/src/2.1/ccu_i2c.c:			LOG_INF_MUST("i2c_ccu_disable done.\n");
ccu/src/2.1/ccu_i2c.c:		LOG_DBG("ccu_i2c_controller_en 0 fail\n");
ccu/src/2.1/ccu_i2c.c:	LOG_DBG_MUST("%s done: id(%d)\n", __func__, i2c_id);
ccu/src/2.1/ccu_cmn.h:/* LOG & AEE */
ccu/src/2.1/ccu_cmn.h:#define LOG_DBG_MUST(format, args...) 
ccu/src/2.1/ccu_cmn.h:#define LOG_INF_MUST(format, args...) 
ccu/src/2.1/ccu_cmn.h:#define LOG_DBG(format, args...)
ccu/src/2.1/ccu_cmn.h:#define LOG_INF(format, args...)
ccu/src/2.1/ccu_cmn.h:#define LOG_WARN(format, args...) 
ccu/src/2.1/ccu_cmn.h:#define LOG_ERR(format, args...)
ccu/src/2.1/ccu_cmn.h:#define LOG_DERR(device, format, args...)
ccu/src/mt6765/ccu_kd_mailbox.c:	LOG_DBG("ccu_mailbox addr: %p\n", _ccu_mailbox);
ccu/src/mt6765/ccu_kd_mailbox.c:	LOG_DBG("apmcu_mailbox addr: %p\n", _apmcu_mailbox);
ccu/src/mt6765/ccu_kd_mailbox.c:	LOG_DBG("memclr _ccu_mailbox: %d\n",
ccu/src/mt6765/ccu_kd_mailbox.c:	LOG_DBG("memclr _apmcu_mailbox: %d\n",
ccu/src/mt6765/ccu_kd_mailbox.c:	LOG_DBG("sending cmd: f(%d), r(%d), cmd(%d), in(%x), out(%x)\n",
ccu/src/mt6765/ccu_kd_mailbox.c:		LOG_DBG("%s: f(%d), r(%d), cmd(%d), in(%x), out(%x)\n",
ccu/src/mt6765/ccu_kd_mailbox.c:		LOG_DBG("apmcu mailbox is empty\n");
ccu/src/mt6765/ccu_kd_mailbox.c:		LOG_DBG("ccu mailbox queue full !!\n");
ccu/src/mt6765/ccu_kd_mailbox.c:		LOG_DBG("copy cmd to mailbox slot: %d\n", nextWriteSlot);
ccu/src/mt6765/ccu_kd_mailbox.c:		LOG_DBG("target mailbox slot address: %p\n",
ccu/src/mt6765/ccu_kd_mailbox.c:		LOG_DBG("incming cmd: cmd(%d), in(%x), out(%x)\n",
ccu/src/mt6765/ccu_kd_mailbox.c:		LOG_DBG("writing target: slot(%d), cmd(%d), in(%x), out(%x)\n",
ccu/src/mt6765/ccu_kd_mailbox.c:		LOG_DBG("wrote target: slot(%d), cmd(%d), in(%x), out(%x)\n",
ccu/src/mt6765/ccu_hw.h:#define CCU_DATA_REG_LOG_BUF0                CCU_INFO02
ccu/src/mt6765/ccu_hw.h:#define CCU_DATA_REG_LOG_BUF1                CCU_INFO03
ccu/src/mt6765/ccu_platform_def.h:#define CCU_LOG_BASE  (0x500)
ccu/src/mt6765/ccu_platform_def.h:#define CCU_LOG_SIZE  (0x400)
ccu/src/mt6765/ccu_ext_interface/ccu_ext_interface.h:		MSG_TO_APMCU_FLUSH_LOG,/*31*/
ccu/src/mt6765/ccu_sw_ver.c:		LOG_ERR("have a wrong software version:%x!\n",
ccu/src/mt6765/ccu_hw.c:		LOG_ERR("disp_ion_alloc 1error %p\n", disp_handle);
ccu/src/mt6765/ccu_hw.c:	LOG_DBG("disp_ion_alloc 1 %p\n", disp_handle);
ccu/src/mt6765/ccu_hw.c:		LOG_ERR("disp_ion_get_mva: config buffer failed.%p -%p\n",
ccu/src/mt6765/ccu_hw.c:	LOG_DBG_MUST("alloc mmu addr hnd=0x%p,mva=0x%08x\n",
ccu/src/mt6765/ccu_hw.c:		LOG_ERR("invalid ion client!\n");
ccu/src/mt6765/ccu_hw.c:		LOG_DBG_MUST("client mismatch, skip free: %p, %p!\n",
ccu/src/mt6765/ccu_hw.c:	LOG_DBG("free ion handle 0x%p\n", handle);
ccu/src/mt6765/ccu_hw.c:	LOG_DBG("X-:%s\n", __func__);
ccu/src/mt6765/ccu_hw.c:	LOG_DBG("X-:%s\n", __func__);
ccu/src/mt6765/ccu_hw.c:		LOG_ERR("invalid ion client!\n");
ccu/src/mt6765/ccu_hw.c:	LOG_DBG("create ion client 0x%p\n", ccu_ion_client);
ccu/src/mt6765/ccu_hw.c:		LOG_ERR("fail to config m4u port!\n");
ccu/src/mt6765/ccu_hw.c:		LOG_ERR("Fatal Error, ion_alloc for size %d failed\n", 4096);
ccu/src/mt6765/ccu_hw.c:		LOG_ERR("ccu ion_get_mva failed\n");
ccu/src/mt6765/ccu_hw.c:		LOG_DBG("no isr_sp_task: %x\n", sp_task);
ccu/src/mt6765/ccu_hw.c:	LOG_DBG("+++:%s\n", __func__);
ccu/src/mt6765/ccu_hw.c:	LOG_DBG("write clear mode\n");
ccu/src/mt6765/ccu_hw.c:	LOG_DBG("read clear mode\n");
ccu/src/mt6765/ccu_hw.c:			LOG_DBG("MAIL_BOX IS EMPTY");
ccu/src/mt6765/ccu_hw.c:		LOG_DBG("receivedCcuCmd.msg_id : 0x%x\n",
ccu/src/mt6765/ccu_hw.c:		case MSG_TO_APMCU_FLUSH_LOG:
ccu/src/mt6765/ccu_hw.c:				LOG_DBG
ccu/src/mt6765/ccu_hw.c:					 "MSG_TO_APMCU_FLUSH_LOG",
ccu/src/mt6765/ccu_hw.c:				LOG_DBG("wakeup ccuInfo.WaitQueueHead done\n");
ccu/src/mt6765/ccu_hw.c:				LOG_ERR
ccu/src/mt6765/ccu_hw.c:				LOG_ERR
ccu/src/mt6765/ccu_hw.c:				LOG_ERR("wakeup ccuInfo.WaitQueueHead done\n");
ccu/src/mt6765/ccu_hw.c:				LOG_ERR
ccu/src/mt6765/ccu_hw.c:				LOG_ERR
ccu/src/mt6765/ccu_hw.c:				LOG_ERR("wakeup ccuInfo.WaitQueueHead done\n");
ccu/src/mt6765/ccu_hw.c:				LOG_DBG("got msgId: %d, cmd_wait\n",
ccu/src/mt6765/ccu_hw.c:	LOG_DBG("---:%s\n", __func__);
ccu/src/mt6765/ccu_hw.c:	LOG_DBG("%s +:fast command %d\n",
ccu/src/mt6765/ccu_hw.c:	LOG_DBG("%s -:fast command %d\n",
ccu/src/mt6765/ccu_hw.c:		LOG_DBG("%s +:fast command deq ok. %d\n",
ccu/src/mt6765/ccu_hw.c:		LOG_DBG("%s +:fast command deq none.\n",
ccu/src/mt6765/ccu_hw.c:		LOG_DBG("+:%s\n", __func__);
ccu/src/mt6765/ccu_hw.c:		LOG_DBG("wait for ccu_dev->cmd_wait\n");
ccu/src/mt6765/ccu_hw.c:				LOG_DBG("awake & condition pass\n");
ccu/src/mt6765/ccu_hw.c:			LOG_DBG("awake for ccu_dev->cmd_wait\n");
ccu/src/mt6765/ccu_hw.c:			LOG_DBG("%s +:new command\n", __func__);
ccu/src/mt6765/ccu_hw.c:			LOG_DBG("list_empty(%d)\n",
ccu/src/mt6765/ccu_hw.c:			LOG_DBG("wake_up user->deque_wait done\n");
ccu/src/mt6765/ccu_hw.c:			LOG_DBG("%s -:new command\n", __func__);
ccu/src/mt6765/ccu_hw.c:	LOG_DBG("-:%s\n", __func__);
ccu/src/mt6765/ccu_hw.c:	LOG_DBG("(0x%llx),(0x%llx),(0x%llx)\n",
ccu/src/mt6765/ccu_hw.c:		LOG_ERR("fail to request ccu irq!\n");
ccu/src/mt6765/ccu_hw.c:	LOG_DBG("create ccu_enque_cmd_loop\n");
ccu/src/mt6765/ccu_hw.c:	LOG_DBG_MUST("got i2c buf pa: %d, %d\n", *pa_l, *pa_h);
ccu/src/mt6765/ccu_hw.c:	LOG_DBG("+:%s\n", __func__);
ccu/src/mt6765/ccu_hw.c:	LOG_DBG("call ccu to do enque buffers\n");
ccu/src/mt6765/ccu_hw.c:	LOG_DBG("send command: id(%d), in(%x), out(%x)\n",
ccu/src/mt6765/ccu_hw.c:	LOG_DBG("wait ack command...\n");
ccu/src/mt6765/ccu_hw.c:		LOG_ERR("timeout to wait ack command: %d\n", pCmd->task.msg_id);
ccu/src/mt6765/ccu_hw.c:		LOG_ERR("interrupted by system signal: %d/%d\n",
ccu/src/mt6765/ccu_hw.c:			LOG_ERR("interrupted as -ERESTARTSYS\n");
ccu/src/mt6765/ccu_hw.c:	LOG_DBG("got ack command: id(%d), in(%x), out(%x)\n",
ccu/src/mt6765/ccu_hw.c:	LOG_DBG("-:%s\n", __func__);
ccu/src/mt6765/ccu_hw.c:	LOG_DBG_MUST("ccu catch current fps :%d\n", current_fps);
ccu/src/mt6765/ccu_hw.c:	LOG_DBG("+:%s,(0x%llx)(0x%llx)\n", __func__, ccu_base, camsys_base);
ccu/src/mt6765/ccu_hw.c:	LOG_DBG("power->bON: %d\n", power->bON);
ccu/src/mt6765/ccu_hw.c:		LOG_DBG("reset wrote\n");
ccu/src/mt6765/ccu_hw.c:		LOG_DBG("CG released\n");
ccu/src/mt6765/ccu_hw.c:		ccu_write_reg(ccu_base, CCU_DATA_REG_LOG_BUF0,
ccu/src/mt6765/ccu_hw.c:		ccu_write_reg(ccu_base, CCU_DATA_REG_LOG_BUF1,
ccu/src/mt6765/ccu_hw.c:		LOG_DBG("LogBuf_mva[0](0x%x)\n", power->workBuf.mva_log[0]);
ccu/src/mt6765/ccu_hw.c:		LOG_DBG("LogBuf_mva[1](0x%x)\n", power->workBuf.mva_log[1]);
ccu/src/mt6765/ccu_hw.c:		LOG_DBG("reset wrote\n");
ccu/src/mt6765/ccu_hw.c:		ccu_write_reg(ccu_base, CCU_DATA_REG_LOG_BUF0,
ccu/src/mt6765/ccu_hw.c:		ccu_write_reg(ccu_base, CCU_DATA_REG_LOG_BUF1,
ccu/src/mt6765/ccu_hw.c:		LOG_DBG("LogBuf_mva[0](0x%x)\n", power->workBuf.mva_log[0]);
ccu/src/mt6765/ccu_hw.c:		LOG_DBG("LogBuf_mva[1](0x%x)\n", power->workBuf.mva_log[1]);
ccu/src/mt6765/ccu_hw.c:			LOG_DBG("wait ccu halt done\n");
ccu/src/mt6765/ccu_hw.c:			LOG_DBG("ccu halt stat: %x\n",
ccu/src/mt6765/ccu_hw.c:			LOG_ERR("ccu_pause timeout\n");
ccu/src/mt6765/ccu_hw.c:	LOG_DBG("-:%s\n", __func__);
ccu/src/mt6765/ccu_hw.c:		LOG_WARN("CCU kernel drv released on CCU running, %s\n",
ccu/src/mt6765/ccu_hw.c:		LOG_WARN("CCU force shutdown success\n");
ccu/src/mt6765/ccu_hw.c:		LOG_INF_MUST("ccu reset is up, skip halt checking.\n");
ccu/src/mt6765/ccu_hw.c:			LOG_DBG("wait ccu shutdown done\n");
ccu/src/mt6765/ccu_hw.c:			LOG_DBG("ccu shutdown stat: %x\n",
ccu/src/mt6765/ccu_hw.c:		LOG_ERR("_ccu_powerdown check over.\n");
ccu/src/mt6765/ccu_hw.c:			LOG_ERR("_ccu_powerdown timeout, do DMA reset\n");
ccu/src/mt6765/ccu_hw.c:			LOG_ERR("polling DMA SW reset\n");
ccu/src/mt6765/ccu_hw.c:				LOG_ERR("polling RDMA SW reset timeout\n");
ccu/src/mt6765/ccu_hw.c:				LOG_ERR("polling WDMA SW reset timeout\n");
ccu/src/mt6765/ccu_hw.c:			LOG_ERR("polling DMA SW reset done\n");
ccu/src/mt6765/ccu_hw.c:			LOG_ERR("_ccu_powerdown timeout, DMA reset done\n");
ccu/src/mt6765/ccu_hw.c:	LOG_DBG("+:%s\n", __func__);
ccu/src/mt6765/ccu_hw.c:	/*LOG_DBG("cache flushed 2\n");*/
ccu/src/mt6765/ccu_hw.c:	LOG_DBG("released CCU reset, wait for initial done, %x\n",
ccu/src/mt6765/ccu_hw.c:	LOG_DBG("CCU reset: %x\n", ccu_read_reg(ccu_base, RESET));
ccu/src/mt6765/ccu_hw.c:		LOG_DBG("wait ccu initial done\n");
ccu/src/mt6765/ccu_hw.c:		LOG_DBG("ccu initial stat: %x\n",
ccu/src/mt6765/ccu_hw.c:		LOG_ERR("CCU init timeout\n");
ccu/src/mt6765/ccu_hw.c:		LOG_ERR("ccu initial debug info: %x\n",
ccu/src/mt6765/ccu_hw.c:		LOG_ERR("ccu initial debug info23: %x\n",
ccu/src/mt6765/ccu_hw.c:		LOG_ERR("ccu initial debug info22: %x\n",
ccu/src/mt6765/ccu_hw.c:	LOG_DBG("ccu initial done\n");
ccu/src/mt6765/ccu_hw.c:	LOG_DBG("ccu initial stat: %x\n",
ccu/src/mt6765/ccu_hw.c:	LOG_DBG("ccu initial debug info: %x\n",
ccu/src/mt6765/ccu_hw.c:	LOG_DBG("ccu initial debug info00: %x\n",
ccu/src/mt6765/ccu_hw.c:	LOG_DBG("ccu initial debug info01: %x\n",
ccu/src/mt6765/ccu_hw.c:		LOG_DBG("wait ccu 2nd initial done\n");
ccu/src/mt6765/ccu_hw.c:		LOG_ERR("CCU init timeout 2\n");
ccu/src/mt6765/ccu_hw.c:		LOG_ERR("ccu initial debug info: %x\n",
ccu/src/mt6765/ccu_hw.c:	LOG_DBG("ccu log test done\n");
ccu/src/mt6765/ccu_hw.c:	LOG_DBG("ccu log test stat: %x\n",
ccu/src/mt6765/ccu_hw.c:	LOG_DBG("ccu log test debug info: %x\n",
ccu/src/mt6765/ccu_hw.c:	LOG_DBG("-:%s\n", __func__);
ccu/src/mt6765/ccu_hw.c:	LOG_DBG("Clear(%d),bWaitCond(%d),Timeout(%d)\n",
ccu/src/mt6765/ccu_hw.c:	LOG_DBG("arg is struct CCU_WAIT_IRQ_STRUCT, size:%zu\n",
ccu/src/mt6765/ccu_hw.c:		LOG_DBG("+:wait_event_interruptible_timeout\n");
ccu/src/mt6765/ccu_hw.c:		LOG_DBG("-:wait_event_interruptible_timeout\n");
ccu/src/mt6765/ccu_hw.c:		LOG_DBG("+:ccu wait_event_interruptible\n");
ccu/src/mt6765/ccu_hw.c:		LOG_DBG("unlock ApTaskMutex\n");
ccu/src/mt6765/ccu_hw.c:		LOG_DBG("accuiring ApTaskMutex\n");
ccu/src/mt6765/ccu_hw.c:		LOG_DBG("got ApTaskMutex\n");
ccu/src/mt6765/ccu_hw.c:		/*LOG_DBG("ccuInfo.taskCount is not zero: %d\n",*/
ccu/src/mt6765/ccu_hw.c:		LOG_DBG("-:ccu wait_event_interruptible\n");
ccu/src/mt6765/ccu_hw.c:		LOG_DBG("remain timeout:%ld, task: %d\n", Timeout, g_LogBufIdx);
ccu/src/mt6765/ccu_hw.c:	LOG_DBG("bWaitCond(%d)\n", bWaitCond);
ccu/src/mt6765/ccu_hw.c:	LOG_DBG("bWaitCond(%d)\n", bWaitCond);
ccu/src/mt6765/ccu_hw.c:	LOG_DBG("+:%s\n", __func__);
ccu/src/mt6765/ccu_hw.c:		LOG_DBG("ccu_i2c_buf_mode_init fail\n");
ccu/src/mt6765/ccu_hw.c:	LOG_DBG("-:%s\n", __func__);
ccu/src/mt6765/ccu_hw.c:		LOG_ERR("Invalid regNo : %d\n", regNo);
ccu/src/mt6765/ccu_hw.c:	LOG_DBG("ccu_read_info_reg: %x\n", (unsigned int)(*offset));
ccu/src/mt6765/ccu_hw.c:		LOG_ERR("No sensor been detected.\n");
ccu/src/mt6765/ccu_hw.c:		LOG_DBG_MUST("ccu catch sensor %d i2c slave address : 0x%x\n",
ccu/src/mt6765/ccu_hw.c:		LOG_DBG_MUST("ccu catch sensor %d name : %s\n",
ccu/src/mt6765/ccu_hw.c:		LOG_DBG_MUST("ccu catch sensor %d i2c_id : %d\n",
ccu/src/mt6765/ccu_hw.c:		LOG_DBG_MUST("ccu catch sensor i2c slave address fail!\n");
ccu/src/mt6765/ccu_hw.c:		LOG_DBG_MUST("ccu kernel 32 bits, return 0\n");
ccu/src/mt6765/ccu_hw.c:		LOG_DBG_MUST("ccu kernel 64 bits\n");
pmic/mt6357/v1/pmic_common.c:	PMIC_ENTRY(PMIC_RG_FGANALOGTEST),
pmic/mt6357/v1/pmic_api.c:		(PMIC_RG_FGANALOGTEST_MASK),
pmic/mt6357/v1/pmic_api.c:		(PMIC_RG_FGANALOGTEST_SHIFT)
pmic/mt6357/v1/pmic_api.c:		(MT6357_AFE_ADDA_MTKAIF_FIFO_LOG_MON1),
pmic/mt6357/v1/pmic_api.c:		(MT6357_AFE_ADDA_MTKAIF_FIFO_LOG_MON1),
pmic/mt6357/v1/pmic_initial_setting.c:		PMICLOG("[PMIC_KERNEL] %s ON\n", __func__);
pmic/mt6357/v1/pmic_initial_setting.c:		PMICLOG("[PMIC_KERNEL] %s OFF\n", __func__);
pmic/mt6357/v1/pmic_initial_setting.c:	PMICLOG("[PMIC_KERNEL] MT6357 PowerHold = 0x%x\n"
pmic/mt6357/v1/pmic_initial_setting.c:		PMICLOG("[PMIC_LP_INIT_SETTING_v1_1705] Chip Ver = %d\n"
pmic/mt6357/v1/pmic_initial_setting.c:	PMICLOG("[PMIC_LP_INIT_SETTING_v1] Chip Ver = %d\n"
pmic/mt6357/v1/pmic_initial_setting.c:	PMICLOG("[PMIC_LP_INIT_SETTING_v1] Chip Ver = %d mrv=%d\n"
pmic/mt6357/v1/pmic_debugfs.c:	gPMICDbgLvl = Dlevel > PMIC_LOG_DBG ? PMIC_LOG_DBG : Dlevel;
pmic/mt6357/v1/pmic_debugfs.c:	gPMICHKDbgLvl = HKlevel > PMIC_LOG_DBG ? PMIC_LOG_DBG : HKlevel;
pmic/mt6357/v1/pmic_debugfs.c:	gPMICCOMDbgLvl = COMlevel > PMIC_LOG_DBG ? PMIC_LOG_DBG : COMlevel;
pmic/mt6357/v1/pmic_debugfs.c:	gPMICIRQDbgLvl = IRQlevel > PMIC_LOG_DBG ? PMIC_LOG_DBG : IRQlevel;
pmic/mt6357/v1/pmic_debugfs.c:	gPMICREGDbgLvl = REGlevel > PMIC_LOG_DBG ? PMIC_LOG_DBG : REGlevel;
pmic/mt6357/v1/pmic_debugfs.c:	PMICLOG("dump PMIC register\n");
pmic/mt6357/v1/pmic_debugfs.c:		PMICLOG(
pmic/mt6357/v1/pmic_debugfs.c:	PMICLOG(PMICTAG "[pmic_boot_status] JUST_PWRKEY_RST=0x%x\n",
pmic/mt6357/v1/pmic.c:	PMICLOG("%s\n", __func__);
pmic/mt6357/v1/pmic.c:	PMICLOG("Enable VSRAM_VCORE hw tracking\n");
pmic/mt6357/v1/pmic.c:	PMICLOG("VSRAM_VCORE hw tracking not support in MT6357\n");
pmic/mt6357/v1/pmic.c:	PMICLOG("[%s] CHRDET status = %d\n", __func__, val);
pmic/mt6357/v1/pmic_auxadc.c:	HKLOG("[%s]\n", __func__);
pmic/mt6357/v1/pmic_auxadc.c:		HKLOG("[%s] creation Done\n", __func__);
pmic/mt6357/v1/pmic_auxadc.c:	HKLOG("%s\n", __func__);
pmic/mt6357/v1/pmic_lp_api.c:	PMICLOG("0x%x,type %d\n", en_cfg_adr, user);
pmic/mt6357/v1/pmic_lp_api.c:		PMICLOG("user = %d, op en = %d\n", user, rb_en);
pmic/mt6357/v1/pmic_lp_api.c:			PMICLOG("user = %d, op cfg = %d\n", user, rb_cfg);
pmic/mt6357/v1/pmic_lp_api.c:	PMICLOG("%s\n", __func__);
pmic/mt6357/v1/pmic_lp_api.c:	PMICLOG("%s\n", __func__);
pmic/mt6357/v1/pmic_lp_api.c:	PMICLOG("%s\n", __func__);
pmic/mt6357/v1/pmic_lp_api.c:	PMICLOG("%s\n", __func__);
pmic/mt6357/v1/pmic_lp_api.c:	PMICLOG("%s\n", __func__);
pmic/mt6357/v1/pmic_lp_api.c:	PMICLOG("%s\n", __func__);
pmic/mt6357/v1/pmic_lp_api.c:	PMICLOG("%s\n", __func__);
pmic/mt6357/v1/pmic_lp_api.c:	PMICLOG("%s\n", __func__);
pmic/mt6357/v1/pmic_lp_api.c:	PMICLOG("%s\n", __func__);
pmic/mt6357/v1/pmic_lp_api.c:	PMICLOG("%s\n", __func__);
pmic/mt6357/v1/pmic_lp_api.c:	PMICLOG("%s\n", __func__);
pmic/mt6357/v1/pmic_lp_api.c:	PMICLOG("%s\n", __func__);
pmic/mt6357/v1/pmic_lp_api.c:	PMICLOG("%s\n", __func__);
pmic/mt6357/v1/pmic_lp_api.c:	PMICLOG("%s\n", __func__);
pmic/mt6357/v1/pmic_lp_api.c:	PMICLOG("%s\n", __func__);
pmic/mt6357/v1/pmic_lp_api.c:	PMICLOG("%s\n", __func__);
pmic/mt6357/v1/pmic_lp_api.c:	PMICLOG("%s\n", __func__);
pmic/mt6357/v1/pmic_lp_api.c:	PMICLOG("%s\n", __func__);
pmic/mt6357/v1/pmic_lp_api.c:	PMICLOG("%s\n", __func__);
pmic/mt6357/v1/pmic_lp_api.c:	PMICLOG("%s\n", __func__);
pmic/mt6357/v1/pmic_lp_api.c:	PMICLOG("%s\n", __func__);
pmic/mt6357/v1/pmic_lp_api.c:	PMICLOG("%s\n", __func__);
pmic/mt6357/v1/pmic_lp_api.c:	PMICLOG("%s\n", __func__);
pmic/mt6357/v1/pmic_lp_api.c:	PMICLOG("%s\n", __func__);
pmic/mt6357/v1/pmic_lp_api.c:	PMICLOG("%s\n", __func__);
pmic/mt6357/v1/pmic_lp_api.c:	PMICLOG("%s\n", __func__);
pmic/mt6357/v1/pmic_lp_api.c:	PMICLOG("%s\n", __func__);
pmic/mt6357/v1/pmic_lp_api.c:	PMICLOG("%s\n", __func__);
pmic/mt6357/v1/pmic_lp_api.c:	PMICLOG("%s\n", __func__);
pmic/mt6357/v1/pmic_lp_api.c:	PMICLOG("%s\n", __func__);
pmic/mt6357/v1/pmic_lp_api.c:	PMICLOG("%s\n", __func__);
pmic/mt6357/v1/pmic_lp_api.c:	PMICLOG("%s\n", __func__);
pmic/mt6357/v1/pmic_throttling_dlpt.c:	PMICLOG("[%s] start\n", __func__);
pmic/mt6357/v1/pmic_throttling_dlpt.c:		PMICLOG("[%s] not start\n", __func__);
pmic/mt6357/v1/pmic_throttling_dlpt.c:	PMICLOG("[%s]g_low_battery_level=%d, ret=%d\n", __func__,
pmic/mt6357/v1/pmic_throttling_dlpt.c:	PMICLOG("[%s] start\n", __func__);
pmic/mt6357/v1/pmic_throttling_dlpt.c:	PMICLOG("[%s]\n", __func__);
pmic/mt6357/v1/pmic_throttling_dlpt.c:	PMICLOG("Reg[0x%x]=0x%x, Reg[0x%x]=0x%x, Reg[0x%x]=0x%x\n",
pmic/mt6357/v1/pmic_throttling_dlpt.c:	PMICLOG("[%s]\n", __func__);
pmic/mt6357/v1/pmic_throttling_dlpt.c:	PMICLOG("Reg[0x%x]=0x%x, Reg[0x%x]=0x%x, Reg[0x%x]=0x%x\n",
pmic/mt6357/v1/pmic_throttling_dlpt.c:	PMICLOG("[%s] start\n", __func__);
pmic/mt6357/v1/pmic_throttling_dlpt.c:		PMICLOG("bat_per_level=%d,bat_per_val=%d\n"
pmic/mt6357/v1/pmic_throttling_dlpt.c:	PMICLOG("%s is called\n", __func__);
pmic/mt6357/v1/pmic_throttling_dlpt.c:		/*PMICLOG("[enable dummy load]\n"); */
pmic/mt6357/v1/pmic_throttling_dlpt.c:		/*PMICLOG("[disable dummy load]\n"); */
pmic/mt6357/v1/pmic_throttling_dlpt.c:	PMICLOG("[%s] start\n", __func__);
pmic/mt6357/v1/pmic_throttling_dlpt.c:				PMICLOG("[%s] g_dlpt_val=%d\n",
pmic/mt6357/v1/pmic_throttling_dlpt.c:		PMICLOG("[%s:%d] %d,%d,%d,%d\n", __func__,
pmic/mt6357/v1/pmic_throttling_dlpt.c:	PMICLOG("[dlpt] %s %d %d %d %d\n", __func__,
pmic/mt6357/v1/pmic_throttling_dlpt.c:			PMICLOG("[DLPT] g_low_per_timer=%d\n", g_low_per_timer);
pmic/mt6357/v1/pmic_throttling_dlpt.c:			PMICLOG("[DLPT] g_low_per_timeout_val%d\n",
pmic/mt6357/v1/pmic_throttling_dlpt.c:		PMICLOG("[%s] %d %d %d %d %d\n", __func__,
pmic/mt6357/v1/pmic_throttling_dlpt.c:		PMICLOG("[DLPT] is running\n");
pmic/mt6357/v1/pmic_throttling_dlpt.c:	PMICLOG("%s is called\n", __func__);
pmic/mt6357/v1/pmic_throttling_dlpt.c:	PMICLOG("[%s] g_low_battery_level=%d\n", __func__, g_low_battery_level);
pmic/mt6357/v1/pmic_throttling_dlpt.c:	PMICLOG("[%s] g_low_battery_stop=%d\n", __func__, g_low_battery_stop);
pmic/mt6357/v1/pmic_throttling_dlpt.c:	PMICLOG("[%s] g_low_battery_level=%d\n",
pmic/mt6357/v1/pmic_throttling_dlpt.c:	PMICLOG("[%s] g_low_battery_level=%d\n",
pmic/mt6357/v1/pmic_throttling_dlpt.c:	PMICLOG("[%s] g_battery_oc_level=%d\n",
pmic/mt6357/v1/pmic_throttling_dlpt.c:	PMICLOG("[%s] g_battery_oc_stop=%d\n"
pmic/mt6357/v1/pmic_throttling_dlpt.c:	PMICLOG("[%s] g_battery_oc_level=%d\n",
pmic/mt6357/v1/pmic_throttling_dlpt.c:	PMICLOG("[%s] g_battery_oc_level=%d\n",
pmic/mt6357/v1/pmic_throttling_dlpt.c:	PMICLOG("[%s] g_battery_oc_level = %d\n",
pmic/mt6357/v1/pmic_throttling_dlpt.c:	PMICLOG("[%s] g_battery_percent_level=%d\n"
pmic/mt6357/v1/pmic_throttling_dlpt.c:	PMICLOG("[%s] g_battery_percent_stop=%d\n"
pmic/mt6357/v1/pmic_throttling_dlpt.c:	PMICLOG("[%s] g_battery_percent_level=%d\n"
pmic/mt6357/v1/pmic_throttling_dlpt.c:	PMICLOG("[%s] g_battery_percent_level=%d\n"
pmic/mt6357/v1/pmic_throttling_dlpt.c:	PMICLOG("[%s] g_dlpt_val=%d\n", __func__, g_dlpt_val);
pmic/mt6357/v1/pmic_throttling_dlpt.c:	PMICLOG("[%s] g_dlpt_stop=%d\n", __func__, g_dlpt_stop);
pmic/mt6357/v1/pmic_throttling_dlpt.c:	PMICLOG("[%s] g_dlpt_val=%d\n", __func__, g_dlpt_val);
pmic/mt6357/v1/pmic_throttling_dlpt.c:	PMICLOG("[%s] g_dlpt_val=%d\n", __func__, g_dlpt_val);
pmic/mt6357/v1/pmic_throttling_dlpt.c:	PMICLOG("Reg[0x%x]=0x%x, Reg[0x%x]=0x%x, Reg[0x%x]=0x%x\n",
pmic/mt6357/v1/pmic_throttling_dlpt.c:	PMICLOG("Reg[0x%x]=0x%x, Reg[0x%x]=0x%x, Reg[0x%x]=0x%x\n"
pmic/mt6357/v1/pmic_throttling_dlpt.c:		PMICLOG("Get car_tune_value from DT: %d\n"
pmic/mt6357/v1/pmic_throttling_dlpt.c:		PMICLOG("Get car_tune_value from cust header\n");
pmic/mt6357/v1/pmic_throttling_dlpt.c:	PMICLOG("register_low_battery_notify:done\n");
pmic/mt6357/v1/pmic_throttling_dlpt.c:	PMICLOG("register_battery_oc_notify:done\n");
pmic/mt6357/v1/pmic_throttling_dlpt.c:	PMICLOG("register_battery_percent_notify:done\n");
pmic/mt6357/v1/pmic_throttling_dlpt.c:	PMICLOG("******** MT pmic driver probe!! ********%d\n"
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vfe28 enable\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vfe28 don't have en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vfe28 disable\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("%s should not be disable. (use_count=0).\n"
pmic/mt6357/v1/regulator_codegen.c:			RGLTRLOG("ldo vfe28 don't have enable callback\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vfe28 is_enabled\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vfe28 don't have da_en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("buck vs1 enable\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("buck vs1 don't have en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("buck vs1 disable\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("%s should not be disable. (use_count=0).\n"
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("buck vs1 don't be disabled\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("buck vs1 is_enabled\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("buck vs1 don't have da_en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("buck vs1 set_voltage_sel: %d\n", selector);
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("buck vs1 don't have vol_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("buck vs1 get_voltage_sel\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("buck vs1 don't have da_vol_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vxo22 enable\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vxo22 don't have en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vxo22 disable\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("%s should not be disable. (use_count=0).\n"
pmic/mt6357/v1/regulator_codegen.c:			RGLTRLOG("ldo vxo22 don't have enable callback\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vxo22 is_enabled\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vxo22 don't have da_en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vxo22 set_voltage_sel: %d\n", selector);
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vxo22 don't have vol_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vxo22 get_voltage_sel\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vxo22 don't have da_vol_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vxo22 list_voltage: %d\n", voltage);
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vrf18 enable\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vrf18 don't have en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vrf18 disable\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("%s should not be disable. (use_count=0).\n"
pmic/mt6357/v1/regulator_codegen.c:			RGLTRLOG("ldo vrf18 don't have enable callback\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vrf18 is_enabled\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vrf18 don't have da_en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vrf12 enable\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vrf12 don't have en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vrf12 disable\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("%s should not be disable. (use_count=0).\n"
pmic/mt6357/v1/regulator_codegen.c:			RGLTRLOG("ldo vrf12 don't have enable callback\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vrf12 is_enabled\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vrf12 don't have da_en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vefuse don't have en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("%s should not be disable. (use_count=0).\n"
pmic/mt6357/v1/regulator_codegen.c:			RGLTRLOG("ldo vefuse don't have enable callback\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vefuse is_enabled\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vefuse don't have da_en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vefuse set_voltage_sel: %d\n", selector);
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vefuse don't have vol_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vefuse get_voltage_sel\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vefuse don't have da_vol_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vefuse list_voltage: %d\n", voltage);
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vcn33_bt don't have en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("%s should not be disable. (use_count=0).\n"
pmic/mt6357/v1/regulator_codegen.c:			RGLTRLOG("ldo vcn33_bt don't have enable callback\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vcn33_bt is_enabled\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vcn33_bt don't have da_en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vcn33_bt set_voltage_sel: %d\n", selector);
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vcn33_bt don't have vol_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vcn33_bt get_voltage_sel\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vcn33_bt don't have da_vol_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vcn33_bt list_voltage: %d\n", voltage);
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vcn33_wifi enable\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vcn33_wifi don't have en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vcn33_wifi disable\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("%s should not be disable. (use_count=0).\n"
pmic/mt6357/v1/regulator_codegen.c:			RGLTRLOG("ldo vcn33_wifi don't have enable callback\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vcn33_wifi is_enabled\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vcn33_wifi don't have da_en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vcn33_wifi set_voltage_sel: %d\n", selector);
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vcn33_wifi don't have vol_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vcn33_wifi get_voltage_sel\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vcn33_wifi don't have da_vol_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vcn33_wifi list_voltage: %d\n", voltage);
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vcn28 enable\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vcn28 don't have en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vcn28 disable\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("%s should not be disable. (use_count=0).\n"
pmic/mt6357/v1/regulator_codegen.c:			RGLTRLOG("ldo vcn28 don't have enable callback\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vcn28 is_enabled\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vcn28 don't have da_en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vcn18 don't have en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("%s should not be disable. (use_count=0).\n"
pmic/mt6357/v1/regulator_codegen.c:			RGLTRLOG("ldo vcn18 don't have enable callback\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vcn18 is_enabled\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vcn18 don't have da_en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vcama don't have en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("%s should not be disable. (use_count=0).\n"
pmic/mt6357/v1/regulator_codegen.c:			RGLTRLOG("ldo vcama don't have enable callback\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vcama is_enabled\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vcama don't have da_en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vcama set_voltage_sel: %d\n", selector);
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vcama don't have vol_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vcama get_voltage_sel\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vcama don't have da_vol_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vcama list_voltage: %d\n", voltage);
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vcamd don't have en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("%s should not be disable. (use_count=0).\n"
pmic/mt6357/v1/regulator_codegen.c:			RGLTRLOG("ldo vcamd don't have enable callback\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vcamd is_enabled\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vcamd don't have da_en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vcamd set_voltage_sel: %d\n", selector);
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vcamd don't have vol_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vcamd get_voltage_sel\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vcamd don't have da_vol_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vcamd list_voltage: %d\n", voltage);
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("buck vmodem enable\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("buck vmodem don't have en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("buck vmodem disable\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("%s should not be disable. (use_count=0).\n"
pmic/mt6357/v1/regulator_codegen.c:			RGLTRLOG("buck vmodem don't have enable callback\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("buck vmodem is_enabled\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("buck vmodem don't have da_en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("buck vmodem set_voltage_sel: %d\n", selector);
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("buck vmodem don't have vol_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("buck vmodem get_voltage_sel\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("buck vmodem don't have da_vol_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("buck vcore enable\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("buck vcore don't have en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("buck vcore disable\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("%s should not be disable. (use_count=0).\n"
pmic/mt6357/v1/regulator_codegen.c:			RGLTRLOG("buck vcore don't have enable callback\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("buck vcore is_enabled\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("buck vcore don't have da_en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("buck vcore set_voltage_sel: %d\n", selector);
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("buck vcore don't have vol_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("buck vcore get_voltage_sel\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("buck vcore don't have da_vol_cb\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vcamio don't have en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("%s should not be disable. (use_count=0).\n"
pmic/mt6357/v1/regulator_codegen.c:			RGLTRLOG("ldo vcamio don't have enable callback\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vcamio is_enabled\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vcamio don't have da_en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vldo28 don't have en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vldo28 disable\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("%s should not be disable. (use_count=0).\n"
pmic/mt6357/v1/regulator_codegen.c:			RGLTRLOG("ldo vldo28 don't have enable callback\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vldo28 is_enabled\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vldo28 don't have da_en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vldo28 set_voltage_sel: %d\n", selector);
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vldo28 don't have vol_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vldo28 get_voltage_sel\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vldo28 don't have da_vol_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vldo28 list_voltage: %d\n", voltage);
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vsram_others enable\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vsram_others don't have en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vsram_others disable\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("%s should not be disable. (use_count=0).\n"
pmic/mt6357/v1/regulator_codegen.c:			RGLTRLOG("ldo vsram_others don't have en callback\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vsram_others is_enabled\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vsram_others don't have da_en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vsram_others set_voltage_sel: %d\n", selector);
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vsram_others don't have vol_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vsram_others get_voltage_sel\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vsram_others don't have da_vol_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("buck vproc enable\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("buck vproc don't have en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("buck vproc disable\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("%s should not be disable. (use_count=0).\n"
pmic/mt6357/v1/regulator_codegen.c:			RGLTRLOG("buck vproc don't have enable callback\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("buck vproc is_enabled\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("buck vproc don't have da_en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("buck vproc set_voltage_sel: %d\n", selector);
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("buck vproc don't have vol_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("buck vproc get_voltage_sel\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("buck vproc don't have da_vol_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vsram_proc enable\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vsram_proc don't have en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vsram_proc disable\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("%s should not be disable. (use_count=0).\n"
pmic/mt6357/v1/regulator_codegen.c:			RGLTRLOG("ldo vsram_proc don't have enable callback\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vsram_proc is_enabled\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vsram_proc don't have da_en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vsram_proc set_voltage_sel: %d\n", selector);
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vsram_proc don't have vol_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vsram_proc get_voltage_sel\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vsram_proc don't have da_vol_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vaux18 enable\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vaux18 don't have en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vaux18 disable\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("%s should not be disable. (use_count=0).\n"
pmic/mt6357/v1/regulator_codegen.c:			RGLTRLOG("ldo vaux18 don't have enable callback\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vaux18 is_enabled\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vaux18 don't have da_en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("buck vpa enable\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("buck vpa don't have en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("buck vpa disable\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("%s should not be disable. (use_count=0).\n"
pmic/mt6357/v1/regulator_codegen.c:			RGLTRLOG("buck vpa don't have enable callback\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("buck vpa is_enabled\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("buck vpa don't have da_en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("buck vpa set_voltage_sel: %d\n", selector);
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("buck vpa don't have vol_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("buck vpa get_voltage_sel\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("buck vpa don't have da_vol_cb\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vaud28 don't have en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("%s should not be disable. (use_count=0).\n"
pmic/mt6357/v1/regulator_codegen.c:			RGLTRLOG("ldo vaud28 don't have enable callback\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vaud28 is_enabled\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vaud28 don't have da_en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vio28 enable\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vio28 don't have en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vio28 disable\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("%s should not be disable. (use_count=0).\n"
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vio28 don't be disabled\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vio28 is_enabled\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vio28 don't have da_en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vio18 enable\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vio18 don't have en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vio18 disable\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("%s should not be disable. (use_count=0).\n"
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vio18 don't be disabled\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vio18 is_enabled\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vio18 don't have da_en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vdram enable\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vdram don't have en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vdram disable\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("%s should not be disable. (use_count=0).\n"
pmic/mt6357/v1/regulator_codegen.c:			RGLTRLOG("ldo vdram don't have enable callback\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vdram is_enabled\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vdram don't have da_en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vdram set_voltage_sel: %d\n", selector);
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vdram don't have vol_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vdram get_voltage_sel\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vdram don't have da_vol_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vdram list_voltage: %d\n", voltage);
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vmc don't have en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("%s should not be disable. (use_count=0).\n"
pmic/mt6357/v1/regulator_codegen.c:			RGLTRLOG("ldo vmc don't have enable callback\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vmc is_enabled\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vmc don't have da_en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vmc set_voltage_sel: %d\n", selector);
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vmc don't have vol_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vmc get_voltage_sel\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vmc don't have da_vol_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vmc list_voltage: %d\n", voltage);
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vmch don't have en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("%s should not be disable. (use_count=0).\n"
pmic/mt6357/v1/regulator_codegen.c:			RGLTRLOG("ldo vmch don't have enable callback\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vmch is_enabled\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vmch don't have da_en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vmch set_voltage_sel: %d\n", selector);
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vmch don't have vol_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vmch get_voltage_sel\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vmch don't have da_vol_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vmch list_voltage: %d\n", voltage);
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vemc don't have en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("%s should not be disable. (use_count=0).\n"
pmic/mt6357/v1/regulator_codegen.c:			RGLTRLOG("ldo vemc don't have enable callback\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vemc is_enabled\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vemc don't have da_en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vemc set_voltage_sel: %d\n", selector);
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vemc don't have vol_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vemc get_voltage_sel\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vemc don't have da_vol_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vemc list_voltage: %d\n", voltage);
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vsim1 don't have en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("%s should not be disable. (use_count=0).\n"
pmic/mt6357/v1/regulator_codegen.c:			RGLTRLOG("ldo vsim1 don't have enable callback\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vsim1 is_enabled\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vsim1 don't have da_en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vsim1 set_voltage_sel: %d\n", selector);
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vsim1 don't have vol_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vsim1 get_voltage_sel\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vsim1 don't have da_vol_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vsim1 list_voltage: %d\n", voltage);
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vsim2 don't have en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("%s should not be disable. (use_count=0).\n"
pmic/mt6357/v1/regulator_codegen.c:			RGLTRLOG("ldo vsim2 don't have enable callback\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vsim2 is_enabled\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vsim2 don't have da_en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vsim2 set_voltage_sel: %d\n", selector);
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vsim2 don't have vol_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vsim2 get_voltage_sel\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vsim2 don't have da_vol_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vsim2 list_voltage: %d\n", voltage);
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vibr don't have en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("%s should not be disable. (use_count=0).\n"
pmic/mt6357/v1/regulator_codegen.c:			RGLTRLOG("ldo vibr don't have enable callback\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vibr is_enabled\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vibr don't have da_en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vibr set_voltage_sel: %d\n", selector);
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vibr don't have vol_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vibr get_voltage_sel\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vibr don't have da_vol_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vibr list_voltage: %d\n", voltage);
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vusb33 enable\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vusb33 don't have en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vusb33 disable\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("%s should not be disable. (use_count=0).\n"
pmic/mt6357/v1/regulator_codegen.c:			RGLTRLOG("ldo vusb33 don't have enable callback\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vusb33 is_enabled\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vusb33 don't have da_en_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vusb33 set_voltage_sel: %d\n", selector);
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vusb33 don't have vol_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vusb33 get_voltage_sel\n");
pmic/mt6357/v1/regulator_codegen.c:		RGLTRLOG("ldo vusb33 don't have da_vol_cb\n");
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("ldo vusb33 list_voltage: %d\n", voltage);
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("[EM] %s_STATUS : %d\n", mreg->desc.name, ret_value);
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("[EM] Not Support Write Function\n");
pmic/mt6357/v1/regulator_codegen.c:			RGLTRLOG("[EM] %s_VOLTAGE have no da_vol_cb\n"
pmic/mt6357/v1/regulator_codegen.c:			RGLTRLOG("[EM] %s_VOLTAGE have no pVolatges\n"
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("[EM] %s_VOLTAGE : %d\n", mreg->desc.name, ret_value);
pmic/mt6357/v1/regulator_codegen.c:	RGLTRLOG("[EM] Not Support Write Function\n");
pmic/mt6357/v1/pmic_irq.c:	IRQLOG("[%s] Press pwrkey %d\n", __func__,
pmic/mt6357/v1/pmic_irq.c:	IRQLOG("[%s] Release pwrkey %d\n", __func__,
pmic/mt6357/v1/pmic_irq.c:	IRQLOG("[%s] Press homekey %d\n", __func__,
pmic/mt6357/v1/pmic_irq.c:	IRQLOG("[%s] Release homekey %d\n", __func__,
pmic/mt6357/v1/pmic_irq.c:	IRQLOG("[%s]CHRDET status = %d\n", __func__,
pmic/mt6357/v1/pmic_irq.c:			IRQLOG("[%s] Unplug Charger/USB\n", __func__);
pmic/mt6357/v1/pmic_irq.c:	IRQLOG("[%s] int name=%s\n", __func__, int_name);
pmic/mt6357/v1/pmic_irq.c:	IRQLOG("[%s]\n", __func__);
pmic/mt6357/v1/pmic_irq.c:	IRQLOG("[%s] disable PMIC irq\n", __func__);
pmic/mt6357/v1/pmic_irq.c:	IRQLOG("[%s] intNo=%d en=%d str=%s spNo=%d sp_conNo=%d sp_irqNo=%d\n"
pmic/mt6357/v1/pmic_irq.c:	IRQLOG("[%s] Reg[0x%x]=0x%x\n"
pmic/mt6357/v1/pmic_irq.c:	IRQLOG("[%s] after, Reg[0x%x]=0x%x\n", __func__,
pmic/mt6357/v1/pmic_irq.c:	IRQLOG("[%s] intNo=%d str=%s spNo=%d sp_conNo=%d sp_irqNo=%d\n"
pmic/mt6357/v1/pmic_irq.c:	IRQLOG("[%s] Reg[0x%x]=0x%x\n"
pmic/mt6357/v1/pmic_irq.c:	IRQLOG("[%s] after, Reg[0x%x]=0x%x\n", __func__,
pmic/mt6357/v1/pmic_irq.c:	IRQLOG("[%s] intNo=%d str=%s spNo=%d sp_conNo=%d sp_irqNo=%d\n"
pmic/mt6357/v1/pmic_irq.c:	IRQLOG("[%s] Reg[0x%x]=0x%x\n"
pmic/mt6357/v1/pmic_irq.c:	IRQLOG("[%s] after, Reg[0x%x]=0x%x\n", __func__,
pmic/mt6357/v1/pmic_irq.c:	IRQLOG("[%s] intNo=%d\n", __func__, intNo);
pmic/mt6357/v1/pmic_irq.c:	IRQLOG("[%s] intNo=%d\n", __func__, intNo);
pmic/mt6357/v1/pmic_irq.c:			IRQLOG("[PMIC_INT] non-enabled OC: %d\n", oc_int);
pmic/mt6357/v1/pmic_irq.c:			IRQLOG("[PMIC_INT] OC:%d enabled after power on\n"
pmic/mt6357/v1/pmic_irq.c:			IRQLOG("[PMIC_INT][%s]\n", sp_irq->name);
pmic/mt6357/v1/pmic_irq.c:	IRQLOG("[PMIC_INT] enter\n");
pmic/mt6357/v1/pmic_irq.c:		IRQLOG("[PMIC_INT] pwrap_eint_status=0x%x\n"
pmic/mt6357/v1/pmic_irq.c:				IRQLOG("[PMIC_INT] after, Reg[0x%x]=0x%x\n",
pmic/mt6357/v1/pmic_irq.c:		IRQLOG("[pmic_thread] kthread_create Done\n");
pmic/mt6357/v1/pmic_irq.c:	IRQLOG("[CUST_EINT] CUST_EINT_MT_PMIC_MT6357_NUM=%d\n"
pmic/mt6357/v1/pmic_irq.c:	IRQLOG("[CUST_EINT] CUST_EINT_PMIC_DEBOUNCE_CN=%d\n"
pmic/mt6357/v1/pmic_irq.c:	IRQLOG("[CUST_EINT] CUST_EINT_PMIC_TYPE=%d\n"
pmic/mt6357/v1/pmic_irq.c:	IRQLOG("[CUST_EINT] CUST_EINT_PMIC_DEBOUNCE_EN=%d\n"
pmic/common/upmu_debugfs.c:	seq_puts(s, "4:PMIC_LOG_DBG\n");
pmic/common/upmu_debugfs.c:	seq_puts(s, "3:PMIC_LOG_INFO\n");
pmic/common/upmu_debugfs.c:	seq_puts(s, "2:PMIC_LOG_NOT\n");
pmic/common/upmu_debugfs.c:	seq_puts(s, "1:PMIC_LOG_WARN\n");
pmic/common/upmu_debugfs.c:	seq_puts(s, "0:PMIC_LOG_ERR\n");
pmic/common/upmu_debugfs.c:	PMICLOG("%s debugfs done\n", __func__);
pmic/common/upmu_debugfs.c:	PMICLOG("%s dev attr done\n", __func__);
pmic/common/upmu_initial_setting.c:	PMICLOG("[PMIC] Chip = 0x%x,is_battery_remove =%d, is_wdt_reboot=%d\n"
pmic/common/upmu.c:	PMICLOG("[pmic_read_interface] (0x%x,0x%x,0x%x,0x%x)\n",
pmic/common/upmu.c:	PMICLOG("[pmic_read_interface] Can not access HW PMIC(FPGA?/PWRAP?)\n");
pmic/common/upmu.c:	PMICLOG("[pmic_config_interface] (0x%x,0x%x,0x%x,0x%x,0x%x)\n",
pmic/common/upmu.c:		PMICLOG("[%s]IPIMB write data =(0x%x,0x%x,0x%x,%d)\n"
pmic/common/upmu.c:	PMICLOG("[%s] Can not access HW PMIC(FPGA?/PWRAP?)\n", __func__);
pmic/common/upmu.c:		PMICLOG("[%s] Get_IS_EXT_BUCK_EXIST:%d\n"
pmic/common/upmu.c:		PMICLOG("[%s] Get_IS_EXT_VBAT_BOOST_EXIST:%d\n"
pmic/common/upmu.c:		PMICLOG("[%s] Get_IS_EXT_SWCHR_EXIST:%d\n"
pmic/common/upmu.c:		PMICLOG("[%s] Get_IS_EXT_BUCK2_EXIST:%d\n"
pmic/common/upmu.c:		PMICLOG("[%s] Get_IS_EXT_BUCK3_EXIST:%d\n"
pmic/common/upmu.c:		PMICLOG("[%s] Error ID\n", __func__);
pmic/common/upmu.c:		PMICLOG("[%s] Error ID\n", __func__);
pmic/common/upmu.c:		PMICLOG("[%s] Error: Can't Get Major number for pmic_ftm\n"
pmic/common/upmu.c:		PMICLOG("[%s] Error: cdev_add\n", __func__);
pmic/common/upmu.c:	PMICLOG("[%s] Done\n", __func__);
pmic/common/upmu.c:	PMICLOG("******** MT pmic driver probe!! ********\n");
pmic/common/upmu.c:	PMICLOG("PMIC CID = 0x%x\n", pmic_get_register_value(PMIC_SWCID));
pmic/common/upmu.c:	PMICLOG("[PMIC_INIT_SETTING_V1] Done\n");
pmic/common/upmu.c:	PMICLOG("[PMIC_EINT_SETTING] Done\n");
pmic/common/upmu.c:	PMICLOG("[PMIC] mtk_regulator_init : done.\n");
pmic/common/upmu.c:	PMICLOG("[PMIC] pmic_throttling_dlpt_init : done.\n");
pmic/common/upmu.c:	PMICLOG("[PMIC] pmic_debug_init : done.\n");
pmic/common/upmu.c:	PMICLOG("******** MT pmic driver remove!! ********\n");
pmic/common/upmu.c:	PMICLOG("******** MT pmic driver shutdown!! ********\n");
pmic/common/upmu.c:	PMICLOG("******** MT pmic driver suspend!! ********\n");
pmic/common/upmu.c:	PMICLOG("******** MT pmic driver resume!! ********\n");
pmic/common/upmu.c:	PMICLOG("pmic_regulator_init_OF\n");
pmic/common/mt635x-auxadc.c:		PMICLOG("name:%s, channel=%d, adc_out=0x%x, adc_result=%d\n",
pmic/common/upmu_regulator.c:	/*PMICLOG("[EM] Not Support Write Function\n");*/
pmic/common/upmu_regulator.c:		PMICLOG("[PMIC]%s regulators node not found\n", __func__);
pmic/common/upmu_regulator.c:				PMICLOG("[PMIC]%s regulator_matches %s\n"
pmic/common/upmu_regulator.c:				PMICLOG("[PMIC]%s regulator_skip %s\n"
pmic/common/upmu_regulator.c:				PMICLOG("[PMIC]%s default is off\n"
pmic/common/upmu_regulator.c:				PMICLOG("[PMIC]%s default is on\n"
pmic/common/upmu_regulator.c:	PMICLOG("[PMIC]%s done\n", __func__);
pmic/common/upmu_regulator.c:			PMICLOG("[regulator_register] pass %s\n"
pmic/common/upmu_regulator.c:			PMICLOG("[regulator_register] pass %s\n"
pmic/common/upmu_regulator.c:			PMICLOG("[regulator] %s is default on\n"
pmic/common/upmu_regulator.c:			PMICLOG("[regulator_register] pass %s\n"
pmic/common/upmu_regulator.c:			PMICLOG("[regulator_register] pass %s\n"
pmic/common/upmu_regulator.c:			PMICLOG("[regulator] %s is default on\n"
pmic/common/upmu_regulator.c:		PMICLOG("****failed to register PM notifier %d\n", ret);
pmic/common/upmu_regulator.c:		/*PMICLOG("[PMIC] register buck id=%d\n",i);*/
pmic/common/upmu_regulator.c:			PMICLOG("[PMIC] register ldo en_att\n");
pmic/common/upmu_regulator.c:			PMICLOG("[PMIC] register ldo voltage_att\n");
pmic/common/upmu_regulator.c:		/*PMICLOG("[PMIC] register ldo id=%d\n",i);*/
pmic/common/upmu_regulator.c:			PMICLOG("[PMIC] register ldo en_att\n");
pmic/common/upmu_regulator.c:			PMICLOG("[PMIC] register ldo voltage_att\n");
pmic/common/upmu_regulator.c:	PMICLOG("proc_create pmic_debug_proc_fops\n");
pmic/include/mt6357/mtk_pmic_info.h:#define PMIC_LOG_DBG     4
pmic/include/mt6357/mtk_pmic_info.h:#define PMIC_LOG_INFO    3
pmic/include/mt6357/mtk_pmic_info.h:#define PMIC_LOG_NOT     2
pmic/include/mt6357/mtk_pmic_info.h:#define PMIC_LOG_WARN    1
pmic/include/mt6357/mtk_pmic_info.h:#define PMIC_LOG_ERR     0
pmic/include/mt6357/mtk_pmic_info.h:#define PMICLOG(fmt, arg...)
pmic/include/mt6357/mtk_pmic_info.h:#define HKLOG(fmt, arg...)
pmic/include/mt6357/mtk_pmic_info.h:#define COMLOG(fmt, arg...)
pmic/include/mt6357/mtk_pmic_info.h:#define IRQLOG(fmt, arg...)
pmic/include/mt6357/mtk_pmic_info.h:#define RGLTRLOG(fmt, arg...)
pmic/include/pmic_debugfs.h:#define PMIC_LOG_DBG     4
pmic/include/pmic_debugfs.h:#define PMIC_LOG_INFO    3
pmic/include/pmic_debugfs.h:#define PMIC_LOG_NOT     2
pmic/include/pmic_debugfs.h:#define PMIC_LOG_WARN    1
pmic/include/pmic_debugfs.h:#define PMIC_LOG_ERR     0
pmic/extbuck/mt6311-i2c.h:#define MT6311LOG(fmt, arg...)
pmic/extbuck/mt6311-i2c.h:#define MT6311LOG(...) do { }
pmic/extbuck/mt6311_api.c:	MT6311LOG("[%s]\n", __func__);
pmic/extbuck/mt6311_api.c:	MT6311LOG("[%s]\n", __func__);
pmic/extbuck/mt6311-i2c.c:	MT6311LOG("MT6311 probe\n"); /*mt6311_probe*/
pmic/extbuck/mt6311-i2c.c:		MT6311LOG("MT6311 regulator init fail\n");
pmic/extbuck/mt6311-i2c.c:	MT6311LOG("MT6311 probe done\n"); /*mt6311_probe --OK!!--*/
pmic/extbuck/mt6311-i2c.c:	MT6311LOG("******** %s!! ********\n", __func__);
pmic/extbuck/mt6311-i2c.c:	MT6311LOG("MT6311 i2c driver probe done\n");
pmic/extbuck/mt6311-i2c.c:		MT6311LOG("MT6311 user space driver probe done\n");
pmic/extbuck/mt6311-i2c.c:		MT6311LOG("MT6311 not exist!, user space driver not probe\n");
pmic/extbuck/mt6311-regulator.c:	MT6311LOG("[%s] (%s) selector = %d\n"
pmic/extbuck/mt6311-regulator.c:	MT6311LOG("[%s] (%s) Vout = %d\n"
pmic/extbuck/mt6311-regulator.c:	MT6311LOG("[%s] (%s) ret = %d\n", __func__, mreg_desc->rdesc.name, ret);
pmic/extbuck/mt6311-regulator.c:	MT6311LOG("[%s] (%s) selector = %d\n"
pmic/extbuck/mt6311-regulator.c:	MT6311LOG("[%s] enable (%s)\n", __func__, mreg_desc->rdesc.name);
pmic/extbuck/mt6311-regulator.c:	MT6311LOG("[%s] disable (%s)\n", __func__, mreg_desc->rdesc.name);
teei/300/common/include/imsg_log.h:#ifndef _ISEE_IMSG_LOG_H_
teei/300/common/include/imsg_log.h:#define _ISEE_IMSG_LOG_H_
teei/300/common/include/imsg_log.h:#define IMSG_LOG_LEVEL          IMSG_LV_WARN
teei/300/common/include/imsg_log.h:#endif /* _ISEE_IMSG_LOG_H_ */
teei/300/common/include/tee_client_api.h: * TEEC_LOGIN_PUBLIC        No login data is provided.
teei/300/common/include/tee_client_api.h: * TEEC_LOGIN_USER          Login data about the user running the Client
teei/300/common/include/tee_client_api.h: * TEEC_LOGIN_GROUP         Login data about the group running the Client
teei/300/common/include/tee_client_api.h: * TEEC_LOGIN_APPLICATION   Login data about the running Client Application
teei/300/common/include/tee_client_api.h: * TEEC_LOGIN_USER_APPLICATION  Login data about the user and the running
teei/300/common/include/tee_client_api.h: * TEEC_LOGIN_GROUP_APPLICATION Login data about the group and the running
teei/300/common/include/tee_client_api.h:#define TEEC_LOGIN_PUBLIC       0x00000000
teei/300/common/include/tee_client_api.h:#define TEEC_LOGIN_USER         0x00000001
teei/300/common/include/tee_client_api.h:#define TEEC_LOGIN_GROUP        0x00000002
teei/300/common/include/tee_client_api.h:#define TEEC_LOGIN_APPLICATION  0x00000004
teei/300/common/include/tee_client_api.h:#define TEEC_LOGIN_USER_APPLICATION  0x00000005
teei/300/common/include/tee_client_api.h:#define TEEC_LOGIN_GROUP_APPLICATION  0x00000006
teei/300/common/include/tee.h: * Matches TEEC_LOGIN_* in GP TEE Client API
teei/300/common/include/tee.h:#define TEE_IOCTL_LOGIN_PUBLIC			0
teei/300/common/include/tee.h:#define TEE_IOCTL_LOGIN_USER			1
teei/300/common/include/tee.h:#define TEE_IOCTL_LOGIN_GROUP			2
teei/300/common/include/tee.h:#define TEE_IOCTL_LOGIN_APPLICATION		4
teei/300/common/include/tee.h:#define TEE_IOCTL_LOGIN_USER_APPLICATION	5
teei/300/common/include/tee.h:#define TEE_IOCTL_LOGIN_GROUP_APPLICATION	6
teei/300/common/include/tee.h: * @clnt_login:	[in] Login class of client, TEE_IOCTL_LOGIN_* above
teei/300/tee/soter/optee_msg.h: * Same values as TEE_LOGIN_* from TEE Internal API
teei/300/tee/soter/optee_msg.h:#define OPTEE_MSG_LOGIN_PUBLIC			0x00000000
teei/300/tee/soter/optee_msg.h:#define OPTEE_MSG_LOGIN_USER			0x00000001
teei/300/tee/soter/optee_msg.h:#define OPTEE_MSG_LOGIN_GROUP			0x00000002
teei/300/tee/soter/optee_msg.h:#define OPTEE_MSG_LOGIN_APPLICATION		0x00000004
teei/300/tee/soter/optee_msg.h:#define OPTEE_MSG_LOGIN_APPLICATION_USER	0x00000005
teei/300/tee/soter/optee_msg.h:#define OPTEE_MSG_LOGIN_APPLICATION_GROUP	0x00000006
teei/300/tee/soter/optee_msg.h: * param[1].u.value.c Login class of client OPTEE_MSG_LOGIN_*
teei/300/tee/capi_proxy.c:			TEEC_LOGIN_PUBLIC, NULL, &op, &arg->ret_orig);
teei/300/tests/ta_core_api.h:#define TA_CORE_API_CMD_LOG_VPRINTF 0x516
teei/300/tests/ta_core_api.h:#define TA_CORE_API_CMD_LOG_PRINTF 0x517
teei/300/tests/xtest_isee_1000.c:	return TEEC_OpenSession(context, session, uuid, TEEC_LOGIN_PUBLIC,
teei/300/tests/xtest_isee_1000.c:				TA_CORE_API_CMD_LOG_VPRINTF, NULL, &ret_orig));
teei/300/tests/xtest_isee_1000.c:				TA_CORE_API_CMD_LOG_PRINTF, NULL, &ret_orig));
teei/300/tests/tee_api_defines.h:#define TEE_LOGIN_PUBLIC 0x00000000
teei/300/tests/tee_api_defines.h:#define TEE_LOGIN_USER 0x00000001
teei/300/tests/tee_api_defines.h:#define TEE_LOGIN_GROUP 0x00000002
teei/300/tests/tee_api_defines.h:#define TEE_LOGIN_APPLICATION 0x00000004
teei/300/tests/tee_api_defines.h:#define TEE_LOGIN_APPLICATION_USER 0x00000005
teei/300/tests/tee_api_defines.h:#define TEE_LOGIN_APPLICATION_GROUP 0x00000006
teei/300/tests/tee_api_defines.h:#define TEE_LOGIN_TRUSTED_APP 0xF0000000
teei/300/tz_driver/irq_register.c:	case TEEI_LOG_IRQ:
teei/300/tz_driver/teei_client_main.c:	TEEI_BOOT_ERROR_CREATE_TLOG_BUF = 1,
teei/300/tz_driver/teei_client_main.c:	TEEI_BOOT_ERROR_CREATE_TLOG_THREAD = 2,
teei/300/tz_driver/teei_client_main.c:	{ TEEI_BOOT_ERROR_CREATE_TLOG_BUF,
teei/300/tz_driver/teei_client_main.c:			"TEEI_BOOT_ERROR_CREATE_TLOG_BUF" },
teei/300/tz_driver/teei_client_main.c:	{ TEEI_BOOT_ERROR_CREATE_TLOG_THREAD,
teei/300/tz_driver/teei_client_main.c:			"TEEI_BOOT_ERROR_CREATE_TLOG_THREAD" },
teei/300/tz_driver/sysfs.c:static uint32_t imsg_log_level = IMSG_LOG_LEVEL;
teei/300/tz_driver/sysfs.c:	IMSG_PROFILE_S("LOG_TEST");
teei/300/tz_driver/sysfs.c:	IMSG_PROFILE_E("LOG_TEST");
teei/300/tz_driver/sysfs.c:				driver_uuid, TEEC_LOGIN_PUBLIC,
teei/300/tz_driver/include/utdriver_irq.h:#define TEEI_LOG_IRQ                            (277)
teei/300/tz_driver/include/teei_log.h:#ifndef TEEI_LOG_H
teei/300/tz_driver/include/teei_log.h:#define TEEI_LOG_H
teei/300/tz_driver/include/teei_log.h:#define LOG_BUF_LEN		(256 * 1024)
teei/300/tz_driver/include/teei_log.h:#endif /* TEEI_LOG_H */
teei/300/tz_driver/log_perf.h:#define ENABLE_LOG_PERF 0
teei/300/tz_driver/log_perf.h:#if ENABLE_LOG_PERF == 1
teei/300/tz_driver/log_perf.h:#define LOG_MEASURE_START  0x7c40407c  /* |@@| */
teei/300/tz_driver/log_perf.h:#define LOG_MEASURE_END    0x7c2d2d7c  /* |--| */
teei/300/tz_driver/log_perf.h:		if (log_prefix == LOG_MEASURE_START) {
teei/300/tz_driver/log_perf.h:		if (log_prefix == LOG_MEASURE_END) {
teei/300/tz_driver/log_perf.h:				IMSG_PRINTK("%s[RLOG] Recv Log (%u)/(%u)\n",
teei/300/tz_driver/log_perf.h:				IMSG_PRINTK("%s[RLOG] (%llu)~(%llu)/(%llu)\n",
teei/300/tz_driver/tz_log.c:				TZ_LOG_RATELIMIT_INTERVAL,
teei/300/tz_driver/tz_log.c:				TZ_LOG_RATELIMIT_BURST);
teei/300/tz_driver/tz_log.c:			IMSG_PRINTK_DEBUG("[TZ_LOG] %s", s->line_buffer);
teei/300/tz_driver/tz_log.c:			IMSG_PRINTK("[TZ_LOG] %s", s->line_buffer);
teei/300/tz_driver/tz_log.c:#if ENABLE_LOG_PERF == 1
teei/300/tz_driver/tz_log.c:#ifdef CONFIG_MICROTRUST_TZ_LOG
teei/300/tz_driver/tz_log.c:				   get_order(TZ_LOG_SIZE));
teei/300/tz_driver/tz_log.c:				   get_order(TZ_LOG_SIZE));
teei/300/tz_driver/tz_log.c:				TZ_LOG_SIZE - sizeof(struct boot_log_rb));
teei/300/tz_driver/tz_log.c:	__free_pages(s->boot_log_pages, get_order(TZ_LOG_SIZE));
teei/300/tz_driver/tz_log.c:	__free_pages(s->log_pages, get_order(TZ_LOG_SIZE));
teei/300/tz_driver/tz_log.c:	__free_pages(s->log_pages, get_order(TZ_LOG_SIZE));
teei/300/tz_driver/tz_log.c:	__free_pages(s->boot_log_pages, get_order(TZ_LOG_SIZE));
teei/300/tz_driver/teei_client_transfer_data.c:	result = TEEC_OpenSession(context, &session, uuid, TEEC_LOGIN_PUBLIC,
teei/300/tz_driver/tz_log.h:#ifndef _TRUSTY_LOG_H_
teei/300/tz_driver/tz_log.h:#define _TRUSTY_LOG_H_
teei/300/tz_driver/tz_log.h:#define TZ_LOG_SIZE           (PAGE_SIZE * 64)
teei/300/tz_driver/tz_log.h:#define TZ_LOG_RATELIMIT_INTERVAL	(1 * HZ)
teei/300/tz_driver/tz_log.h:#define TZ_LOG_RATELIMIT_BURST		200
teei/Kconfig:config MICROTRUST_TZ_LOG
conn_md/conn_md_log.c:int g_conn_md_dbg_lvl = CONN_MD_LOG_INFO;
conn_md/conn_md_log.c:	char temp_sring[DBG_LOG_STR_SIZE];
conn_md/conn_md_log.c:	vsnprintf(temp_sring, DBG_LOG_STR_SIZE, str, args);
conn_md/conn_md_log.c:	/* return CONN_MD_LOG_INFO; */
conn_md/conn_md_log.c:#define CONN_MD_LOG_LOUD    4
conn_md/conn_md_log.c:#define CONN_MD_LOG_DBG     3
conn_md/conn_md_log.c:#define CONN_MD_LOG_INFO    2
conn_md/conn_md_log.c:#define CONN_MD_LOG_WARN    1
conn_md/conn_md_log.c:#define CONN_MD_LOG_ERR     0
conn_md/conn_md_log.c:	/* return CONN_MD_LOG_INFO; */
conn_md/conn_md_log.c:	if (g_conn_md_dbg_lvl > CONN_MD_LOG_LOUD) {
conn_md/conn_md_log.c:				log_lvl, CONN_MD_LOG_LOUD);
conn_md/conn_md_log.c:		g_conn_md_dbg_lvl = CONN_MD_LOG_LOUD;
conn_md/conn_md_log.c:	if (g_conn_md_dbg_lvl < CONN_MD_LOG_ERR) {
conn_md/conn_md_log.c:				log_lvl, CONN_MD_LOG_ERR);
conn_md/conn_md_log.c:		g_conn_md_dbg_lvl = CONN_MD_LOG_ERR;
conn_md/include/conn_md_log.h:#ifndef __CONN_MD_LOG_H_
conn_md/include/conn_md_log.h:#define __CONN_MD_LOG_H_
conn_md/include/conn_md_log.h:#define DBG_LOG_STR_SIZE 256
conn_md/include/conn_md_log.h:#define CONN_MD_LOG_LOUD    4
conn_md/include/conn_md_log.h:#define CONN_MD_LOG_DBG     3
conn_md/include/conn_md_log.h:#define CONN_MD_LOG_INFO    2
conn_md/include/conn_md_log.h:#define CONN_MD_LOG_WARN    1
conn_md/include/conn_md_log.h:#define CONN_MD_LOG_ERR     0
conn_md/include/conn_md_dump.h:#define NUMBER_OF_MSG_LOGGED 16
conn_md/include/conn_md_dump.h:	struct conn_md_dmp_msg_str msg[NUMBER_OF_MSG_LOGGED];
conn_md/conn_md_dump.c:	if (p_msg_log->size >= NUMBER_OF_MSG_LOGGED)
conn_md/conn_md_dump.c:		p_msg_log->size = NUMBER_OF_MSG_LOGGED;
conn_md/conn_md_dump.c:	p_msg_log->in %= NUMBER_OF_MSG_LOGGED;
conn_md/conn_md_dump.c:	if (size == NUMBER_OF_MSG_LOGGED)
conn_md/conn_md_dump.c:		out %= NUMBER_OF_MSG_LOGGED;
conn_md/conn_md.c:#define CONN_MD_LOG_MSG_HEAD_NAME "send message to Modem,"
conn_md/conn_md.c:#define CONN_MD_LOG_MSG_MAX_INTERVAL_MS 1000
conn_md/conn_md.c:		    interval > CONN_MD_LOG_MSG_MAX_INTERVAL_MS)) {
conn_md/conn_md.c:			CONN_MD_INFO_FUNC("%s%s\n", CONN_MD_LOG_MSG_HEAD_NAME,
videocodec/include/user/val_log.h:#ifndef _VAL_LOG_H_
videocodec/include/user/val_log.h:#define _VAL_LOG_H_
videocodec/include/user/val_log.h:#ifdef LOG_TAG
videocodec/include/user/val_log.h:#undef LOG_TAG
videocodec/include/user/val_log.h:#define LOG_TAG "MFV_COMMON" /* /< LOG_TAG "MFV_COMMON" */
videocodec/include/user/val_log.h:#define MODULE_MFV_LOGE(...) /* /< NOT show error log */
videocodec/include/user/val_log.h:#define VDO_LOGE(...)	/* /< NOT show error log */
videocodec/include/user/val_log.h:#define MODULE_MFV_LOGW(...) /* /< NOT show warning log */
videocodec/include/user/val_log.h:#define VDO_LOGW(...)	/* /< NOT show warning log */
videocodec/include/user/val_log.h:#define MODULE_MFV_LOGD(...) /* /< NOT show debug information log */
videocodec/include/user/val_log.h:#define VDO_LOGD(...)	/* /< NOT show debug information log */
videocodec/include/user/val_log.h:#define MODULE_MFV_LOGI(...) /* /< NOT show information log */
videocodec/include/user/val_log.h:#define VDO_LOGI(...)	/* /< NOT show information log */
videocodec/include/user/val_log.h:#endif /* #ifndef _VAL_LOG_H_ */
videocodec/mt6765/videocodec_kernel_driver.c:#define ENC_LOCK_FLOG "venc locked HW timeout 0x\%lx,\%lx,0x\%lx, type:\%d"
videocodec/mt6765/videocodec_kernel_driver.c:#define ENC_LOCK_FLOG2 "someone locked HW already 0x\%lx,\%lx,0x\%lx, type:\%d"
videocodec/mt6765/videocodec_kernel_driver.c:				pr_info(ENC_LOCK_FLOG,
videocodec/mt6765/videocodec_kernel_driver.c:				pr_info(ENC_LOCK_FLOG2,
videocodec/mt6765/videocodec_kernel_driver.c:#define ENC_LOCK_LOG 
videocodec/mt6765/videocodec_kernel_driver.c:			pr_info(ENC_LOCK_LOG,
videocodec/mt6765/videocodec_kernel_driver.c: *	MODULE_MFV_LOGD("[ERROR] VCODEC_SET_FRAME_INFO, vdec not locked");
videocodec/mt6765/videocodec_kernel_driver.c:	case VCODEC_SET_LOG_COUNT:
videocodec/mt6765/videocodec_kernel_driver.c:		/* pr_debug("VCODEC_SET_LOG_COUNT + tid = %d\n",
videocodec/mt6765/videocodec_kernel_driver.c:			pr_info("SET_LOG_COUNT, copy_from_user failed: %lu",
videocodec/mt6765/videocodec_kernel_driver.c:		/* pr_debug("VCODEC_SET_LOG_COUNT - tid = %d\n",
videocodec/mt6765/common/drv/src/drv_base.c:#define FFREE_LOG "idx=\%d,tid=\%d,KVA=0x\%lx,KPA=0x\%lx,Size=\%lu"
videocodec/mt6765/common/drv/src/drv_base.c:					pr_debug(FFREE_LOG,
videocodec/mt6765/videocodec_kernel_driver.h:#define VCODEC_SET_LOG_COUNT		_IOW(MFV_IOC_MAGIC, 0x35, unsigned int)
ccci_util/ccci_util_lib_fo.c:	MTK_MEMCFG_LOG_AND_PRINTK(
ccci_util/ccci_util_lib_fo.c:			MTK_MEMCFG_LOG_AND_PRINTK(
ccci_util/ccci_util_log.h:#ifndef __CCCI_UTIL_LOG_H__
ccci_util/ccci_util_log.h:#define __CCCI_UTIL_LOG_H__
ccci_util/ccci_util_log.h:/* #define BRING_UP_LOG_MODE */
ccci_util/ccci_util_log.h:#ifndef BRING_UP_LOG_MODE
ccci_util/ccci_util_log.h:#endif /* end of #ifndef BRING_UP_LOG_MODE */
ccci_util/ccci_util_log.h:#endif /*__CCCI_UTIL_LOG_H__ */
ccci_util/Makefile:ccflags-y += -DCCCI_LOG_DISABLE
ccci_util/ccci_private_log.c:#define CCCI_LOG_BUF_SIZE 256	/* must be power of 2 */
ccci_util/ccci_private_log.c:#define CCCI_LOG_MAX_WRITE 128
ccci_util/ccci_private_log.c:	temp_log = kmalloc(CCCI_LOG_MAX_WRITE, GFP_ATOMIC);
ccci_util/ccci_private_log.c:	write_len = snprintf(temp_log, CCCI_LOG_MAX_WRITE,
ccci_util/ccci_private_log.c:			CCCI_LOG_MAX_WRITE - write_len,
ccci_util/ccci_private_log.c:	if (ccci_log_buf.write_pos + write_len > CCCI_LOG_BUF_SIZE) {
ccci_util/ccci_private_log.c:		first_half = CCCI_LOG_BUF_SIZE - ccci_log_buf.write_pos;
ccci_util/ccci_private_log.c:		& (CCCI_LOG_BUF_SIZE - 1);
ccci_util/ccci_private_log.c:	temp_log = kmalloc(CCCI_LOG_MAX_WRITE, GFP_ATOMIC);
ccci_util/ccci_private_log.c:		write_len = snprintf(temp_log, CCCI_LOG_MAX_WRITE,
ccci_util/ccci_private_log.c:						CCCI_LOG_MAX_WRITE - write_len,
ccci_util/ccci_private_log.c:					CCCI_LOG_MAX_WRITE - write_len,
ccci_util/ccci_private_log.c:	if (ccci_log_buf.write_pos + write_len > CCCI_LOG_BUF_SIZE) {
ccci_util/ccci_private_log.c:		first_half = CCCI_LOG_BUF_SIZE - ccci_log_buf.write_pos;
ccci_util/ccci_private_log.c:		& (CCCI_LOG_BUF_SIZE - 1);
ccci_util/ccci_private_log.c:	if (available >= CCCI_LOG_BUF_SIZE) {
ccci_util/ccci_private_log.c:		available = CCCI_LOG_BUF_SIZE;
ccci_util/ccci_private_log.c:	if (read_pos + read_len > CCCI_LOG_BUF_SIZE) {
ccci_util/ccci_private_log.c:		first_half = CCCI_LOG_BUF_SIZE - read_pos;
ccci_util/ccci_private_log.c:	ccci_log_buf.read_pos = (read_pos + read_len) & (CCCI_LOG_BUF_SIZE - 1);
ccci_util/ccci_private_log.c:#ifndef CONFIG_FUCK_MTK_LOG
ccci_util/ccci_private_log.c:		sep_str = "[0]INIT LOG REGION";
ccci_util/ccci_private_log.c:		sep_str = "[0]NORMAL LOG REGION";
ccci_util/ccci_private_log.c:		sep_str = "[0]BOOT LOG REGION";
ccci_util/ccci_private_log.c:		sep_str = "[0]REPEAT LOG REGION";
ccci_util/ccci_private_log.c:		sep_str = "[0]MEM DUMP LOG REGION";
ccci_util/ccci_private_log.c:		sep_str = "[0]HISTORY LOG REGION";
ccci_util/ccci_private_log.c:		sep_str = "[0]REGISTER LOG REGION";
ccci_util/ccci_private_log.c:	temp_log = kmalloc(CCCI_LOG_MAX_WRITE, GFP_ATOMIC);
ccci_util/ccci_private_log.c:	write_len = snprintf(temp_log, CCCI_LOG_MAX_WRITE,
ccci_util/ccci_private_log.c:					CCCI_LOG_MAX_WRITE - write_len,
accdet/mt6357/reg_accdet.h:#define RG_AUDSPARE_FSTDSCHRG_ANALOG_DIR_EN	(1<<5)
accdet/mt6357/accdet.c:#define ACCDET_NOLOG 1
accdet/mt6357/accdet.c:#if ACCDET_NOLOG
accdet/mt6357/accdet.c:#define ANALOG_FASTDISCHARGE_SUPPORT
accdet/mt6357/accdet.c:#ifdef ANALOG_FASTDISCHARGE_SUPPORT
accdet/mt6357/accdet.c:		RG_AUDSPARE_FSTDSCHRG_ANALOG_DIR_EN;
mdp/mdp_m4u.c:	CMDQ_LOG("import ion handle fd=%d,hnd=0x%p\n", fd, handle);
mdp/mdp_m4u.c:	CMDQ_LOG("free ion handle 0x%p\n", handle);
mdp/mdp_ioctl_ex.c:			CMDQ_LOG("[TM] id:%d: total:%u, Sum:%lluus\n",
mdp/mdp_ioctl_ex.c:		CMDQ_LOG("[warn]job wait and close cost:%lluus handle:0x%p\n",
mdp/mdp_ioctl_ex.c:	CMDQ_LOG("MDP limit dev create end\n");
devapc/mt6765/devapc.c:#define DEVAPC_LOG_NONE        0x00000000
devapc/mt6765/devapc.c:#define DEVAPC_LOG_INFO        0x00000001
devapc/mt6765/devapc.c:#define DEVAPC_LOG_DBG         0x00000002
devapc/mt6765/devapc.c:#define DEVAPC_LOG_LEVEL      (DEVAPC_LOG_DBG)
devapc/mt6765/devapc.c:#define DEVAPC_VIO_LEVEL      (DEVAPC_LOG_INFO)
sspm/sspm_plt.c:#if SSPM_LOGGER_SUPPORT
sspm/sspm_plt.c:#if SSPM_LOGGER_SUPPORT
sspm/sspm_plt.c:#if (SSPM_COREDUMP_SUPPORT || SSPM_LOGGER_SUPPORT || SSPM_TIMESYNC_SUPPORT)
sspm/sspm_plt.c:#if SSPM_LOGGER_SUPPORT
sspm/sspm_plt.c:#if SSPM_LOGGER_SUPPORT
sspm/sspm_logger.h:#ifndef __SSPM_LOGGER_H__
sspm/sspm_logger.h:#define __SSPM_LOGGER_H__
sspm/sspm_logger_impl.c:#ifdef SSPM_PLT_LOGGER_BUF_LEN
sspm/sspm_logger_impl.c:#define BUF_LEN				SSPM_PLT_LOGGER_BUF_LEN
sspm/mt6765/sspm_reservedmem_define.h:#define SSPM_PLT_LOGGER_BUF_LEN 0x100000
sspm/mt6765/sspm_reservedmem_define.h:		.size = 0x400 + SSPM_PLT_LOGGER_BUF_LEN,
sspm/mt6765/sspm_define.h:#define SSPM_LOGGER_SUPPORT         (0)
sspm/mt6765/sspm_define.h:#define PLT_LOG_ENABLE		0x504C5402
performance/boost_ctrl/eas_ctrl/eas_ctrl.c:	char msg[LOG_BUF_SIZE];
performance/boost_ctrl/eas_ctrl/eas_ctrl.c:	char msg1[LOG_BUF_SIZE];
performance/boost_ctrl/eas_ctrl/eas_ctrl.c:	if (strlen(msg) + strlen(msg1) < LOG_BUF_SIZE)
performance/boost_ctrl/eas_ctrl/eas_ctrl.c:	char msg[LOG_BUF_SIZE];
performance/boost_ctrl/eas_ctrl/eas_ctrl.c:	char msg1[LOG_BUF_SIZE];
performance/boost_ctrl/eas_ctrl/eas_ctrl.c:	if (strlen(msg) + strlen(msg1) < LOG_BUF_SIZE)
performance/boost_ctrl/cpu_ctrl/cpu_ctrl.c:	char msg[LOG_BUF_SIZE];
performance/boost_ctrl/cpu_ctrl/cpu_ctrl.c:	char msg1[LOG_BUF_SIZE];
performance/boost_ctrl/cpu_ctrl/cpu_ctrl.c:	if (strlen(msg) + strlen(msg1) < LOG_BUF_SIZE)
performance/include/mtk_perfmgr_internal.h:#define LOG_BUF_SIZE (16)
pmic_wrap/mtk_pmic_wrap.c:	/* PWRAPLOG("pwrap_suspend\n"); */
pmic_wrap/mtk_pmic_wrap.c:	/* PWRAPLOG("pwrap_init_ops\n"); */
pmic_wrap/mtk_pmic_wrap.c:/* PWRAPLOG("pwrap_init_ops\n"); */
pmic_wrap/mt6765/pwrap_hal.h:		#define PWRAPLOG(fmt, arg...) 
pmic_wrap/mt6765/pwrap_hal.h:		#define PWRAPLOG(fmt, arg...)
pmic_wrap/mt6765/pwrap_hal.h:		#define PWRAPLOG(fmt, arg...)   
pmic_wrap/mt6765/pwrap_hal.h:		#define PWRAPLOG(fmt, arg...)
pmic_wrap/mt6765/pwrap_hal.h:		#define PWRAPLOG(fmt, arg...) 
pmic_wrap/mt6765/pwrap_hal.h:		#define PWRAPLOG(fmt, arg...) 
pmic_wrap/mt6765/pwrap_hal.h:		#define PWRAPLOG(fmt, arg...)  
pmic_wrap/mt6765/pwrap_hal.h:		#define PWRAPLOG(fmt, arg...) 
auxadc/mtk_auxadc.c:#define AUX_NOLOG 1
auxadc/mtk_auxadc.c:#if AUX_NOLOG
video/common/wdma10/ddp_wdma.c:#define LOG_TAG "WDMA"
video/common/wdma20/ddp_wdma.c:#define LOG_TAG "WDMA"
video/common/pwm10/ddp_pwm.c:#ifdef CONFIG_FUCK_MTK_LOG
video/common/pwm10/ddp_pwm.c:#define PWM_LOG_BUFFER_SIZE 1
video/common/pwm10/ddp_pwm.c:#define PWM_LOG_BUFFER_SIZE 8
video/common/pwm10/ddp_pwm.c:struct PWM_LOG {
video/common/pwm10/ddp_pwm.c:enum PWM_LOG_TYPE {
video/common/pwm10/ddp_pwm.c:	NOTICE_LOG = 0,
video/common/pwm10/ddp_pwm.c:	MSG_LOG,
video/common/pwm10/ddp_pwm.c:static struct PWM_LOG g_pwm_log_buffer[PWM_LOG_BUFFER_SIZE + 1];
video/common/pwm10/ddp_pwm.c:static int g_pwm_log_num = PWM_LOG_BUFFER_SIZE;
video/common/pwm10/ddp_pwm.c:#define LOGBUFFERSIZE 384
video/common/pwm10/ddp_pwm.c:	char buffer[LOGBUFFERSIZE] = "";
video/common/pwm10/ddp_pwm.c:		for (i = 0; i < PWM_LOG_BUFFER_SIZE; i += 1) {
video/common/pwm10/ddp_pwm.c:		if (log_type == MSG_LOG)
video/common/pwm10/ddp_pwm.c:		disp_pwm_log(level_1024, MSG_LOG);
video/common/pwm10/ddp_pwm.c:			1 : ((log_num > PWM_LOG_BUFFER_SIZE) ?
video/common/pwm10/ddp_pwm.c:			PWM_LOG_BUFFER_SIZE : log_num);
video/common/color20/ddp_color.c:#define COLOR_NLOG(fmt, arg...) 
video/common/color20/ddp_color.c:		COLOR_NLOG("Hist add[%d], value[0x%08x]", i, value);
video/common/color20/ddp_color.c:		COLOR_NLOG("read pa:0x%x(va:0x%lx) = 0x%x (0x%x)", pa, va,
video/common/color20/ddp_color.c:		COLOR_NLOG("write pa:0x%x(va:0x%lx) = 0x%x (0x%x)", pa, va,
video/common/color20/ddp_color.c:		COLOR_NLOG("read sw reg 0x%x = 0x%x", rParams.reg,
video/common/color20/ddp_color.c:		COLOR_NLOG("write sw reg  0x%x = 0x%x", wParams.reg,
video/common/color20/ddp_color.c:	COLOR_NLOG("DISP_COLOR_OFF, Color bypassed...\n");
video/common/color20/ddp_color.c:	COLOR_NLOG("DISP_COLOR_OFF, Color bypassed...\n");
video/common/od10/ddp_od.c:enum OD_LOG_LEVEL {
video/common/od10/ddp_od.c:	OD_LOG_ALWAYS = 0,
video/common/od10/ddp_od.c:	OD_LOG_VERBOSE,
video/common/od10/ddp_od.c:	OD_LOG_DEBUG
video/common/od10/ddp_od.c:	ODDBG(OD_LOG_ALWAYS, "==DISP OD REGS==");
video/common/od10/ddp_od.c:	ODDBG(OD_LOG_ALWAYS,
video/common/od10/ddp_od.c:	ODDBG(OD_LOG_ALWAYS,
video/common/od10/ddp_od.c:	ODDBG(OD_LOG_ALWAYS,
video/common/od10/ddp_od.c:	ODDBG(OD_LOG_ALWAYS,
video/common/od10/ddp_od.c:	ODDBG(OD_LOG_ALWAYS,
video/common/od10/ddp_od.c:	ODDBG(OD_LOG_ALWAYS,
video/common/od10/ddp_od.c:	ODDBG(OD_LOG_ALWAYS,
video/common/od10/ddp_od.c:	ODDBG(OD_LOG_ALWAYS,
video/common/od10/ddp_od.c:		ODDBG(OD_LOG_ALWAYS, "OD: MEM NOT ENOUGH");
video/common/od10/ddp_od.c:		ODDBG(OD_LOG_ALWAYS, "OD: MEM OK");
video/common/od10/ddp_od.c:			ODDBG(OD_LOG_ALWAYS,
video/common/od10/ddp_od.c:		ODDBG(OD_LOG_ALWAYS,
video/common/od10/ddp_od.c:		ODDBG(OD_LOG_ALWAYS,
video/common/od10/ddp_od.c:				ODDBG(OD_LOG_ALWAYS,
video/common/od10/ddp_od.c:				ODDBG(OD_LOG_ALWAYS,
video/common/od10/ddp_od.c:		ODDBG(OD_LOG_ALWAYS, "Error OD table");
video/common/od10/ddp_od.c:	ODDBG(OD_LOG_VERBOSE, "OD conf start %lx %x %lx", (unsigned long)cmdq,
video/common/od10/ddp_od.c:		ODDBG(OD_LOG_ALWAYS, "LCM NULL OD table");
video/common/od10/ddp_od.c:	ODDBG(OD_LOG_VERBOSE, "OD inited W %d H %d", width, height);
video/common/od10/ddp_od.c:	ODDBG(OD_LOG_ALWAYS, "%s(allow = %d)", __func__, allow_enabled);
video/common/od10/ddp_od.c:	ODDBG(OD_LOG_ALWAYS, "%s(allow = %d)", __func__, allow_enabled);
video/common/od10/ddp_od.c:	ODDBG(OD_LOG_ALWAYS, "%s(%d), od_enabled=%d", __func__,
video/common/od10/ddp_od.c:	ODDBG(OD_LOG_ALWAYS, "%s not support", __func__);
video/common/od10/ddp_od.c:	ODDBG(OD_LOG_ALWAYS,
video/common/od10/ddp_od.c:	ODDBG(OD_LOG_ALWAYS, "%s(): enabled = %d", __func__,
video/common/od10/ddp_od.c:	ODDBG(OD_LOG_ALWAYS, "OD ioctl cmdq %lx", (unsigned long)cmdq);
video/common/od10/ddp_od.c:			ODDBG(OD_LOG_ALWAYS, "unknown enable type command");
video/common/od10/ddp_od.c:			ODDBG(OD_LOG_ALWAYS, "OD demo %d", enable);
video/common/od10/ddp_od.c:	ODDBG(OD_LOG_DEBUG, "%s",  __func__);
video/common/od10/ddp_od.c:			ODDBG(OD_LOG_ALWAYS,
video/common/od10/ddp_od.c:		ODDBG(OD_LOG_ALWAYS, "%s: Use default 17x17 table", __func__);
video/common/od10/ddp_od.c:			ODDBG(OD_LOG_ALWAYS,
video/common/od10/ddp_od.c:			ODDBG(OD_LOG_ALWAYS,
video/common/od10/ddp_od.c:		ODDBG(OD_LOG_DEBUG, "%s: Not support od bypass", __func__);
video/common/od10/ddp_od.c:	ODDBG(OD_LOG_ALWAYS, "%s()", __func__);
video/common/od10/ddp_od.c:#define OD_TLOG(fmt, arg...)
video/common/od10/ddp_od.c:	OD_TLOG("OD reg base = %lx", (unsigned long)(OD_BASE));
video/common/od10/ddp_od.c:			OD_TLOG("[+0x%03lx] = 0x%08x(%d)", offset,
video/common/od10/ddp_od.c:	ODDBG(OD_LOG_ALWAYS, "OD SLOW");
video/common/od10/ddp_od.c:	ODDBG(OD_LOG_ALWAYS, "OD OK");
video/common/od10/ddp_od.c:	OD_TLOG("OD reg base = %lx", (unsigned long)(OD_BASE));
video/common/od10/ddp_od.c:		OD_TLOG("[+0x%03x] = 0x%08x(%d)", offset, value, value);
video/common/od10/ddp_od.c:	ODDBG(OD_LOG_ALWAYS, "OD TEST -- STRESS TABLE START");
video/common/od10/ddp_od.c:	ODDBG(OD_LOG_ALWAYS, "OD TEST -- STRESS TABLE END");
video/common/od10/ddp_od.c:	OD_TLOG("%s(%s)", __func__, cmd);
video/common/od10/ddp_od.c:		if (level >= OD_LOG_ALWAYS && level <= OD_LOG_DEBUG)
video/common/od10/ddp_od.c:			OD_TLOG("[+0x%03lx] = 0x%08x(%d) & 0x%08x",
video/common/od10/ddp_od.c:		ODDBG(OD_LOG_ALWAYS, "OD demo %d", enabled);
video/common/od10/ddp_od.c:		OD_TLOG("OD reg base = %lx", (unsigned long)(OD_BASE));
video/common/od10/ddp_od.c:		OD_TLOG("dma0:%lx dma1:%lx size:%d", g_od_buf.pa_of_dma0,
video/common/od10/ddp_od.c:			OD_TLOG("%0x8 0x%08x 0x%08x", i,
video/common/aal30/ddp_aal.c:#define LOG_INTERVAL_TH 200
video/common/aal30/ddp_aal.c:#ifdef CONFIG_FUCK_MTK_LOG
video/common/aal30/ddp_aal.c:#define LOG_BUFFER_SIZE 1
video/common/aal30/ddp_aal.c:#define LOG_BUFFER_SIZE 4
video/common/aal30/ddp_aal.c:	if (diff_mesc > LOG_INTERVAL_TH) {
video/common/aal30/ddp_aal.c:		if ((g_aal_log_index >= LOG_BUFFER_SIZE) || (bl_1024 == 0)) {
video/common/aal30/ddp_aal.c:#define AAL_TLOG(fmt, arg...)
video/common/aal30/ddp_aal.c:	AAL_TLOG("EN = %d, read = %d", en, DISP_REG_GET(DISP_AAL_EN + offset));
video/common/aal30/ddp_aal.c:	AAL_TLOG("Hist block number [y, x] [%d, %d]",
video/common/aal30/ddp_aal.c:		AAL_TLOG("hist[%d..%d] = 0x%08x 0x%08x 0x%08x 0x%08x",
video/common/aal30/ddp_aal.c:		AAL_TLOG("hist[%d] = 0x%08x", i, dre30_hist->dre_hist[i]);
video/common/aal30/ddp_aal.c:			AAL_TLOG("Hist[%d..%d]=%6d %6d %6d %6d %6d %6d %6d %6d",
video/common/aal30/ddp_aal.c:			AAL_TLOG("Hist[%d] = %6d", i, hist->maxHist[i]);
video/common/aal30/ddp_aal.c:			AAL_TLOG("yHis[%d..%d]=%6d %6d %6d %6d %6d %6d %6d %6d",
video/common/aal30/ddp_aal.c:			AAL_TLOG("yHist[%d] = %6d", i, hist->yHist[i]);
video/common/aal30/ddp_aal.c:	AAL_TLOG("========== dump dre gain in SW buffer ==========");
video/common/aal30/ddp_aal.c:		AAL_TLOG("dre gain[%d..%d] = 0x%08x 0x%08x 0x%08x 0x%08x",
video/common/aal30/ddp_aal.c:		AAL_TLOG("dre gain[%d] = 0x%08x", i, read_value[0]);
video/common/aal30/ddp_aal.c:	AAL_TLOG("===== Load from HW start (frame dirty is needed) =====");
video/common/aal30/ddp_aal.c:		AAL_TLOG("dre gain sram[%d..%d] = 0x%08x 0x%08x 0x%08x 0x%08x",
video/common/aal30/ddp_aal.c:		AAL_TLOG("dre gain sram[%d] = 0x%08x", i, read_value[0]);
video/common/aal30/ddp_aal.c:	AAL_TLOG("========== dump dre gain End ==========");
video/common/aal30/ddp_aal.c:	AAL_TLOG("test cmd(%s)", cmd);
video/common/mtkfb_fence.c:#define MTKFB_FENCE_LOG(fmt, arg...)	
video/common/mtkfb_fence.c:#define MTKFB_FENCE_LOG_D(fmt, arg...)
video/common/mtkfb_fence.c:#define MTKFB_FENCE_LOG_D_IF(con, fmt, arg...)	
video/common/mtkfb_fence.c:	MTKFB_FENCE_LOG_D(
video/common/mtkfb_fence.c:						DPREC_LOGGER_LEVEL_DEFAULT |
video/common/mtkfb_fence.c:						DPREC_LOGGER_LEVEL_SYSTRACE,
video/common/mtkfb_fence.c:						DPREC_LOGGER_LEVEL_DEFAULT,
video/common/mtkfb_fence.c:						DPREC_LOGGER_LEVEL_DEFAULT,
video/common/mtkfb_fence.c:						DPREC_LOGGER_LEVEL_DEFAULT |
video/common/mtkfb_fence.c:						DPREC_LOGGER_LEVEL_SYSTRACE,
video/common/mtkfb_fence.c:						DPREC_LOGGER_LEVEL_DEFAULT |
video/common/mtkfb_fence.c:						DPREC_LOGGER_LEVEL_SYSTRACE,
video/common/mtkfb_fence.c:						DPREC_LOGGER_LEVEL_DEFAULT |
video/common/mtkfb_fence.c:						DPREC_LOGGER_LEVEL_SYSTRACE,
video/common/mtkfb_fence.c:						DPREC_LOGGER_LEVEL_DEFAULT,
video/common/mtkfb_fence.c:						DPREC_LOGGER_LEVEL_DEFAULT |
video/common/mtkfb_fence.c:						DPREC_LOGGER_LEVEL_SYSTRACE,
video/common/mtkfb_fence.c:						DPREC_LOGGER_LEVEL_DEFAULT,
video/common/mtkfb_fence.c:						DPREC_LOGGER_LEVEL_DEFAULT,
video/common/mtkfb_fence.c:	MTKFB_FENCE_LOG("create ion client 0x%p\n", ion_client);
video/common/mtkfb_fence.c:		MTKFB_FENCE_LOG("NO NEED ion support\n");
video/common/mtkfb_fence.c:	MTKFB_FENCE_LOG("import ion handle fd=%d,hnd=0x%p\n", fd, handle);
video/common/mtkfb_fence.c:	MTKFB_FENCE_LOG("free ion handle 0x%p\n", handle);
video/common/mtkfb_fence.c:	MTKFB_FENCE_LOG("alloc mmu addr hnd=0x%p,mva=0x%08x\n", handle,
video/common/mtkfb_fence.c:		MTKFB_FENCE_LOG(
video/common/mtkfb_fence.c:		MTKFB_FENCE_LOG(
video/common/mtkfb_fence.c:		MTKFB_FENCE_LOG("query buf mva: layer=%d, idx=%d, mva=0x%lx\n",
video/common/rdma20/ddp_rdma.c:#define LOG_TAG "RDMA"
video/common/layering_rule_base/v1.2/layering_rule_base.c:	n += snprintf(status_buf + n, LOGGER_BUFFER_SIZE - n,
video/common/layering_rule_base/v1.2/layering_rule_base.c:		n += snprintf(status_buf + n, LOGGER_BUFFER_SIZE - n,
video/common/layering_rule_base/v1.2/layering_rule_base.c:			n += snprintf(status_buf + n, LOGGER_BUFFER_SIZE - n,
video/common/layering_rule_base/v1.2/layering_rule_base.c:	n += snprintf(status_buf + n, LOGGER_BUFFER_SIZE - n,
video/common/layering_rule_base/v1.1/layering_rule_base.c:	n += snprintf(status_buf + n, LOGGER_BUFFER_SIZE - n,
video/common/layering_rule_base/v1.1/layering_rule_base.c:		n += snprintf(status_buf + n, LOGGER_BUFFER_SIZE - n,
video/common/layering_rule_base/v1.1/layering_rule_base.c:			n += snprintf(status_buf + n, LOGGER_BUFFER_SIZE - n,
video/common/layering_rule_base/v1.1/layering_rule_base.c:	n += snprintf(status_buf + n, LOGGER_BUFFER_SIZE - n,
video/common/layering_rule_base/v1/layering_rule_base.c:	n += snprintf(status_buf + n, LOGGER_BUFFER_SIZE - n,
video/common/layering_rule_base/v1/layering_rule_base.c:		n += snprintf(status_buf + n, LOGGER_BUFFER_SIZE - n,
video/common/layering_rule_base/v1/layering_rule_base.c:			n += snprintf(status_buf + n, LOGGER_BUFFER_SIZE - n,
video/common/layering_rule_base/v1/layering_rule_base.c:	n += snprintf(status_buf + n, LOGGER_BUFFER_SIZE - n,
video/common/rdma10/ddp_rdma.c:#define LOG_TAG "RDMA"
video/include/mtkfb.h:#define MTKFB_META_SHOW_BOOTLOGO MTK_IO(105)
video/mt6765/videox/mtkfb_vsync.c:#define MTKFB_VSYNC_LOG(fmt, arg...) 
video/mt6765/videox/mtkfb_vsync.c:	MTKFB_VSYNC_LOG("mtkfb_vsync log %s\n",
video/mt6765/videox/mtkfb_vsync.c:		MTKFB_VSYNC_LOG("[MTKFB_VSYNC]: enter MTKFB_VSYNC_IOCTL\n");
video/mt6765/videox/mtkfb_vsync.c:		MTKFB_VSYNC_LOG("[MTKFB_VSYNC]: leave MTKFB_VSYNC_IOCTL\n");
video/mt6765/videox/compat_mtkfb.h:#define COMPAT_MTKFB_META_SHOW_BOOTLOGO \
video/mt6765/videox/disp_helper.h:	DISP_OPT_MET_LOG, /* for met */
video/mt6765/videox/mtk_ovl.c:	dprec_logger_start(DPREC_LOGGER_PRIMARY_MUTEX, 0, 0);
video/mt6765/videox/mtk_ovl.c:	dprec_logger_done(DPREC_LOGGER_PRIMARY_MUTEX, 0, 0);
video/mt6765/videox/mtk_ovl.c:		dprec_logger_start(DPREC_LOGGER_PRIMARY_CONFIG,
video/mt6765/videox/mtk_ovl.c:		dprec_logger_done(DPREC_LOGGER_PRIMARY_CONFIG,
video/mt6765/videox/mtkfb.c:#define MTKFB_LOG(fmt, arg...)
video/mt6765/videox/mtkfb.c:#define MTKFB_LOG_DBG(fmt, arg...)
video/mt6765/videox/mtkfb.c:			DISP_LOG_PRINT(ANDROID_LOG_INFO, "MTKFB", \
video/mt6765/videox/mtkfb.c:	MTKFB_LOG("mtkfb log %s\n", enable ? "enabled" : "disabled");
video/mt6765/videox/mtkfb.c:		MTKFB_LOG("[%s]unsupported bpp: %d", __func__, bpp);
video/mt6765/videox/mtkfb.c:			MTKFB_LOG("[FB]: copy_from_user failed! line:%d\n",
video/mt6765/videox/mtkfb.c:			MTKFB_LOG("[FB]: copy_to_user failed! line:%d\n",
video/mt6765/videox/mtkfb.c:		MTKFB_LOG("[%s] MTKFB_CONFIG_IMMEDIATE_UPDATE, enable = %lu\n",
video/mt6765/videox/mtkfb.c:			MTKFB_LOG("[mtkfb_ioctl] can't get semaphore:%d\n",
video/mt6765/videox/mtkfb.c:			MTKFB_LOG(
video/mt6765/videox/mtkfb.c:		dprec_logger_start(DPREC_LOGGER_WDMA_DUMP, 0, 0);
video/mt6765/videox/mtkfb.c:		dprec_logger_done(DPREC_LOGGER_WDMA_DUMP, 0, 0);
video/mt6765/videox/mtkfb.c:			MTKFB_LOG("[FB]: copy_to_user failed! line:%d\n",
video/mt6765/videox/mtkfb.c:			MTKFB_LOG("[FB]: copy_from_user failed! line:%d\n",
video/mt6765/videox/mtkfb.c:			MTKFB_LOG(
video/mt6765/videox/mtkfb.c:			MTKFB_LOG("[FB]: copy_to_user failed! line:%d\n",
video/mt6765/videox/mtkfb.c:		MTKFB_LOG(" mtkfb_ioctl():MTKFB_GET_OVERLAY_LAYER_INFO\n");
video/mt6765/videox/mtkfb.c:			MTKFB_LOG("[FB]: copy_from_user failed! line:%d\n",
video/mt6765/videox/mtkfb.c:			MTKFB_LOG("[FB]: Failed to get overlay layer info\n");
video/mt6765/videox/mtkfb.c:			MTKFB_LOG("[FB]: copy_to_user failed! line:%d\n",
video/mt6765/videox/mtkfb.c:			MTKFB_LOG("[FB]: copy_from_user failed! line:%d\n",
video/mt6765/videox/mtkfb.c:			MTKFB_LOG("[FB]: copy_from_user failed! line:%d\n",
video/mt6765/videox/mtkfb.c:		MTKFB_LOG("[MTKFB] get default update speed\n");
video/mt6765/videox/mtkfb.c:		MTKFB_LOG("[MTKFB] get current update speed\n");
video/mt6765/videox/mtkfb.c:		MTKFB_LOG("[MTKFB] change update speed\n");
video/mt6765/videox/mtkfb.c:			MTKFB_LOG("[FB]: copy_from_user failed! line:%d\n",
video/mt6765/videox/mtkfb.c:	case MTKFB_META_SHOW_BOOTLOGO:
video/mt6765/videox/mtkfb.c:		DISPMSG("MTKFB_META_SHOW_BOOTLOGO\n");
video/mt6765/videox/mtkfb.c:		MTKFB_LOG("mtkfb_compat_ioctl():MTKFB_SET_OVERLAY_LAYER\n");
video/mt6765/videox/mtkfb.c:			MTKFB_LOG(
video/mt6765/videox/mtkfb.c:		MTKFB_LOG("mtkfb_compat_ioctl():MTKFB_SET_VIDEO_LAYERS\n");
video/mt6765/videox/mtkfb.c:			MTKFB_LOG(
video/mt6765/videox/mtkfb.c:	case COMPAT_MTKFB_META_SHOW_BOOTLOGO:
video/mt6765/videox/mtkfb.c:		ret = mtkfb_ioctl(info, MTKFB_META_SHOW_BOOTLOGO, arg);
video/mt6765/videox/mtkfb.c:	LOG_PRINT(ANDROID_LOG_INFO, "AppLaunch", "mtkfb_pan_display_proxy.\n");
video/mt6765/videox/mtkfb.c:	MTKFB_LOG("[FB Driver] mtkfb_suspend(): 0x%x\n", mesg.event);
video/mt6765/videox/mtkfb.c:	MTKFB_LOG("[FB Driver] mtkfb_resume()\n");
video/mt6765/videox/mtkfb.c:	MTKFB_LOG("[FB Driver] mtkfb_shutdown()\n");
video/mt6765/videox/mtkfb.c:		MTKFB_LOG("mtkfb has been power off\n");
video/mt6765/videox/mtkfb.c:	MTKFB_LOG("[FB Driver] leave mtkfb_shutdown\n");
video/mt6765/videox/debug.c:	DISP_LOG_PRINT(ANDROID_LOG_INFO, "DBG", "[mtkfb_dbg] %s\n", cmd);
video/mt6765/videox/debug.c:	n += dprec_logger_get_buf(DPREC_LOGGER_ERROR,
video/mt6765/videox/debug.c:	n += dprec_logger_get_buf(DPREC_LOGGER_FENCE,
video/mt6765/videox/debug.c:	n += dprec_logger_get_buf(DPREC_LOGGER_DUMP,
video/mt6765/videox/debug.c:	n += dprec_logger_get_buf(DPREC_LOGGER_DEBUG,
video/mt6765/videox/debug.c:	n += dprec_logger_get_buf(DPREC_LOGGER_STATUS,
video/mt6765/videox/primary_display.c:	dprec_logger_start(DPREC_LOGGER_PRIMARY_MUTEX, 0, 0);
video/mt6765/videox/primary_display.c:	dprec_logger_done(DPREC_LOGGER_PRIMARY_MUTEX, 0, 0);
video/mt6765/videox/primary_display.c:	dprec_logger_get_result_value(DPREC_LOGGER_RDMA0_TRANSFER_1SECOND,
video/mt6765/videox/primary_display.c:	dprec_logger_get_result_value(DPREC_LOGGER_OVL_FRAME_COMPLETE_1SECOND,
video/mt6765/videox/primary_display.c:	dprec_logger_get_result_value(DPREC_LOGGER_PQ_TRIGGER_1SECOND, &fps);
video/mt6765/videox/primary_display.c:		dprec_logger_start(DPREC_LOGGER_PRIMARY_CMDQ_SET_DIRTY, 0, 0);
video/mt6765/videox/primary_display.c:		dprec_logger_done(DPREC_LOGGER_PRIMARY_CMDQ_SET_DIRTY, 0, 0);
video/mt6765/videox/primary_display.c:		dprec_logger_trigger(DPREC_LOGGER_PRIMARY_CMDQ_SET_DIRTY, 0, 1);
video/mt6765/videox/primary_display.c:		dprec_logger_start(DPREC_LOGGER_PRIMARY_CMDQ_SET_DIRTY, 0, 0);
video/mt6765/videox/primary_display.c:		dprec_logger_done(DPREC_LOGGER_PRIMARY_CMDQ_SET_DIRTY, 0, 0);
video/mt6765/videox/primary_display.c:	dprec_logger_start(DPREC_LOGGER_PRIMARY_CMDQ_FLUSH, blocking,
video/mt6765/videox/primary_display.c:	dprec_logger_done(DPREC_LOGGER_PRIMARY_CMDQ_FLUSH, userdata, 0);
video/mt6765/videox/primary_display.c:	dprec_logger_start(DPREC_LOGGER_PRIMARY_CMDQ_FLUSH, 0, 0);
video/mt6765/videox/primary_display.c:	dprec_logger_done(DPREC_LOGGER_PRIMARY_CMDQ_FLUSH, 0, 0);
video/mt6765/videox/primary_display.c:	dprec_logger_trigger(DPREC_LOGGER_PQ_TRIGGER_1SECOND, 0, 0);
video/mt6765/videox/primary_display.c:	if (disp_helper_get_option(DISP_OPT_MET_LOG))
video/mt6765/videox/primary_display.c:	if (disp_helper_get_option(DISP_OPT_MET_LOG))
video/mt6765/videox/primary_display.c:	if (disp_helper_get_option(DISP_OPT_MET_LOG))
video/mt6765/videox/primary_display.c:			dprec_logger_trigger(DPREC_LOGGER_PRIMARY_TRIGGER,
video/mt6765/videox/primary_display.c:			dprec_logger_trigger(DPREC_LOGGER_PRIMARY_TRIGGER,
video/mt6765/videox/primary_display.c:	dprec_logger_start(DPREC_LOGGER_PRIMARY_TRIGGER, 0, 0);
video/mt6765/videox/primary_display.c:	dprec_logger_done(DPREC_LOGGER_PRIMARY_TRIGGER, 0, 0);
video/mt6765/videox/primary_display.c:		dprec_logger_start(DPREC_LOGGER_PRIMARY_CONFIG,
video/mt6765/videox/primary_display.c:		dprec_logger_done(DPREC_LOGGER_PRIMARY_CONFIG,
video/mt6765/videox/primary_display.c:		DISP_LOG("DISP_GetVRamSize: %u bytes\n", vramSize);
video/mt6765/videox/disp_lowpower.c:	if (disp_helper_get_option(DISP_OPT_MET_LOG))
video/mt6765/videox/disp_lowpower.c:	if (disp_helper_get_option(DISP_OPT_MET_LOG))
video/mt6765/videox/disp_lowpower.c:	if (disp_helper_get_option(DISP_OPT_MET_LOG)) {
video/mt6765/videox/mtkfb_fence.c:#define MTKFB_FENCE_LOG(fmt, arg...)				
video/mt6765/videox/mtkfb_fence.c:#define MTKFB_FENCE_LOG_D_IF(con, fmt, arg...)			
video/mt6765/videox/mtkfb_fence.c:					DPREC_LOGGER_LEVEL_DEFAULT |
video/mt6765/videox/mtkfb_fence.c:					DPREC_LOGGER_LEVEL_SYSTRACE,
video/mt6765/videox/mtkfb_fence.c:					DPREC_LOGGER_LEVEL_DEFAULT,
video/mt6765/videox/mtkfb_fence.c:					DPREC_LOGGER_LEVEL_DEFAULT,
video/mt6765/videox/mtkfb_fence.c:					DPREC_LOGGER_LEVEL_DEFAULT |
video/mt6765/videox/mtkfb_fence.c:					DPREC_LOGGER_LEVEL_SYSTRACE,
video/mt6765/videox/mtkfb_fence.c:					DPREC_LOGGER_LEVEL_DEFAULT |
video/mt6765/videox/mtkfb_fence.c:					DPREC_LOGGER_LEVEL_SYSTRACE,
video/mt6765/videox/mtkfb_fence.c:					DPREC_LOGGER_LEVEL_DEFAULT |
video/mt6765/videox/mtkfb_fence.c:					DPREC_LOGGER_LEVEL_SYSTRACE,
video/mt6765/videox/mtkfb_fence.c:					DPREC_LOGGER_LEVEL_DEFAULT,
video/mt6765/videox/mtkfb_fence.c:					DPREC_LOGGER_LEVEL_DEFAULT |
video/mt6765/videox/mtkfb_fence.c:					DPREC_LOGGER_LEVEL_SYSTRACE,
video/mt6765/videox/mtkfb_fence.c:					DPREC_LOGGER_LEVEL_DEFAULT |
video/mt6765/videox/mtkfb_fence.c:					DPREC_LOGGER_LEVEL_SYSTRACE,
video/mt6765/videox/mtkfb_fence.c:					DPREC_LOGGER_LEVEL_DEFAULT |
video/mt6765/videox/mtkfb_fence.c:					DPREC_LOGGER_LEVEL_SYSTRACE,
video/mt6765/videox/mtkfb_fence.c:	MTKFB_FENCE_LOG("create ion client 0x%p\n", ion_client);
video/mt6765/videox/mtkfb_fence.c:		MTKFB_FENCE_LOG("NO NEED ion support\n");
video/mt6765/videox/mtkfb_fence.c:	MTKFB_FENCE_LOG("import ion handle fd=%d,hnd=0x%p\n",
video/mt6765/videox/mtkfb_fence.c:	MTKFB_FENCE_LOG("free ion handle 0x%p\n", handle);
video/mt6765/videox/mtkfb_fence.c:	MTKFB_FENCE_LOG("alloc mmu addr hnd=0x%p,mva=0x%08x\n",
video/mt6765/videox/mtkfb_fence.c:		MTKFB_FENCE_LOG("query buf mva: layer=%d, idx=%d, mva=0x%08x\n",
video/mt6765/videox/mtkfb_fence.c:		MTKFB_FENCE_LOG("create new mtkfb_fence_buf_info node %p\n",
video/mt6765/videox/mtkfb_fence.c:			dprec_logger_start(DPREC_LOGGER_DISPMGR_CACHE_SYNC,
video/mt6765/videox/mtkfb_fence.c:			dprec_logger_done(DPREC_LOGGER_DISPMGR_CACHE_SYNC,
video/mt6765/videox/mtkfb_fence.c:			dprec_logger_start(DPREC_LOGGER_DISPMGR_CACHE_SYNC,
video/mt6765/videox/mtkfb_fence.c:			dprec_logger_done(DPREC_LOGGER_DISPMGR_CACHE_SYNC,
video/mt6765/videox/mtkfb_fence.c:		MTKFB_FENCE_LOG("query buf mva: layer=%d, idx=%d, mva=0x%lx\n",
video/mt6765/videox/disp_drv_log.h:#ifndef __DISP_DRV_LOG_H__
video/mt6765/videox/disp_drv_log.h:#define __DISP_DRV_LOG_H__
video/mt6765/videox/disp_drv_log.h:#define DISP_LOG_PRINT(level, sub_module, fmt, args...)
video/mt6765/videox/disp_drv_log.h:#endif /* __DISP_DRV_LOG_H__ */
video/mt6765/videox/disp_recovery.c:	dprec_logger_start(DPREC_LOGGER_ESD_CMDQ, 0, 0);
video/mt6765/videox/disp_recovery.c:	dprec_logger_done(DPREC_LOGGER_ESD_CMDQ, 0, 0);
video/mt6765/videox/disp_recovery.c:	dprec_logger_start(DPREC_LOGGER_ESD_CMDQ, 0, 0);
video/mt6765/videox/disp_recovery.c:	dprec_logger_done(DPREC_LOGGER_ESD_CMDQ, 0, 0);
video/mt6765/videox/disp_recovery.c:	dprec_logger_start(DPREC_LOGGER_ESD_CHECK, 0, 0);
video/mt6765/videox/disp_recovery.c:	dprec_logger_done(DPREC_LOGGER_ESD_CHECK, 0, 0);
video/mt6765/videox/disp_recovery.c:	dprec_logger_start(DPREC_LOGGER_ESD_RECOVERY, 0, 0);
video/mt6765/videox/disp_recovery.c:	dprec_logger_done(DPREC_LOGGER_ESD_RECOVERY, 0, 0);
video/mt6765/videox/disp_recovery.c:	dprec_logger_start(DPREC_LOGGER_ESD_CHECK, 0, 0);
video/mt6765/videox/disp_recovery.c:	dprec_logger_done(DPREC_LOGGER_ESD_CHECK, 0, 0);
video/mt6765/videox/disp_helper.c:	{DISP_OPT_MET_LOG, 0, "DISP_OPT_MET_LOG"}, /* low power */
video/mt6765/videox/disp_helper.c:	disp_helper_set_option(DISP_OPT_MET_LOG, 1);
video/mt6765/videox/disp_assert_layer.c:		DISP_LOG_PRINT(ANDROID_LOG_WARN, "DAL",
video/mt6765/videox/disp_assert_layer.c:		DISP_LOG_PRINT(ANDROID_LOG_WARN, "DAL",
video/mt6765/videox/disp_assert_layer.c:		DISP_LOG_PRINT(ANDROID_LOG_WARN, "DAL",
video/mt6765/videox/disp_assert_layer.c:#define DAL_LOG(fmt, arg...)
video/mt6765/videox/debug.h:#ifdef CONFIG_FUCK_MTK_LOG
video/mt6765/videox/debug.h:			DISP_LOG_PRINT(ANDROID_LOG_INFO, "DBG", "%*s",
video/mt6765/videox/debug.h:			DISP_LOG_PRINT(ANDROID_LOG_INFO, "DBG", dbg_buf);
video/mt6765/dispsys/ddp_dsi.c:#define LOG_TAG "DSI"
video/mt6765/dispsys/ddp_dsi.c:		DISP_LOG_PRINT(ANDROID_LOG_INFO, "DSI",
video/mt6765/dispsys/ddp_dsi.c:		DISP_LOG_PRINT(ANDROID_LOG_INFO, "DSI",
video/mt6765/dispsys/ddp_dsi.c:	DISP_LOG_PRINT(ANDROID_LOG_INFO, "DSI",
video/mt6765/dispsys/ddp_dump.c:#define LOG_TAG "dump"
video/mt6765/dispsys/ddp_debug.c:#define LOG_TAG "DEBUG"
video/mt6765/dispsys/ddp_debug.c:static const long int DEFAULT_LOG_FPS_WND_SIZE = 0;
video/mt6765/dispsys/ddp_wdma_ex.c:#define LOG_TAG "WDMA"
video/mt6765/dispsys/ddp_info.c:#define LOG_TAG "INFO"
video/mt6765/dispsys/ddp_irq.c:#define LOG_TAG "IRQ"
video/mt6765/dispsys/ddp_color_format.c:#undef LOG_TAG
video/mt6765/dispsys/ddp_color_format.c:#define LOG_TAG "color_fmt"
video/mt6765/dispsys/ddp_log.h:#ifndef _H_DDP_LOG_
video/mt6765/dispsys/ddp_log.h:#define _H_DDP_LOG_
video/mt6765/dispsys/ddp_log.h:#ifndef LOG_TAG
video/mt6765/dispsys/ddp_log.h:#define LOG_TAG
video/mt6765/dispsys/ddp_log.h:#define DISP_LOG_I(fmt, args...)	
video/mt6765/dispsys/ddp_log.h:#define DISP_LOG_V(fmt, args...)	
video/mt6765/dispsys/ddp_log.h:#define DISP_LOG_D(fmt, args...)	
video/mt6765/dispsys/ddp_log.h:#define DISP_LOG_W(fmt, args...)	
video/mt6765/dispsys/ddp_log.h:#define DISP_LOG_E(fmt, args...)	
video/mt6765/dispsys/ddp_rsz.c:#define LOG_TAG "RSZ"
video/mt6765/dispsys/ddp_manager.c:#define LOG_TAG "ddp_manager"
video/mt6765/dispsys/ddp_manager.c:		DISP_LOG_E("unknown scenario %d\n", scenario);
video/mt6765/dispsys/ddp_manager.c:		DISP_LOG_E("Fail to create handle on scenario %s\n",
video/mt6765/dispsys/ddp_manager.c:	DISP_LOG_I("modify handle %p from %s to %s\n",
video/mt6765/dispsys/ddp_manager.c:	DISP_LOG_V("get dst module on scenario %s, module %s\n",
video/mt6765/dispsys/ddp_manager.c:	DISP_LOG_I("path start on scenario %s\n",
video/mt6765/dispsys/ddp_manager.c:	DISP_LOG_I("path stop on scenario %s\n",
video/mt6765/dispsys/ddp_manager.c:	DISP_LOG_I("path reset on scenario %s\n",
video/mt6765/dispsys/ddp_manager.c:	DISP_LOG_V("%s ovl %d, rdma %d, wdma %d, dst %d on handle %p %s\n",
video/mt6765/dispsys/ddp_manager.c:	DISP_LOG_I("dpmgr_path_trigger on scenario %s\n",
video/mt6765/dispsys/ddp_manager.c:	DISP_LOG_I("path power off on scenario %s\n",
video/mt6765/dispsys/ddp_manager.c:	DISP_LOG_I("path power on scenario %s\n",
video/mt6765/dispsys/ddp_manager.c:	DISP_LOG_I("path power off on scenario %s\n",
video/mt6765/dispsys/ddp_manager.c:	DISP_LOG_I("path power on scenario %s\n",
video/mt6765/dispsys/ddp_manager.c:	/* DISP_LOG_W("dpmgr_path_user_cmd msg 0x%08x\n",msg); */
video/mt6765/dispsys/ddp_manager.c:		DISP_LOG_W("dpmgr_path_user_cmd io not supported\n");
video/mt6765/dispsys/ddp_manager.c:	DISP_LOG_V("path check busy on scenario %s\n",
video/mt6765/dispsys/ddp_manager.c:				DISP_LOG_V("%s is busy\n",
video/mt6765/dispsys/ddp_manager.c:	DISP_LOG_V("path set lcm drv handle %p\n", handle);
video/mt6765/dispsys/ddp_manager.c:	DISP_LOG_E("fail to map event %s to irq 0x%x on scenario %s\n",
video/mt6765/dispsys/ddp_manager.c:			DISP_LOG_E("wait %s timeout on scenario %s\n",
video/mt6765/dispsys/ddp_manager.c:			DISP_LOG_E("wait %s ir by other timeleft %d on %s\n",
video/mt6765/dispsys/ddp_manager.c:			DISP_LOG_V("received event %s timeleft %d on %s\n",
video/mt6765/dispsys/ddp_manager.c:	DISP_LOG_E("wait event %s not initialized on scenario %s\n",
video/mt6765/dispsys/ddp_manager.c:		DISP_LOG_E("wait event %s not initialized on scenario %s\n",
video/mt6765/dispsys/ddp_manager.c:		DISP_LOG_E("wait %s interrupt by other ret %d on scenario %s\n",
video/mt6765/dispsys/ddp_manager.c:	DISP_LOG_I("ddp manager init\n");
video/mt6765/dispsys/ddp_manager.c:	DISP_LOG_I(" %s factory_mode_test\n",
video/mt6765/dispsys/ddp_manager.c:	DISP_LOG_I(" %s factory_mode_test\n",
video/mt6765/dispsys/ddp_drv.c:#define LOG_TAG "ddp_drv"
video/mt6765/dispsys/ddp_reg_dma.h:#define DISP_REG_RDMA_FIFO_LOG (DISPSYS_RDMA0_BASE+0x044)
video/mt6765/dispsys/ddp_reg_dma.h:#define FIFO_LOG_FLD_RDMA_FIFO_LOG REG_FLD_MSB_LSB(11, 0)
video/mt6765/dispsys/display_recorder.h:enum DPREC_LOGGER_ENUM {
video/mt6765/dispsys/display_recorder.h:	DPREC_LOGGER_PRIMARY_TRIGGER = 0,
video/mt6765/dispsys/display_recorder.h:	DPREC_LOGGER_PRIMARY_CONFIG,
video/mt6765/dispsys/display_recorder.h:	DPREC_LOGGER_PRIMARY_CMDQ_SET_DIRTY,
video/mt6765/dispsys/display_recorder.h:	DPREC_LOGGER_PRIMARY_CMDQ_FLUSH,
video/mt6765/dispsys/display_recorder.h:	DPREC_LOGGER_PRIMARY_BUFFER_KEEP,
video/mt6765/dispsys/display_recorder.h:	DPREC_LOGGER_PRIMARY_MUTEX,
video/mt6765/dispsys/display_recorder.h:	DPREC_LOGGER_DISPMGR_PREPARE,
video/mt6765/dispsys/display_recorder.h:	DPREC_LOGGER_DISPMGR_SET_INPUT,
video/mt6765/dispsys/display_recorder.h:	DPREC_LOGGER_DISPMGR_TRIGGER,
video/mt6765/dispsys/display_recorder.h:	DPREC_LOGGER_DISPMGR_RELEASE,
video/mt6765/dispsys/display_recorder.h:	DPREC_LOGGER_DISPMGR_CACHE_SYNC,
video/mt6765/dispsys/display_recorder.h:	DPREC_LOGGER_DISPMGR_WAIT_VSYNC,
video/mt6765/dispsys/display_recorder.h:	DPREC_LOGGER_OVL_FRAME_COMPLETE_1SECOND,
video/mt6765/dispsys/display_recorder.h:	DPREC_LOGGER_RDMA0_TRANSFER,
video/mt6765/dispsys/display_recorder.h:	DPREC_LOGGER_RDMA0_TRANSFER_1SECOND,
video/mt6765/dispsys/display_recorder.h:	DPREC_LOGGER_DSI_EXT_TE,
video/mt6765/dispsys/display_recorder.h:	DPREC_LOGGER_ESD_RECOVERY,
video/mt6765/dispsys/display_recorder.h:	DPREC_LOGGER_ESD_CHECK,
video/mt6765/dispsys/display_recorder.h:	DPREC_LOGGER_ESD_CMDQ,
video/mt6765/dispsys/display_recorder.h:	DPREC_LOGGER_WDMA_DUMP,
video/mt6765/dispsys/display_recorder.h:	DPREC_LOGGER_EXTD_START,
video/mt6765/dispsys/display_recorder.h:	DPREC_LOGGER_EXTD_STATUS = DPREC_LOGGER_EXTD_START,
video/mt6765/dispsys/display_recorder.h:	DPREC_LOGGER_EXTD_ERR_INFO,
video/mt6765/dispsys/display_recorder.h:	DPREC_LOGGER_EXTD_PREPARE,
video/mt6765/dispsys/display_recorder.h:	DPREC_LOGGER_EXTD_SET_INPUT,
video/mt6765/dispsys/display_recorder.h:	DPREC_LOGGER_EXTD_TRIGGER,
video/mt6765/dispsys/display_recorder.h:	DPREC_LOGGER_EXTD_RELEASE,
video/mt6765/dispsys/display_recorder.h:	DPREC_LOGGER_EXTD_IRQ,
video/mt6765/dispsys/display_recorder.h:	DPREC_LOGGER_EXTD_END = DPREC_LOGGER_EXTD_IRQ,
video/mt6765/dispsys/display_recorder.h:	DPREC_LOGGER_PQ_TRIGGER_1SECOND,
video/mt6765/dispsys/display_recorder.h:	DPREC_LOGGER_NUM
video/mt6765/dispsys/display_recorder.h:#define DPREC_LOGGER_LEVEL_ALL 0xFFFFFFFF
video/mt6765/dispsys/display_recorder.h:#define DPREC_LOGGER_LEVEL_DEFAULT \
video/mt6765/dispsys/display_recorder.h:	(DPREC_LOGGER_LEVEL_MMP | DPREC_LOGGER_LEVEL_LOGGER)
video/mt6765/dispsys/display_recorder.h:#define DPREC_LOGGER_LEVEL_UART_LOG			(0x1<<0)
video/mt6765/dispsys/display_recorder.h:#define DPREC_LOGGER_LEVEL_MOBILE_LOG			(0x1<<1)
video/mt6765/dispsys/display_recorder.h:#define DPREC_LOGGER_LEVEL_MMP				(0x1<<2)
video/mt6765/dispsys/display_recorder.h:#define DPREC_LOGGER_LEVEL_SYSTRACE			(0x1<<3)
video/mt6765/dispsys/display_recorder.h:#define DPREC_LOGGER_LEVEL_AEE_DUMP			(0x1<<4)
video/mt6765/dispsys/display_recorder.h:#define DPREC_LOGGER_LEVEL_LOGGER			(0x1<<5)
video/mt6765/dispsys/display_recorder.h:#ifdef CONFIG_FUCK_MTK_LOG
video/mt6765/dispsys/display_recorder.h:#define LOGGER_BUFFER_SIZE 4
video/mt6765/dispsys/display_recorder.h:#define LOGGER_BUFFER_SIZE (8 * 1024)
video/mt6765/dispsys/display_recorder.h:enum DPREC_LOGGER_PR_TYPE {
video/mt6765/dispsys/display_recorder.h:	DPREC_LOGGER_ERROR,
video/mt6765/dispsys/display_recorder.h:	DPREC_LOGGER_FENCE,
video/mt6765/dispsys/display_recorder.h:	DPREC_LOGGER_DEBUG,
video/mt6765/dispsys/display_recorder.h:	DPREC_LOGGER_DUMP,
video/mt6765/dispsys/display_recorder.h:	DPREC_LOGGER_STATUS,
video/mt6765/dispsys/display_recorder.h:	DPREC_LOGGER_PR_NUM
video/mt6765/dispsys/display_recorder.h:#define DPREC_ERROR_LOG_BUFFER_LENGTH (1024*8)
video/mt6765/dispsys/display_recorder.h:void dprec_logger_trigger(enum DPREC_LOGGER_ENUM source, unsigned int val1,
video/mt6765/dispsys/display_recorder.h:void dprec_logger_start(enum DPREC_LOGGER_ENUM source, unsigned int val1,
video/mt6765/dispsys/display_recorder.h:void dprec_logger_done(enum DPREC_LOGGER_ENUM source, unsigned int val1,
video/mt6765/dispsys/display_recorder.h:void dprec_logger_reset(enum DPREC_LOGGER_ENUM source);
video/mt6765/dispsys/display_recorder.h:int dprec_logger_get_result_string(enum DPREC_LOGGER_ENUM source,
video/mt6765/dispsys/display_recorder.h:int dprec_logger_get_result_value(enum DPREC_LOGGER_ENUM source,
video/mt6765/dispsys/display_recorder.h:void dprec_logger_submit(enum DPREC_LOGGER_ENUM source,
video/mt6765/dispsys/display_recorder.h:int dprec_logger_get_buf(enum DPREC_LOGGER_PR_TYPE type, char *stringbuf,
video/mt6765/dispsys/ddp_path.c:#define LOG_TAG "ddp_path"
video/mt6765/dispsys/ddp_mmp.c:#define LOG_TAG "MMP"
video/mt6765/dispsys/ddp_rdma_ex.c:#define LOG_TAG "RDMA"
video/mt6765/dispsys/ddp_rdma_ex.c:	DDPDUMP("(0x044)R_FIFO_LOG=0x%x\n",
video/mt6765/dispsys/ddp_rdma_ex.c:		DISP_REG_GET(DISP_REG_RDMA_FIFO_LOG + offset));
video/mt6765/dispsys/ddp_rdma_ex.c:		DISP_REG_GET(DISP_REG_RDMA_FIFO_LOG + offset));
video/mt6765/dispsys/ddp_ovl.c:#define LOG_TAG "OVL"
video/mt6765/dispsys/ddp_mutex.c:			DISP_LOG_W("%s: dst_mode=%s, but is video mode !!\n",
video/mt6765/dispsys/display_recorder.c:struct dprec_logger logger[DPREC_LOGGER_NUM] = { { 0 } };
video/mt6765/dispsys/display_recorder.c:unsigned int dprec_error_log_buflen = DPREC_ERROR_LOG_BUFFER_LENGTH;
video/mt6765/dispsys/display_recorder.c:void dprec_logger_reset(enum DPREC_LOGGER_ENUM source)
video/mt6765/dispsys/display_recorder.c:int dprec_logger_get_result_string(enum DPREC_LOGGER_ENUM source,
video/mt6765/dispsys/display_recorder.c:int dprec_logger_get_buf(enum DPREC_LOGGER_PR_TYPE type, char *stringbuf,
video/mt6765/dispsys/display_recorder.c:int dprec_logger_get_result_value(enum DPREC_LOGGER_ENUM source,
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("top clock on\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("set Mutex and connect path\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module init\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module init done\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module power on\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module config\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module reset\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module start\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module trigger\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module dump_info\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module stop\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module reset\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module power off\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("set Mutex and disconnect path\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("top clock off\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module init\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module power on\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module stop\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module power Off\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("top clock on\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("set Mutex and connect path\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module init\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module power on\n");
ext_disp/common/test/dpi_dvt_test.c:		DPI_DVT_LOG_W
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module config\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module reset\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module start\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module trigger\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module dump_info\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module stop\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module reset\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module power off\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("set Mutex and disconnect path\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("top clock off\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("top clock on\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("set Mutex and connect path\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module init\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module init done\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module power on\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module config\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module reset\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module start\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module trigger\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module stop\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module reset\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module power off\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("set Mutex and disconnect path\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("top clock off\n");
ext_disp/common/test/dpi_dvt_test.c:		DPI_DVT_LOG_W("RDMA_MODE_DIRECT_LINK configure\n");
ext_disp/common/test/dpi_dvt_test.c:		DPI_DVT_LOG_W("RDMA_MODE_MEMORY configure\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("dpi_dvt_parameters:%d\n", arg);
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("dvt_copy_file_data, resolution: %d\n", resolution);
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("dvt_allocate_outbuffer, width: %d, height: %d\n", 1920,
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("resolution %d\n", resolution);
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("data_va %lx , client %p\n", out_va, client);
ext_disp/common/test/dpi_dvt_test.c:		DPI_DVT_LOG_W("dvt_allocate_buffer, width: %d, height: %d\n",
ext_disp/common/test/dpi_dvt_test.c:		DPI_DVT_LOG_W("dvt_allocate_buffer, width: %d, height: %d\n",
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("resolution %d\n", resolution);
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("data_va %lx , client %p\n", data_va, client);
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("data_mva %x\n", data_mva);
ext_disp/common/test/dpi_dvt_test.c:		DPI_DVT_LOG_W("dvt_allocate_buffer, width: %d, height: %d\n",
ext_disp/common/test/dpi_dvt_test.c:		DPI_DVT_LOG_W("dvt_allocate_buffer, width: %d, height: %d\n",
ext_disp/common/test/dpi_dvt_test.c:		DPI_DVT_LOG_W("resolution %d\n", resolution);
ext_disp/common/test/dpi_dvt_test.c:		DPI_DVT_LOG_W("data_va %lx , client %p\n", ldvt_data_va[i],
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("top clock on\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("set Mutex and connect path\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module init\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module power on\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module config\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module reset\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module start\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module trigger\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module dump_info\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module stop\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module reset\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module power off\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("set Mutex and disconnect path\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("top clock off\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("top clock on\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("set Mutex and connect path\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module init\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module power on\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module config\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module reset\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module start\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module trigger\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module dump_info\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module stop\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module reset\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module power off\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("set Mutex and disconnect path\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("top clock off\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("dpi_dvt_testcase_4_timing, resolution: %d\n",
ext_disp/common/test/dpi_dvt_test.c:		DPI_DVT_LOG_W
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("dpi_dvt_testcase_2_bg, resolution: %d\n", resolution);
ext_disp/common/test/dpi_dvt_test.c:		DPI_DVT_LOG_W
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("dpi_dvt_testcase_3_pattern, pattern: %d\n", pattern);
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("top clock on\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("dpi_dvt_testcase_6_yuv444, resolution: %d, format: %d\n",
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("dpi_dvt_testcase_10_checkSum, resolution: %d\n",
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("checksum[0] = %x", checksum[0] & 0xffffff);
ext_disp/common/test/dpi_dvt_test.c:		DPI_DVT_LOG_W("checksum[%d] = %x", i, checksum[i] & 0xffffff);
ext_disp/common/test/dpi_dvt_test.c:			DPI_DVT_LOG_W
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("checksum[%d] = %x", i, checksum[i] & 0xffffff);
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("dpi_dvt_testcase_11_ovl1_to_dpi, resolution: %d\n",
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("dpi_dvt_testcase_18_timing, resolution: %d\n",
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("top clock on\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("set Mutex and connect path\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module init\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module power on\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module config\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module reset\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module start\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module trigger\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module dump_info\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module stop\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module reset\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module power off\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("set Mutex and disconnect path\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("top clock off\n");
ext_disp/common/test/dpi_dvt_test.c:				DPI_DVT_LOG_W("OVL1-WDMA1 TEST FAIL!\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("out_va has data %d, %d, %d\n", out[0], out[1], out[2]);
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("data_va has data %d, %d, %d\n", data[0], data[1],
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("dpi_ldvt_testcase_20, resolution: %d\n", resolution);
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("dpi_ldvt_testcase_20, resolution: %d\n", resolution);
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("top clock on\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("set Mutex and connect path\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("dpi_ldvt_testcase_20, resolution: %d\n", resolution);
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("top clock on\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("set Mutex and connect path\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("dpi_ldvt_testcase_20, resolution: %d\n", resolution);
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("top clock on\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("set Mutex and connect path\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module init\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module init done\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module power on\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module reset\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("module start\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("top clock on\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("set Mutex and connect path\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("DSI_TXRX_CON reg = 0x%x\n", reg);
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("top clock on\n");
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("set Mutex and connect path\n");
ext_disp/common/test/dpi_dvt_test.c:/* DPI_DVT_LOG_W("DSI_TXRX_CON reg = 0x%x\n", reg); */
ext_disp/common/test/dpi_dvt_test.c:		DPI_DVT_LOG_W
ext_disp/common/test/dpi_dvt_test.c:	DPI_DVT_LOG_W("testcase: %x\n", arg);
ext_disp/common/test/ddp_dpi_ext.c:#define DPI_EXT_LOG_PRINT(fmt, arg...)  
ext_disp/common/test/ddp_dpi_ext.c:	DPI_EXT_LOG_PRINT("enableInterlaceMode, resolution: %d\n", resolution);
ext_disp/common/test/ddp_dpi_ext.c:		DPI_EXT_LOG_PRINT("TGEN_VWIDTH_LODD: 0x%x\n",
ext_disp/common/test/ddp_dpi_ext.c:		DPI_EXT_LOG_PRINT("TGEN_VPORCH_LODD: 0x%x\n",
ext_disp/common/test/ddp_dpi_ext.c:		DPI_EXT_LOG_PRINT("TGEN_VWIDTH_LEVEN: 0x%x\n",
ext_disp/common/test/ddp_dpi_ext.c:		DPI_EXT_LOG_PRINT("TGEN_VPORCH_LEVEN: 0x%x\n",
ext_disp/common/test/ddp_dpi_ext.c:		DPI_EXT_LOG_PRINT("TGEN_VWIDTH_LODD: 0x%x\n",
ext_disp/common/test/ddp_dpi_ext.c:		DPI_EXT_LOG_PRINT("TGEN_VPORCH_LODD: 0x%x\n",
ext_disp/common/test/ddp_dpi_ext.c:		DPI_EXT_LOG_PRINT("TGEN_VWIDTH_LEVEN: 0x%x\n",
ext_disp/common/test/ddp_dpi_ext.c:		DPI_EXT_LOG_PRINT("TGEN_VPORCH_LEVEN: 0x%x\n",
ext_disp/common/test/ddp_dpi_ext.c:	DPI_EXT_LOG_PRINT("config3DMode\n");
ext_disp/common/test/ddp_dpi_ext.c:	DPI_EXT_LOG_PRINT("TGEN_VWIDTH_LODD: 0x%x\n",
ext_disp/common/test/ddp_dpi_ext.c:	DPI_EXT_LOG_PRINT("TGEN_VPORCH_LODD: 0x%x\n",
ext_disp/common/test/ddp_dpi_ext.c:	DPI_EXT_LOG_PRINT("TGEN_VWIDTH_RODD: 0x%x\n",
ext_disp/common/test/ddp_dpi_ext.c:	DPI_EXT_LOG_PRINT("TGEN_VPORCH_RODD: 0x%x\n",
ext_disp/common/test/ddp_dpi_ext.c:	DPI_EXT_LOG_PRINT("config3DInterlaceMode\n");
ext_disp/common/test/ddp_dpi_ext.c:	DPI_EXT_LOG_PRINT("TGEN_VWIDTH_LODD: 0x%x\n",
ext_disp/common/test/ddp_dpi_ext.c:	DPI_EXT_LOG_PRINT("TGEN_VPORCH_LODD: 0x%x\n",
ext_disp/common/test/ddp_dpi_ext.c:	DPI_EXT_LOG_PRINT("TGEN_VWIDTH_LEVEN: 0x%x\n",
ext_disp/common/test/ddp_dpi_ext.c:	DPI_EXT_LOG_PRINT("TGEN_VPORCH_LEVEN: 0x%x\n",
ext_disp/common/test/ddp_dpi_ext.c:	DPI_EXT_LOG_PRINT("TGEN_VWIDTH_LEVEN: 0x%x\n",
ext_disp/common/test/ddp_dpi_ext.c:	DPI_EXT_LOG_PRINT("TGEN_VPORCH_LEVEN: 0x%x\n",
ext_disp/common/test/ddp_dpi_ext.c:	DPI_EXT_LOG_PRINT("TGEN_VWIDTH_REVEN: 0x%x\n",
ext_disp/common/test/ddp_dpi_ext.c:	DPI_EXT_LOG_PRINT("TGEN_VPORCH_REVEN: 0x%x\n",
ext_disp/common/test/ddp_dpi_ext.c:	DPI_EXT_LOG_PRINT("enableRGB2YUV\n");
ext_disp/common/test/ddp_dpi_ext.c:	DPI_EXT_LOG_PRINT("enableSingleEdge\n");
ext_disp/common/test/ddp_dpi_ext.c:	DPI_EXT_LOG_PRINT("enableAndGetChecksum\n");
ext_disp/common/test/ddp_dpi_ext.c:	DPI_EXT_LOG_PRINT("enableAndGetChecksumCmdq\n");
ext_disp/common/test/ddp_dpi_ext.c:		DPI_EXT_LOG_PRINT("DISPSYS_DPI_BASE+0x48: 0x%x\n",
ext_disp/common/test/ddp_dpi_ext.c:	DPI_EXT_LOG_PRINT("configDpiRepetition\n");
ext_disp/common/test/ddp_dpi_ext.c:	DPI_EXT_LOG_PRINT("configDpiEmbsync\n");
ext_disp/common/test/dpi_dvt_test.h:#define DPI_DVT_LOG_W(fmt, args...)
ext_disp/common/test/dpi_dvt_platform.c:	DPI_DVT_LOG_W("mutex %d enable\n", hwmutex_id);
ext_disp/common/test/dpi_dvt_platform.c:	DPI_DVT_LOG_W("mutex %d disable\n", hwmutex_id);
ext_disp/common/test/dpi_dvt_platform.c:	DPI_DVT_LOG_W("mutex %d reset\n", hwmutex_id);
ext_disp/common/test/dpi_dvt_platform.c:	DPI_DVT_LOG_W("dvt_mutex_set %d mode=0x%x, sof=%s, sof=%x\n", mutex_id,
ext_disp/common/test/dpi_dvt_platform.c:	DPI_DVT_LOG_W("dvt_mutex_set %d mode=0x%x, sof=%s\n", mutex_id, mode,
ext_disp/common/test/dpi_dvt_platform.c:	DPI_DVT_LOG_W("dvt_mutex_set %d mode=0x%x, sof=%s\n", mutex_id, mode,
ext_disp/common/test/dpi_dvt_platform.c:	DPI_DVT_LOG_W("dvt_mutex_set %d mode=0x%x, sof=%s\n", mutex_id, mode,
ext_disp/common/test/dpi_dvt_platform.c:	DPI_DVT_LOG_W("dvt_mutex_set %d mode=0x%x, sof=%s, sof=%x\n", mutex_id,
ext_disp/common/test/dpi_dvt_platform.c:	DPI_DVT_LOG_W("dvt_mutex_set %d mode=0x%x, sof=%s\n", mutex_id, mode,
ext_disp/common/test/dpi_dvt_platform.c:	DPI_DVT_LOG_W("dvt_mutex_set %d mode=0x%x, sof=%s, sof=%x\n", mutex_id,
ext_disp/include/mtk_extd_mgr.h:#define MTK_HDMI_ENABLE_LOG                     HDMI_IOWR(54, unsigned int)
ext_disp/mt6765/extd_epd.c:	/*RET_VOID_IF_NOLOG(!IS_EPD_ON()); */
ext_disp/mt6765/extd_log.h:#ifndef __EXTD_DRV_LOG_H__
ext_disp/mt6765/extd_log.h:#define __EXTD_DRV_LOG_H__
ext_disp/mt6765/extd_utils.c:	case MTK_HDMI_ENABLE_LOG:
ext_disp/mt6765/extd_utils.c:		return "MTK_HDMI_ENABLE_LOG";
eccci/modem_sys.h:} LOGGING_MODE;
eccci/fsm/ccci_fsm_ioctl.c:			CCCI_ERROR_LOG(md_id, FSM,
eccci/fsm/ccci_fsm_ioctl.c:			CCCI_ERROR_LOG(md_id, FSM,
eccci/fsm/ccci_fsm_ioctl.c:		CCCI_NORMAL_LOG(md_id, FSM, "get bat voltage %d\n", data);
eccci/fsm/ccci_fsm_ioctl.c:			CCCI_ERROR_LOG(md_id, FSM,
eccci/fsm/ccci_fsm_ioctl.c:			CCCI_ERROR_LOG(md_id, FSM,
eccci/fsm/ccci_fsm_ioctl.c:			CCCI_ERROR_LOG(md_id, FSM,
eccci/fsm/ccci_fsm_ioctl.c:		CCCI_NORMAL_LOG(md_id, FSM,
eccci/fsm/ccci_fsm_ioctl.c:			CCCI_ERROR_LOG(md_id, FSM,
eccci/fsm/ccci_fsm_ioctl.c:			CCCI_NORMAL_LOG(md_id, FSM,
eccci/fsm/ccci_fsm_ioctl.c:			CCCI_ERROR_LOG(md_id, FSM,
eccci/fsm/ccci_fsm_ioctl.c:				CCCI_ERROR_LOG(md_id, FSM,
eccci/fsm/ccci_fsm_ioctl.c:			CCCI_BOOTUP_LOG(md_id, FSM,
eccci/fsm/ccci_fsm_ioctl.c:			CCCI_BOOTUP_LOG(md_id, FSM,
eccci/fsm/ccci_fsm_ioctl.c:		CCCI_BOOTUP_LOG(md_id, FSM,
eccci/fsm/ccci_fsm_ioctl.c:			CCCI_BOOTUP_LOG(md_id, FSM,
eccci/fsm/ccci_fsm_ioctl.c:			CCCI_BOOTUP_LOG(md_id, FSM,
eccci/fsm/ccci_fsm_ioctl.c:			CCCI_NORMAL_LOG(md_id, FSM,
eccci/fsm/ccci_fsm_ioctl.c:			CCCI_NORMAL_LOG(md_id, FSM,
eccci/fsm/ccci_fsm_ioctl.c:			CCCI_NORMAL_LOG(md_id, FSM,
eccci/fsm/ccci_fsm_ioctl.c:			CCCI_NORMAL_LOG(md_id, FSM,
eccci/fsm/ccci_fsm_ioctl.c:				CCCI_ERROR_LOG(md_id, FSM,
eccci/fsm/ccci_fsm_ioctl.c:			CCCI_ERROR_LOG(md_id, FSM,
eccci/fsm/ccci_fsm_ioctl.c:			CCCI_ERROR_LOG(md_id, FSM,
eccci/fsm/ccci_fsm_ioctl.c:		CCCI_NORMAL_LOG(md_id, FSM,
eccci/fsm/ccci_fsm_ioctl.c:			CCCI_BOOTUP_LOG(md_id, FSM,
eccci/fsm/ccci_fsm_ioctl.c:			CCCI_NORMAL_LOG(md_id, FSM,
eccci/fsm/ccci_fsm_ioctl.c:			CCCI_NORMAL_LOG(md_id, FSM,
eccci/fsm/ccci_fsm_ioctl.c:			CCCI_NORMAL_LOG(md_id, FSM,
eccci/fsm/ccci_fsm_ioctl.c:			CCCI_NORMAL_LOG(md_id, FSM,
eccci/fsm/ccci_fsm_ioctl.c:		CCCI_NORMAL_LOG(md_id, FSM,
eccci/fsm/ccci_fsm_ioctl.c:			CCCI_ERROR_LOG(md_id, FSM,
eccci/fsm/ccci_fsm_ioctl.c:		CCCI_NORMAL_LOG(md_id, FSM,
eccci/fsm/ccci_fsm_ioctl.c:				CCCI_ERROR_LOG(md_id, FSM,
eccci/fsm/ccci_fsm_ioctl.c:		CCCI_ERROR_LOG(-1, CHAR, "[%s] error: put_user fail!\n",
eccci/fsm/ccci_fsm_ioctl.c:			CCCI_ERROR_LOG(md_id, FSM,
eccci/fsm/ccci_fsm_ioctl.c:			CCCI_ERROR_LOG(md_id, FSM,
eccci/fsm/ccci_fsm_ioctl.c:			CCCI_ERROR_LOG(md_id, FSM,
eccci/fsm/ccci_fsm_ioctl.c:			CCCI_ERROR_LOG(md_id, FSM,
eccci/fsm/ccci_fsm_ioctl.c:			CCCI_ERROR_LOG(md_id, FSM,
eccci/fsm/ccci_fsm_ioctl.c:	case CCCI_IOC_MDLOG_DUMP_DONE:
eccci/fsm/ccci_fsm_internal.h:	CCCI_OP_LOG_LEVEL,
eccci/fsm/ccci_fsm_sys.c:	CCCI_NORMAL_LOG(-1, FSM, "release fsm kobject\n");
eccci/fsm/ccci_fsm_sys.c:		CCCI_ERROR_LOG(-1, FSM, "fail to add fsm kobject\n");
eccci/fsm/ccci_fsm_scp.c:		CCCI_ERROR_LOG(md_id, FSM,
eccci/fsm/ccci_fsm_scp.c:	CCCI_NORMAL_LOG(scp_ipi_tx_msg.md_id, FSM,
eccci/fsm/ccci_fsm_scp.c:		CCCI_ERROR_LOG(md_id, FSM, "IPI send fail!\n");
eccci/fsm/ccci_fsm_scp.c:				CCCI_ERROR_LOG(scp_ctl->md_id, FSM,
eccci/fsm/ccci_fsm_scp.c:					CCCI_ERROR_LOG(scp_ctl->md_id, FSM,
eccci/fsm/ccci_fsm_scp.c:				CCCI_ERROR_LOG(scp_ctl->md_id, CORE,
eccci/fsm/ccci_fsm_scp.c:			CCCI_ERROR_LOG(ipi_msg_ptr->md_id,
eccci/fsm/ccci_fsm_scp.c:					CCCI_NORMAL_LOG(ipi_msg_ptr->md_id, FSM,
eccci/fsm/ccci_fsm_scp.c:					CCCI_NORMAL_LOG(ipi_msg_ptr->md_id, FSM,
eccci/fsm/ccci_fsm_scp.c:		CCCI_ERROR_LOG(-1, CORE,
eccci/fsm/ccci_fsm_scp.c:	CCCI_NORMAL_LOG(ipi_msg_ptr->md_id, CORE,
eccci/fsm/ccci_fsm_scp.c:	CCCI_NORMAL_LOG(-1, FSM, "register IPI\n");
eccci/fsm/ccci_fsm_scp.c:		CCCI_ERROR_LOG(-1, FSM, "register IPI fail!\n");
eccci/fsm/ccci_fsm_monitor.c:		CCCI_ERROR_LOG(monitor_ctl->md_id, FSM, "force stop MD fail\n");
eccci/fsm/ccci_fsm_monitor.c:			CCCI_ERROR_LOG(monitor_ctl->md_id, FSM,
eccci/fsm/ccci_fsm_monitor.c:		CCCI_ERROR_LOG(monitor_ctl->md_id, FSM,
eccci/fsm/ccci_fsm_monitor.c:		CCCI_ERROR_LOG(monitor_ctl->md_id, FSM,
eccci/fsm/ccci_fsm_monitor.c:		CCCI_ERROR_LOG(monitor_ctl->md_id, FSM,
eccci/fsm/ccci_fsm_monitor.c:		CCCI_ERROR_LOG(monitor_ctl->md_id, FSM,
eccci/fsm/ccci_fsm_monitor.c:		CCCI_ERROR_LOG(monitor_ctl->md_id, FSM,
eccci/fsm/ccci_fsm_poller.c:	CCCI_ERROR_LOG(md_id, FSM,
eccci/fsm/ccci_fsm_poller.c:			CCCI_ERROR_LOG(md_id, FSM,
eccci/fsm/ccci_fsm_poller.c:			CCCI_ERROR_LOG(md_id, FSM,
eccci/fsm/ccci_fsm_poller.c:		CCCI_ERROR_LOG(md_id, FSM,
eccci/fsm/ccci_fsm_poller.c:	CCCI_ERROR_LOG(md_id, FSM,
eccci/fsm/ccci_fsm_poller.c:				CRIT_USR_MDLOG) != 1)
eccci/fsm/ccci_fsm_poller.c:		CCCI_NORMAL_LOG(poller_ctl->md_id, FSM,
eccci/fsm/ccci_fsm_poller.c:		CCCI_NORMAL_LOG(poller_ctl->md_id, FSM,
eccci/fsm/ccci_fsm_poller.c:				CCCI_ERROR_LOG(poller_ctl->md_id, FSM,
eccci/fsm/ccci_fsm_poller.c:					CCCI_ERROR_LOG(poller_ctl->md_id, FSM,
eccci/fsm/ccci_fsm_poller.c:	CCCI_NORMAL_LOG(poller_ctl->md_id, FSM,
eccci/fsm/ccci_fsm_ee.c:		CCCI_ERROR_LOG(md_id, FSM, "MD exception stage 1!\n");
eccci/fsm/ccci_fsm_ee.c:			CCCI_ERROR_LOG(md_id, FSM,
eccci/fsm/ccci_fsm_ee.c:		CCCI_ERROR_LOG(md_id, FSM, "MD exception stage 1: end\n");
eccci/fsm/ccci_fsm_ee.c:		CCCI_ERROR_LOG(md_id, FSM, "MD exception stage 2!\n");
eccci/fsm/ccci_fsm_ee.c:			CCCI_ERROR_LOG(md_id, FSM,
eccci/fsm/ccci_fsm_ee.c:		CCCI_ERROR_LOG(md_id, FSM,
eccci/fsm/ccci_fsm_ee.c:		CCCI_ERROR_LOG(ee_ctl->md_id, FSM,
eccci/fsm/ccci_fsm_ee.c:			CCCI_ERROR_LOG(ee_ctl->md_id, FSM,
eccci/fsm/ccci_fsm_ee.c:			CCCI_ERROR_LOG(ee_ctl->md_id, FSM,
eccci/fsm/ccci_fsm_ee.c:		CCCI_ERROR_LOG(ee_ctl->md_id, FSM,
eccci/fsm/ccci_fsm_ee.c:	CCCI_BOOTUP_LOG(ee_ctl->md_id, FSM, "checking EE status\n");
eccci/fsm/ccci_fsm_ee.c:				CRIT_USR_MDLOG)) {
eccci/fsm/ccci_fsm_ee.c:			CCCI_ERROR_LOG(ee_ctl->md_id, FSM,
eccci/fsm/ccci_fsm_ee.c:	CCCI_BOOTUP_LOG(ee_ctl->md_id, FSM, "check EE done\n");
eccci/fsm/ccci_fsm.c:	CCCI_ERROR_LOG(ctl->md_id, FSM,
eccci/fsm/ccci_fsm.c:		CCCI_ERROR_LOG(ctl->md_id, FSM,
eccci/fsm/ccci_fsm.c:		CCCI_ERROR_LOG(ctl->md_id, FSM,
eccci/fsm/ccci_fsm.c:		CCCI_ERROR_LOG(ctl->md_id, FSM,
eccci/fsm/ccci_fsm.c:		CCCI_ERROR_LOG(ctl->md_id, FSM,
eccci/fsm/ccci_fsm.c:		CCCI_ERROR_LOG(ctl->md_id, FSM,
eccci/fsm/ccci_fsm.c:		CCCI_ERROR_LOG(ctl->md_id, FSM,
eccci/fsm/ccci_fsm.c:		CCCI_ERROR_LOG(ctl->md_id, FSM, "critical user alive %d\n",
eccci/fsm/ccci_fsm.c:					CCCI_ERROR_LOG(ctl->md_id, FSM,
eccci/fsm/ccci_fsm.c:			CCCI_ERROR_LOG(ctl->md_id, FSM,
eccci/fsm/ccci_fsm.c:				CRIT_USR_MDLOG) == 0) {
eccci/fsm/ccci_fsm.c:		CCCI_ERROR_LOG(ctl->md_id, FSM,
eccci/fsm/ccci_fsm.c:		CCCI_ERROR_LOG(ctl->md_id, FSM,
eccci/fsm/ccci_fsm.c:		CCCI_ERROR_LOG(ctl->md_id, FSM, "invalid event %d\n", event_id);
eccci/fsm/ccci_fsm.c:		CCCI_ERROR_LOG(ctl->md_id, FSM,
eccci/fsm/ccci_fsm.c:		CCCI_ERROR_LOG(ctl->md_id, FSM,
eccci/fsm/ccci_fsm.c:		CCCI_ERROR_LOG(ctl->md_id, FSM,
eccci/modem_sys1.c:		CCCI_NORMAL_LOG(md->index, TAG, "enable ccif irq\n");
eccci/modem_sys1.c:		CCCI_NORMAL_LOG(md->index, TAG, "disable ccif irq\n");
eccci/modem_sys1.c:		CCCI_NORMAL_LOG(md->index, TAG, "enable wdt irq\n");
eccci/modem_sys1.c:		CCCI_NORMAL_LOG(md->index, TAG, "disable wdt irq\n");
eccci/modem_sys1.c:	CCCI_ERROR_LOG(md->index, TAG, "MD WDT IRQ\n");
eccci/modem_sys1.c:			CCCI_ERROR_LOG(md->index, TAG,
eccci/modem_sys1.c:			CCCI_ERROR_LOG(md->index, TAG,
eccci/modem_sys1.c:	CCCI_ERROR_LOG(md->index, TAG,
eccci/modem_sys1.c:		CCCI_ERROR_LOG(md->index, TAG, "MD check seq fail\n");
eccci/modem_sys1.c:		CCCI_ERROR_LOG(md->index, TAG,
eccci/modem_sys1.c:		CCCI_ERROR_LOG(md->index, TAG,
eccci/modem_sys1.c:	CCCI_INIT_LOG(md->index, TAG, "CCCI: modem is initializing\n");
eccci/modem_sys1.c:		CCCI_ERROR_LOG(md->index, TAG,
eccci/modem_sys1.c:		CCCI_ERROR_LOG(md->index, TAG,
eccci/modem_sys1.c:		CCCI_ERROR_LOG(md->index, TAG,
eccci/modem_sys1.c:		CCCI_ERROR_LOG(md->index, TAG,
eccci/modem_sys1.c:		CCCI_ERROR_LOG(-1, TAG,
eccci/modem_sys1.c:		CCCI_ERROR_LOG(-1, TAG,
eccci/modem_sys1.c:		CCCI_ERROR_LOG(-1, TAG,
eccci/modem_sys1.c:	CCCI_INIT_LOG(md_id, TAG,
eccci/modem_sys1.c:		CCCI_ERROR_LOG(-1, TAG,
eccci/port_ipc.h:	defined(CONFIG_MTK_MD_DIRECT_LOGGING_SUPPORT)
eccci/ccci_modem_tmp.c:		CCCI_BOOTUP_LOG(-1, TAG,
eccci/ccci_modem_tmp.c:		CCCI_ERROR_LOG(-1, TAG,
eccci/ccci_modem_tmp.c:		CCCI_BOOTUP_LOG(MD_SYS1, TAG, "Update <%d>:0x%x 0x%x\n",
eccci/ccci_modem_tmp.c:		CCCI_ERROR_LOG(md->index, TAG,
eccci/ccci_modem_tmp.c:		CCCI_ERROR_LOG(md->index, TAG,
eccci/ccci_modem_tmp.c:	CCCI_BOOTUP_LOG(md->index, TAG,
eccci/ccci_modem_tmp.c:	CCCI_INIT_LOG(md->index, TAG, "register modem\n");
eccci/ccci_modem_tmp.c:	md->mdlg_mode = data[MD_CFG_MDLOG_MODE];
eccci/ccci_modem_tmp.c:		CCCI_ERROR_LOG(md_id, TAG,
eccci/ccci_modem_tmp.c:		CCCI_NORMAL_LOG(-1, TAG, "clear buffer ! first_boot\n");
eccci/ccci_modem_tmp.c:			CCCI_NORMAL_LOG(-1, TAG,
eccci/ccci_modem_tmp.c:	LOGGING_MODE mdlog_flag = MODE_IDLE;
eccci/ccci_modem_tmp.c:	ap_side_md_feature->feature_set[SMART_LOGGING_SHARE_MEMORY].support_mask
eccci/ccci_modem_tmp.c:			case SMART_LOGGING_SHARE_MEMORY:
eccci/ccci_modem_tmp.c:					SMEM_USER_SMART_LOGGING,
eccci/ccci_modem_tmp.c:	CCCI_BOOTUP_DUMP_LOG(md->index, TAG, "AP runtime data\n");
eccci/ccci_modem_tmp.c:			CCCI_ERROR_LOG(md->index, TAG,
eccci/ccci_modem_tmp.c:		CCCI_ERROR_LOG(md->index, TAG,
eccci/ccci_modem_tmp.c:		CCCI_ERROR_LOG(md->index, TAG,
eccci/hif/dpmaif_drv.c:			CCCI_ERROR_LOG(0, TAG,
eccci/hif/dpmaif_drv.c:			CCCI_ERROR_LOG(0, TAG,
eccci/hif/dpmaif_drv.c:			CCCI_ERROR_LOG(0, TAG,
eccci/hif/dpmaif_drv.c:			CCCI_ERROR_LOG(0, TAG,
eccci/hif/dpmaif_drv.c:				CCCI_ERROR_LOG(0, TAG,
eccci/hif/dpmaif_drv.c:			CCCI_ERROR_LOG(0, TAG,
eccci/hif/dpmaif_drv.c:			CCCI_ERROR_LOG(0, TAG,
eccci/hif/dpmaif_drv.c:	CCCI_REPEAT_LOG(0, TAG,
eccci/hif/dpmaif_drv.c:			CCCI_ERROR_LOG(0, TAG, "drb_add rdy poll fail: 0x%x\n",
eccci/hif/dpmaif_drv.c:			CCCI_ERROR_LOG(0, TAG, "drb_add fail: 0x%x\n",
eccci/hif/ccci_ringbuf.c:	CCCI_NORMAL_LOG(md_id, TAG,
eccci/hif/ccci_ringbuf.c:	CCCI_NORMAL_LOG(md_id, TAG,
eccci/hif/ccci_ringbuf.c:	CCCI_NORMAL_LOG(md_id, TAG,
eccci/hif/ccci_ringbuf.c:	CCCI_NORMAL_LOG(md_id, TAG, "crb:rbf=0x%p\n", ringbuf);
eccci/hif/ccci_ringbuf.c:		CCCI_ERROR_LOG(md_id, TAG,
eccci/hif/ccci_ringbuf.c:		CCCI_ERROR_LOG(md_id, TAG,
eccci/hif/ccci_ringbuf.c:		CCCI_NORMAL_LOG(-1, TAG,
eccci/hif/ccci_ringbuf.c:		CCCI_ERROR_LOG(md_id, TAG, "rbrdb param error,ringbuf==NULL\n");
eccci/hif/ccci_ringbuf.c:		CCCI_NORMAL_LOG(md_id, TAG,
eccci/hif/ccci_ringbuf.c:		CCCI_ERROR_LOG(md_id, TAG,
eccci/hif/ccci_ringbuf.c:		CCCI_ERROR_LOG(md_id, TAG,
eccci/hif/ccci_ringbuf.c:		CCCI_ERROR_LOG(md_id, TAG,
eccci/hif/ccci_ringbuf.c:		CCCI_ERROR_LOG(md_id, TAG,
eccci/hif/ccci_hif.c:	CCCI_INIT_LOG(-1, TAG, "ccci_hif_init flag = 0x%x\n", hif_flag);
eccci/hif/ccci_hif.c:	CCCI_INIT_LOG(-1, TAG, "ccci_hif_init flag = 0x%x\n", hif_flag);
eccci/hif/ccci_hif_ccif.c:	CCCI_ERROR_LOG(MD_SYS3, TAG,
eccci/hif/ccci_hif_ccif.c:	CCCI_ERROR_LOG(MD_SYS3, TAG,
eccci/hif/ccci_hif_ccif.c:		CCCI_ERROR_LOG(md_ctrl->md_id, TAG,
eccci/hif/ccci_hif_ccif.c:	CCCI_DEBUG_LOG(md_ctrl->md_id, TAG, "Rx msg %x %x %x %x ret=%d\n",
eccci/hif/ccci_hif_ccif.c:			CCCI_ERROR_LOG(md_ctrl->md_id, TAG,
eccci/hif/ccci_hif_ccif.c:					CCCI_ERROR_LOG(md_ctrl->md_id, TAG,
eccci/hif/ccci_hif_ccif.c:			CCCI_ERROR_LOG(md_ctrl->md_id, TAG,
eccci/hif/ccci_hif_ccif.c:			if (ccci_hdr.channel == CCCI_MD_LOG_RX) {
eccci/hif/ccci_hif_ccif.c:	CCCI_ERROR_LOG(md_ctrl->md_id, TAG,
eccci/hif/ccci_hif_ccif.c:	CCCI_NORMAL_LOG(md_ctrl->md_id, TAG,
eccci/hif/ccci_hif_ccif.c:	CCCI_NORMAL_LOG(md_ctrl->md_id, TAG, "md_ccif_reset_queue\n");
eccci/hif/ccci_hif_ccif.c:	CCCI_NORMAL_LOG(md_ctrl->md_id, TAG, "md_ccif_switch_ringbuf\n");
eccci/hif/ccci_hif_ccif.c:		CCCI_ERROR_LOG(md_ctrl->md_id, TAG,
eccci/hif/ccci_hif_ccif.c:		CCCI_ERROR_LOG(md_ctrl->md_id, TAG,
eccci/hif/ccci_hif_ccif.c:		CCCI_ERROR_LOG(md_ctrl->md_id, TAG,
eccci/hif/ccci_hif_ccif.c:		CCCI_ERROR_LOG(md_ctrl->md_id, TAG, "qno error (%d)\n", qno);
eccci/hif/ccci_hif_ccif.c:				ret = -CCCI_ERR_INVALID_LOGIC_CHANNEL_ID;
eccci/hif/ccci_hif_ccif.c:				CCCI_ERROR_LOG(md_ctrl->md_id, TAG,
eccci/hif/ccci_hif_ccif.c:			CCCI_ERROR_LOG(md_ctrl->md_id, TAG,
eccci/hif/ccci_hif_ccif.c:			CCCI_ERROR_LOG(md_ctrl->md_id, TAG,
eccci/hif/ccci_hif_ccif.c:			CCCI_ERROR_LOG(md_ctrl->md_id, TAG,
eccci/hif/ccci_hif_ccif.c:			CCCI_ERROR_LOG(md_ctrl->md_id, TAG,
eccci/hif/ccci_hif_ccif.c:		if (i != C2K_MD_LOG_RX_Q)
eccci/hif/ccci_hif_ccif.c:		CCCI_INIT_LOG(md_ctrl->md_id, TAG, "No flow control for AP\n");
eccci/hif/ccci_hif_ccif.c:	CCCI_INIT_LOG(md_ctrl->md_id, TAG, "flow control is disabled\n");
eccci/hif/ccci_hif_ccif.c:	CCCI_INIT_LOG(md_ctrl->md_id, TAG,
eccci/hif/ccci_hif_ccif.c:		CCCI_ERROR_LOG(md_ctrl->md_id, TAG,
eccci/hif/ccci_hif_internal.h:		CCCI_ERROR_LOG(-1, CORE,
eccci/hif/ccci_hif_internal.h:		CCCI_NORMAL_LOG(md_id, CORE,
eccci/hif/ccci_hif_internal.h:		CCCI_ERROR_LOG(md_id, CORE,
eccci/hif/ccci_hif_dpmaif.c:		CCCI_ERROR_LOG(-1, TAG,
eccci/hif/ccci_hif_dpmaif.c:		CCCI_ERROR_LOG(-1, TAG, "frag alloc_cnt is invalid !\n");
eccci/hif/ccci_hif_dpmaif.c:		CCCI_ERROR_LOG(-1, TAG, "alloc rx frag not enough(%d>%d)\n",
eccci/hif/ccci_hif_dpmaif.c:			CCCI_ERROR_LOG(dpmaif_ctrl->md_id, TAG,
eccci/hif/ccci_hif_dpmaif.c:		CCCI_ERROR_LOG(-1, TAG, "frag check fail: 0x%x, 0x%x",
eccci/hif/ccci_hif_dpmaif.c:		CCCI_NORMAL_LOG(dpmaif_ctrl->md_id, TAG,
eccci/hif/ccci_hif_dpmaif.c:		/* CCCI_NORMAL_LOG(dpmaif_ctrl->md_id, TAG,
eccci/hif/ccci_hif_dpmaif.c:		CCCI_NORMAL_LOG(dpmaif_ctrl->md_id, TAG,
eccci/hif/ccci_hif_dpmaif.c:		CCCI_ERROR_LOG(-1, TAG, "alloc_cnt is invalid !\n");
eccci/hif/ccci_hif_dpmaif.c:		CCCI_ERROR_LOG(-1, TAG, "alloc bat buf not enough(%d>%d)\n",
eccci/hif/ccci_hif_dpmaif.c:			CCCI_ERROR_LOG(-1, TAG,
eccci/hif/ccci_hif_dpmaif.c:			CCCI_ERROR_LOG(dpmaif_ctrl->md_id, TAG,
eccci/hif/ccci_hif_dpmaif.c:		CCCI_NORMAL_LOG(dpmaif_ctrl->md_id, TAG,
eccci/hif/ccci_hif_dpmaif.c:			CCCI_NORMAL_LOG(dpmaif_ctrl->md_id, TAG,
eccci/hif/ccci_hif_dpmaif.c:		/* CCCI_NORMAL_LOG(dpmaif_ctrl->md_id, TAG,
eccci/hif/ccci_hif_dpmaif.c:			CCCI_DEBUG_LOG(dpmaif_ctrl->md_id, TAG,
eccci/hif/ccci_hif_dpmaif.c:				CCCI_ERROR_LOG(dpmaif_ctrl->md_id, TAG,
eccci/hif/ccci_hif_dpmaif.c:			CCCI_ERROR_LOG(-1, TAG, "rx low mem: %d\n", real_cnt);
eccci/hif/ccci_hif_dpmaif.c:			CCCI_ERROR_LOG(-1, TAG, "rx ERR_STOP: %d\n", real_cnt);
eccci/hif/ccci_hif_dpmaif.c:			CCCI_ERROR_LOG(-1, TAG, "rx ERROR: %d\n", real_cnt);
eccci/hif/ccci_hif_dpmaif.c:	CCCI_DEBUG_LOG(hif_ctrl->md_id, TAG, "rxq0 tasklet result %d\n", ret);
eccci/hif/ccci_hif_dpmaif.c:			CCCI_DEBUG_LOG(dpmaif_ctrl->md_id, TAG,
eccci/hif/ccci_hif_dpmaif.c:				CCCI_NORMAL_LOG(dpmaif_ctrl->md_id, TAG,
eccci/hif/ccci_hif_dpmaif.c:		CCCI_DEBUG_LOG(dpmaif_ctrl->md_id, TAG,
eccci/hif/ccci_hif_dpmaif.c:		CCCI_ERROR_LOG(dpmaif_ctrl->md_id, TAG,
eccci/hif/ccci_hif_dpmaif.c:			CCCI_ERROR_LOG(dpmaif_ctrl->md_id, TAG,
eccci/hif/ccci_hif_dpmaif.c:		CCCI_DEBUG_LOG(hif_ctrl->md_id, TAG,
eccci/hif/ccci_hif_dpmaif.c:		CCCI_ERROR_LOG(-1, TAG, "bat request fail\n");
eccci/hif/ccci_hif_dpmaif.c:		CCCI_ERROR_LOG(-1, TAG, "pit request fail\n");
eccci/hif/ccci_hif_dpmaif.c:		CCCI_ERROR_LOG(dpmaif_ctrl->md_id, TAG,
eccci/hif/ccci_hif_dpmaif.c:		CCCI_ERROR_LOG(-1, TAG, "drb request fail\n");
eccci/hif/ccci_hif_dpmaif.c:		CCCI_ERROR_LOG(-1, TAG, "drb skb buffer request fail\n");
eccci/hif/ccci_hif_dpmaif.c:		CCCI_ERROR_LOG(dpmaif_ctrl->md_id, TAG,
eccci/hif/ccci_hif_dpmaif.c:	CCCI_DEBUG_LOG(-1, TAG, "dpmaif:dpmaif_late_init\n");
eccci/hif/ccci_hif_dpmaif.c:		CCCI_ERROR_LOG(dpmaif_ctrl->md_id, TAG,
eccci/hif/ccci_hif_dpmaif.c:	CCCI_DEBUG_LOG(-1, TAG, "dpmaif:dpmaif_late_init end\n");
eccci/hif/ccci_hif_dpmaif.c:	CCCI_ERROR_LOG(-1, TAG, "%s: not defined!\n", __func__);
eccci/hif/ccci_hif_dpmaif.c:				CCCI_ERROR_LOG(0, TAG, "pool stop Tx failed\n");
eccci/hif/ccci_hif_dpmaif.c:				CCCI_ERROR_LOG(0, TAG, "stop Tx failed, 0x%x\n",
eccci/hif/ccci_hif_dpmaif.c:				CCCI_ERROR_LOG(0, TAG,
eccci/hif/ccci_hif_dpmaif.c:				CCCI_NORMAL_LOG(0, TAG,
eccci/hif/ccci_hif_dpmaif.c:			CCCI_ERROR_LOG(0, TAG, "stop Rx failed, 0x%x\n",
eccci/hif/ccci_hif_dpmaif.c:				CCCI_ERROR_LOG(0, TAG,
eccci/hif/ccci_hif_dpmaif.c:				CCCI_NORMAL_LOG(0, TAG,
eccci/hif/ccci_hif_dpmaif.c:			CCCI_ERROR_LOG(0, TAG, "DPMAIF pre-reset timeout\n");
eccci/hif/ccci_hif_dpmaif.c:	CCCI_NORMAL_LOG(md_id, TAG,
eccci/hif/ccci_hif_dpmaif.c:	CCCI_BOOTUP_LOG(md_id, TAG, "dpmaifa_hw_reset:clear reset\n");
eccci/hif/ccci_hif_dpmaif.c:	CCCI_BOOTUP_LOG(md_id, TAG, "dpmaif_hw_reset:done\n");
eccci/hif/ccci_hif_dpmaif.c:	CCCI_BOOTUP_LOG(md_id, TAG, "dpmaif_hw_reset:clear reset\n");
eccci/hif/ccci_hif_dpmaif.c:	CCCI_DEBUG_LOG(-1, TAG, "dpmaif:stop\n");
eccci/hif/ccci_hif_dpmaif.c:		CCCI_DEBUG_LOG(0, TAG, "sys_resume no need restore\n");
eccci/hif/ccci_hif_dpmaif.c:		CCCI_NORMAL_LOG(0, TAG, "sys_resume need to restore\n");
eccci/hif/ccci_hif_dpmaif.c:		CCCI_ERROR_LOG(-1, TAG,
eccci/hif/ccci_hif_dpmaif.c:		CCCI_ERROR_LOG(-1, TAG, "No dpmaif driver in dtsi\n");
eccci/hif/ccci_hif_dpmaif.c:		CCCI_ERROR_LOG(md_id, TAG,
eccci/hif/ccci_hif_dpmaif.c:		CCCI_ERROR_LOG(md_id, TAG, "dpmaif_irq_id error:%d\n",
eccci/hif/ccci_hif_cldma.c:	CCCI_ERROR_LOG(md_ctrl->md_id, TAG,
eccci/hif/ccci_hif_cldma.c:			CCCI_ERROR_LOG(md_ctrl->md_id, TAG,
eccci/hif/ccci_hif_cldma.c:				CCCI_ERROR_LOG(md_ctrl->md_id, TAG,
eccci/hif/ccci_hif_cldma.c:				CCCI_ERROR_LOG(md_ctrl->md_id, TAG,
eccci/hif/ccci_hif_cldma.c:		CCCI_ERROR_LOG(md_ctrl->md_id, TAG, "CLDMA Tx error (%x/%x)\n",
eccci/hif/ccci_hif_cldma.c:		CCCI_ERROR_LOG(md_ctrl->md_id, TAG, "CLDMA Rx error (%x/%x)\n",
eccci/hif/ccci_hif_cldma.c:			CCCI_ERROR_LOG(md_ctrl->md_id, TAG,
eccci/hif/ccci_hif_cldma.c:			CCCI_NORMAL_LOG(md_ctrl->md_id, TAG,
eccci/hif/ccci_hif_cldma.c:		CCCI_ERROR_LOG(md_ctrl->md_id, TAG,
eccci/hif/ccci_hif_cldma.c:						CCCI_ERROR_LOG(
eccci/hif/ccci_hif_cldma.c:		CCCI_ERROR_LOG(md_ctrl->md_id, TAG,
eccci/hif/ccci_hif_cldma.c:		CCCI_ERROR_LOG(md_ctrl->md_id, TAG,
eccci/hif/ccci_hif_cldma.c:			CCCI_ERROR_LOG(md_ctrl->md_id, TAG,
eccci/hif/ccci_hif_cldma.c:		CCCI_ERROR_LOG(md_ctrl->md_id, TAG,
eccci/hif/ccci_hif_cldma.c:		CCCI_ERROR_LOG(-1, TAG,
eccci/hif/ccci_hif_cldma.c:		CCCI_ERROR_LOG(md_id, TAG, "no cldma irq id set in dts\n");
eccci/hif/ccci_hif_cldma.c:		CCCI_ERROR_LOG(md_id, TAG, "no cldma register set in dts\n");
eccci/hif/ccci_hif_cldma.c:		CCCI_ERROR_LOG(md_id, TAG, "no cldma register set in dts\n");
eccci/inc/ccci_core.h:#define CCCI_IOC_ALLOC_MD_LOG_MEM		_IO(CCCI_IOC_MAGIC, 5)
eccci/inc/ccci_core.h:#define CCCI_IOC_MDLOG_DUMP_DONE		\
eccci/inc/ccci_core.h:#define C2K_MD_LOG_TX_Q		3
eccci/inc/ccci_core.h:#define C2K_MD_LOG_RX_Q		3
eccci/inc/ccci_core.h:	CCCI_MD_LOG_RX = 42,
eccci/inc/ccci_core.h:	CCCI_MD_LOG_TX = 43,
eccci/inc/ccci_core.h:	MDLOG_CTRL_CH_C2K = 3,
eccci/inc/ccci_core.h:	MDLOG_CH_C2K = 9,
eccci/inc/ccci_modem.h:	MD_CFG_MDLOG_MODE,
eccci/inc/ccci_modem.h:	SMART_LOGGING_SHARE_MEMORY,
eccci/inc/ccci_debug.h:	CCCI_LOG_ALL_UART = 1,
eccci/inc/ccci_debug.h:	CCCI_LOG_ALL_MOBILE,
eccci/inc/ccci_debug.h:	CCCI_LOG_CRITICAL_UART,
eccci/inc/ccci_debug.h:	CCCI_LOG_CRITICAL_MOBILE,
eccci/inc/ccci_debug.h:	CCCI_LOG_ALL_OFF,
eccci/inc/ccci_debug.h:#define CCCI_LEGACY_DBG_LOG(idx, tag, fmt, args...)
eccci/inc/ccci_debug.h:#define CCCI_LEGACY_ALWAYS_LOG(idx, tag, fmt, args...) 
eccci/inc/ccci_debug.h:#define CCCI_LEGACY_ERR_LOG(idx, tag, fmt, args...)
eccci/inc/ccci_debug.h:#define CCCI_INIT_LOG(idx, tag, fmt, args...)
eccci/inc/ccci_debug.h:#define CCCI_BOOTUP_LOG(idx, tag, fmt, args...)
eccci/inc/ccci_debug.h:#define CCCI_BOOTUP_DUMP_LOG(idx, tag, fmt, args...)
eccci/inc/ccci_debug.h:#define CCCI_NORMAL_LOG(idx, tag, fmt, args...)
eccci/inc/ccci_debug.h:#define CCCI_ERROR_LOG(idx, tag, fmt, args...)
eccci/inc/ccci_debug.h:#define CCCI_DEBUG_LOG(idx, tag, fmt, args...)
eccci/inc/ccci_debug.h:#define CCCI_REPEAT_LOG(idx, tag, fmt, args...)
eccci/inc/ccci_port.h:	CRIT_USR_MDLOG,
eccci/inc/ccci_port.h:	CRIT_USR_MDLOG_CTRL = CRIT_USR_META,
eccci/port/port_net.c:		CCCI_ERROR_LOG(md_id, NET,
eccci/port/port_net.c:		CCCI_ERROR_LOG(0, NET, "port is NULL for CCMNI%d\n", ccmni_idx);
eccci/port/port_net.c:	CCCI_ERROR_LOG(md_id, NET,
eccci/port/port_net.c:		CCCI_ERROR_LOG(md_id, NET, "invalid MD id=%d\n", md_id);
eccci/port/port_net.c:		CCCI_ERROR_LOG(md_id, NET, "invalid MD id=%d\n", md_id);
eccci/port/port_net.c:	CCCI_NORMAL_LOG(md_id, NET, "MBIM interface id=%d\n", id);
eccci/port/port_net.c:		CCCI_INIT_LOG(port->md_id, NET,
eccci/port/port_net.c:	CCCI_DEBUG_LOG(port->md_id, NET,
eccci/port/port_rpc.c:	CCCI_ERROR_LOG(0, RPC, "CONFIG_MTK_AUXADC not ready\n");
eccci/port/port_rpc.c:	CCCI_ERROR_LOG(0, RPC, "CONFIG_MTK_AUXADC not ready\n");
eccci/port/port_rpc.c:		CCCI_NORMAL_LOG(0, RPC,
eccci/port/port_rpc.c:		CCCI_NORMAL_LOG(0, RPC,
eccci/port/port_rpc.c:		CCCI_BOOTUP_LOG(0, RPC,
eccci/port/port_rpc.c:	CCCI_BOOTUP_LOG(0, RPC, "scan didr gpio status\n");
eccci/port/port_rpc.c:			CCCI_BOOTUP_LOG(0, RPC, "GPIO[%s]%d(%d@md),val:%d\n",
eccci/port/port_rpc.c:			CCCI_NORMAL_LOG(md_id, RPC, "%s:  not found\n",
eccci/port/port_rpc.c:				CCCI_ERROR_LOG(md_id, RPC,
eccci/port/port_rpc.c:			CCCI_INIT_LOG(md_id, RPC, "node %d is NULL\n", i);
eccci/port/port_rpc.c:			CCCI_INIT_LOG(md_id, RPC, "%s: node %d no found\n",
eccci/port/port_rpc.c:		CCCI_INIT_LOG(-1, RPC, "get_md_dtsi_val: No node: %s\n",
eccci/port/port_rpc.c:		CCCI_NORMAL_LOG(-1, RPC, "get_md_dtsi_val: No node: %s\n",
eccci/port/port_rpc.c:	CCCI_INIT_LOG(-1, RPC, "get_md_dtsi_val %d, %s -- 0x%x\n",
eccci/port/port_rpc.c:	CCCI_NORMAL_LOG(-1, RPC, "get_md_dtsi_val %d, %s -- 0x%x\n",
eccci/port/port_rpc.c:		CCCI_ERROR_LOG(md_id, RPC, "can't find ccmni for netif: %d\n",
eccci/port/port_rpc.c:		CCCI_NORMAL_LOG(md_id, RPC, "remap port %s Tx to cldma%d\n",
eccci/port/port_rpc.c:		CCCI_NORMAL_LOG(md_id, RPC, "remap port %s Tx to cldma%d\n",
eccci/port/port_rpc.c:		CCCI_ERROR_LOG(md_id, RPC, "invalid remap for q%d\n",
eccci/port/port_rpc.c:				CCCI_ERROR_LOG(md_id, RPC,
eccci/port/port_rpc.c:				CCCI_ERROR_LOG(md_id, RPC,
eccci/port/port_rpc.c:				CCCI_ERROR_LOG(md_id, RPC,
eccci/port/port_rpc.c:				CCCI_ERROR_LOG(md_id, RPC,
eccci/port/port_rpc.c:				CCCI_ERROR_LOG(md_id, RPC,
eccci/port/port_rpc.c:				CCCI_ERROR_LOG(md_id, RPC,
eccci/port/port_rpc.c:				CCCI_ERROR_LOG(md_id, RPC,
eccci/port/port_rpc.c:				CCCI_ERROR_LOG(md_id, RPC,
eccci/port/port_rpc.c:				CCCI_ERROR_LOG(md_id, RPC,
eccci/port/port_rpc.c:						CCCI_ERROR_LOG(md_id, RPC,
eccci/port/port_rpc.c:					CCCI_ERROR_LOG(md_id, RPC,
eccci/port/port_rpc.c:				CCCI_NORMAL_LOG(md_id, RPC,
eccci/port/port_rpc.c:				CCCI_ERROR_LOG(md_id, RPC,
eccci/port/port_rpc.c:				CCCI_ERROR_LOG(md_id, RPC,
eccci/port/port_rpc.c:				CCCI_ERROR_LOG(md_id, RPC,
eccci/port/port_rpc.c:				CCCI_ERROR_LOG(md_id, RPC,
eccci/port/port_rpc.c:				CCCI_ERROR_LOG(md_id, RPC,
eccci/port/port_rpc.c:				CCCI_ERROR_LOG(md_id, RPC,
eccci/port/port_rpc.c:		CCCI_ERROR_LOG(md_id, RPC,
eccci/port/port_rpc.c:		CCCI_ERROR_LOG(md_id, RPC,
eccci/port/port_rpc.c:		CCCI_ERROR_LOG(md_id, RPC,
eccci/port/port_rpc.c:			CCCI_ERROR_LOG(md_id, RPC,
eccci/port/port_rpc.c:			CCCI_ERROR_LOG(md_id, RPC,
eccci/port/port_rpc.c:		CCCI_ERROR_LOG(md_id, RPC,
eccci/port/port_rpc.c:			CCCI_ERROR_LOG(md_id, RPC,
eccci/port/port_rpc.c:	CCCI_DEBUG_LOG(md_id, RPC,
eccci/port/port_rpc.c:			CCCI_ERROR_LOG(port->md_id, CHAR,
eccci/port/port_cfg_tmp.c:	{CCCI_MD_LOG_TX, CCCI_MD_LOG_RX, 2, 2, 2, 2,
eccci/port/port_cfg_tmp.c:	{CCCI_MD_LOG_TX, CCCI_MD_LOG_RX, C2K_MD_LOG_TX_Q,
eccci/port/port_cfg_tmp.c:		C2K_MD_LOG_RX_Q, C2K_MD_LOG_TX_Q, C2K_MD_LOG_RX_Q,
eccci/port/port_cfg_tmp.c:		CCCI_ERROR_LOG(md_id, PORT, "md_port_cfg:no md enable\n");
eccci/port/port_smem.c:		CCCI_ERROR_LOG(md_id, TAG, "ccb ctrl is NULL!\n");
eccci/port/port_smem.c:			CCCI_ERROR_LOG(md_id, TAG,
eccci/port/port_smem.c:			CCCI_ERROR_LOG(md_id, TAG,
eccci/port/port_smem.c:			CCCI_ERROR_LOG(md_id, TAG,
eccci/port/port_smem.c:		CCCI_NORMAL_LOG(md_id, TAG, "find ccb port %s for user%d!\n",
eccci/port/port_smem.c:			CCCI_ERROR_LOG(md_id, TAG,
eccci/port/port_smem.c:		CCCI_NORMAL_LOG(md_id, TAG, "ccb_configs_len: %d\n",
eccci/port/port_smem.c:			CCCI_ERROR_LOG(md_id, TAG,
eccci/port/port_smem.c:			CCCI_ERROR_LOG(md_id, TAG,
eccci/port/port_smem.c:			CCCI_ERROR_LOG(md_id, TAG,
eccci/port/port_smem.c:			CCCI_ERROR_LOG(md_id, TAG, "wrong buffer num\n");
eccci/port/port_smem.c:			CCCI_ERROR_LOG(md_id, TAG,
eccci/port/port_smem.c:		CCCI_NORMAL_LOG(md_id, TAG, "smem_port->addr_phy=%lx\n",
eccci/port/port_smem.c:		CCCI_NORMAL_LOG(md_id, CHAR,
eccci/port/port_smem.c:			CCCI_ERROR_LOG(md_id, CHAR,
eccci/port/port_smem.c:			CCCI_ERROR_LOG(md_id, CHAR,
eccci/port/port_smem.c:			CCCI_ERROR_LOG(md_id, CHAR,
eccci/port/port_smem.c:			CCCI_ERROR_LOG(md_id, CHAR,
eccci/port/port_smem.c:			CCCI_ERROR_LOG(md_id, CHAR,
eccci/port/port_smem.c:		CCCI_ERROR_LOG(md_id, CHAR,
eccci/port/port_smem.c:		return -CCCI_ERR_INVALID_LOGIC_CHANNEL_ID;
eccci/port/port_smem.c:			CCCI_ERROR_LOG(port->md_id, CHAR,
eccci/port/port_char.c:		CCCI_NORMAL_LOG(md_id, CHAR,
eccci/port/port_char.c:			CCCI_ERROR_LOG(port->md_id, CHAR,
eccci/port/port_char.c:	else if (port->rx_ch == CCCI_MD_LOG_RX)
eccci/port/port_char.c:		c2k_ch_id = MDLOG_CH_C2K-2;
eccci/port/port_char.c:		CCCI_ERROR_LOG(md_id, CHAR,
eccci/port/port_char.c:			CCCI_ERROR_LOG(md_id, CHAR,
eccci/port/port_char.c:		CCCI_NORMAL_LOG(md_id, CHAR, "usb buf full\n");
eccci/port/port_ipc.c:		CCCI_REPEAT_LOG(port->md_id, IPC,
eccci/port/port_ipc.c:		CCCI_REPEAT_LOG(port->md_id, IPC,
eccci/port/port_ipc.c:		CCCI_ERROR_LOG(port->md_id, IPC,
eccci/port/port_ipc.c:		CCCI_ERROR_LOG(-1, IPC, "invalid task ID %x\n",
eccci/port/port_ipc.c:		CCCI_ERROR_LOG(-1, IPC,
eccci/port/port_ipc.c:		CCCI_ERROR_LOG(port->md_id, IPC,
eccci/port/port_ipc.c:	|| defined(CONFIG_MTK_MD_DIRECT_LOGGING_SUPPORT)
eccci/port/port_ipc.c:				CCCI_ERROR_LOG(port->md_id, IPC,
eccci/port/port_ipc.c:			CCCI_ERROR_LOG(port->md_id, IPC,
eccci/port/port_ipc.c:		CCCI_ERROR_LOG(port->md_id, IPC, "alloc ipc_ctrl fail!!\n");
eccci/port/port_ipc.c:			CCCI_ERROR_LOG(port->md_id, IPC,
eccci/port/port_ipc.c:	CCCI_DEBUG_LOG(md_id, IPC,
eccci/port/port_ipc.c:		CCCI_NORMAL_LOG(md_id, IPC, "Update fail\n");
eccci/port/port_poller.c:		CCCI_ERROR_LOG(port->md_id, PORT,
eccci/port/port_cfg.c:	{CCCI_MD_LOG_TX, CCCI_MD_LOG_RX, 2, 2, 2, 2,
eccci/port/port_cfg.c:	{CCCI_MD_LOG_TX, CCCI_MD_LOG_RX, C2K_MD_LOG_TX_Q,
eccci/port/port_cfg.c:		C2K_MD_LOG_RX_Q, C2K_MD_LOG_TX_Q, C2K_MD_LOG_RX_Q,
eccci/port/port_cfg.c:		CCCI_ERROR_LOG(md_id, PORT, "md_port_cfg:no md enable\n");
eccci/port/ccci_swtp.c:	CCCI_DEBUG_LOG(md_id, "ctl", "switch_MD%d_Tx_Power(%d): %d\n",
eccci/port/ccci_swtp.c:		CCCI_LEGACY_ERR_LOG(-1, SYS, "%s data is null\n", __func__);
eccci/port/ccci_swtp.c:		CCCI_LEGACY_ERR_LOG(swtp->md_id, SYS,
eccci/port/ccci_swtp.c:		CCCI_LEGACY_ERR_LOG(swtp->md_id, SYS,
eccci/port/ccci_swtp.c:		CCCI_LEGACY_ERR_LOG(swtp->md_id, SYS,
eccci/port/ccci_swtp.c:		CCCI_LEGACY_ERR_LOG(swtp->md_id, SYS,
eccci/port/ccci_swtp.c:			CCCI_LEGACY_ERR_LOG(swtp->md_id, SYS,
eccci/port/ccci_swtp.c:			CCCI_LEGACY_ERR_LOG(md_id, SYS,
eccci/port/ccci_swtp.c:			CCCI_LEGACY_ERR_LOG(md_id, SYS,
eccci/port/ccci_swtp.c:		CCCI_LEGACY_ERR_LOG(md_id, SYS,
eccci/port/port_sysmsg.c:		CCCI_NORMAL_LOG(md_id, SYS, "0x121: notify to (%s)\n",
eccci/port/port_sysmsg.c:		CCCI_ERROR_LOG(md_id, SYS,
eccci/port/port_sysmsg.c:		CCCI_ERROR_LOG(md_id, SYS,
eccci/port/port_sysmsg.c:		CCCI_ERROR_LOG(md_id, SYS,
eccci/port/port_sysmsg.c:		CCCI_ERROR_LOG(md_id, SYS,
eccci/port/port_sysmsg.c:		CCCI_ERROR_LOG(md_id, SYS,
eccci/port/port_sysmsg.c:		CCCI_ERROR_LOG(md_id, SYS,
eccci/port/port_sysmsg.c:		CCCI_ERROR_LOG(md_id, SYS,
eccci/port/port_sysmsg.c:	CCCI_REPEAT_LOG(port->md_id, SYS, "get bat voltage %d\n", data);
eccci/port/port_sysmsg.c:	CCCI_NORMAL_LOG(md_id, SYS, "system message (%x %x %x %x)\n",
eccci/port/port_proxy.c:			CCCI_ERROR_LOG(md_id, CHAR,
eccci/port/port_proxy.c:		CCCI_ERROR_LOG(md_id, CHAR,
eccci/port/port_proxy.c:			CCCI_ERROR_LOG(md_id, CHAR,
eccci/port/port_proxy.c:		CCCI_NORMAL_LOG(port->md_id, TAG, "wifi smem phy =%lx\n",
eccci/port/port_proxy.c:		CCCI_NORMAL_LOG(port->md_id, TAG, "wifi smem size =%lx(%d)\n",
eccci/port/port_proxy.c:		CCCI_ERROR_LOG(md_id, CHAR,
eccci/port/port_proxy.c:	case CCCI_IOC_ALLOC_MD_LOG_MEM:
eccci/port/port_proxy.c:		CCCI_ERROR_LOG(md_id, CHAR,
eccci/port/port_proxy.c:		CCCI_ERROR_LOG(md_id, CHAR,
eccci/port/port_proxy.c:		CCCI_ERROR_LOG(md_id, CHAR,
eccci/port/port_proxy.c:				CCCI_ERROR_LOG(port->md_id, TAG,
eccci/port/port_proxy.c:	if (rx_ch == CCCI_MD_LOG_RX || (rx_ch == CCCI_SMEM_CH &&
eccci/port/port_proxy.c:		proxy_set_critical_user(proxy_p, CRIT_USR_MDLOG, 1);
eccci/port/port_proxy.c:	if (rx_ch == CCCI_MD_LOG_RX || (rx_ch == CCCI_SMEM_CH &&
eccci/port/port_proxy.c:		proxy_set_critical_user(proxy_p, CRIT_USR_MDLOG, 0);
eccci/port/port_proxy.c:		&& port->tx_ch != CCCI_MD_LOG_TX
eccci/port/port_proxy.c:			CCCI_ERROR_LOG(md_id, TAG,
eccci/port/port_proxy.c:				CRIT_USR_MDLOG) == 0 &&
eccci/port/port_proxy.c:				CRIT_USR_MDLOG_CTRL) == 0) {
eccci/port/port_proxy.c:				CCCI_DEBUG_LOG(proxy_p->md_id, TAG,
eccci/port/port_proxy.c:		CCCI_DEBUG_LOG(proxy_p->md_id, TAG,
eccci/port/port_proxy.c:		CCCI_ERROR_LOG(0, TAG,
eccci/port/port_proxy.c:	return -CCCI_ERR_INVALID_LOGIC_CHANNEL_ID;
eccci/port/port_proxy.c:				CCCI_ERROR_LOG(md_id, TAG,
eccci/port/port_proxy.c:			CCCI_ERROR_LOG(md_id, CORE,
eccci/port/port_proxy.c:			CCCI_ERROR_LOG(proxy_p->md_id, CHAR,
eccci/port/port_proxy.c:		CCCI_ERROR_LOG(-1, TAG,
eccci/port/port_proxy.c:		CCCI_ERROR_LOG(-1, TAG,
eccci/port/port_proxy.c:		CCCI_ERROR_LOG(md_id, TAG, "alloc port_proxy fail\n");
eccci/port/port_proxy.c:	CCCI_NORMAL_LOG(md_id, TAG, "usb bypass dtr set(%d)(0x%x)\n",
eccci/port/port_proxy.c:	CCCI_NORMAL_LOG(md_id, TAG, "usb bypass dtr set(%d)(0x%x)\n",
eccci/port/port_proxy.c:	} else if (ch_id == MDLOG_CH_C2K) {
eccci/port/port_proxy.c:		ch_id_tx = CCCI_MD_LOG_TX;
eccci/port/port_proxy.c:		ch_id_rx = CCCI_MD_LOG_RX;
eccci/port/port_proxy.c:		CCCI_ERROR_LOG(md_id, TAG,
eccci/port/port_proxy.c:		CCCI_ERROR_LOG(proxy_p->md_id, TAG,
eccci/port/port_proxy.c:	} else if (ch_id == MDLOG_CH_C2K) {
eccci/port/port_proxy.c:		ch_id_tx = CCCI_MD_LOG_TX;
eccci/port/port_proxy.c:		ch_id_rx = CCCI_MD_LOG_RX;
eccci/port/port_proxy.c:		CCCI_ERROR_LOG(md_id, TAG,
eccci/port/port_udc.c:			CCCI_ERROR_LOG(md_id, UDC,
eccci/port/port_udc.c:		CCCI_ERROR_LOG(md_id, UDC,
eccci/port/port_udc.c:			CCCI_ERROR_LOG(md_id, UDC,
eccci/port/port_udc.c:			CCCI_NORMAL_LOG(md_id, UDC,
eccci/port/port_udc.c:		CCCI_ERROR_LOG(-1, UDC,
eccci/port/port_udc.c:			CCCI_ERROR_LOG(-1, UDC,
eccci/port/port_udc.c:		CCCI_NORMAL_LOG(-1, UDC,
eccci/port/port_udc.c:				CCCI_ERROR_LOG(-1, UDC,
eccci/port/port_udc.c:				CCCI_ERROR_LOG(-1, UDC,
eccci/port/port_udc.c:			CCCI_NORMAL_LOG(-1, UDC,
eccci/port/port_udc.c:	CCCI_NORMAL_LOG(-1, UDC, "deflateEnd_ins%d,ret:%d\n",
eccci/port/port_udc.c:			CCCI_NORMAL_LOG(-1, UDC,
eccci/port/port_udc.c:			CCCI_NORMAL_LOG(-1, UDC,
eccci/port/port_udc.c:		CCCI_ERROR_LOG(-1, UDC,
eccci/port/port_udc.c:				CCCI_ERROR_LOG(-1, UDC,
eccci/port/port_udc.c:		CCCI_ERROR_LOG(-1, UDC,
eccci/port/port_udc.c:			CCCI_ERROR_LOG(-1, UDC,
eccci/port/port_udc.c:		CCCI_ERROR_LOG(-1, UDC,
eccci/port/port_udc.c:		CCCI_ERROR_LOG(-1, UDC,
eccci/port/port_udc.c:		CCCI_ERROR_LOG(md_id, UDC,
eccci/port/port_udc.c:		CCCI_ERROR_LOG(md_id, UDC,
eccci/port/port_udc.c:			CCCI_ERROR_LOG(md_id, UDC,
eccci/port/port_udc.c:			CCCI_ERROR_LOG(md_id, UDC,
eccci/port/port_udc.c:			CCCI_ERROR_LOG(md_id, UDC,
eccci/port/port_udc.c:			CCCI_ERROR_LOG(md_id, UDC, "deflateEnd_ins%d,ret:%d\n",
eccci/port/port_udc.c:			CCCI_ERROR_LOG(-1, UDC, "invalid inst_id:%d\n",
eccci/port/port_udc.c:			CCCI_ERROR_LOG(-1, UDC, "invalid inst_id:%d\n",
eccci/port/port_udc.c:				CCCI_ERROR_LOG(port->md_id, UDC,
eccci/port/port_udc.c:		CCCI_ERROR_LOG(md_id, UDC,
eccci/port/port_udc.c:		CCCI_ERROR_LOG(port->md_id, UDC,
eccci/port/port_ctlmsg.c:		CCCI_ERROR_LOG(port->md_id, PORT,
eccci/ccci_bm.c:	CCCI_NORMAL_LOG(-1, BM,
eccci/ccci_bm.c:		CCCI_NORMAL_LOG(-1, BM, "[mydebug]watchpoint init fail\n");
eccci/ccci_bm.c:		CCCI_NORMAL_LOG(-1, BM, "[mydebug]watchpoint init done\n");
eccci/ccci_bm.c:			CCCI_NORMAL_LOG(-1, BM,
eccci/ccci_bm.c:			CCCI_NORMAL_LOG(-1, BM,
eccci/ccci_bm.c:			CCCI_NORMAL_LOG(-1, BM,
eccci/ccci_bm.c:		CCCI_NORMAL_LOG(-1, BM,
eccci/ccci_bm.c:		CCCI_NORMAL_LOG(-1, BM,
eccci/ccci_bm.c:		CCCI_NORMAL_LOG(-1, BM, "skb_pool_16 magic error!\n");
eccci/ccci_bm.c:		CCCI_NORMAL_LOG(-1, BM, "skb_pool_4K magic error!\n");
eccci/ccci_bm.c:		CCCI_ERROR_LOG(-1, BM, "<<<<<who:%p when:%lld cpu:%d pid:%d\n",
eccci/ccci_bm.c:			CCCI_ERROR_LOG(-1, BM, "[<%p>] %pS\n",
eccci/ccci_bm.c:	CCCI_ERROR_LOG(-1, BM, "<<<<<%s>>>>>\n", info);
eccci/ccci_bm.c:		CCCI_ERROR_LOG(-1, BM,
eccci/ccci_bm.c:		CCCI_NORMAL_LOG(-1, BM,
eccci/ccci_bm.c:			CCCI_NORMAL_LOG(-1, BM,
eccci/ccci_bm.c:			CCCI_ERROR_LOG(-1, BM,
eccci/ccci_bm.c:		CCCI_ERROR_LOG(-1, BM, "%ps alloc skb fail, size=%d\n",
eccci/ccci_bm.c:		CCCI_ERROR_LOG(-1, BM,
eccci/ccci_bm.c:			CCCI_ERROR_LOG(-1, BM, "fail to reload 4KB pool\n");
eccci/ccci_bm.c:			CCCI_ERROR_LOG(-1, BM, "fail to reload 16B pool\n");
eccci/ccci_bm.c:	CCCI_INIT_LOG(-1, BM,
eccci/modem_sys3.c:	CCCI_NORMAL_LOG(md->index, TAG, "MD exception HIF %d\n", stage);
eccci/modem_sys3.c:	CCCI_NORMAL_LOG(md->index, TAG, "CCIF modem is initializing\n");
eccci/modem_sys3.c:					CCCI_ERROR_LOG(md->index, TAG,
eccci/modem_sys3.c:			CCCI_ERROR_LOG(md->index, TAG,
eccci/modem_sys3.c:	CCCI_NORMAL_LOG(md->index, TAG, "CCIF modem is starting\n");
eccci/modem_sys3.c:				CCCI_ERROR_LOG(md->index, TAG,
eccci/modem_sys3.c:		CCCI_NORMAL_LOG(md->index, TAG,
eccci/modem_sys3.c:			CCCI_NORMAL_LOG(md->index, TAG,
eccci/modem_sys3.c:		CCCI_ERROR_LOG(md->index, TAG, "power on MD fail %d\n", ret);
eccci/modem_sys3.c:	CCCI_NORMAL_LOG(md->index, TAG, "ccif modem started %d\n", ret);
eccci/modem_sys3.c:		CCCI_NORMAL_LOG(md->index, TAG, "One reset flow is on-going\n");
eccci/modem_sys3.c:	CCCI_NORMAL_LOG(md->index, TAG, "ccif modem is resetting\n");
eccci/modem_sys3.c:	CCCI_NORMAL_LOG(md->index, TAG, "force assert MD using %d\n", type);
eccci/modem_sys3.c:	CCCI_NORMAL_LOG(md->index, TAG, "clear_md1_md3_smem start\n");
eccci/modem_sys3.c:		CCCI_NORMAL_LOG(md->index, TAG, "clear_md1_md3_smem error\n");
eccci/modem_sys3.c:		CCCI_ERROR_LOG(md->index, TAG,
eccci/modem_sys3.c:		CCCI_ERROR_LOG(-1, TAG,
eccci/modem_sys3.c:		CCCI_ERROR_LOG(-1, TAG,
eccci/modem_sys3.c:		CCCI_ERROR_LOG(dev_cfg.index, TAG,
eccci/modem_sys3.c:		CCCI_ERROR_LOG(-1, TAG,
eccci/modem_sys3.c:	CCCI_INIT_LOG(md_id, TAG, "modem ccif module probe...\n");
eccci/modem_sys3.c:	CCCI_INIT_LOG(md_id, TAG,
eccci/modem_sys3.c: *	CCCI_DEBUG_LOG(md->index, TAG,
eccci/modem_sys3.c:		CCCI_ERROR_LOG(MD_SYS3, TAG, "%s pdev == NULL\n", __func__);
eccci/modem_sys3.c:		CCCI_ERROR_LOG(MD_SYS3, TAG, "%s pdev == NULL\n", __func__);
eccci/modem_sys3.c:		CCCI_ERROR_LOG(-1, TAG,
eccci/modem_sys3.c:	CCCI_INIT_LOG(-1, TAG,
eccci/ccci_core.c:#ifndef CCCI_LOG_LEVEL /* for platform override */
eccci/ccci_core.c:#define CCCI_LOG_LEVEL CCCI_LOG_CRITICAL_UART
eccci/ccci_core.c:unsigned int ccci_debug_enable = CCCI_LOG_LEVEL;
eccci/ccci_core.c:	CCCI_ERROR_LOG(-1, CORE, "md kobject release\n");
eccci/ccci_core.c:	CCCI_INIT_LOG(-1, CORE, "ccci core init\n");
eccci/ccci_core.c:		CCCI_ERROR_LOG(md_id, CORE,
eccci/mt6765/md_sys1_platform.c:		CCCI_ERROR_LOG(0, TAG, "modem OF node NULL\n");
eccci/mt6765/md_sys1_platform.c:	CCCI_DEBUG_LOG(dev_cfg->index, TAG,
eccci/mt6765/md_sys1_platform.c:		CCCI_ERROR_LOG(dev_cfg->index, TAG,
eccci/mt6765/md_sys1_platform.c:		CCCI_ERROR_LOG(-1, TAG,
eccci/mt6765/md_sys1_platform.c:			CCCI_ERROR_LOG(-1, TAG, "%s: hw_info of_iomap failed\n",
eccci/mt6765/md_sys1_platform.c:				CCCI_ERROR_LOG(-1, TAG,
eccci/mt6765/md_sys1_platform.c:			CCCI_ERROR_LOG(dev_cfg->index, TAG,
eccci/mt6765/md_sys1_platform.c:		CCCI_ERROR_LOG(dev_cfg->index, TAG,
eccci/mt6765/md_sys1_platform.c:				CCCI_ERROR_LOG(dev_cfg->index, TAG,
eccci/mt6765/md_sys1_platform.c:			CCCI_ERROR_LOG(-1, TAG,
eccci/mt6765/md_sys1_platform.c:			CCCI_ERROR_LOG(-1, TAG,
eccci/mt6765/md_sys1_platform.c:		CCCI_ERROR_LOG(dev_cfg->index, TAG,
eccci/mt6765/md_sys1_platform.c:		CCCI_ERROR_LOG(dev_cfg->index, TAG,
eccci/mt6765/md_sys1_platform.c:		CCCI_ERROR_LOG(dev_cfg->index, TAG,
eccci/mt6765/md_sys1_platform.c:	CCCI_DEBUG_LOG(dev_cfg->index, TAG,
eccci/mt6765/md_sys1_platform.c:	CCCI_DEBUG_LOG(dev_cfg->index, TAG,
eccci/mt6765/md_sys1_platform.c:	CCCI_DEBUG_LOG(dev_cfg->index, TAG,
eccci/mt6765/md_sys1_platform.c:	CCCI_DEBUG_LOG(dev_cfg->index, TAG,
eccci/mt6765/md_sys1_platform.c:	CCCI_NORMAL_LOG(md->index, TAG, "%s: on=%d\n", __func__, on);
eccci/mt6765/md_sys1_platform.c:				CCCI_ERROR_LOG(md->index, TAG,
eccci/mt6765/md_sys1_platform.c:		CCCI_ERROR_LOG(-1, TAG,
eccci/mt6765/md_sys1_platform.c:	CCCI_NORMAL_LOG(md->index, TAG, "md1_pcore_sram_on enter\n");
eccci/mt6765/md_sys1_platform.c:		CCCI_ERROR_LOG(md_id, TAG,
eccci/mt6765/md_sys1_platform.c:		CCCI_ERROR_LOG(md_id, TAG,
eccci/mt6765/md_sys1_platform.c:		CCCI_ERROR_LOG(MD_SYS1, TAG, "%s pdev == NULL\n", __func__);
eccci/mt6765/md_sys1_platform.c:		CCCI_ERROR_LOG(MD_SYS1, TAG, "%s pdev == NULL\n", __func__);
eccci/mt6765/ccci_platform.c:			CCCI_ERROR_LOG(md->index, TAG,
eccci/mt6765/ccci_platform.c:			CCCI_ERROR_LOG(md->index, TAG,
eccci/mt6765/ccci_platform.c:		CCCI_ERROR_LOG(md->index, TAG,
eccci/mt6765/ccci_platform.c:	CCCI_INIT_LOG(-1, TAG, "infra_ao_base:0x%p\n", (void *)infra_ao_base);
eccci/mt6765/ccci_platform.c:			DUMMY_PAGE_SIZE},     /* HWLOGGER1 */
eccci/mt6765/ccci_platform.c:			DUMMY_PAGE_SIZE},     /* HWLOGGER2  */
eccci/mt6765/ccci_platform.c:			DUMMY_PAGE_SIZE},     /* HWLOGGER3 */
eccci/ccci_modem.c:		CCCI_BOOTUP_LOG(-1, TAG,
eccci/ccci_modem.c:		CCCI_ERROR_LOG(-1, TAG,
eccci/ccci_modem.c:		CCCI_ERROR_LOG(md->index, TAG,
eccci/ccci_modem.c:		CCCI_ERROR_LOG(md->index, TAG,
eccci/ccci_modem.c:	CCCI_INIT_LOG(md->index, TAG, "register modem\n");
eccci/ccci_modem.c:	md->mdlg_mode = data[MD_CFG_MDLOG_MODE];
eccci/ccci_modem.c:		CCCI_ERROR_LOG(md_id, TAG,
eccci/ccci_modem.c:		CCCI_NORMAL_LOG(-1, TAG, "clear buffer ! first_boot\n");
eccci/ccci_modem.c:			CCCI_NORMAL_LOG(-1, TAG,
eccci/ccci_modem.c:	LOGGING_MODE mdlog_flag = MODE_IDLE;
eccci/ccci_modem.c:	ap_side_md_feature->feature_set[SMART_LOGGING_SHARE_MEMORY].support_mask
eccci/ccci_modem.c:			case SMART_LOGGING_SHARE_MEMORY:
eccci/ccci_modem.c:					SMEM_USER_SMART_LOGGING,
eccci/ccci_modem.c:	CCCI_BOOTUP_DUMP_LOG(md->index, TAG, "AP runtime data\n");
eccci/ccci_modem.c:			CCCI_ERROR_LOG(md->index, TAG,
eccci/ccci_modem.c:		CCCI_ERROR_LOG(md->index, TAG,
eccci/ccci_modem.c:		CCCI_ERROR_LOG(md->index, TAG,
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:#define LOG_INF(format, args...) pr_debug(PFX "[%s] " format, __func__, ##args)
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	LOG_INF("read from otp, sensor id is 0x%x\n", get_byte);
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	LOG_INF("dummyline = %d, dummypixels = %d\n",
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	LOG_INF("framerate = %d, min framelength should enable %d\n",
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	LOG_INF("Exit! shutter =%d, framelength =%d\n",
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	LOG_INF("imx576 gain =%d, reg_gain =%d\n", gain, reg_gain);
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	LOG_INF("Error gain setting");
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	LOG_INF("gain = %d, reg_gain = 0x%x\n ", gain, reg_gain);
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	LOG_INF("image_mirror = %d\n", image_mirror);
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	LOG_INF("%s enter\n", __func__);
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	/* AEHIST_LOG_AUTO_THRESH 0:manual 1:auto */
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	write_cmos_sensor_8(0x37EC, 0x00); /*AEHIST_LOG_LOWER_TH*/
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	write_cmos_sensor_8(0x37ED, 0x00); /*AEHIST_LOG_LOWER_TH*/
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	write_cmos_sensor_8(0x37EE, 0x03); /*AEHIST_LOG_UPPER_TH*/
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	write_cmos_sensor_8(0x37EF, 0xFF); /*AEHIST_LOG_UPPER_TH*/
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	LOG_INF(
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	"AEHIST_LOG 0xB73A:0x%x 0x37EC:0x%x 0x37ED:0x%x 0x37EE:0x%x 0x37EF:0x%x\n",
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	LOG_INF("using binning_normal_setting\n");
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	LOG_INF("using binning_3hdr_setting\n");
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	LOG_INF("E! currefps:%d\n", currefps);
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:		LOG_INF("%d: IMX576 HDR synthesis BYPASS",
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:		LOG_INF("read otp fail Err !\n"); /* print log */
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	LOG_INF("0x0A22 0x%x 0x0A23 0x%x\n",
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:		LOG_INF("This is 0.91cut version, version = 0x%x\n",
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:			LOG_INF("This is 0.90cut version\n");
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:				LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n",
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:				LOG_INF("IMX576_module_id=%d\n",
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:			LOG_INF(
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	LOG_INF("PLATFORM:MT6595,MIPI 2LANE\n");
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	LOG_INF(
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	LOG_INF("capture 5M@30fps,864Mbps/lane\n");
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:			LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n",
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:			LOG_INF(
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:		LOG_INF("ophf the val of 0x0018 is %d\n",
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	LOG_INF("E imgsensor.hdr_mode=%d\n", imgsensor.hdr_mode);
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:		LOG_INF("E 3HDR\n");
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:		LOG_INF("E normal\n");
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:			LOG_INF(
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	LOG_INF("E imgsensor.hdr_mode=%d\n", imgsensor.hdr_mode);
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:		LOG_INF("E preview 3HDR\n");
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:		LOG_INF("Error ScenarioId setting");
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	LOG_INF("framerate = %d\n ", framerate);
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	LOG_INF("enable = %d, framerate = %d\n", enable, framerate);
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	LOG_INF("scenario_id = %d, framerate = %d\n", scenario_id, framerate);
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:				LOG_INF(
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:			LOG_INF(
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	LOG_INF("enable: %d\n", enable);
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	LOG_INF("E! le:0x%x, me:0x%x, se:0x%x\n", le, me, se);
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	LOG_INF("L! le:0x%x, me:0x%x, se:0x%x\n", le, me, se);
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:		LOG_INF("Error gain setting");
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:		LOG_INF("long gain > medium gain\n");
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:		LOG_INF("long gain <= medium gain\n");
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	LOG_INF(
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	LOG_INF("E! index:%d, regNum:%d\n", index, regNum);
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	LOG_INF("Addr 0xB870, 0x380D Value:0x%x %x\n",
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:		LOG_INF("l Addr:0x%x Value:0x%x %x Table:0x%x\n",
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	LOG_INF("Limit Gain:0x%x LTC Rate:0x%x Post Gain:0x%x\n",
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	LOG_INF("[%s] ABS_GAIN_GR:%d, grgain_32:%d\n",
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	LOG_INF("[%s] ABS_GAIN_R:%d, rgain_32:%d\n",
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	LOG_INF("[%s] ABS_GAIN_B:%d, bgain_32:%d\n",
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	LOG_INF("[%s] ABS_GAIN_GB:%d, gbgain_32:%d\n",
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	LOG_INF("streaming_enable(0=Sw Standby,1=streaming): %d\n", enable);
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:	LOG_INF("feature_id = %d\n", feature_id);
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:		LOG_INF(
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:		LOG_INF("SENSOR_FEATURE_GET_PDAF_DATA. No support\n");
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:LOG_INF("current fps :%d\n", *feature_data_32);
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:		LOG_INF(
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:		LOG_INF(
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:		LOG_INF("hdr enable :%d\n", *feature_data_32);
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:		LOG_INF(
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:		LOG_INF(
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:		LOG_INF(
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:		LOG_INF("SENSOR_FEATURE_GET_VC_INFO %d\n",
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:		LOG_INF(
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:		LOG_INF(
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:		/* LOG_INF("PDAF_CAPACITY scenarioId:%d\n", *feature_data); */
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:		LOG_INF("SENSOR_FEATURE_SET_STREAMING_SUSPEND\n");
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:		LOG_INF("SENSOR_FEATURE_SET_STREAMING_RESUME, shutter:%llu\n",
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:		LOG_INF("SENSOR_FEATURE_GET_BINNING_TYPE: %d\n",
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:		LOG_INF(
imgsensor/src/common/v1_1/imx576_mipi_raw/imx576mipiraw_Sensor.c:		LOG_INF("set imx576_HDR_synthesis_bypass = %d\n",
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:/* #define LOG_WRN(format, args...)
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c: * xlog_printk(ANDROID_LOG_WARN ,PFX, "[%S] " format, __FUNCTION__, ##args)
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:/* #defineLOG_INF(format, args...)
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c: * xlog_printk(ANDROID_LOG_INFO ,PFX, "[%s] " format, __FUNCTION__, ##args)
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:/* #define LOG_DBG(format, args...)
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c: * xlog_printk(ANDROID_LOG_DEBUG ,PFX, "[%S] " format, __FUNCTION__, ##args)
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:#define LOG_INF(format, args...) pr_debug(PFX "[%s] " format, __func__, ##args)
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:	LOG_INF("dummyline = %d, dummypixels = %d\n",
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:	LOG_INF("framerate = %d, min framelength should enable %d\n",
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:	LOG_INF("Exit! shutter =%d, framelength =%d\n",
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:	LOG_INF("imx376 gain =%d, reg_gain =%d\n", gain, reg_gain);
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:	LOG_INF("Error gain setting");
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:	LOG_INF("gain = %d , reg_gain = 0x%x\n ", gain, reg_gain);
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:	LOG_INF("image_mirror = %d\n", image_mirror);
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:	LOG_INF("E! currefps:%d\n", currefps);
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:		LOG_INF("E\n");
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:			LOG_INF(
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:				LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n",
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:				LOG_INF("IMX376_module_id=%d\n",
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:			LOG_INF(
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:	LOG_INF("PLATFORM:MT6595,MIPI 2LANE\n");
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:	LOG_INF(
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:	LOG_INF("capture 5M@30fps,864Mbps/lane\n");
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:			LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n",
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:			LOG_INF(
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:			LOG_INF(
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:		LOG_INF("Error ScenarioId setting");
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:	LOG_INF("framerate = %d\n ", framerate);
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:	LOG_INF("enable = %d, framerate = %d\n", enable, framerate);
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:	LOG_INF("scenario_id = %d, framerate = %d\n", scenario_id, framerate);
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:				LOG_INF(
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:		LOG_INF(
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:	LOG_INF("enable: %d\n", enable);
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:	LOG_INF("streaming_enable(0=Sw Standby,1=streaming): %d\n", enable);
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:	LOG_INF("feature_id = %d\n", feature_id);
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:			LOG_INF(
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:			LOG_INF("SENSOR_FEATURE_GET_PDAF_DATA\n");
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:	    LOG_INF("current fps :%d\n", (UINT32)*feature_data_32);
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:	    LOG_INF("ihdr enable :%d\n", *feature_data_32);
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:	    /* LOG_INF("SENSOR_FEATURE_GET_CROP_INFO scenarioId:%d\n",
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:	/* LOG_INF(
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:		/* LOG_INF(
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:	    LOG_INF("SENSOR_SET_SENSOR_IHDR LE=%d, SE=%d, Gain=%d\n",
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:		    LOG_INF("SENSOR_FEATURE_SET_HDR_SHUTTER LE=%d, SE=%d\n",
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:		    LOG_INF("SENSOR_FEATURE_SET_STREAMING_SUSPEND\n");
imgsensor/src/common/v1_1/imx376_mipi_raw/imx376mipiraw_Sensor.c:		    LOG_INF(
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:#define LOG_INF(format, args...) pr_debug(PFX "[%s] " format, __func__, ##args)
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:		LOG_INF("readback addr(0x%x)=0x%x\n",
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:		/*LOG_INF("%x %x", regDa[idx], regDa[idx+1]);*/
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:		LOG_INF("%x %x", regDa[idx], regDa[idx+1]);
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:	LOG_INF("E");
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:	LOG_INF("readback LRC, L1(%d) L70(%d) R1(%d) R70(%d)\n",
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:	LOG_INF("dummyline = %d, dummypixels = %d\n",
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:	LOG_INF("image_mirror = %d\n", image_mirror);
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:	LOG_INF("framerate = %d, min framelength should enable %d\n", framerate,
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:		LOG_INF("(else)imgsensor.frame_length = %d\n",
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:			LOG_INF(
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:		/* LOG_INF(
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:		LOG_INF("enter long exposure mode, time is %d", l_shift);
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:		LOG_INF("exit long exposure mode");
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:	LOG_INF("shutter =%d, framelength =%d\n",
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:	LOG_INF(
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:		LOG_INF("Error gain setting");
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:	LOG_INF("gain = %d, reg_gain = 0x%x\n ", gain, reg_gain);
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:	LOG_INF("streaming_enable(0=Sw Standby,1=streaming): %d\n",
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:	LOG_INF("2-TRIO init\n");
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:	LOG_INF("X");
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:	LOG_INF("X");
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:	LOG_INF("%s 2-trio capture E! currefps:%d\n", __func__, currefps);
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:	LOG_INF("%s 60 fps E! currefps:%d\n", __func__, currefps);
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:	LOG_INF("%s(PD 012515) 60 fpsX\n", __func__);
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:	LOG_INF("%s(PD 012515) 30 fps E! currefps:%d\n", __func__, currefps);
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:	LOG_INF("%s(PD 012515) 30 fpsX\n", __func__);
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:	LOG_INF("%s E! currefps:%d\n", __func__, currefps);
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:	LOG_INF("X\n");
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:	LOG_INF("%s E! currefps 120\n", __func__);
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:	LOG_INF("X\n");
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:	LOG_INF("%s E\n", __func__);
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:	LOG_INF("%s 240 fps E! currefps\n", __func__);
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:	LOG_INF("X");
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:	LOG_INF("%s 480 fps E! currefps\n", __func__);
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:	LOG_INF("X");
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:	LOG_INF("%s 4M*60 fps E! currefps\n", __func__);
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:	LOG_INF("X");
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:				LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n",
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:			LOG_INF("Read sensor id fail, id: 0x%x\n",
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:				LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n",
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:			LOG_INF("Read sensor id fail, id: 0x%x\n",
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:	LOG_INF("%s E\n", __func__);
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:			LOG_INF(
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:			LOG_INF(
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:		LOG_INF(
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:	LOG_INF("%s.\n", __func__);
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:	LOG_INF("%s.\n", __func__);
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:	LOG_INF("%s.\n", __func__);
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:		LOG_INF("Error ScenarioId setting");
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:	LOG_INF("framerate = %d\n ", framerate);
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:	LOG_INF("enable = %d, framerate = %d\n", enable, framerate);
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:	LOG_INF("scenario_id = %d, framerate = %d\n", scenario_id, framerate);
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:			LOG_INF(
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:		LOG_INF(
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:		LOG_INF("error scenario_id = %d, we use preview scenario\n",
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:	LOG_INF("enable: %d\n", enable);
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:/* LOG_INF("temp_c(%d), read_reg(%d)\n", temperature_convert, temperature); */
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:	/*LOG_INF("feature_id = %d\n", feature_id);*/
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:		LOG_INF("SENSOR_FEATURE_GET_PDAF_DATA\n");
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:		LOG_INF("current fps :%d\n", (UINT32)*feature_data_32);
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:		LOG_INF("ihdr enable :%d\n", (BOOL)*feature_data_32);
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:		LOG_INF("SENSOR_FEATURE_GET_CROP_INFO scenarioId:%d\n",
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:		LOG_INF("SENSOR_FEATURE_GET_PDAF_INFO scenarioId:%d\n",
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:		LOG_INF(
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:		LOG_INF("SENSOR_FEATURE_GET_PDAF_REG_SETTING %d",
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:		/*LOG_INF("SENSOR_FEATURE_SET_PDAF_REG_SETTING %d",
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:		LOG_INF("PDAF mode :%d\n", *feature_data_16);
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:		LOG_INF("SENSOR_SET_SENSOR_IHDR LE=%d, SE=%d, Gain=%d\n",
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:		LOG_INF("SENSOR_FEATURE_SET_HDR_SHUTTER LE=%d, SE=%d\n",
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:		LOG_INF("SENSOR_FEATURE_SET_STREAMING_SUSPEND\n");
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:		LOG_INF("SENSOR_FEATURE_SET_STREAMING_RESUME, shutter:%llu\n",
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519mipiraw_Sensor.c:		LOG_INF("SENSOR_FEATURE_GET_VC_INFO %d\n",
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519_eeprom.c:#define LOG_INF(format, args...) pr_debug(PFX "[%s] " format, __func__, ##args)
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519_eeprom.c:	/*LOG_INF("enter read_eeprom size = %d\n", size);*/
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519_eeprom.c:		/*LOG_INF("read_eeprom 0x%0x %d\n", offset, data[i]);*/
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519_eeprom.c:	LOG_INF("read imx519 LRC, addr = %d, size = %u\n",
imgsensor/src/common/v1_1/imx519_mipi_raw/imx519_eeprom.c:	LOG_INF("read imx519 DCC, addr = %d, size = %u\n",
imgsensor/src/common/v1_1/imx398_mipi_raw/imx398mipiraw_Sensor.c:/* LOG_INF("temp_c(%d), read_reg(%d)\n", temperature_convert, temperature); */
imgsensor/src/common/v1_1/s5k2t7sp_mipi_raw/s5k2t7spmipiraw_Sensor.c: * #define LOG_INF(format, args...) pr_debug(
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:#define LOG_INF(fmt, args...)	pr_info(PFX "[%s] " fmt, __func__, ##args)
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:#define LOG_1 LOG_INF("IMX386,MIPI 4LANE\n")
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:#define SENSORDB LOG_INF
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:	/* LOG_INF("%x %x", regDa[idx], regDa[idx+1]); */
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:	/* LOG_INF("%x %x", regDa[idx], regDa[idx+1]); */
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("dummyline = %d, dummypixels = %d\n",
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("framerate = %d, min framelength should enable(%d)\n",
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("enter shutter =%d\n", shutter);
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("shutter=%d, framelength=%d, line_length=%d, shift:%d\n"
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("enter shutter =%d\n", shutter);
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("shutter=%d, framelength=%d, length=%d, shift:%d\n"
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("exit IMX386MIPI_sensorGainMapping function\n");
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("set gain = %d\n", gain);
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:		LOG_INF("Error gain setting");
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("gain = %d , reg_gain = 0x%x\n ", gain, reg_gain);
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("le:0x%x, se:0x%x, gain:0x%x\n", le, se, gain);
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("%s.\n", __func__);
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("%s.\n", __func__);
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("%s.\n", __func__);
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("%s.\n", __func__);
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("%s.\n", __func__);
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("%s.\n", __func__);
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("%s.\n", __func__);
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("%s.\n", __func__);
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:			LOG_INF("Get imx386 mono! id=0x%x, sensor id: 0x%x\n"
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:			LOG_INF("Read sensor fail, addr: 0x%x, sensorid:0x%x\n"
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_1;
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:				LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n"
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:			LOG_INF("Read id fail, id: 0x%x, sensor id: 0x%x\n",
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("%s.\n", __func__);
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("%s.\n", __func__);
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("%s.\n", __func__);
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:		LOG_INF("use cap30FPS's setting: %d fps!\n",
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("%s.\n", __func__);
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("%s.\n", __func__);
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("%s.\n", __func__);
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("%s.\n", __func__);
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("%s.\n", __func__);
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("%s.\n", __func__);
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:		LOG_INF("Error ScenarioId setting");
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("framerate = %d\n ", framerate);
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("enable = %d, framerate = %d\n", enable, framerate);
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("scenario_id = %d, framerate = %d\n", scenario_id, framerate);
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:		LOG_INF("error scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("%s, enable: %d\n", __func__, enable);
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("get_temperature(%d)\n", temperature);
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:		LOG_INF("current fps :%d\n", (UINT32)*feature_data);
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:		LOG_INF("ihdr enable :%d\n", (BOOL)*feature_data);
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:		LOG_INF("SENSOR_FEATURE_GET_CROP_INFO scenarioId:%d\n",
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:		LOG_INF("SENSOR_SET_SENSOR_IHDR LE=%d, SE=%d, Gain=%d\n",
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:		LOG_INF("GET_SENSOR_PDAF_CAPACITY scenarioId:%llu\n",
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:		LOG_INF("SENSOR_FEATURE_GET_PDAF_INFO scenarioId:%d\n",
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:		LOG_INF("PDAF mode :%d\n", *feature_data_16);
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:		LOG_INF("SENSOR_FEATURE_GET_PDAF_DATA\n");
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:		LOG_INF("SENSOR_FEATURE_GET_VC_INFO %d\n",
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:		LOG_INF("GET_PDAF_REG_SETTING %d", (*feature_para_len));
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:		LOG_INF("SET_PDAF_REG_SETTING %d", (*feature_para_len));
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:		LOG_INF("SENSOR_FEATURE_SET_STREAMING_SUSPEND\n");
imgsensor/src/common/v1_1/imx386_mipi_mono/imx386mipimono_sensor.c:		LOG_INF("SENSOR_FEATURE_SET_STREAMING_RESUME, shutter:%llu\n",
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:#define LOG_1 LOG_INF("IMX586,MIPI 4LANE\n")
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:#define LOG_INF(format, args...) pr_debug(PFX "[%s] " format, __func__, ##args)
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:		LOG_INF("%x %x", regDa[idx], regDa[idx+1]);
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:		LOG_INF("%x %x", regDa[idx], regDa[idx+1]);
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:	LOG_INF("E");
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:	LOG_INF("readback LRC, L1(%d) L70(%d) R1(%d) R70(%d)\n",
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:	LOG_INF("dummyline = %d, dummypixels = %d\n",
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:	LOG_INF("image_mirror = %d\n", image_mirror);
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:	LOG_INF("framerate = %d, min framelength should enable %d\n", framerate,
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:		LOG_INF("(else)imgsensor.frame_length = %d\n",
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:		LOG_INF("enter long exposure mode, time is %d",
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:		LOG_INF("exit long exposure mode");
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:	LOG_INF("shutter =%d, framelength =%d\n",
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:	LOG_INF(
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:		LOG_INF("Error gain setting");
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:	LOG_INF("gain = %d, reg_gain = 0x%x\n ", gain, reg_gain);
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:	LOG_INF("streaming_enable(0=Sw Standby,1=streaming): %d\n",
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:	LOG_INF("X");
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:	LOG_INF("X");
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:	LOG_INF("%s 30 fps E! currefps:%d\n", __func__, currefps);
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:	LOG_INF("%s 30 fpsX\n", __func__);
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:	LOG_INF("%s E! currefps:%d\n", __func__, currefps);
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:	LOG_INF("imx586 VIDEO_60_FPS\n");
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:	LOG_INF("imx586 VIDEO_30_FPS\n");
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:	LOG_INF("X\n");
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:	LOG_INF("%s E! currefps 120\n", __func__);
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:	LOG_INF("X\n");
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:	LOG_INF("%s E\n", __func__);
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:	LOG_INF("%s 30 fps E! currefps\n", __func__);
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:	LOG_INF("X\n");
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:	LOG_INF("%s E! currefps %d\n",
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:	LOG_INF("X");
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:	LOG_INF("%s 1280x720@240fps E! currefps\n", __func__);
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:	LOG_INF("X");
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:			LOG_INF(
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:				LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n",
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:			LOG_INF("Read sensor id fail, id: 0x%x\n",
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:				LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n",
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:			LOG_INF("Read sensor id fail, id: 0x%x\n",
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:	LOG_INF("%s E\n", __func__);
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:			LOG_INF(
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:			LOG_INF(
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:		LOG_INF(
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:	LOG_INF("%s.\n", __func__);
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:	LOG_INF("%s.\n", __func__);
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:		LOG_INF("Error ScenarioId setting");
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:	LOG_INF("framerate = %d\n ", framerate);
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:	LOG_INF("enable = %d, framerate = %d\n", enable, framerate);
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:	LOG_INF("scenario_id = %d, framerate = %d\n", scenario_id, framerate);
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:			LOG_INF(
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:		LOG_INF(
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:		LOG_INF("error scenario_id = %d, we use preview scenario\n",
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:	LOG_INF("enable: %d\n", enable);
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:	/*LOG_INF("feature_id = %d\n", feature_id);*/
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:		LOG_INF("SENSOR_FEATURE_GET_PDAF_DATA\n");
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:		LOG_INF("current fps :%d\n", (UINT32)*feature_data_32);
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:		LOG_INF("ihdr enable :%d\n", (BOOL)*feature_data_32);
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:		LOG_INF("SENSOR_FEATURE_GET_CROP_INFO scenarioId:%d\n",
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:		LOG_INF("SENSOR_FEATURE_GET_PDAF_INFO scenarioId:%d\n",
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:		LOG_INF(
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:		LOG_INF("SENSOR_FEATURE_GET_PDAF_REG_SETTING %d",
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:		LOG_INF("SENSOR_FEATURE_SET_PDAF_REG_SETTING %d",
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:		LOG_INF("PDAF mode :%d\n", *feature_data_16);
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:		LOG_INF("SENSOR_SET_SENSOR_IHDR LE=%d, SE=%d, Gain=%d\n",
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:		LOG_INF("SENSOR_FEATURE_SET_HDR_SHUTTER LE=%d, SE=%d\n",
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:		LOG_INF("SENSOR_FEATURE_SET_STREAMING_SUSPEND\n");
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:		LOG_INF("SENSOR_FEATURE_SET_STREAMING_RESUME, shutter:%llu\n",
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586mipiraw_Sensor.c:		LOG_INF("SENSOR_FEATURE_GET_VC_INFO %d\n",
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586_eeprom.c:#define LOG_INF(format, args...) pr_debug(PFX "[%s] " format, __func__, ##args)
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586_eeprom.c:	/*LOG_INF("enter read_eeprom size = %d\n", size);*/
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586_eeprom.c:		/*LOG_INF("read_eeprom 0x%0x %d\n", offset, data[i]);*/
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586_eeprom.c:	LOG_INF("read imx586 LRC, addr = %d, size = %u\n",
imgsensor/src/common/v1_1/imx586_mipi_raw/imx586_eeprom.c:	LOG_INF("read imx586 DCC, addr = %d, size = %u\n",
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:#define LOG_1 LOG_INF("IMX350,MIPI 4LANE\n")
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:#define LOG_INF(format, args...) pr_debug(PFX "[%s] " format, __func__, ##args)
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:	LOG_INF("[%s]Profile = %lu us\n", tag, TimeIntervalUS);
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:		LOG_INF("Not to need update focus area!\n");
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:		LOG_INF("GC pre PDAF\n");
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:	LOG_INF(
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:		/* LOG_INF("%x %x", regDa[idx], regDa[idx+1]); */
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:		/* LOG_INF("%x %x", regDa[idx], regDa[idx+1]); */
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:	LOG_INF("E");
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:	LOG_INF("frame_length = %d, line_length = %d\n",
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:		LOG_INF("read otp fail Err!\n");
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:		LOG_INF("read otp fail Err!\n");	/* print log */
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:	/* LOG_INF("0x0A38 0x%x 0x0A39 0x%x\n",
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:	LOG_INF("framerate = %d, min framelength should enable %d\n",
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:	/* LOG_INF("Enter! shutter =%d, framelength =%d\n",
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:		LOG_INF("Unable to set such a long exposure %d, set to max\n",
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:	/* LOG_INF("0x3028 0x%x l_shift %d l_shift&0x3 %d\n",
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:	/* LOG_INF("0x3028 0x%x\n", read_cmos_sensor(0x3028)); */
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:	LOG_INF("Exit! shutter =%d, framelength =%d\n",
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:	/* LOG_INF("shutter =%d, frame_time =%d\n", shutter, frame_time); */
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:	LOG_INF(
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:		LOG_INF("Error gain setting");
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:	LOG_INF("gain = %d, reg_gain = 0x%x\n ", gain, reg_gain);
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:		LOG_INF("Error gain1 setting");
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:		LOG_INF("Error gain2 setting");
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:	LOG_INF(
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:	LOG_INF("le:0x%x, se:0x%x\n", le, se);
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:	LOG_INF("le:%d, se:%d, ratio:%d\n", le, se, ratio);
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:	LOG_INF("zhdr(mode:%d)\n", imgsensor.hdr_mode);
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:	LOG_INF("streaming_enable(0=Sw Standby,1=streaming): %d\n", enable);
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:	LOG_INF("E! currefps:%d hdr:%d pdaf:%d\n",
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:	LOG_INF("E! %s:%d\n", __func__, currefps);
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:	LOG_INF("enable: %d\n", enable);
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:				LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n",
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:			LOG_INF(
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:	LOG_1;
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:				LOG_INF(
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:			LOG_INF(
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:	/*LOG_INF("scenario_id = %d\n", scenario_id); */
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:		LOG_INF("Error ScenarioId setting");
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:	LOG_INF("framerate = %d\n ", framerate);
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:	LOG_INF("enable = %d, framerate = %d\n", enable, framerate);
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:	LOG_INF("scenario_id = %d, framerate = %d\n", scenario_id, framerate);
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:			LOG_INF(
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:		LOG_INF("error scenario_id = %d, we use preview scenario\n",
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:	/*LOG_INF("scenario_id = %d\n", scenario_id); */
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:	LOG_INF("%s\n", __func__);
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:	LOG_INF("[%s] ABS_GAIN_GR:%d, grgain_32:%d\n",
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:	LOG_INF("[%s] ABS_GAIN_R:%d, rgain_32:%d\n",
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:	LOG_INF("[%s] ABS_GAIN_B:%d, bgain_32:%d\n",
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:	LOG_INF("[%s] ABS_GAIN_GB:%d, gbgain_32:%d\n",
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:/* LOG_INF("temp_c(%d), read_reg(%d)\n", temperature_convert, temperature); */
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:/*LOG_INF("feature_id = %d\n", feature_id);*/
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:		LOG_INF("SENSOR_FEATURE_GET_PDAF_DATA\n");
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:		LOG_INF("current fps :%d\n", *feature_data_32);
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:		LOG_INF("SENSOR_FEATURE_GET_CROP_INFO scenarioId:%d\n",
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:		LOG_INF("hdr enable :%d\n", *feature_data_32);
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:		LOG_INF("SENSOR_FEATURE_SET_HDR_SHUTTER LE=%d, SE=%d\n",
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:		LOG_INF("SENSOR_FEATURE_GET_VC_INFO %d\n",
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:		LOG_INF(
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:		LOG_INF(
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:		LOG_INF("PDAF mode :%d\n", *feature_data_16);
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:		LOG_INF("SENSOR_FEATURE_GET_PDAF_REG_SETTING %d",
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:		LOG_INF("SENSOR_FEATURE_SET_PDAF_REG_SETTING %d",
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:		LOG_INF(
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:		LOG_INF("SENSOR_FEATURE_SET_STREAMING_SUSPEND\n");
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350mipiraw_Sensor.c:		LOG_INF("SENSOR_FEATURE_SET_STREAMING_RESUME\n");
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350_eeprom.c:#define LOG_INF(format, args...) pr_debug(PFX "[%s] " format, __func__, ##args)
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350_eeprom.c:	LOG_INF("enter _read_eeprom size = %d\n", size);
imgsensor/src/common/v1_1/imx350_mipi_raw/imx350_eeprom.c:		/* LOG_INF("read_eeprom 0x%0x %d\n",offset, data[i]); */
imgsensor/src/common/v1_1/s5k3p8sp_mipi_raw/s5k3p8_pdaf_cal.c:/* #define LOG_1 pr_debug("s5k3p8,MIPI 4LANE\n") */
imgsensor/src/common/v1_1/s5k3p8sp_mipi_raw/s5k3p8_pdaf_cal.c:/* #define LOG_2 \
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:#define LOG_INF(format, args...) pr_debug(PFX "[%s] " format, __func__, ##args)
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:	LOG_INF("dummyline = %d, dummypixels = %d\n",
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:	LOG_INF("framerate = %d, min framelength should enable %d\n",
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:	LOG_INF("shutter =%d, framelength =%d\n",
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:	//LOG_INF("frame_length = %d ", frame_length);
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:	//LOG_INF("shutter =%d, frame_time =%d\n", shutter, frame_time);
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:	LOG_INF("shutter =%d, framelength =%d/%d, dummy_line=%d\n",
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:	//LOG_INF("frame_length = %d ", frame_length);
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:		LOG_INF("Error gain setting");
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:	LOG_INF("gain = %d , reg_gain = 0x%x\n ", gain, reg_gain);
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:	LOG_INF("image_mirror = %d\n", image_mirror);
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:	LOG_INF("streaming_enable(0=Sw Standby,1=streaming): %d\n", enable);
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:				LOG_INF(" Stream Off OK at i=%d.\n", i);
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:		LOG_INF("Stream Off Fail! framecnt=%d.\n", framecnt);
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:	LOG_INF("%s() E! currefps:%d\n", __func__, currefps);
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:	LOG_INF("E! currefps:%d\n", currefps);
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:		LOG_INF("data[%d] = %d sum = %d", i, data[i], sum);
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:		LOG_INF("%s :Page %d read otp fail\n", __func__, Page);
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:	LOG_INF("%s", __func__);
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:		LOG_INF("%s fail", __func__);
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:			LOG_INF(
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:				LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n",
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:			LOG_INF(
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:	LOG_INF("PLATFORM:MT6595,MIPI 2LANE\n");
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:	LOG_INF(
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:				LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n",
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:			LOG_INF("Read sensor id fail, id: 0x%x\n",
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:			LOG_INF(
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:			LOG_INF(
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:		LOG_INF("Error ScenarioId setting");
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:	LOG_INF("framerate = %d\n ", framerate);
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:	LOG_INF("enable = %d, framerate = %d\n", enable, framerate);
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:	LOG_INF("scenario_id = %d, framerate = %d\n", scenario_id, framerate);
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:				LOG_INF(
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:		LOG_INF("error scenario_id = %d, we use preview scenario\n",
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:	LOG_INF("enable: %d\n", enable);
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:	/*LOG_INF("feature_id = %d\n", feature_id); */
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:		LOG_INF("current fps :%d\n", (UINT32) *feature_data_32);
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:		LOG_INF("ihdr enable :%d\n", (BOOL) * feature_data_32);
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:		LOG_INF("SENSOR_FEATURE_GET_CROP_INFO scenarioId:%d\n",
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:		LOG_INF("SENSOR_SET_SENSOR_IHDR LE=%d, SE=%d, Gain=%d\n",
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:		LOG_INF("SENSOR_FEATURE_SET_HDR_SHUTTER LE=%d, SE=%d\n",
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:		LOG_INF("SENSOR_FEATURE_SET_STREAMING_SUSPEND\n");
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:		LOG_INF("SENSOR_FEATURE_SET_STREAMING_RESUME, shutter:%llu\n",
imgsensor/src/common/v1_1/s5k5e9_mipi_raw/s5k5e9mipiraw_Sensor.c:		LOG_INF("SENSOR_FEATURE_GET_VC_INFO %d\n",
imgsensor/src/common/v1_1/imx230_mipi_raw/imx230mipi_Sensor.c: * #define LOG_INF(format, args...) pr_debug(\
imgsensor/src/common/v1_1/imx230_mipi_raw/imx230_eeprom.c: * #define LOG_INF(format, args...) pr_debug(\
imgsensor/src/common/v1_1/s5k2l7_mipi_raw/s5k2l7mipiraw_Sensor.h:#define S5K2L7_GAIN_ANALOG_RATIO_MAX 4
imgsensor/src/common/v1_1/s5k2l7_mipi_raw/s5k2l7mipiraw_Sensor.h:#define S5K2L7_GAIN_ANALOG_MIN       BASEGAIN
imgsensor/src/common/v1_1/s5k2l7_mipi_raw/s5k2l7mipiraw_Sensor.h:#define S5K2L7_GAIN_ANALOG_MAX       (0x7F << 1)
imgsensor/src/common/v1_1/s5k2l7_mipi_raw/s5k2l7mipiraw_Sensor.h:#define S5K2L7_GAIN_RATIO_MAX S5K2L7_GAIN_ANALOG_RATIO_MAX
imgsensor/src/common/v1_1/s5k2l7_mipi_raw/s5k2l7mipiraw_Sensor.h:#define S5K2L7_GAIN_MIN       S5K2L7_GAIN_ANALOG_MIN
imgsensor/src/common/v1_1/s5k2l7_mipi_raw/s5k2l7mipiraw_Sensor.h:#define S5K2L7_GAIN_MAX       S5K2L7_GAIN_ANALOG_MAX
imgsensor/src/common/v1_1/s5k2l7_mipi_raw/s5k2l7mipiraw_Sensor.h:#define S5K2L7_GAIN_LE_SE_RATIO_MAX S5K2L7_GAIN_ANALOG_RATIO_MAX
imgsensor/src/common/v1_1/s5k2l7_mipi_raw/s5k2l7mipiraw_Sensor.c:	/* LOG_2; */
imgsensor/src/common/v1_1/s5k2l7_mipi_raw/s5k2l7_pdaf_cal.c:/* #define LOG_1 pr_debug("s5k2l7,MIPI 4LANE\n") */
imgsensor/src/common/v1_1/s5k2l7_mipi_raw/s5k2l7_pdaf_cal.c:/* #define LOG_2 pr_debug
imgsensor/src/common/v1/hi556_mipi_raw/hi556mipiraw_Sensor.c:#define LOG_INF(format, args...)    \
imgsensor/src/common/v1/hi556_mipi_raw/hi556mipiraw_Sensor.c:	LOG_INF("dummyline = %d, dummypixels = %d\n",
imgsensor/src/common/v1/hi556_mipi_raw/hi556mipiraw_Sensor.c:	LOG_INF("shutter =%d, framelength =%d",
imgsensor/src/common/v1/hi556_mipi_raw/hi556mipiraw_Sensor.c:	LOG_INF("set_shutter");
imgsensor/src/common/v1/hi556_mipi_raw/hi556mipiraw_Sensor.c:	LOG_INF("gain = %d , reg_gain = 0x%x\n ", gain, reg_gain);
imgsensor/src/common/v1/hi556_mipi_raw/hi556mipiraw_Sensor.c:	LOG_INF("le:0x%x, se:0x%x, gain:0x%x\n", le, se, gain);
imgsensor/src/common/v1/hi556_mipi_raw/hi556mipiraw_Sensor.c:	LOG_INF("image_mirror = %d", image_mirror);
imgsensor/src/common/v1/hi556_mipi_raw/hi556mipiraw_Sensor.c:		LOG_INF("Error image_mirror setting");
imgsensor/src/common/v1/hi556_mipi_raw/hi556mipiraw_Sensor.c:		LOG_INF("capture_setting fps = 300\n");
imgsensor/src/common/v1/hi556_mipi_raw/hi556mipiraw_Sensor.c:		LOG_INF("capture_setting fps not 300\n");
imgsensor/src/common/v1/hi556_mipi_raw/hi556mipiraw_Sensor.c:			LOG_INF("i2c write id : 0x%x, sensor id: 0x%x\n",
imgsensor/src/common/v1/hi556_mipi_raw/hi556mipiraw_Sensor.c:		LOG_INF("Read id fail,sensor id: 0x%x\n", *sensor_id);
imgsensor/src/common/v1/hi556_mipi_raw/hi556mipiraw_Sensor.c:	LOG_INF("[open]: PLATFORM:MT6737,MIPI 24LANE\n");
imgsensor/src/common/v1/hi556_mipi_raw/hi556mipiraw_Sensor.c:	LOG_INF("preview 1296*972@30fps,360Mbps/lane;"
imgsensor/src/common/v1/hi556_mipi_raw/hi556mipiraw_Sensor.c:				LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n",
imgsensor/src/common/v1/hi556_mipi_raw/hi556mipiraw_Sensor.c:		LOG_INF("open sensor id fail: 0x%x\n", sensor_id);
imgsensor/src/common/v1/hi556_mipi_raw/hi556mipiraw_Sensor.c:	LOG_INF("E");
imgsensor/src/common/v1/hi556_mipi_raw/hi556mipiraw_Sensor.c:	LOG_INF("Caputre fps:%d\n", imgsensor.current_fps);
imgsensor/src/common/v1/hi556_mipi_raw/hi556mipiraw_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/hi556_mipi_raw/hi556mipiraw_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/hi556_mipi_raw/hi556mipiraw_Sensor.c:		LOG_INF("preview\n");
imgsensor/src/common/v1/hi556_mipi_raw/hi556mipiraw_Sensor.c:	LOG_INF("framerate = %d ", framerate);
imgsensor/src/common/v1/hi556_mipi_raw/hi556mipiraw_Sensor.c:	LOG_INF("enable = %d, framerate = %d ", enable, framerate);
imgsensor/src/common/v1/hi556_mipi_raw/hi556mipiraw_Sensor.c:	LOG_INF("scenario_id = %d, framerate = %d\n",
imgsensor/src/common/v1/hi556_mipi_raw/hi556mipiraw_Sensor.c:			LOG_INF("fps %d fps not support,use cap: %d fps!\n",
imgsensor/src/common/v1/hi556_mipi_raw/hi556mipiraw_Sensor.c:	    LOG_INF("error scenario_id = %d, we use preview scenario\n",
imgsensor/src/common/v1/hi556_mipi_raw/hi556mipiraw_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/hi556_mipi_raw/hi556mipiraw_Sensor.c:	LOG_INF("set_test_pattern_mode enable: %d", enable);
imgsensor/src/common/v1/hi556_mipi_raw/hi556mipiraw_Sensor.c:	LOG_INF("feature_id = %d\n", feature_id);
imgsensor/src/common/v1/hi556_mipi_raw/hi556mipiraw_Sensor.c:	    LOG_INF("current fps :%d\n", (UINT32)*feature_data);
imgsensor/src/common/v1/hi556_mipi_raw/hi556mipiraw_Sensor.c:	    LOG_INF("ihdr enable :%d\n", (BOOL)*feature_data);
imgsensor/src/common/v1/hi556_mipi_raw/hi556mipiraw_Sensor.c:	    LOG_INF("SENSOR_FEATURE_GET_CROP_INFO scenarioId:%d\n",
imgsensor/src/common/v1/hi556_mipi_raw/hi556mipiraw_Sensor.c:	    LOG_INF("SENSOR_SET_SENSOR_IHDR LE=%d, SE=%d, Gain=%d\n",
imgsensor/src/common/v1/gc2375h_mipi_raw/gc2375hmipi_Sensor.c:#define LOG_1 cam_pr_debug("GC2375H, MIPI 1LANE\n")
imgsensor/src/common/v1/gc2375h_mipi_raw/gc2375hmipi_Sensor.c:#define ANALOG_GAIN_1 64	/* 1.00x */
imgsensor/src/common/v1/gc2375h_mipi_raw/gc2375hmipi_Sensor.c:#define ANALOG_GAIN_2 92	/* 1.43x */
imgsensor/src/common/v1/gc2375h_mipi_raw/gc2375hmipi_Sensor.c:#define ANALOG_GAIN_3 128	/* 2.00x */
imgsensor/src/common/v1/gc2375h_mipi_raw/gc2375hmipi_Sensor.c:#define ANALOG_GAIN_4 182	/* 2.84x */
imgsensor/src/common/v1/gc2375h_mipi_raw/gc2375hmipi_Sensor.c:#define ANALOG_GAIN_5 254	/* 3.97x */
imgsensor/src/common/v1/gc2375h_mipi_raw/gc2375hmipi_Sensor.c:#define ANALOG_GAIN_6 363	/* 5.68x */
imgsensor/src/common/v1/gc2375h_mipi_raw/gc2375hmipi_Sensor.c:#define ANALOG_GAIN_7 521	/* 8.14x */
imgsensor/src/common/v1/gc2375h_mipi_raw/gc2375hmipi_Sensor.c:#define ANALOG_GAIN_8 725	/* 11.34x */
imgsensor/src/common/v1/gc2375h_mipi_raw/gc2375hmipi_Sensor.c:#define ANALOG_GAIN_9 1038	/* 16.23x */
imgsensor/src/common/v1/gc2375h_mipi_raw/gc2375hmipi_Sensor.c:	if ((iReg >= ANALOG_GAIN_1) && (iReg < ANALOG_GAIN_2)) {
imgsensor/src/common/v1/gc2375h_mipi_raw/gc2375hmipi_Sensor.c:	} else if ((iReg >= ANALOG_GAIN_2) && (iReg < ANALOG_GAIN_3)) {
imgsensor/src/common/v1/gc2375h_mipi_raw/gc2375hmipi_Sensor.c:		temp = 64 * iReg / ANALOG_GAIN_2;
imgsensor/src/common/v1/gc2375h_mipi_raw/gc2375hmipi_Sensor.c:	} else if ((iReg >= ANALOG_GAIN_3) && (iReg < ANALOG_GAIN_4)) {
imgsensor/src/common/v1/gc2375h_mipi_raw/gc2375hmipi_Sensor.c:		temp = 64 * iReg / ANALOG_GAIN_3;
imgsensor/src/common/v1/gc2375h_mipi_raw/gc2375hmipi_Sensor.c:	} else if ((iReg >= ANALOG_GAIN_4) && (iReg < ANALOG_GAIN_5)) {
imgsensor/src/common/v1/gc2375h_mipi_raw/gc2375hmipi_Sensor.c:		temp = 64 * iReg / ANALOG_GAIN_4;
imgsensor/src/common/v1/gc2375h_mipi_raw/gc2375hmipi_Sensor.c:	} else if ((iReg >= ANALOG_GAIN_5) && (iReg < ANALOG_GAIN_6)) {
imgsensor/src/common/v1/gc2375h_mipi_raw/gc2375hmipi_Sensor.c:		temp = 64 * iReg / ANALOG_GAIN_5;
imgsensor/src/common/v1/gc2375h_mipi_raw/gc2375hmipi_Sensor.c:	} else if ((iReg >= ANALOG_GAIN_6) && (iReg < ANALOG_GAIN_7)) {
imgsensor/src/common/v1/gc2375h_mipi_raw/gc2375hmipi_Sensor.c:		temp = 64 * iReg / ANALOG_GAIN_6;
imgsensor/src/common/v1/gc2375h_mipi_raw/gc2375hmipi_Sensor.c:	} else if ((iReg >= ANALOG_GAIN_7) && (iReg < ANALOG_GAIN_8)) {
imgsensor/src/common/v1/gc2375h_mipi_raw/gc2375hmipi_Sensor.c:		temp = 64 * iReg / ANALOG_GAIN_7;
imgsensor/src/common/v1/gc2375h_mipi_raw/gc2375hmipi_Sensor.c:	} else if ((iReg >= ANALOG_GAIN_8) && (iReg < ANALOG_GAIN_9)) {
imgsensor/src/common/v1/gc2375h_mipi_raw/gc2375hmipi_Sensor.c:		temp = 64 * iReg / ANALOG_GAIN_8;
imgsensor/src/common/v1/gc2375h_mipi_raw/gc2375hmipi_Sensor.c:		temp = 64 * iReg / ANALOG_GAIN_9;
imgsensor/src/common/v1/gc2375h_mipi_raw/gc2375hmipi_Sensor.c:	LOG_1;
imgsensor/src/common/v1/ov12a10_mipi_raw/ov12a10mipiraw_Sensor.c:#define LOG_INF(format, args...)    \
imgsensor/src/common/v1/ov12a10_mipi_raw/ov12a10mipiraw_Sensor.c:	//LOG_INF("frame_length =%d\n", frame_length);
imgsensor/src/common/v1/ov12a10_mipi_raw/ov12a10mipiraw_Sensor.c:	LOG_INF("shutter =%d, framelength =%d, realtime_fps =%d\n",
imgsensor/src/common/v1/ov12a10_mipi_raw/ov12a10mipiraw_Sensor.c:	LOG_INF("streaming_control enable =%d\n", enable);
imgsensor/src/common/v1/ov12a10_mipi_raw/ov12a10mipiraw_Sensor.c:	LOG_INF("shutter =%d, framelength =%d, realtime_fps =%d\n",
imgsensor/src/common/v1/ov12a10_mipi_raw/ov12a10mipiraw_Sensor.c:	LOG_INF("gain = %d , reg_gain = 0x%x\n ", gain, reg_gain);
imgsensor/src/common/v1/ov12a10_mipi_raw/ov12a10mipiraw_Sensor.c:	//LOG_INF("le:0x%x, se:0x%x, gain:0x%x\n", le, se, gain);
imgsensor/src/common/v1/ov12a10_mipi_raw/ov12a10mipiraw_Sensor.c:	/* LOG_INF("night_mode do nothing"); */
imgsensor/src/common/v1/ov12a10_mipi_raw/ov12a10mipiraw_Sensor.c:	LOG_INF("sensor_init init_setting MULTI_WRITE\n");
imgsensor/src/common/v1/ov12a10_mipi_raw/ov12a10mipiraw_Sensor.c:	LOG_INF("sensor_init init_setting\n");
imgsensor/src/common/v1/ov12a10_mipi_raw/ov12a10mipiraw_Sensor.c:	LOG_INF("preview_setting RES_2048*1536_30fps\n");
imgsensor/src/common/v1/ov12a10_mipi_raw/ov12a10mipiraw_Sensor.c:	LOG_INF("capture 4096*3072 currefps = %d\n",
imgsensor/src/common/v1/ov12a10_mipi_raw/ov12a10mipiraw_Sensor.c:	LOG_INF("normal_video_setting RES_4096*3072_30fps\n");
imgsensor/src/common/v1/ov12a10_mipi_raw/ov12a10mipiraw_Sensor.c:	LOG_INF("hs_video_setting RES_1280x720_120fps\n");
imgsensor/src/common/v1/ov12a10_mipi_raw/ov12a10mipiraw_Sensor.c:	LOG_INF("slim_video_setting RES_2048*1536_30fps\n");
imgsensor/src/common/v1/ov12a10_mipi_raw/ov12a10mipiraw_Sensor.c:	LOG_INF("CUSTOM1_setting 2048*1536_30fps\n");
imgsensor/src/common/v1/ov12a10_mipi_raw/ov12a10mipiraw_Sensor.c:	LOG_INF("CUSTOM2_setting 4096*3072_30fps\n");
imgsensor/src/common/v1/ov12a10_mipi_raw/ov12a10mipiraw_Sensor.c:		LOG_INF("ov12a read[get_imgsensor_id] sensor id: 0x%x\n",
imgsensor/src/common/v1/ov12a10_mipi_raw/ov12a10mipiraw_Sensor.c:		LOG_INF("get_imgsensor_id failed: 0x%x\n", *sensor_id);
imgsensor/src/common/v1/ov12a10_mipi_raw/ov12a10mipiraw_Sensor.c:		LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n",
imgsensor/src/common/v1/ov12a10_mipi_raw/ov12a10mipiraw_Sensor.c:		LOG_INF("Open sensor id fail: 0x%x\n", sensor_id);
imgsensor/src/common/v1/ov12a10_mipi_raw/ov12a10mipiraw_Sensor.c:	LOG_INF("preview setting E\n");
imgsensor/src/common/v1/ov12a10_mipi_raw/ov12a10mipiraw_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/ov12a10_mipi_raw/ov12a10mipiraw_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/ov12a10_mipi_raw/ov12a10mipiraw_Sensor.c:		LOG_INF("Error ScenarioId setting");
imgsensor/src/common/v1/ov12a10_mipi_raw/ov12a10mipiraw_Sensor.c:	LOG_INF("set_video_mode framerate = %d\n ", framerate);
imgsensor/src/common/v1/ov12a10_mipi_raw/ov12a10mipiraw_Sensor.c:	LOG_INF("set_auto_flicker_mode enable = %d, framerate = %d\n",
imgsensor/src/common/v1/ov12a10_mipi_raw/ov12a10mipiraw_Sensor.c:	LOG_INF("scenario_id = %d, framerate = %d\n", scenario_id, framerate);
imgsensor/src/common/v1/ov12a10_mipi_raw/ov12a10mipiraw_Sensor.c:	    LOG_INF("error scenario_id = %d,use preview scenario\n",
imgsensor/src/common/v1/ov12a10_mipi_raw/ov12a10mipiraw_Sensor.c:	LOG_INF("[3058]scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/ov12a10_mipi_raw/ov12a10mipiraw_Sensor.c:	LOG_INF("set_test_pattern_mode enable: %d\n", enable);
imgsensor/src/common/v1/ov12a10_mipi_raw/ov12a10mipiraw_Sensor.c:		LOG_INF("feature_id = %d\n", feature_id);
imgsensor/src/common/v1/ov12a10_mipi_raw/ov12a10mipiraw_Sensor.c:	    LOG_INF("GET_CROP_INFO scenarioId:%d\n", *feature_data_32);
imgsensor/src/common/v1/ov12a10_mipi_raw/ov12a10mipiraw_Sensor.c:	    LOG_INF("SENSOR_SET_SENSOR_IHDR LE=%d, SE=%d, Gain=%d\n",
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:#define LOG_1 LOG_INF("GC8C34, MIPI 2LANE\n")
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:#define LOG_INF(format, args...)    pr_debug(PFX "[%s] " format, __FUNCTION__, ##args)
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:		LOG_INF("Read OTP Success Already Return\n");
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:	LOG_INF("GC8C34_OTP_DD : flag_dd = 0x%x\n", flagdd);
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:		LOG_INF("GC8C34_OTP_DD is Empty !!\n");
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:		LOG_INF("GC8C34_OTP_DD is Valid!!\n");
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:		LOG_INF("GC8C34_OTP : total_number = %d\n", total_number);
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:		LOG_INF("GC8C34_OTP : dd_cnt = %d\n", gc8c34_otp_info.dd_cnt);
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:		LOG_INF("GC8C34_OTP_DD is Invalid !!\n");
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:	LOG_INF("flag_ob = 0x%x\n", flag_ob);
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:			LOG_INF("OB group %d is Empty !!\n", index + 1);
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:			LOG_INF("OB group %d is Valid !!\n", index + 1);
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:			LOG_INF("g_dark = 0x%x , g_active = 0x%x !\n",
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:			LOG_INF("OB group %d is Invalid !!\n", index + 1);
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:	LOG_INF("GC8C34_OTP: flag_module = 0x%x, flag_wb = 0x%x, flag_af = 0x%x\n",
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:			LOG_INF("GC8C34_OTP_INFO group %d is Empty !!\n", index + 1);
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:			LOG_INF("GC8C34_OTP_INFO group %d is Valid !!\n", index + 1);
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:				LOG_INF("GC8C34_OTP_INFO Check sum %d Error !!\n", index + 1);
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:			LOG_INF("GC8C34_OTP_INFO group %d is Invalid !!\n", index + 1);
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:			LOG_INF("GC8C34_OTP_WB group %d is Empty !!\n", index + 1);
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:			LOG_INF("GC8C34_OTP_WB group %d is Valid !!\n", index + 1);
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:				LOG_INF("GC8C34_OTP_WB Check sum %d Error !!\n", index + 1);
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:			LOG_INF("GC8C34_OTP_WB group %d is Invalid !!\n", index + 1);
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:			LOG_INF("GC8C34_OTP_GOLDEN group %d is Empty !!\n", index + 1);
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:			LOG_INF("GC8C34_OTP_GOLDEN group %d is Valid !!\n", index + 1);
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:				LOG_INF("GC8C34_OTP_GOLDEN Check sum %d Error !!\n", index + 1);
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:			LOG_INF("GC8C34_OTP_GOLDEN group %d is Invalid !!\n", index + 1);
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:			LOG_INF("GC8C34_OTP_AF group %d is Empty !!\n", index + 1);
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:			LOG_INF("GC8C34_OTP_AF group %d is Valid !!\n", index + 1);
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:				LOG_INF("GC8C34_OTP_AF Check sum %d Error !!\n", index + 1);
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:			LOG_INF("GC8C34_OTP_AF group %d is Invalid !!\n", index + 1);
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:	LOG_INF("GC8C34_OTP_LSC: flag_lsc = 0x%x\n", flag_lsc);
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:			LOG_INF("GC8C34_OTP_LSC group %d is Empty !\n", index + 1);
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:			LOG_INF("GC8C34_OTP_LSC group %d is Valid !\n", index + 1);
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:				LOG_INF("GC8C34_OTP_LSC check sum error, check sum read: 0x%x, calculate:0x%x!!\n",
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:			LOG_INF("GC8C34_OTP_LSC group %d is Invalid !!\n", index + 1);
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:	LOG_INF("GC8C34_OTP_INFO: module_id=0x%x\n",
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:	LOG_INF("GC8C34_OTP_INFO: lens_id=0x%x\n",
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:	LOG_INF("GC8C34_OTP_INFO: vcm_id=0x%x\n",
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:	LOG_INF("GC8C34_OTP_INFO: vcm_driver_id=0x%x\n",
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:	LOG_INF("GC8C34_OTP_INFO: data=%d-%d-%d\n", gc8c34_otp_info.year,
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:	LOG_INF("GC8C34_OTP_WB: r/g=0x%x\n", gc8c34_otp_info.rg_gain);
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:	LOG_INF("GC8C34_OTP_WB: b/g=0x%x\n", gc8c34_otp_info.bg_gain);
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:	LOG_INF("GC8C34_OTP_GOLDEN: golden_rg=0x%x\n",
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:	LOG_INF("GC8C34_OTP_GOLDEN: golden_bg=0x%x\n",
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:	LOG_INF("GC8C34_OTP_AF: infitiy=0x%x\n",
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:	LOG_INF("GC8C34_OTP_AF: macro=0x%x\n", gc8c34_otp_info.af_macro);
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:			LOG_INF("GC8C34_OTP_DEBUG: Page%d: addr = 0x%x, value = 0x%x;\n",
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:			LOG_INF("g_active or g_dark error!\n");
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:			LOG_INF("dark_current_ratio = 0x%x , col_gain_offset = 0x%x !\n",
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:			LOG_INF("GC8C34_OTP_GC val0 = 0x%x, val1 = 0x%x, val2 = 0x%x\n",
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:			LOG_INF("GC8C34_OTP_GC x = %d, y = %d\n",
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:		LOG_INF("GC8C34_OTP_UPDATE_AWB: rg_typical = 0x%x, bg_typical = 0x%x\n",
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:		LOG_INF("GC8C34_OTP_UPDATE_AWB: rg_typical = 0x%x, bg_typical = 0x%x\n",
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:		LOG_INF("GC8C34_OTP_UPDATE_AWB: r = 0x%x, g = 0x%x, b = 0x%x\n",
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:	LOG_INF("GC8C34_OTP_UPDATE_CHIPVERSION: reg_num = %d\n",
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:			LOG_INF("GC8C34_OTP_UPDATE_CHIP_VERSION: P%d:0x%x -> 0x%x\n",
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:		LOG_INF("GC8C34_OTP: Enable OTP!\n");
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:		LOG_INF("GC8C34_OTP: Disable OTP!\n");
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:	LOG_INF("frame_length = %d, vb = %d\n", imgsensor.frame_length,
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:	LOG_INF("Enter set_shutter!\n");
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:	LOG_INF("Exit! real shutter =%d, framelength =%d\n",
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:	LOG_INF("Enter set_gain!\n");
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:	LOG_INF("le:0x%x, se:0x%x, gain:0x%x\n", le, se, gain);
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:	LOG_INF("Enter nigh_mode!\n");
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:	LOG_INF("E");
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:	LOG_INF("enable: %d\n", enable);
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:				LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n",
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:			LOG_INF("Read sensor id fail, write id: 0x%x, id: 0x%x\n",
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:	LOG_1;
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:				LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n",
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:			LOG_INF("Read sensor id fail, write id: 0x%x, id: 0x%x\n",
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:			LOG_INF("Warning: current_fps %d fps is not support, so use cap's setting: %d fps!\n",
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:	LOG_INF("Enter get_info!\n");
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:	LOG_INF("Enter control!\n");
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:		LOG_INF("Error ScenarioId setting");
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:	LOG_INF("framerate = %d\n ", framerate);
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:	LOG_INF("enable = %d, framerate = %d\n", enable, framerate);
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:	LOG_INF("scenario_id = %d, framerate = %d\n", scenario_id,
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:				LOG_INF("Warning: current_fps %d fps is not support, so use cap's setting: %d fps!\n",
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:		LOG_INF("error scenario_id = %d, we use preview scenario\n",
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:	LOG_INF("feature_id = %d\n", feature_id);
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:		LOG_INF("adb_i2c_read 0x%x = 0x%x\n", sensor_reg_data->RegAddr,
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:		LOG_INF("current fps :%d\n", (UINT32)*feature_data);
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:		LOG_INF("ihdr enable :%d\n", (BOOL)*feature_data);
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:		LOG_INF("SENSOR_FEATURE_GET_CROP_INFO scenarioId:%d\n",
imgsensor/src/common/v1/gc8c34_mipi_raw/gc8c34mipi_Sensor.c:		LOG_INF("SENSOR_SET_SENSOR_IHDR LE=%d, SE=%d, Gain=%d\n",
imgsensor/src/common/v1/ov_ov02b_iii/ov_ov02b_iii_Sensor.c:/*#define LOG_INF(format, args...)    \
imgsensor/src/common/v1/ov_ov02b_iii/ov_ov02b_iii_Sensor.c:#define LOG_INF(format, args...)
imgsensor/src/common/v1/ov_ov02b_iii/ov_ov02b_iii_Sensor.c:	LOG_INF("imgsensor.frame_length = %d\n", imgsensor.frame_length);
imgsensor/src/common/v1/ov_ov02b_iii/ov_ov02b_iii_Sensor.c:    //LOG_INF("shutter =%d, framelength =%d\n", shutter,imgsensor.frame_length);
imgsensor/src/common/v1/ov_ov02b_iii/ov_ov02b_iii_Sensor.c:	//LOG_INF("shutter =%d, framelength =%d, realtime_fps =%d\n",
imgsensor/src/common/v1/ov_ov02b_iii/ov_ov02b_iii_Sensor.c:            LOG_INF("OV02BMIPI_SetGain = 16");
imgsensor/src/common/v1/ov_ov02b_iii/ov_ov02b_iii_Sensor.c:            LOG_INF("OV02BMIPI_SetGain = 160");
imgsensor/src/common/v1/ov_ov02b_iii/ov_ov02b_iii_Sensor.c:            LOG_INF("OV02BMIPI_SetGain = %d",iReg);
imgsensor/src/common/v1/ov_ov02b_iii/ov_ov02b_iii_Sensor.c:        LOG_INF("error gain setting");
imgsensor/src/common/v1/ov_ov02b_iii/ov_ov02b_iii_Sensor.c:	LOG_INF("le: 0x%x, se: 0x%x, gain: 0x%x\n", le, se, gain);
imgsensor/src/common/v1/ov_ov02b_iii/ov_ov02b_iii_Sensor.c:            LOG_INF("i2c write id : 0x%x, sensor id: 0x%x\n",
imgsensor/src/common/v1/ov_ov02b_iii/ov_ov02b_iii_Sensor.c:        LOG_INF("Read id fail,sensor id: 0x%x\n", *sensor_id);
imgsensor/src/common/v1/ov_ov02b_iii/ov_ov02b_iii_Sensor.c:                LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n", imgsensor.i2c_write_id, sensor_id);
imgsensor/src/common/v1/ov_ov02b_iii/ov_ov02b_iii_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/ov_ov02b_iii/ov_ov02b_iii_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/ov_ov02b_iii/ov_ov02b_iii_Sensor.c:    LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/ov_ov02b_iii/ov_ov02b_iii_Sensor.c:        //LOG_INF("[odin]default mode\n");
imgsensor/src/common/v1/ov_ov02b_iii/ov_ov02b_iii_Sensor.c:	LOG_INF("framerate = %d\n ", framerate);
imgsensor/src/common/v1/ov_ov02b_iii/ov_ov02b_iii_Sensor.c:	LOG_INF("enable = %d, framerate = %d\n", enable, framerate);
imgsensor/src/common/v1/ov_ov02b_iii/ov_ov02b_iii_Sensor.c://	LOG_INF("scenario_id = %d, framerate = %d\n", scenario_id, framerate);
imgsensor/src/common/v1/ov_ov02b_iii/ov_ov02b_iii_Sensor.c:				LOG_INF("Warning: current_fps %d fps is not support, so use cap's setting: %d fps!\n",
imgsensor/src/common/v1/ov_ov02b_iii/ov_ov02b_iii_Sensor.c:        LOG_INF("Warning: current_fps %d fps is not support, so use cap's setting: %d fps!\n",framerate,imgsensor_info.custom1.max_framerate/10);
imgsensor/src/common/v1/ov_ov02b_iii/ov_ov02b_iii_Sensor.c:		LOG_INF("error scenario_id = %d, we use preview scenario\n", scenario_id);
imgsensor/src/common/v1/ov_ov02b_iii/ov_ov02b_iii_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/ov_ov02b_iii/ov_ov02b_iii_Sensor.c:	LOG_INF("enable: %d\n", enable);
imgsensor/src/common/v1/ov_ov02b_iii/ov_ov02b_iii_Sensor.c:	//LOG_INF("streaming_control enable =%d\n", enable);
imgsensor/src/common/v1/ov_ov02b_iii/ov_ov02b_iii_Sensor.c:	LOG_INF("feature_id = %d\n", feature_id);
imgsensor/src/common/v1/ov_ov02b_iii/ov_ov02b_iii_Sensor.c:		LOG_INF("adb_i2c_read 0x%x = 0x%x\n", sensor_reg_data->RegAddr, sensor_reg_data->RegData);
imgsensor/src/common/v1/ov_ov02b_iii/ov_ov02b_iii_Sensor.c:	    LOG_INF("current fps :%d\n", (UINT32)*feature_data);
imgsensor/src/common/v1/ov_ov02b_iii/ov_ov02b_iii_Sensor.c:	    LOG_INF("ihdr enable :%d\n", (BOOL)*feature_data);
imgsensor/src/common/v1/ov_ov02b_iii/ov_ov02b_iii_Sensor.c:		LOG_INF("SENSOR_FEATURE_GET_CROP_INFO scenarioId:%d\n", (UINT32)*feature_data);
imgsensor/src/common/v1/ov_ov02b_iii/ov_ov02b_iii_Sensor.c:		LOG_INF("SENSOR_SET_SENSOR_IHDR LE = %d, SE = %d, Gain = %d\n",
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:#define LOG_INF(format, args...)    \
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:	 * LOG_INF("dummyline = %d, dummypixels = %d\n",
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:	LOG_INF("framerate = %d, min framelength should enable %d\n",
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:	LOG_INF("Exit! shutter =%d, framelength =%d, auto_extend=%d\n",
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:	/* LOG_INF("shutter =%d, frame_time =%d\n", shutter, frame_time); */
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:	LOG_INF("shutter =%d,framelen =%d/%d,dummy_line=%d,autoextend=%d\n",
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:		LOG_INF("Gain mapping don't correctly:%d %d\n", gain,
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:		LOG_INF("Error gain setting");
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:	LOG_INF("gain = %d , reg_gain = 0x%x\n ", gain, reg_gain);
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:	LOG_INF("le:0x%x, se:0x%x, gain:0x%x, auto_extend=%d\n", le, se, gain,
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:	LOG_INF("image_mirror = %d\n", image_mirror);
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:		LOG_INF("Error image_mirror setting\n");
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:	LOG_INF("sensor_init MULTI_WRITE\n");
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:	LOG_INF("capture currefps:%d\n", curretfps);
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:	LOG_INF("normal video currefps: %d\n", currefps);
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:	LOG_INF("hs_video E\n");
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:	LOG_INF("slim video E\n");
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:	LOG_INF("custom1_setting E\n");
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:	LOG_INF("custom2_setting E\n");
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:				LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n",
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:		      LOG_INF("Read sensor id fail, write id: 0x%x, id: 0x%x\n",
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:	LOG_INF("IMX486,MIPI 4LANE\n");
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:				LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n",
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:		LOG_INF("Open sensor id fail id: 0x%x\n", sensor_id);
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:			LOG_INF(
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:	LOG_INF("ihdr enable :%d\n", imgsensor.hdr_mode);
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:		LOG_INF("Error ScenarioId setting");
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:	LOG_INF("framerate = %d\n ", framerate);
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:	LOG_INF("enable = %d, framerate = %d\n", enable, framerate);
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:	LOG_INF("scenario_id = %d, framerate = %d\n", scenario_id, framerate);
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:			LOG_INF(
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:		LOG_INF("error scenario_id = %d, we use preview scenario\n",
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:	LOG_INF("set_test_pattern_mode enable: %d\n", enable);
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:	LOG_INF("temp_c(%d), read_reg(%d)\n",
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:	LOG_INF("streaming_enable(0=Sw Standby,1=streaming): %d\n", enable);
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:	/* LOG_INF("feature_id = %d\n", feature_id); */
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:		LOG_INF("SENSOR_FEATURE_GET_PDAF_DATA\n");
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:		LOG_INF("SENSOR_FEATURE_SET_TEST_PATTERN\n");
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:		LOG_INF("current fps :%d\n", *feature_data_32);
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:		LOG_INF("ihdr enable :%d\n", *feature_data_32);
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:		LOG_INF("ihdr enable :%d\n", imgsensor.hdr_mode);
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:		LOG_INF("SENSOR_FEATURE_GET_CROP_INFO scenarioId:%d\n",
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:		LOG_INF("SENSOR_FEATURE_GET_PDAF_INFO scenarioId:%llu\n",
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:		LOG_INF("SENSOR_SET_SENSOR_IHDR LE=%d, SE=%d, Gain=%d\n",
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:		LOG_INF(
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:		LOG_INF("PDAF mode :%d\n", *feature_data_16);
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:		LOG_INF("SENSOR_FEATURE_SET_STREAMING_SUSPEND\n");
imgsensor/src/common/v1/imx486_mipi_raw/imx486mipiraw_Sensor.c:		LOG_INF("SENSOR_FEATURE_SET_STREAMING_RESUME, shutter:%llu\n",
imgsensor/src/common/v1/s5k2t7sp_mipi_raw_5m/s5k2t7spmipiraw_Sensor.c: * #define LOG_INF(format, args...) pr_debug(
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipi_Sensor_pdafotp.c:#define LOG_INF(format, args...)	pr_debug(PFX "[%s] " format, __FUNCTION__, ##args)
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipi_Sensor_pdafotp.c:     LOG_INF("KYM PDAF FILE READ FAIL\n");
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipi_Sensor_pdafotp.c:       LOG_INF("KYM PDAF FILE READ PASS\n");
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipi_Sensor_pdafotp.c:       		LOG_INF("VCM E2PROM READ fail\n");
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipi_Sensor_pdafotp.c:	//LOG_INF( "read eeprom : 0x%d \n", (u8*)data );
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipi_Sensor_pdafotp.c:		//LOG_INF("VCM1 read_eeprom 0x%0x %d\n",offset, data[i]);
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipi_Sensor_pdafotp.c:		//LOG_INF("VCM2 read_eeprom 0x%0x %d\n",offset, data[i]);
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipi_Sensor_pdafotp.c:	LOG_INF("VCM read_eeprom Inf1 : 0x%0x%0x  , Macro : 0x%0x%0x \n", af_pos[0], af_pos[1],af_pos[2], af_pos[3]);
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipiraw_Sensor.c:#define LOG_INF(format, args...)    \
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipiraw_Sensor.c:	LOG_INF("dummyline = %d, dummypixels = %d\n",
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipiraw_Sensor.c:	LOG_INF("shutter = %d, imgsensor.frame_length = %d, imgsensor.min_frame_length = %d\n",
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipiraw_Sensor.c:	LOG_INF("frame_length = %d , shutter = %d \n", imgsensor.frame_length, shutter);
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipiraw_Sensor.c:	LOG_INF("set_shutter");
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipiraw_Sensor.c:        LOG_INF("Error gain setting");
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipiraw_Sensor.c:    LOG_INF("gain = %d , reg_gain = 0x%x\n ", gain, reg_gain);
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipiraw_Sensor.c:	LOG_INF("le:0x%x, se:0x%x, gain:0x%x\n", le, se, gain);
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipiraw_Sensor.c:	LOG_INF("image_mirror = %d", image_mirror);
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipiraw_Sensor.c:		LOG_INF("Error image_mirror setting");
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipiraw_Sensor.c:			LOG_INF("i2c write id : 0x%x, sensor id: 0x%x\n",
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipiraw_Sensor.c:		LOG_INF("Read id fail,sensor id: 0x%x\n", *sensor_id);
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipiraw_Sensor.c:	LOG_INF("[open]: hi1336@MT6765,MIPI 4LANE\n");
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipiraw_Sensor.c:				LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n",
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipiraw_Sensor.c:		LOG_INF("open sensor id fail: 0x%x\n", sensor_id);
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipiraw_Sensor.c:	LOG_INF("E");
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipiraw_Sensor.c:	LOG_INF("Caputre fps:%d\n", imgsensor.current_fps);
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipiraw_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipiraw_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipiraw_Sensor.c:		LOG_INF("preview\n");
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipiraw_Sensor.c:		LOG_INF("capture\n");
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipiraw_Sensor.c:		LOG_INF("video preview\n");
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipiraw_Sensor.c:		LOG_INF("default mode\n");
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipiraw_Sensor.c:	LOG_INF("framerate = %d ", framerate);
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipiraw_Sensor.c:	LOG_INF("enable = %d, framerate = %d ", enable, framerate);
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipiraw_Sensor.c:	LOG_INF("scenario_id = %d, framerate = %d\n",
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipiraw_Sensor.c:			LOG_INF("fps %d fps not support,use cap: %d fps!\n",
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipiraw_Sensor.c:	    LOG_INF("error scenario_id = %d, we use preview scenario\n",
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipiraw_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipiraw_Sensor.c:	LOG_INF("set_test_pattern_mode enable: %d", enable);
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipiraw_Sensor.c:	LOG_INF("feature_id = %d\n", feature_id);
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipiraw_Sensor.c:	    LOG_INF("current fps :%d\n", (UINT32)*feature_data);
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipiraw_Sensor.c:	    LOG_INF("ihdr enable :%d\n", (BOOL)*feature_data);
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipiraw_Sensor.c:	    LOG_INF("SENSOR_FEATURE_GET_CROP_INFO scenarioId:%d\n",
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipiraw_Sensor.c:	    LOG_INF("SENSOR_SET_SENSOR_IHDR LE=%d, SE=%d, Gain=%d\n",
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipiraw_Sensor.c:				LOG_INF("SENSOR_FEATURE_GET_VC_INFO %d\n", (UINT16)*feature_data);
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipiraw_Sensor.c:						LOG_INF("SENSOR_FEATURE_GET_VC_INFO CAPTURE_JPEG\n");
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipiraw_Sensor.c:						LOG_INF("SENSOR_FEATURE_GET_VC_INFO VIDEO PREVIEW\n");
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipiraw_Sensor.c:						LOG_INF("SENSOR_FEATURE_GET_VC_INFO DEFAULT_PREVIEW\n");
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipiraw_Sensor.c:		LOG_INF(" GET_PDAF_DATA EEPROM\n");
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipiraw_Sensor.c:	        LOG_INF("READ PDCAL DATA\n");
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipiraw_Sensor.c:		LOG_INF("SENSOR_FEATURE_GET_SENSOR_PDAF_CAPACITY scenarioId:%lld\n", *feature_data);
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipiraw_Sensor.c:		LOG_INF("SENSOR_FEATURE_GET_SENSOR_PDAF_CAPACITY scenarioId:%lld\n", *feature_data);
imgsensor/src/common/v1/hi1336_mipi_raw/hi1336mipiraw_Sensor.c:	        	LOG_INF(" pdaf mode : %d \n", imgsensor.pdaf_mode);
imgsensor/src/common/v1/s5k3l6_mipi_raw/s5k3l6mipiraw_Sensor.c: * #define LOG_INF(format, args...) pr_debug(
imgsensor/src/common/v1/hi1337_mipi_raw/hi1337mipiraw_Sensor.c:#define LOG_INF(format, args...)    \
imgsensor/src/common/v1/hi1337_mipi_raw/hi1337mipiraw_Sensor.c:	LOG_INF("dummyline = %d, dummypixels = %d\n",
imgsensor/src/common/v1/hi1337_mipi_raw/hi1337mipiraw_Sensor.c:	LOG_INF("shutter = %d, imgsensor.frame_length = %d, imgsensor.min_frame_length = %d\n",
imgsensor/src/common/v1/hi1337_mipi_raw/hi1337mipiraw_Sensor.c:	LOG_INF("frame_length = %d , shutter = %d \n", imgsensor.frame_length, shutter);
imgsensor/src/common/v1/hi1337_mipi_raw/hi1337mipiraw_Sensor.c:	LOG_INF("frame = %d, line = %d\n", frame_le, line_le);
imgsensor/src/common/v1/hi1337_mipi_raw/hi1337mipiraw_Sensor.c:	LOG_INF("set_shutter");
imgsensor/src/common/v1/hi1337_mipi_raw/hi1337mipiraw_Sensor.c:        LOG_INF("Error gain setting");
imgsensor/src/common/v1/hi1337_mipi_raw/hi1337mipiraw_Sensor.c:    LOG_INF("gain = %d , reg_gain = 0x%x\n ", gain, reg_gain);
imgsensor/src/common/v1/hi1337_mipi_raw/hi1337mipiraw_Sensor.c:	LOG_INF("le:0x%x, se:0x%x, gain:0x%x\n", le, se, gain);
imgsensor/src/common/v1/hi1337_mipi_raw/hi1337mipiraw_Sensor.c:	LOG_INF("image_mirror = %d", image_mirror);
imgsensor/src/common/v1/hi1337_mipi_raw/hi1337mipiraw_Sensor.c:		LOG_INF("Error image_mirror setting");
imgsensor/src/common/v1/hi1337_mipi_raw/hi1337mipiraw_Sensor.c:			LOG_INF("i2c write id : 0x%x, sensor id: 0x%x\n",
imgsensor/src/common/v1/hi1337_mipi_raw/hi1337mipiraw_Sensor.c:		LOG_INF("Read id fail,sensor id: 0x%x\n", *sensor_id);
imgsensor/src/common/v1/hi1337_mipi_raw/hi1337mipiraw_Sensor.c:	LOG_INF("[open]: PLATFORM:MT6737,MIPI 24LANE\n");
imgsensor/src/common/v1/hi1337_mipi_raw/hi1337mipiraw_Sensor.c:	LOG_INF("preview 1296*972@30fps,360Mbps/lane;"
imgsensor/src/common/v1/hi1337_mipi_raw/hi1337mipiraw_Sensor.c:				LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n",
imgsensor/src/common/v1/hi1337_mipi_raw/hi1337mipiraw_Sensor.c:		LOG_INF("open sensor id fail: 0x%x\n", sensor_id);
imgsensor/src/common/v1/hi1337_mipi_raw/hi1337mipiraw_Sensor.c:	LOG_INF("E");
imgsensor/src/common/v1/hi1337_mipi_raw/hi1337mipiraw_Sensor.c:	LOG_INF("Caputre fps:%d\n", imgsensor.current_fps);
imgsensor/src/common/v1/hi1337_mipi_raw/hi1337mipiraw_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/hi1337_mipi_raw/hi1337mipiraw_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/hi1337_mipi_raw/hi1337mipiraw_Sensor.c:		LOG_INF("[odin]preview\n");
imgsensor/src/common/v1/hi1337_mipi_raw/hi1337mipiraw_Sensor.c:		LOG_INF("[odin]capture\n");
imgsensor/src/common/v1/hi1337_mipi_raw/hi1337mipiraw_Sensor.c:		LOG_INF("[odin]video preview\n");
imgsensor/src/common/v1/hi1337_mipi_raw/hi1337mipiraw_Sensor.c:		LOG_INF("[odin]default mode\n");
imgsensor/src/common/v1/hi1337_mipi_raw/hi1337mipiraw_Sensor.c:	LOG_INF("framerate = %d ", framerate);
imgsensor/src/common/v1/hi1337_mipi_raw/hi1337mipiraw_Sensor.c:	LOG_INF("enable = %d, framerate = %d ", enable, framerate);
imgsensor/src/common/v1/hi1337_mipi_raw/hi1337mipiraw_Sensor.c:	LOG_INF("scenario_id = %d, framerate = %d\n",
imgsensor/src/common/v1/hi1337_mipi_raw/hi1337mipiraw_Sensor.c:			LOG_INF("fps %d fps not support,use cap: %d fps!\n",
imgsensor/src/common/v1/hi1337_mipi_raw/hi1337mipiraw_Sensor.c:	    LOG_INF("error scenario_id = %d, we use preview scenario\n",
imgsensor/src/common/v1/hi1337_mipi_raw/hi1337mipiraw_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/hi1337_mipi_raw/hi1337mipiraw_Sensor.c:	LOG_INF("set_test_pattern_mode enable: %d", enable);
imgsensor/src/common/v1/hi1337_mipi_raw/hi1337mipiraw_Sensor.c:	LOG_INF("feature_id = %d\n", feature_id);
imgsensor/src/common/v1/hi1337_mipi_raw/hi1337mipiraw_Sensor.c:	    LOG_INF("current fps :%d\n", (UINT32)*feature_data);
imgsensor/src/common/v1/hi1337_mipi_raw/hi1337mipiraw_Sensor.c:	    LOG_INF("ihdr enable :%d\n", (BOOL)*feature_data);
imgsensor/src/common/v1/hi1337_mipi_raw/hi1337mipiraw_Sensor.c:	    LOG_INF("SENSOR_FEATURE_GET_CROP_INFO scenarioId:%d\n",
imgsensor/src/common/v1/hi1337_mipi_raw/hi1337mipiraw_Sensor.c:	    LOG_INF("SENSOR_SET_SENSOR_IHDR LE=%d, SE=%d, Gain=%d\n",
imgsensor/src/common/v1/hi1337_mipi_raw/hi1337mipiraw_Sensor.c:				LOG_INF("SENSOR_FEATURE_GET_VC_INFO %d\n", (UINT16)*feature_data);
imgsensor/src/common/v1/hi1337_mipi_raw/hi1337mipiraw_Sensor.c:						LOG_INF("SENSOR_FEATURE_GET_VC_INFO CAPTURE_JPEG\n");
imgsensor/src/common/v1/hi1337_mipi_raw/hi1337mipiraw_Sensor.c:						LOG_INF("SENSOR_FEATURE_GET_VC_INFO VIDEO PREVIEW\n");
imgsensor/src/common/v1/hi1337_mipi_raw/hi1337mipiraw_Sensor.c:						LOG_INF("SENSOR_FEATURE_GET_VC_INFO DEFAULT_PREVIEW\n");
imgsensor/src/common/v1/hi1337_mipi_raw/hi1337mipiraw_Sensor.c:		LOG_INF("odin GET_PDAF_DATA EEPROM\n");
imgsensor/src/common/v1/hi1337_mipi_raw/hi1337mipiraw_Sensor.c:	        LOG_INF("READ PDCAL DATA\n");
imgsensor/src/common/v1/hi1337_mipi_raw/hi1337mipiraw_Sensor.c:		LOG_INF("SENSOR_FEATURE_GET_SENSOR_PDAF_CAPACITY scenarioId:%lld\n", *feature_data);
imgsensor/src/common/v1/hi1337_mipi_raw/hi1337mipiraw_Sensor.c:		LOG_INF("SENSOR_FEATURE_GET_SENSOR_PDAF_CAPACITY scenarioId:%lld\n", *feature_data);
imgsensor/src/common/v1/hi1337_mipi_raw/hi1337mipiraw_Sensor.c:	        	LOG_INF("[odin] pdaf mode : %d \n", imgsensor.pdaf_mode);
imgsensor/src/common/v1/ov_ov02b_i/ov_ov02b_i_Sensor.c:/*#define LOG_INF(format, args...)    \
imgsensor/src/common/v1/ov_ov02b_i/ov_ov02b_i_Sensor.c:#define LOG_INF(format, args...)
imgsensor/src/common/v1/ov_ov02b_i/ov_ov02b_i_Sensor.c:	LOG_INF("imgsensor.frame_length = %d\n", imgsensor.frame_length);
imgsensor/src/common/v1/ov_ov02b_i/ov_ov02b_i_Sensor.c:    //LOG_INF("shutter =%d, framelength =%d\n", shutter,imgsensor.frame_length);
imgsensor/src/common/v1/ov_ov02b_i/ov_ov02b_i_Sensor.c:	//LOG_INF("shutter =%d, framelength =%d, realtime_fps =%d\n",
imgsensor/src/common/v1/ov_ov02b_i/ov_ov02b_i_Sensor.c:            LOG_INF("OV02BMIPI_SetGain = 16");
imgsensor/src/common/v1/ov_ov02b_i/ov_ov02b_i_Sensor.c:            LOG_INF("OV02BMIPI_SetGain = 160");
imgsensor/src/common/v1/ov_ov02b_i/ov_ov02b_i_Sensor.c:            LOG_INF("OV02BMIPI_SetGain = %d",iReg);
imgsensor/src/common/v1/ov_ov02b_i/ov_ov02b_i_Sensor.c:        LOG_INF("error gain setting");
imgsensor/src/common/v1/ov_ov02b_i/ov_ov02b_i_Sensor.c:	LOG_INF("le: 0x%x, se: 0x%x, gain: 0x%x\n", le, se, gain);
imgsensor/src/common/v1/ov_ov02b_i/ov_ov02b_i_Sensor.c:            LOG_INF("i2c write id : 0x%x, sensor id: 0x%x\n",
imgsensor/src/common/v1/ov_ov02b_i/ov_ov02b_i_Sensor.c:        LOG_INF("Read id fail,sensor id: 0x%x\n", *sensor_id);
imgsensor/src/common/v1/ov_ov02b_i/ov_ov02b_i_Sensor.c:                LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n", imgsensor.i2c_write_id, sensor_id);
imgsensor/src/common/v1/ov_ov02b_i/ov_ov02b_i_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/ov_ov02b_i/ov_ov02b_i_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/ov_ov02b_i/ov_ov02b_i_Sensor.c:    LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/ov_ov02b_i/ov_ov02b_i_Sensor.c:        //LOG_INF("[odin]default mode\n");
imgsensor/src/common/v1/ov_ov02b_i/ov_ov02b_i_Sensor.c:	LOG_INF("framerate = %d\n ", framerate);
imgsensor/src/common/v1/ov_ov02b_i/ov_ov02b_i_Sensor.c:	LOG_INF("enable = %d, framerate = %d\n", enable, framerate);
imgsensor/src/common/v1/ov_ov02b_i/ov_ov02b_i_Sensor.c://	LOG_INF("scenario_id = %d, framerate = %d\n", scenario_id, framerate);
imgsensor/src/common/v1/ov_ov02b_i/ov_ov02b_i_Sensor.c:				LOG_INF("Warning: current_fps %d fps is not support, so use cap's setting: %d fps!\n",
imgsensor/src/common/v1/ov_ov02b_i/ov_ov02b_i_Sensor.c:        LOG_INF("Warning: current_fps %d fps is not support, so use cap's setting: %d fps!\n",framerate,imgsensor_info.custom1.max_framerate/10);
imgsensor/src/common/v1/ov_ov02b_i/ov_ov02b_i_Sensor.c:		LOG_INF("error scenario_id = %d, we use preview scenario\n", scenario_id);
imgsensor/src/common/v1/ov_ov02b_i/ov_ov02b_i_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/ov_ov02b_i/ov_ov02b_i_Sensor.c:	LOG_INF("enable: %d\n", enable);
imgsensor/src/common/v1/ov_ov02b_i/ov_ov02b_i_Sensor.c:	//LOG_INF("streaming_control enable =%d\n", enable);
imgsensor/src/common/v1/ov_ov02b_i/ov_ov02b_i_Sensor.c:	LOG_INF("feature_id = %d\n", feature_id);
imgsensor/src/common/v1/ov_ov02b_i/ov_ov02b_i_Sensor.c:		LOG_INF("adb_i2c_read 0x%x = 0x%x\n", sensor_reg_data->RegAddr, sensor_reg_data->RegData);
imgsensor/src/common/v1/ov_ov02b_i/ov_ov02b_i_Sensor.c:	    LOG_INF("current fps :%d\n", (UINT32)*feature_data);
imgsensor/src/common/v1/ov_ov02b_i/ov_ov02b_i_Sensor.c:	    LOG_INF("ihdr enable :%d\n", (BOOL)*feature_data);
imgsensor/src/common/v1/ov_ov02b_i/ov_ov02b_i_Sensor.c:		LOG_INF("SENSOR_FEATURE_GET_CROP_INFO scenarioId:%d\n", (UINT32)*feature_data);
imgsensor/src/common/v1/ov_ov02b_i/ov_ov02b_i_Sensor.c:		LOG_INF("SENSOR_SET_SENSOR_IHDR LE = %d, SE = %d, Gain = %d\n",
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:#define LOG_1 LOG_INF("GC8034,MIPI 2LANE\n")
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:#define LOG_INF(format, args...)    pr_debug(PFX "[%s] " format, __func__, ##args)
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:#define LOG_INF(format, args...)
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_INF("E!\n");
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:		LOG_INF("Read OTP Success Already Return\n");
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_INF("GC8034_OTP_DD : flag_dd = 0x%x\n", flagdd);
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:		LOG_INF("GC8034_OTP_DD is Empty !!\n");
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:		LOG_INF("GC8034_OTP_DD is Valid!!\n");
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:		LOG_INF("GC8034_OTP : total_number = %d\n",
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:		LOG_INF("GC8034_OTP_DD is Invalid !!\n");
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_INF("GC8034_OTP : flag_module = 0x%x , flag_wb = 0x%x , flag_af = 0x%x\n",
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:			LOG_INF("GC8034_OTP_INFO group %d is Empty !!\n", index + 1);
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:			LOG_INF("GC8034_OTP_INFO group %d is Valid !!\n", index + 1);
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:				LOG_INF("GC8034_OTP_INFO Check sum %d Error !!\n", index + 1);
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:			LOG_INF("GC8034_OTP_INFO group %d is Invalid !!\n", index + 1);
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:			LOG_INF("GC8034_OTP_WB group %d is Empty !!\n", index + 1);
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:			LOG_INF("GC8034_OTP_WB group %d is Valid !!\n", index + 1);
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:				LOG_INF("GC8034_OTP_WB Check sum %d Error !!\n", index + 1);
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:			LOG_INF("GC8034_OTP_WB group %d is Invalid !!\n", index + 1);
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:			LOG_INF("GC8034_OTP_GOLDEN group %d is Empty !!\n", index + 1);
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:			LOG_INF("GC8034_OTP_GOLDEN group %d is Valid !!\n", index + 1);
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:				LOG_INF("GC8034_OTP_GOLDEN Check sum %d Error !!\n", index + 1);
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:			LOG_INF("GC8034_OTP_GOLDEN group %d is Invalid !!\n", index + 1);
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:			LOG_INF("GC8034_OTP_AF group %d is Empty !!\n", index + 1);
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:			LOG_INF("GC8034_OTP_AF group %d is Valid !!\n", index + 1);
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:				LOG_INF("GC8034_OTP_AF Check sum %d Error !!\n", index + 1);
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:			LOG_INF("GC8034_OTP_AF group %d is Invalid !!\n", index + 1);
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_INF("GC8034_OTP_LSC : flag_lsc = 0x%x\n", flag_lsc);
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:			LOG_INF("GC8034_OTP_LSC group %d is Empty !\n", index + 1);
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:			LOG_INF("GC8034_OTP_LSC group %d is Valid !\n", index + 1);
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:				LOG_INF("GC8034_OTP_LSC check sum error, check sum read : 0x%x, calculate:0x%x!!\n",
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:			LOG_INF("GC8034_OTP_LSC group %d is Invalid !!\n", index + 1);
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_INF("GC8034_OTP_INFO:module_id=0x%x\n",
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_INF("GC8034_OTP_INFO:lens_id=0x%x\n",
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_INF("GC8034_OTP_INFO:vcm_id=0x%x\n", gc8034_otp_info.vcm_id);
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_INF("GC8034_OTP_INFO:vcm_driver_id=0x%x\n",
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_INF("GC8034_OTP_INFO:data=%d-%d-%d\n", gc8034_otp_info.year,
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_INF("GC8034_OTP_WB:r/g=0x%x\n", gc8034_otp_info.rg_gain);
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_INF("GC8034_OTP_WB:b/g=0x%x\n", gc8034_otp_info.bg_gain);
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_INF("GC8034_OTP_GOLDEN:golden_rg=0x%x\n",
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_INF("GC8034_OTP_GOLDEN:golden_bg=0x%x\n",
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_INF("GC8034_OTP_AF:infitiy=0x%x\n",
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_INF("GC8034_OTP_AF:macro=0x%x\n", gc8034_otp_info.af_macro);
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:			LOG_INF("GC8034_OTP_DEBUG: Page%d: addr = 0x%x, value = 0x%x;\n",
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:		LOG_INF("GC8034_OTP_AUTO_DD start !\n");
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:			LOG_INF("GC8034_OTP_GC val0 = 0x%x , val1 = 0x%x , val2 = 0x%x \n",
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:			LOG_INF("GC8034_OTP_GC x = %d , y = %d \n",
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:		LOG_INF("GC8034_OTP_UPDATE_AWB:rg_typical = 0x%x, bg_typical = 0x%x\n",
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:		LOG_INF("GC8034_OTP_UPDATE_AWB:rg_typical = 0x%x, bg_typical = 0x%x\n",
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:		LOG_INF("GC8034_OTP_UPDATE_AWB:r = 0x%x, g = 0x%x, b = 0x%x\n",
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_INF("GC8034_OTP_UPDATE_CHIPVERSION:reg_num = %d\n",
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:			LOG_INF("GC8034_OTP_UPDATE_CHIP_VERSION: P%d:0x%x -> 0x%x\n",
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:		LOG_INF("GC8034_OTP: Enable OTP!\n");
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:		LOG_INF("GC8034_OTP: Disable OTP!\n");
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_INF("dummyline = %d, dummypixels = %d\n",
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_INF("Enter set_shutter!\n");
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_INF("Exit! shutter =%d, framelength =%d\n", shutter,
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_INF("Enter set_gain!\n");
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_INF("le:0x%x, se:0x%x, gain:0x%x\n", le, se, gain);
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_INF("Enter nigh_mode!\n");
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_INF("E");
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_INF("Enter preview_setting!\n");
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_INF("Enter capture_setting!\n");
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_INF("Enter normal_video_setting!\n");
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_INF("enable: %d\n", enable);
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:				LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n",
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:			LOG_INF("Read sensor id fail, write id: 0x%x, id: 0x%x\n",
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_1;
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:				LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n",
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:			LOG_INF("Read sensor id fail, write id: 0x%x, id: 0x%x\n",
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_INF("Enter capture!\n");
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:			LOG_INF("Warning: current_fps %d fps is not support, so use cap's setting: %d fps!\n",
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_INF("Enter normal_video_setting!\n");
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_INF("Enter hs_video!\n");
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_INF("Enter slim_video!\n");
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_INF("Enter get_info!\n");
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_INF("Enter control!\n");
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:		LOG_INF("Error ScenarioId setting");
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_INF("framerate = %d\n ", framerate);
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_INF("enable = %d, framerate = %d\n", enable, framerate);
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_INF("scenario_id = %d, framerate = %d\n", scenario_id,
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:				LOG_INF("Warning: current_fps %d fps is not support, so use cap's setting: %d fps!\n",
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:		LOG_INF("error scenario_id = %d, we use preview scenario\n",
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:	LOG_INF("feature_id = %d\n", feature_id);
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:		LOG_INF("adb_i2c_read 0x%x = 0x%x\n", sensor_reg_data->RegAddr,
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:		LOG_INF("current fps :%d\n", (UINT32)*feature_data);
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:		LOG_INF("ihdr enable :%d\n", (BOOL)*feature_data);
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:		LOG_INF("SENSOR_FEATURE_GET_CROP_INFO scenarioId:%d\n",
imgsensor/src/common/v1/gc8034_mipi_raw/gc8034_mipi_Sensor.c:		LOG_INF("SENSOR_SET_SENSOR_IHDR LE=%d, SE=%d, Gain=%d\n",
imgsensor/src/common/v1/hynix_hi259_iv/hynix_hi259_iv_Sensor.c:/*#define LOG_INF(format, args...)    \
imgsensor/src/common/v1/hynix_hi259_iv/hynix_hi259_iv_Sensor.c:#define LOG_INF(format, args...)
imgsensor/src/common/v1/hynix_hi259_iv/hynix_hi259_iv_Sensor.c:			LOG_INF("burst write\n");
imgsensor/src/common/v1/hynix_hi259_iv/hynix_hi259_iv_Sensor.c:	LOG_INF("dummyline = %d, dummypixels = %d\n",
imgsensor/src/common/v1/hynix_hi259_iv/hynix_hi259_iv_Sensor.c:	LOG_INF("shutter = %d, imgsensor.frame_length = %d, imgsensor.min_frame_length = %d\n",
imgsensor/src/common/v1/hynix_hi259_iv/hynix_hi259_iv_Sensor.c:	LOG_INF("frame_length = %d , shutter = %d \n", imgsensor.frame_length, shutter);
imgsensor/src/common/v1/hynix_hi259_iv/hynix_hi259_iv_Sensor.c:        LOG_INF("Error gain setting");
imgsensor/src/common/v1/hynix_hi259_iv/hynix_hi259_iv_Sensor.c:    LOG_INF("gain = %d , reg_gain = 0x%x\n ", gain, reg_gain);
imgsensor/src/common/v1/hynix_hi259_iv/hynix_hi259_iv_Sensor.c:			LOG_INF("i2c write id : 0x%x, sensor id: 0x%x\n", imgsensor.i2c_write_id, *sensor_id);
imgsensor/src/common/v1/hynix_hi259_iv/hynix_hi259_iv_Sensor.c:			LOG_INF("Read sensor id fail, write id: 0x%x, id: 0x%x\n", imgsensor.i2c_write_id, *sensor_id);
imgsensor/src/common/v1/hynix_hi259_iv/hynix_hi259_iv_Sensor.c:		LOG_INF("Read id fail,sensor id: 0x%x\n", *sensor_id);
imgsensor/src/common/v1/hynix_hi259_iv/hynix_hi259_iv_Sensor.c:	LOG_INF("[open]: PLATFORM:MT6765,MIPI 1LANE\n");
imgsensor/src/common/v1/hynix_hi259_iv/hynix_hi259_iv_Sensor.c:				LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n", imgsensor.i2c_write_id, sensor_id);
imgsensor/src/common/v1/hynix_hi259_iv/hynix_hi259_iv_Sensor.c:			LOG_INF("Read sensor id fail, write id: 0x%x, id: 0x%x\n", imgsensor.i2c_write_id, sensor_id);
imgsensor/src/common/v1/hynix_hi259_iv/hynix_hi259_iv_Sensor.c:		LOG_INF("open sensor id fail: 0x%x\n", sensor_id);
imgsensor/src/common/v1/hynix_hi259_iv/hynix_hi259_iv_Sensor.c:	LOG_INF("Caputre fps:%d\n", imgsensor.current_fps);
imgsensor/src/common/v1/hynix_hi259_iv/hynix_hi259_iv_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/hynix_hi259_iv/hynix_hi259_iv_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/hynix_hi259_iv/hynix_hi259_iv_Sensor.c:		LOG_INF("[odin]preview\n");
imgsensor/src/common/v1/hynix_hi259_iv/hynix_hi259_iv_Sensor.c:		LOG_INF("[odin]capture\n");
imgsensor/src/common/v1/hynix_hi259_iv/hynix_hi259_iv_Sensor.c:		LOG_INF("[odin]video preview\n");
imgsensor/src/common/v1/hynix_hi259_iv/hynix_hi259_iv_Sensor.c:		LOG_INF("[odin]default mode\n");
imgsensor/src/common/v1/hynix_hi259_iv/hynix_hi259_iv_Sensor.c:	LOG_INF("framerate = %d ", framerate);
imgsensor/src/common/v1/hynix_hi259_iv/hynix_hi259_iv_Sensor.c:	LOG_INF("enable = %d, framerate = %d ", enable, framerate);
imgsensor/src/common/v1/hynix_hi259_iv/hynix_hi259_iv_Sensor.c:	LOG_INF("scenario_id = %d, framerate = %d\n", scenario_id, framerate);
imgsensor/src/common/v1/hynix_hi259_iv/hynix_hi259_iv_Sensor.c:			LOG_INF("fps %d fps not support,use cap: %d fps!\n",
imgsensor/src/common/v1/hynix_hi259_iv/hynix_hi259_iv_Sensor.c:	    LOG_INF("error scenario_id = %d, we use preview scenario\n",
imgsensor/src/common/v1/hynix_hi259_iv/hynix_hi259_iv_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/hynix_hi259_iv/hynix_hi259_iv_Sensor.c:	LOG_INF("set_test_pattern_mode enable: %d", enable);
imgsensor/src/common/v1/hynix_hi259_iv/hynix_hi259_iv_Sensor.c:	LOG_INF("feature_id = %d\n", feature_id);
imgsensor/src/common/v1/hynix_hi259_iv/hynix_hi259_iv_Sensor.c:	    LOG_INF("current fps :%d\n", (UINT32)*feature_data);
imgsensor/src/common/v1/hynix_hi259_iv/hynix_hi259_iv_Sensor.c:	    LOG_INF("SENSOR_FEATURE_GET_CROP_INFO scenarioId:%d\n",
imgsensor/src/common/v1/gc_gc5035_ii/gc_gc5035_ii_Sensor.c:#define LOG_1 cam_pr_debug("GC5035MIPI, 2LANE\n")
imgsensor/src/common/v1/gc_gc5035_ii/gc_gc5035_ii_Sensor.c:	LOG_1;
imgsensor/src/common/v1/ov_ov02b_ii/ov_ov02b_ii_Sensor.c:/*#define LOG_INF(format, args...)    \
imgsensor/src/common/v1/ov_ov02b_ii/ov_ov02b_ii_Sensor.c:#define LOG_INF(format, args...)
imgsensor/src/common/v1/ov_ov02b_ii/ov_ov02b_ii_Sensor.c:	LOG_INF("imgsensor.frame_length = %d\n", imgsensor.frame_length);
imgsensor/src/common/v1/ov_ov02b_ii/ov_ov02b_ii_Sensor.c:    //LOG_INF("shutter =%d, framelength =%d\n", shutter,imgsensor.frame_length);
imgsensor/src/common/v1/ov_ov02b_ii/ov_ov02b_ii_Sensor.c:	//LOG_INF("shutter =%d, framelength =%d, realtime_fps =%d\n",
imgsensor/src/common/v1/ov_ov02b_ii/ov_ov02b_ii_Sensor.c:            LOG_INF("OV02BMIPI_SetGain = 16");
imgsensor/src/common/v1/ov_ov02b_ii/ov_ov02b_ii_Sensor.c:            LOG_INF("OV02BMIPI_SetGain = 160");
imgsensor/src/common/v1/ov_ov02b_ii/ov_ov02b_ii_Sensor.c:            LOG_INF("OV02BMIPI_SetGain = %d",iReg);
imgsensor/src/common/v1/ov_ov02b_ii/ov_ov02b_ii_Sensor.c:        LOG_INF("error gain setting");
imgsensor/src/common/v1/ov_ov02b_ii/ov_ov02b_ii_Sensor.c:	LOG_INF("le: 0x%x, se: 0x%x, gain: 0x%x\n", le, se, gain);
imgsensor/src/common/v1/ov_ov02b_ii/ov_ov02b_ii_Sensor.c:            LOG_INF("i2c write id : 0x%x, sensor id: 0x%x\n",
imgsensor/src/common/v1/ov_ov02b_ii/ov_ov02b_ii_Sensor.c:        LOG_INF("Read id fail,sensor id: 0x%x\n", *sensor_id);
imgsensor/src/common/v1/ov_ov02b_ii/ov_ov02b_ii_Sensor.c:                LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n", imgsensor.i2c_write_id, sensor_id);
imgsensor/src/common/v1/ov_ov02b_ii/ov_ov02b_ii_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/ov_ov02b_ii/ov_ov02b_ii_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/ov_ov02b_ii/ov_ov02b_ii_Sensor.c:    LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/ov_ov02b_ii/ov_ov02b_ii_Sensor.c:        //LOG_INF("[odin]default mode\n");
imgsensor/src/common/v1/ov_ov02b_ii/ov_ov02b_ii_Sensor.c:	LOG_INF("framerate = %d\n ", framerate);
imgsensor/src/common/v1/ov_ov02b_ii/ov_ov02b_ii_Sensor.c:	LOG_INF("enable = %d, framerate = %d\n", enable, framerate);
imgsensor/src/common/v1/ov_ov02b_ii/ov_ov02b_ii_Sensor.c://	LOG_INF("scenario_id = %d, framerate = %d\n", scenario_id, framerate);
imgsensor/src/common/v1/ov_ov02b_ii/ov_ov02b_ii_Sensor.c:				LOG_INF("Warning: current_fps %d fps is not support, so use cap's setting: %d fps!\n",
imgsensor/src/common/v1/ov_ov02b_ii/ov_ov02b_ii_Sensor.c:        LOG_INF("Warning: current_fps %d fps is not support, so use cap's setting: %d fps!\n",framerate,imgsensor_info.custom1.max_framerate/10);
imgsensor/src/common/v1/ov_ov02b_ii/ov_ov02b_ii_Sensor.c:		LOG_INF("error scenario_id = %d, we use preview scenario\n", scenario_id);
imgsensor/src/common/v1/ov_ov02b_ii/ov_ov02b_ii_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/ov_ov02b_ii/ov_ov02b_ii_Sensor.c:	LOG_INF("enable: %d\n", enable);
imgsensor/src/common/v1/ov_ov02b_ii/ov_ov02b_ii_Sensor.c:	//LOG_INF("streaming_control enable =%d\n", enable);
imgsensor/src/common/v1/ov_ov02b_ii/ov_ov02b_ii_Sensor.c:	LOG_INF("feature_id = %d\n", feature_id);
imgsensor/src/common/v1/ov_ov02b_ii/ov_ov02b_ii_Sensor.c:		LOG_INF("adb_i2c_read 0x%x = 0x%x\n", sensor_reg_data->RegAddr, sensor_reg_data->RegData);
imgsensor/src/common/v1/ov_ov02b_ii/ov_ov02b_ii_Sensor.c:	    LOG_INF("current fps :%d\n", (UINT32)*feature_data);
imgsensor/src/common/v1/ov_ov02b_ii/ov_ov02b_ii_Sensor.c:	    LOG_INF("ihdr enable :%d\n", (BOOL)*feature_data);
imgsensor/src/common/v1/ov_ov02b_ii/ov_ov02b_ii_Sensor.c:		LOG_INF("SENSOR_FEATURE_GET_CROP_INFO scenarioId:%d\n", (UINT32)*feature_data);
imgsensor/src/common/v1/ov_ov02b_ii/ov_ov02b_ii_Sensor.c:		LOG_INF("SENSOR_SET_SENSOR_IHDR LE = %d, SE = %d, Gain = %d\n",
imgsensor/src/common/v1/gc_gc5035_iiii/gc_gc5035_iiii_Sensor.c:#define LOG_1 cam_pr_debug("GC5035MIPI, 2LANE\n")
imgsensor/src/common/v1/gc_gc5035_iiii/gc_gc5035_iiii_Sensor.c:	LOG_1;
imgsensor/src/common/v1/hynix_hi1337_iiii/hynix_hi1337_iiii_Sensor.c:/*#define LOG_INF(format, args...)    \
imgsensor/src/common/v1/hynix_hi1337_iiii/hynix_hi1337_iiii_Sensor.c:#define LOG_INF(format, args...)
imgsensor/src/common/v1/hynix_hi1337_iiii/hynix_hi1337_iiii_Sensor.c:	LOG_INF("dummyline = %d, dummypixels = %d\n",
imgsensor/src/common/v1/hynix_hi1337_iiii/hynix_hi1337_iiii_Sensor.c:    LOG_INF("shutter = %d, imgsensor.frame_length = %d, imgsensor.min_frame_length = %d\n",
imgsensor/src/common/v1/hynix_hi1337_iiii/hynix_hi1337_iiii_Sensor.c:    LOG_INF("frame_length = %d , shutter = %d \n", imgsensor.frame_length, shutter);
imgsensor/src/common/v1/hynix_hi1337_iiii/hynix_hi1337_iiii_Sensor.c:    LOG_INF("frame = %d, line = %d\n", frame_le, line_le);
imgsensor/src/common/v1/hynix_hi1337_iiii/hynix_hi1337_iiii_Sensor.c:	LOG_INF("set_shutter");
imgsensor/src/common/v1/hynix_hi1337_iiii/hynix_hi1337_iiii_Sensor.c:	LOG_INF("Exit! shutter =%d, framelength =%d/%d, dummy_line=%d, auto_extend=%d\n",
imgsensor/src/common/v1/hynix_hi1337_iiii/hynix_hi1337_iiii_Sensor.c:        LOG_INF("Error gain setting");
imgsensor/src/common/v1/hynix_hi1337_iiii/hynix_hi1337_iiii_Sensor.c:    LOG_INF("gain = %d , reg_gain = 0x%x\n ", gain, reg_gain);
imgsensor/src/common/v1/hynix_hi1337_iiii/hynix_hi1337_iiii_Sensor.c:	LOG_INF("le:0x%x, se:0x%x, gain:0x%x\n", le, se, gain);
imgsensor/src/common/v1/hynix_hi1337_iiii/hynix_hi1337_iiii_Sensor.c:	LOG_INF("image_mirror = %d", image_mirror);
imgsensor/src/common/v1/hynix_hi1337_iiii/hynix_hi1337_iiii_Sensor.c:		LOG_INF("Error image_mirror setting");
imgsensor/src/common/v1/hynix_hi1337_iiii/hynix_hi1337_iiii_Sensor.c:	LOG_INF("[open]: PLATFORM:MT6737,MIPI 24LANE\n");
imgsensor/src/common/v1/hynix_hi1337_iiii/hynix_hi1337_iiii_Sensor.c:	LOG_INF("preview 1296*972@30fps,360Mbps/lane;"
imgsensor/src/common/v1/hynix_hi1337_iiii/hynix_hi1337_iiii_Sensor.c:				LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n",
imgsensor/src/common/v1/hynix_hi1337_iiii/hynix_hi1337_iiii_Sensor.c:		LOG_INF("open sensor id fail: 0x%x\n", sensor_id);
imgsensor/src/common/v1/hynix_hi1337_iiii/hynix_hi1337_iiii_Sensor.c:	LOG_INF("Caputre fps:%d\n", imgsensor.current_fps);
imgsensor/src/common/v1/hynix_hi1337_iiii/hynix_hi1337_iiii_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/hynix_hi1337_iiii/hynix_hi1337_iiii_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/hynix_hi1337_iiii/hynix_hi1337_iiii_Sensor.c:		LOG_INF("[odin]preview\n");
imgsensor/src/common/v1/hynix_hi1337_iiii/hynix_hi1337_iiii_Sensor.c:		LOG_INF("[odin]capture\n");
imgsensor/src/common/v1/hynix_hi1337_iiii/hynix_hi1337_iiii_Sensor.c:		LOG_INF("[odin]video preview\n");
imgsensor/src/common/v1/hynix_hi1337_iiii/hynix_hi1337_iiii_Sensor.c:		LOG_INF("[odin]default mode\n");
imgsensor/src/common/v1/hynix_hi1337_iiii/hynix_hi1337_iiii_Sensor.c:	LOG_INF("framerate = %d ", framerate);
imgsensor/src/common/v1/hynix_hi1337_iiii/hynix_hi1337_iiii_Sensor.c:	LOG_INF("enable = %d, framerate = %d ", enable, framerate);
imgsensor/src/common/v1/hynix_hi1337_iiii/hynix_hi1337_iiii_Sensor.c:	LOG_INF("scenario_id = %d, framerate = %d\n",
imgsensor/src/common/v1/hynix_hi1337_iiii/hynix_hi1337_iiii_Sensor.c:			LOG_INF("fps %d fps not support,use cap: %d fps!\n",
imgsensor/src/common/v1/hynix_hi1337_iiii/hynix_hi1337_iiii_Sensor.c:	    LOG_INF("error scenario_id = %d, we use preview scenario\n",
imgsensor/src/common/v1/hynix_hi1337_iiii/hynix_hi1337_iiii_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/hynix_hi1337_iiii/hynix_hi1337_iiii_Sensor.c:	LOG_INF("set_test_pattern_mode enable: %d", enable);
imgsensor/src/common/v1/hynix_hi1337_iiii/hynix_hi1337_iiii_Sensor.c:	LOG_INF("feature_id = %d\n", feature_id);
imgsensor/src/common/v1/hynix_hi1337_iiii/hynix_hi1337_iiii_Sensor.c:	    //LOG_INF("current fps :%d\n", (UINT32)*feature_data);
imgsensor/src/common/v1/hynix_hi1337_iiii/hynix_hi1337_iiii_Sensor.c:	    LOG_INF("ihdr enable :%d\n", (UINT8)*feature_data_32);
imgsensor/src/common/v1/hynix_hi1337_iiii/hynix_hi1337_iiii_Sensor.c:	    LOG_INF("SENSOR_FEATURE_GET_CROP_INFO scenarioId:%d\n",
imgsensor/src/common/v1/hynix_hi1337_iiii/hynix_hi1337_iiii_Sensor.c:	    LOG_INF("SENSOR_SET_SENSOR_IHDR LE=%d, SE=%d, Gain=%d\n",
imgsensor/src/common/v1/hynix_hi1337_iiii/hynix_hi1337_iiii_Sensor.c:                    LOG_INF("SENSOR_FEATURE_GET_VC_INFO %d\n", (UINT16)*feature_data);
imgsensor/src/common/v1/hynix_hi1337_iiii/hynix_hi1337_iiii_Sensor.c:                    LOG_INF("odin GET_PDAF_DATA EEPROM\n");
imgsensor/src/common/v1/hynix_hi1337_iiii/hynix_hi1337_iiii_Sensor.c:	        LOG_INF("READ PDCAL DATA\n");
imgsensor/src/common/v1/hynix_hi1337_iiii/hynix_hi1337_iiii_Sensor.c:		LOG_INF("SENSOR_FEATURE_GET_SENSOR_PDAF_CAPACITY scenarioId:%lld\n", *feature_data);
imgsensor/src/common/v1/hynix_hi1337_iiii/hynix_hi1337_iiii_Sensor.c:		LOG_INF("SENSOR_FEATURE_GET_SENSOR_PDAF_CAPACITY scenarioId:%lld\n", *feature_data);
imgsensor/src/common/v1/hynix_hi1337_iiii/hynix_hi1337_iiii_Sensor.c:	        	LOG_INF("[odin] pdaf mode : %d \n", imgsensor.pdaf_mode);
imgsensor/src/common/v1/gc5035dh15_mipi_raw/gc5035dh15mipiraw_Sensor.c:#define LOG_1 cam_pr_debug("GC5035MIPI, 2LANE\n")
imgsensor/src/common/v1/gc5035dh15_mipi_raw/gc5035dh15mipiraw_Sensor.c:	LOG_1;
imgsensor/src/common/v1/ov_ov02b10_iv/ov_ov02b10_iv_Sensor.c:/*#define LOG_INF(format, args...)    \
imgsensor/src/common/v1/ov_ov02b10_iv/ov_ov02b10_iv_Sensor.c:#define LOG_INF(format, args...)
imgsensor/src/common/v1/ov_ov02b10_iv/ov_ov02b10_iv_Sensor.c:	LOG_INF("imgsensor.frame_length = %d\n", imgsensor.frame_length);
imgsensor/src/common/v1/ov_ov02b10_iv/ov_ov02b10_iv_Sensor.c:    //LOG_INF("shutter =%d, framelength =%d\n", shutter,imgsensor.frame_length);
imgsensor/src/common/v1/ov_ov02b10_iv/ov_ov02b10_iv_Sensor.c:	//LOG_INF("shutter =%d, framelength =%d, realtime_fps =%d\n",
imgsensor/src/common/v1/ov_ov02b10_iv/ov_ov02b10_iv_Sensor.c:            LOG_INF("OV02BMIPI_SetGain = 16");
imgsensor/src/common/v1/ov_ov02b10_iv/ov_ov02b10_iv_Sensor.c:            LOG_INF("OV02BMIPI_SetGain = 160");
imgsensor/src/common/v1/ov_ov02b10_iv/ov_ov02b10_iv_Sensor.c:            LOG_INF("OV02BMIPI_SetGain = %d",iReg);
imgsensor/src/common/v1/ov_ov02b10_iv/ov_ov02b10_iv_Sensor.c:        LOG_INF("error gain setting");
imgsensor/src/common/v1/ov_ov02b10_iv/ov_ov02b10_iv_Sensor.c:	LOG_INF("le: 0x%x, se: 0x%x, gain: 0x%x\n", le, se, gain);
imgsensor/src/common/v1/ov_ov02b10_iv/ov_ov02b10_iv_Sensor.c:            LOG_INF("i2c write id : 0x%x, sensor id: 0x%x\n",
imgsensor/src/common/v1/ov_ov02b10_iv/ov_ov02b10_iv_Sensor.c:        LOG_INF("Read id fail,sensor id: 0x%x\n", *sensor_id);
imgsensor/src/common/v1/ov_ov02b10_iv/ov_ov02b10_iv_Sensor.c:                LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n", imgsensor.i2c_write_id, sensor_id);
imgsensor/src/common/v1/ov_ov02b10_iv/ov_ov02b10_iv_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/ov_ov02b10_iv/ov_ov02b10_iv_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/ov_ov02b10_iv/ov_ov02b10_iv_Sensor.c:    LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/ov_ov02b10_iv/ov_ov02b10_iv_Sensor.c:        //LOG_INF("[odin]default mode\n");
imgsensor/src/common/v1/ov_ov02b10_iv/ov_ov02b10_iv_Sensor.c:	LOG_INF("framerate = %d\n ", framerate);
imgsensor/src/common/v1/ov_ov02b10_iv/ov_ov02b10_iv_Sensor.c:	LOG_INF("enable = %d, framerate = %d\n", enable, framerate);
imgsensor/src/common/v1/ov_ov02b10_iv/ov_ov02b10_iv_Sensor.c://	LOG_INF("scenario_id = %d, framerate = %d\n", scenario_id, framerate);
imgsensor/src/common/v1/ov_ov02b10_iv/ov_ov02b10_iv_Sensor.c:				LOG_INF("Warning: current_fps %d fps is not support, so use cap's setting: %d fps!\n",
imgsensor/src/common/v1/ov_ov02b10_iv/ov_ov02b10_iv_Sensor.c:        LOG_INF("Warning: current_fps %d fps is not support, so use cap's setting: %d fps!\n",framerate,imgsensor_info.custom1.max_framerate/10);
imgsensor/src/common/v1/ov_ov02b10_iv/ov_ov02b10_iv_Sensor.c:		LOG_INF("error scenario_id = %d, we use preview scenario\n", scenario_id);
imgsensor/src/common/v1/ov_ov02b10_iv/ov_ov02b10_iv_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/ov_ov02b10_iv/ov_ov02b10_iv_Sensor.c:	LOG_INF("enable: %d\n", enable);
imgsensor/src/common/v1/ov_ov02b10_iv/ov_ov02b10_iv_Sensor.c:	//LOG_INF("streaming_control enable =%d\n", enable);
imgsensor/src/common/v1/ov_ov02b10_iv/ov_ov02b10_iv_Sensor.c:	LOG_INF("feature_id = %d\n", feature_id);
imgsensor/src/common/v1/ov_ov02b10_iv/ov_ov02b10_iv_Sensor.c:		LOG_INF("adb_i2c_read 0x%x = 0x%x\n", sensor_reg_data->RegAddr, sensor_reg_data->RegData);
imgsensor/src/common/v1/ov_ov02b10_iv/ov_ov02b10_iv_Sensor.c:	    LOG_INF("current fps :%d\n", (UINT32)*feature_data);
imgsensor/src/common/v1/ov_ov02b10_iv/ov_ov02b10_iv_Sensor.c:	    LOG_INF("ihdr enable :%d\n", (BOOL)*feature_data);
imgsensor/src/common/v1/ov_ov02b10_iv/ov_ov02b10_iv_Sensor.c:		LOG_INF("SENSOR_FEATURE_GET_CROP_INFO scenarioId:%d\n", (UINT32)*feature_data);
imgsensor/src/common/v1/ov_ov02b10_iv/ov_ov02b10_iv_Sensor.c:		LOG_INF("SENSOR_SET_SENSOR_IHDR LE = %d, SE = %d, Gain = %d\n",
imgsensor/src/common/v1/s5k2t7sp_mipi_raw/s5k2t7spmipiraw_Sensor.c: * #define LOG_INF(format, args...) pr_debug(
imgsensor/src/common/v1/gc_gc02m1_ii/gc_gc02m1_ii_Sensor.c:#define LOG_1 LOG_INF("GC02M1, MIPI 1LANE\n")
imgsensor/src/common/v1/gc_gc02m1_ii/gc_gc02m1_ii_Sensor.c:/*#define LOG_INF(format, args...)    \
imgsensor/src/common/v1/gc_gc02m1_ii/gc_gc02m1_ii_Sensor.c:#define LOG_INF(format, args...)
imgsensor/src/common/v1/gc_gc02m1_ii/gc_gc02m1_ii_Sensor.c:			LOG_INF("burst write\n");
imgsensor/src/common/v1/gc_gc02m1_ii/gc_gc02m1_ii_Sensor.c:	LOG_INF("shutter = %d, framelength = %d\n", shutter, imgsensor.frame_length);
imgsensor/src/common/v1/gc_gc02m1_ii/gc_gc02m1_ii_Sensor.c:	LOG_INF("GC02M1_AGC_Param[gain_index][1] = 0x%x, temp_gain = 0x%x, reg_gain = %d\n",
imgsensor/src/common/v1/gc_gc02m1_ii/gc_gc02m1_ii_Sensor.c:	LOG_INF("le: 0x%x, se: 0x%x, gain: 0x%x\n", le, se, gain);
imgsensor/src/common/v1/gc_gc02m1_ii/gc_gc02m1_ii_Sensor.c:*	LOG_INF("image_mirror = %d\n", image_mirror);
imgsensor/src/common/v1/gc_gc02m1_ii/gc_gc02m1_ii_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc_gc02m1_ii/gc_gc02m1_ii_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc_gc02m1_ii/gc_gc02m1_ii_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc_gc02m1_ii/gc_gc02m1_ii_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc_gc02m1_ii/gc_gc02m1_ii_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc_gc02m1_ii/gc_gc02m1_ii_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc_gc02m1_ii/gc_gc02m1_ii_Sensor.c:	LOG_INF("enable: %d\n", enable);
imgsensor/src/common/v1/gc_gc02m1_ii/gc_gc02m1_ii_Sensor.c:				LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n", imgsensor.i2c_write_id, *sensor_id);
imgsensor/src/common/v1/gc_gc02m1_ii/gc_gc02m1_ii_Sensor.c:			LOG_INF("Read sensor id fail, write id: 0x%x, id: 0x%x\n", imgsensor.i2c_write_id, *sensor_id);
imgsensor/src/common/v1/gc_gc02m1_ii/gc_gc02m1_ii_Sensor.c:				LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n", imgsensor.i2c_write_id, sensor_id);
imgsensor/src/common/v1/gc_gc02m1_ii/gc_gc02m1_ii_Sensor.c:			LOG_INF("Read sensor id fail, write id: 0x%x, id: 0x%x\n", imgsensor.i2c_write_id, sensor_id);
imgsensor/src/common/v1/gc_gc02m1_ii/gc_gc02m1_ii_Sensor.c:			LOG_INF("Warning: current_fps %d fps is not support, so use cap's setting: %d fps!\n",
imgsensor/src/common/v1/gc_gc02m1_ii/gc_gc02m1_ii_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/gc_gc02m1_ii/gc_gc02m1_ii_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/gc_gc02m1_ii/gc_gc02m1_ii_Sensor.c:	//	LOG_INF("Error ScenarioId setting");
imgsensor/src/common/v1/gc_gc02m1_ii/gc_gc02m1_ii_Sensor.c:	LOG_INF("framerate = %d\n ", framerate);
imgsensor/src/common/v1/gc_gc02m1_ii/gc_gc02m1_ii_Sensor.c:	LOG_INF("enable = %d, framerate = %d\n", enable, framerate);
imgsensor/src/common/v1/gc_gc02m1_ii/gc_gc02m1_ii_Sensor.c:	LOG_INF("scenario_id = %d, framerate = %d\n", scenario_id, framerate);
imgsensor/src/common/v1/gc_gc02m1_ii/gc_gc02m1_ii_Sensor.c:				LOG_INF("Warning: current_fps %d fps is not support, so use cap's setting: %d fps!\n",
imgsensor/src/common/v1/gc_gc02m1_ii/gc_gc02m1_ii_Sensor.c:			LOG_INF("Warning: current_fps %d fps is not support, so use cap's setting: %d fps!\n",framerate,imgsensor_info.custom1.max_framerate/10);
imgsensor/src/common/v1/gc_gc02m1_ii/gc_gc02m1_ii_Sensor.c:		LOG_INF("error scenario_id = %d, we use preview scenario\n", scenario_id);
imgsensor/src/common/v1/gc_gc02m1_ii/gc_gc02m1_ii_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/gc_gc02m1_ii/gc_gc02m1_ii_Sensor.c:	//LOG_DBG("streaming_enable(0=Sw Standby,1=streaming): %d\n", enable);
imgsensor/src/common/v1/gc_gc02m1_ii/gc_gc02m1_ii_Sensor.c:	LOG_INF("feature_id = %d\n", feature_id);
imgsensor/src/common/v1/gc_gc02m1_ii/gc_gc02m1_ii_Sensor.c:		LOG_INF("adb_i2c_read 0x%x = 0x%x\n", sensor_reg_data->RegAddr, sensor_reg_data->RegData);
imgsensor/src/common/v1/gc_gc02m1_ii/gc_gc02m1_ii_Sensor.c:		LOG_INF("current fps :%d\n", (UINT32)*feature_data);
imgsensor/src/common/v1/gc_gc02m1_ii/gc_gc02m1_ii_Sensor.c:		LOG_INF("ihdr enable :%d\n", (BOOL)*feature_data);
imgsensor/src/common/v1/gc_gc02m1_ii/gc_gc02m1_ii_Sensor.c:		LOG_INF("SENSOR_FEATURE_GET_CROP_INFO scenarioId:%d\n", (UINT32)*feature_data);
imgsensor/src/common/v1/gc_gc02m1_ii/gc_gc02m1_ii_Sensor.c:		LOG_INF("SENSOR_SET_SENSOR_IHDR LE = %d, SE = %d, Gain = %d\n",
imgsensor/src/common/v1/hynix_hi1337_i/hynix_hi1337_i_Sensor.c:/*#define LOG_INF(format, args...)    \
imgsensor/src/common/v1/hynix_hi1337_i/hynix_hi1337_i_Sensor.c:#define LOG_INF(format, args...)
imgsensor/src/common/v1/hynix_hi1337_i/hynix_hi1337_i_Sensor.c:	LOG_INF("dummyline = %d, dummypixels = %d\n",
imgsensor/src/common/v1/hynix_hi1337_i/hynix_hi1337_i_Sensor.c:    LOG_INF("shutter = %d, imgsensor.frame_length = %d, imgsensor.min_frame_length = %d\n",
imgsensor/src/common/v1/hynix_hi1337_i/hynix_hi1337_i_Sensor.c:    LOG_INF("frame_length = %d , shutter = %d \n", imgsensor.frame_length, shutter);
imgsensor/src/common/v1/hynix_hi1337_i/hynix_hi1337_i_Sensor.c:    LOG_INF("frame = %d, line = %d\n", frame_le, line_le);
imgsensor/src/common/v1/hynix_hi1337_i/hynix_hi1337_i_Sensor.c:	LOG_INF("set_shutter");
imgsensor/src/common/v1/hynix_hi1337_i/hynix_hi1337_i_Sensor.c:	LOG_INF("Exit! shutter =%d, framelength =%d/%d, dummy_line=%d, auto_extend=%d\n",
imgsensor/src/common/v1/hynix_hi1337_i/hynix_hi1337_i_Sensor.c:        LOG_INF("Error gain setting");
imgsensor/src/common/v1/hynix_hi1337_i/hynix_hi1337_i_Sensor.c:    LOG_INF("gain = %d , reg_gain = 0x%x\n ", gain, reg_gain);
imgsensor/src/common/v1/hynix_hi1337_i/hynix_hi1337_i_Sensor.c:	LOG_INF("le:0x%x, se:0x%x, gain:0x%x\n", le, se, gain);
imgsensor/src/common/v1/hynix_hi1337_i/hynix_hi1337_i_Sensor.c:	LOG_INF("image_mirror = %d", image_mirror);
imgsensor/src/common/v1/hynix_hi1337_i/hynix_hi1337_i_Sensor.c:		LOG_INF("Error image_mirror setting");
imgsensor/src/common/v1/hynix_hi1337_i/hynix_hi1337_i_Sensor.c:			LOG_INF("i2c write id : 0x%x, sensor id: 0x%x\n",
imgsensor/src/common/v1/hynix_hi1337_i/hynix_hi1337_i_Sensor.c:		LOG_INF("Read id fail,sensor id: 0x%x\n", *sensor_id);
imgsensor/src/common/v1/hynix_hi1337_i/hynix_hi1337_i_Sensor.c:	LOG_INF("[open]: PLATFORM:MT6737,MIPI 24LANE\n");
imgsensor/src/common/v1/hynix_hi1337_i/hynix_hi1337_i_Sensor.c:	LOG_INF("preview 1296*972@30fps,360Mbps/lane;"
imgsensor/src/common/v1/hynix_hi1337_i/hynix_hi1337_i_Sensor.c:				LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n",
imgsensor/src/common/v1/hynix_hi1337_i/hynix_hi1337_i_Sensor.c:		LOG_INF("open sensor id fail: 0x%x\n", sensor_id);
imgsensor/src/common/v1/hynix_hi1337_i/hynix_hi1337_i_Sensor.c:	LOG_INF("Caputre fps:%d\n", imgsensor.current_fps);
imgsensor/src/common/v1/hynix_hi1337_i/hynix_hi1337_i_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/hynix_hi1337_i/hynix_hi1337_i_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/hynix_hi1337_i/hynix_hi1337_i_Sensor.c:		LOG_INF("[odin]preview\n");
imgsensor/src/common/v1/hynix_hi1337_i/hynix_hi1337_i_Sensor.c:		LOG_INF("[odin]capture\n");
imgsensor/src/common/v1/hynix_hi1337_i/hynix_hi1337_i_Sensor.c:		LOG_INF("[odin]video preview\n");
imgsensor/src/common/v1/hynix_hi1337_i/hynix_hi1337_i_Sensor.c:		LOG_INF("[odin]default mode\n");
imgsensor/src/common/v1/hynix_hi1337_i/hynix_hi1337_i_Sensor.c:	LOG_INF("framerate = %d ", framerate);
imgsensor/src/common/v1/hynix_hi1337_i/hynix_hi1337_i_Sensor.c:	LOG_INF("enable = %d, framerate = %d ", enable, framerate);
imgsensor/src/common/v1/hynix_hi1337_i/hynix_hi1337_i_Sensor.c:	LOG_INF("scenario_id = %d, framerate = %d\n",
imgsensor/src/common/v1/hynix_hi1337_i/hynix_hi1337_i_Sensor.c:			LOG_INF("fps %d fps not support,use cap: %d fps!\n",
imgsensor/src/common/v1/hynix_hi1337_i/hynix_hi1337_i_Sensor.c:	    LOG_INF("error scenario_id = %d, we use preview scenario\n",
imgsensor/src/common/v1/hynix_hi1337_i/hynix_hi1337_i_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/hynix_hi1337_i/hynix_hi1337_i_Sensor.c:	LOG_INF("set_test_pattern_mode enable: %d", enable);
imgsensor/src/common/v1/hynix_hi1337_i/hynix_hi1337_i_Sensor.c:	LOG_INF("feature_id = %d\n", feature_id);
imgsensor/src/common/v1/hynix_hi1337_i/hynix_hi1337_i_Sensor.c:	    //LOG_INF("current fps :%d\n", (UINT32)*feature_data);
imgsensor/src/common/v1/hynix_hi1337_i/hynix_hi1337_i_Sensor.c:	    LOG_INF("ihdr enable :%d\n", (UINT8)*feature_data_32);
imgsensor/src/common/v1/hynix_hi1337_i/hynix_hi1337_i_Sensor.c:	    LOG_INF("SENSOR_FEATURE_GET_CROP_INFO scenarioId:%d\n",
imgsensor/src/common/v1/hynix_hi1337_i/hynix_hi1337_i_Sensor.c:	    LOG_INF("SENSOR_SET_SENSOR_IHDR LE=%d, SE=%d, Gain=%d\n",
imgsensor/src/common/v1/hynix_hi1337_i/hynix_hi1337_i_Sensor.c:                    LOG_INF("SENSOR_FEATURE_GET_VC_INFO %d\n", (UINT16)*feature_data);
imgsensor/src/common/v1/hynix_hi1337_i/hynix_hi1337_i_Sensor.c:                    LOG_INF("odin GET_PDAF_DATA EEPROM\n");
imgsensor/src/common/v1/hynix_hi1337_i/hynix_hi1337_i_Sensor.c:	        LOG_INF("READ PDCAL DATA\n");
imgsensor/src/common/v1/hynix_hi1337_i/hynix_hi1337_i_Sensor.c:		LOG_INF("SENSOR_FEATURE_GET_SENSOR_PDAF_CAPACITY scenarioId:%lld\n", *feature_data);
imgsensor/src/common/v1/hynix_hi1337_i/hynix_hi1337_i_Sensor.c:		LOG_INF("SENSOR_FEATURE_GET_SENSOR_PDAF_CAPACITY scenarioId:%lld\n", *feature_data);
imgsensor/src/common/v1/hynix_hi1337_i/hynix_hi1337_i_Sensor.c:	        	LOG_INF("[odin] pdaf mode : %d \n", imgsensor.pdaf_mode);
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:#define LOG_INF(fmt, args...)	pr_info(PFX "[%s] " fmt, __func__, ##args)
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:#define LOG_1 LOG_INF("IMX386,MIPI 4LANE\n")
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:#define SENSORDB LOG_INF
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:	/* LOG_INF("%x %x", regDa[idx], regDa[idx+1]); */
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:	/* LOG_INF("%x %x", regDa[idx], regDa[idx+1]); */
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("dummyline = %d, dummypixels = %d\n",
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("framerate = %d, min framelength should enable(%d)\n",
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("enter shutter =%d\n", shutter);
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("shutter=%d, framelength=%d, line_length=%d, shift:%d\n"
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("enter shutter =%d\n", shutter);
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("shutter=%d, framelength=%d, length=%d, shift:%d\n"
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("exit IMX386MIPI_sensorGainMapping function\n");
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("set_gain %d\n", gain);
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:		LOG_INF("Error gain setting");
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("gain = %d , reg_gain = 0x%x\n ", gain, reg_gain);
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("le:0x%x, se:0x%x, gain:0x%x\n", le, se, gain);
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("%s.\n", __func__);
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("%s.\n", __func__);
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("%s.\n", __func__);
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("%s.\n", __func__);
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("%s.\n", __func__);
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("%s.\n", __func__);
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("%s.\n", __func__);
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("%s.\n", __func__);
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:			LOG_INF("Get imx386 mono! id=0x%x, sensor id: 0x%x\n"
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:			LOG_INF("Read sensor fail, addr: 0x%x, sensorid:0x%x\n"
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_1;
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:				LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n"
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:			LOG_INF("Read id fail, id: 0x%x, sensor id: 0x%x\n",
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("%s.\n", __func__);
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("%s.\n", __func__);
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("%s.\n", __func__);
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:		LOG_INF("use cap30FPS's setting: %d fps!\n",
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("%s.\n", __func__);
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("%s.\n", __func__);
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("%s.\n", __func__);
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("%s.\n", __func__);
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("%s.\n", __func__);
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("%s.\n", __func__);
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:		LOG_INF("Error ScenarioId setting");
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("framerate = %d\n ", framerate);
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("enable = %d, framerate = %d\n", enable, framerate);
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("scenario_id = %d, framerate = %d\n", scenario_id, framerate);
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:		LOG_INF("error scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("%s, enable: %d\n", __func__, enable);
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("streaming_enable(0=Sw Standby,1=streaming): %d\n", enable);
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:	LOG_INF("get_temperature(%d)\n", temperature);
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:		LOG_INF("current fps :%d\n", (UINT32)*feature_data);
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:		LOG_INF("ihdr enable :%d\n", (BOOL)*feature_data);
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:		LOG_INF("SENSOR_FEATURE_GET_CROP_INFO scenarioId:%d\n",
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:		LOG_INF("SENSOR_SET_SENSOR_IHDR LE=%d, SE=%d, Gain=%d\n",
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:		LOG_INF("GET_SENSOR_PDAF_CAPACITY scenarioId:%llu\n",
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:		LOG_INF("SENSOR_FEATURE_GET_PDAF_INFO scenarioId:%d\n",
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:		LOG_INF("PDAF mode :%d\n", *feature_data_16);
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:		LOG_INF("SENSOR_FEATURE_GET_PDAF_DATA\n");
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:		LOG_INF("SENSOR_FEATURE_GET_VC_INFO %d\n",
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:		LOG_INF("GET_PDAF_REG_SETTING %d", (*feature_para_len));
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:		LOG_INF("SET_PDAF_REG_SETTING %d", (*feature_para_len));
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:		LOG_INF("SENSOR_FEATURE_SET_STREAMING_SUSPEND\n");
imgsensor/src/common/v1/imx386_mipi_mono/imx386mipimono_sensor.c:		LOG_INF("SENSOR_FEATURE_SET_STREAMING_RESUME, shutter:%llu\n",
imgsensor/src/common/v1/hynix_hi259_i/hynix_hi259_i_Sensor.c:/*#define LOG_INF(format, args...)    \
imgsensor/src/common/v1/hynix_hi259_i/hynix_hi259_i_Sensor.c:#define LOG_INF(format, args...)
imgsensor/src/common/v1/hynix_hi259_i/hynix_hi259_i_Sensor.c:			LOG_INF("burst write\n");
imgsensor/src/common/v1/hynix_hi259_i/hynix_hi259_i_Sensor.c:	LOG_INF("dummyline = %d, dummypixels = %d\n",
imgsensor/src/common/v1/hynix_hi259_i/hynix_hi259_i_Sensor.c:	LOG_INF("shutter = %d, imgsensor.frame_length = %d, imgsensor.min_frame_length = %d\n",
imgsensor/src/common/v1/hynix_hi259_i/hynix_hi259_i_Sensor.c:	LOG_INF("frame_length = %d , shutter = %d \n", imgsensor.frame_length, shutter);
imgsensor/src/common/v1/hynix_hi259_i/hynix_hi259_i_Sensor.c:        LOG_INF("Error gain setting");
imgsensor/src/common/v1/hynix_hi259_i/hynix_hi259_i_Sensor.c:    LOG_INF("gain = %d , reg_gain = 0x%x\n ", gain, reg_gain);
imgsensor/src/common/v1/hynix_hi259_i/hynix_hi259_i_Sensor.c:			LOG_INF("i2c write id : 0x%x, sensor id: 0x%x\n", imgsensor.i2c_write_id, *sensor_id);
imgsensor/src/common/v1/hynix_hi259_i/hynix_hi259_i_Sensor.c:			LOG_INF("Read sensor id fail, write id: 0x%x, id: 0x%x\n", imgsensor.i2c_write_id, *sensor_id);
imgsensor/src/common/v1/hynix_hi259_i/hynix_hi259_i_Sensor.c:		LOG_INF(" Read id fail,sensor id: 0x%x\n", *sensor_id);
imgsensor/src/common/v1/hynix_hi259_i/hynix_hi259_i_Sensor.c:	LOG_INF("[open]: PLATFORM:MT6765,MIPI 1LANE\n");
imgsensor/src/common/v1/hynix_hi259_i/hynix_hi259_i_Sensor.c:				LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n", imgsensor.i2c_write_id, sensor_id);
imgsensor/src/common/v1/hynix_hi259_i/hynix_hi259_i_Sensor.c:			LOG_INF("Read sensor id fail, write id: 0x%x, id: 0x%x\n", imgsensor.i2c_write_id, sensor_id);
imgsensor/src/common/v1/hynix_hi259_i/hynix_hi259_i_Sensor.c:		LOG_INF("open sensor id fail: 0x%x\n", sensor_id);
imgsensor/src/common/v1/hynix_hi259_i/hynix_hi259_i_Sensor.c:	LOG_INF("Caputre fps:%d\n", imgsensor.current_fps);
imgsensor/src/common/v1/hynix_hi259_i/hynix_hi259_i_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/hynix_hi259_i/hynix_hi259_i_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/hynix_hi259_i/hynix_hi259_i_Sensor.c:		LOG_INF("[odin]preview\n");
imgsensor/src/common/v1/hynix_hi259_i/hynix_hi259_i_Sensor.c:		LOG_INF("[odin]capture\n");
imgsensor/src/common/v1/hynix_hi259_i/hynix_hi259_i_Sensor.c:		LOG_INF("[odin]video preview\n");
imgsensor/src/common/v1/hynix_hi259_i/hynix_hi259_i_Sensor.c:		LOG_INF("[odin]default mode\n");
imgsensor/src/common/v1/hynix_hi259_i/hynix_hi259_i_Sensor.c:	LOG_INF("framerate = %d ", framerate);
imgsensor/src/common/v1/hynix_hi259_i/hynix_hi259_i_Sensor.c:	LOG_INF("enable = %d, framerate = %d ", enable, framerate);
imgsensor/src/common/v1/hynix_hi259_i/hynix_hi259_i_Sensor.c:	LOG_INF("scenario_id = %d, framerate = %d\n", scenario_id, framerate);
imgsensor/src/common/v1/hynix_hi259_i/hynix_hi259_i_Sensor.c:			LOG_INF("fps %d fps not support,use cap: %d fps!\n",
imgsensor/src/common/v1/hynix_hi259_i/hynix_hi259_i_Sensor.c:	    LOG_INF("error scenario_id = %d, we use preview scenario\n",
imgsensor/src/common/v1/hynix_hi259_i/hynix_hi259_i_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/hynix_hi259_i/hynix_hi259_i_Sensor.c:	LOG_INF("set_test_pattern_mode enable: %d", enable);
imgsensor/src/common/v1/hynix_hi259_i/hynix_hi259_i_Sensor.c:	LOG_INF("feature_id = %d\n", feature_id);
imgsensor/src/common/v1/hynix_hi259_i/hynix_hi259_i_Sensor.c:	    LOG_INF("current fps :%d\n", (UINT32)*feature_data);
imgsensor/src/common/v1/hynix_hi259_i/hynix_hi259_i_Sensor.c:	    LOG_INF("SENSOR_FEATURE_GET_CROP_INFO scenarioId:%d\n",
imgsensor/src/common/v1/gc_gc5035_i/gc_gc5035_i_Sensor.c:#define LOG_1 cam_pr_debug("GC5035MIPI, 2LANE\n")
imgsensor/src/common/v1/gc_gc5035_i/gc_gc5035_i_Sensor.c:	LOG_1;
imgsensor/src/common/v1/hynix_hi259_iii/hynix_hi259_iii_Sensor.c:/*#define LOG_INF(format, args...)    \
imgsensor/src/common/v1/hynix_hi259_iii/hynix_hi259_iii_Sensor.c:#define LOG_INF(format, args...)
imgsensor/src/common/v1/hynix_hi259_iii/hynix_hi259_iii_Sensor.c:			LOG_INF("burst write\n");
imgsensor/src/common/v1/hynix_hi259_iii/hynix_hi259_iii_Sensor.c:	LOG_INF("dummyline = %d, dummypixels = %d\n",
imgsensor/src/common/v1/hynix_hi259_iii/hynix_hi259_iii_Sensor.c:	LOG_INF("shutter = %d, imgsensor.frame_length = %d, imgsensor.min_frame_length = %d\n",
imgsensor/src/common/v1/hynix_hi259_iii/hynix_hi259_iii_Sensor.c:	LOG_INF("frame_length = %d , shutter = %d \n", imgsensor.frame_length, shutter);
imgsensor/src/common/v1/hynix_hi259_iii/hynix_hi259_iii_Sensor.c:        LOG_INF("Error gain setting");
imgsensor/src/common/v1/hynix_hi259_iii/hynix_hi259_iii_Sensor.c:    LOG_INF("gain = %d , reg_gain = 0x%x\n ", gain, reg_gain);
imgsensor/src/common/v1/hynix_hi259_iii/hynix_hi259_iii_Sensor.c:			LOG_INF("i2c write id : 0x%x, sensor id: 0x%x\n", imgsensor.i2c_write_id, *sensor_id);
imgsensor/src/common/v1/hynix_hi259_iii/hynix_hi259_iii_Sensor.c:			LOG_INF("Read sensor id fail, write id: 0x%x, id: 0x%x\n", imgsensor.i2c_write_id, *sensor_id);
imgsensor/src/common/v1/hynix_hi259_iii/hynix_hi259_iii_Sensor.c:		LOG_INF("Read id fail,sensor id: 0x%x\n", *sensor_id);
imgsensor/src/common/v1/hynix_hi259_iii/hynix_hi259_iii_Sensor.c:	LOG_INF("[open]: PLATFORM:MT6765,MIPI 1LANE\n");
imgsensor/src/common/v1/hynix_hi259_iii/hynix_hi259_iii_Sensor.c:				LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n", imgsensor.i2c_write_id, sensor_id);
imgsensor/src/common/v1/hynix_hi259_iii/hynix_hi259_iii_Sensor.c:			LOG_INF("Read sensor id fail, write id: 0x%x, id: 0x%x\n", imgsensor.i2c_write_id, sensor_id);
imgsensor/src/common/v1/hynix_hi259_iii/hynix_hi259_iii_Sensor.c:		LOG_INF("open sensor id fail: 0x%x\n", sensor_id);
imgsensor/src/common/v1/hynix_hi259_iii/hynix_hi259_iii_Sensor.c:	LOG_INF("Caputre fps:%d\n", imgsensor.current_fps);
imgsensor/src/common/v1/hynix_hi259_iii/hynix_hi259_iii_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/hynix_hi259_iii/hynix_hi259_iii_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/hynix_hi259_iii/hynix_hi259_iii_Sensor.c:		LOG_INF("[odin]preview\n");
imgsensor/src/common/v1/hynix_hi259_iii/hynix_hi259_iii_Sensor.c:		LOG_INF("[odin]capture\n");
imgsensor/src/common/v1/hynix_hi259_iii/hynix_hi259_iii_Sensor.c:		LOG_INF("[odin]video preview\n");
imgsensor/src/common/v1/hynix_hi259_iii/hynix_hi259_iii_Sensor.c:		LOG_INF("[odin]default mode\n");
imgsensor/src/common/v1/hynix_hi259_iii/hynix_hi259_iii_Sensor.c:	LOG_INF("framerate = %d ", framerate);
imgsensor/src/common/v1/hynix_hi259_iii/hynix_hi259_iii_Sensor.c:	LOG_INF("enable = %d, framerate = %d ", enable, framerate);
imgsensor/src/common/v1/hynix_hi259_iii/hynix_hi259_iii_Sensor.c:	LOG_INF("scenario_id = %d, framerate = %d\n", scenario_id, framerate);
imgsensor/src/common/v1/hynix_hi259_iii/hynix_hi259_iii_Sensor.c:			LOG_INF("fps %d fps not support,use cap: %d fps!\n",
imgsensor/src/common/v1/hynix_hi259_iii/hynix_hi259_iii_Sensor.c:	    LOG_INF("error scenario_id = %d, we use preview scenario\n",
imgsensor/src/common/v1/hynix_hi259_iii/hynix_hi259_iii_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/hynix_hi259_iii/hynix_hi259_iii_Sensor.c:	LOG_INF("set_test_pattern_mode enable: %d", enable);
imgsensor/src/common/v1/hynix_hi259_iii/hynix_hi259_iii_Sensor.c:	LOG_INF("feature_id = %d\n", feature_id);
imgsensor/src/common/v1/hynix_hi259_iii/hynix_hi259_iii_Sensor.c:	    LOG_INF("current fps :%d\n", (UINT32)*feature_data);
imgsensor/src/common/v1/hynix_hi259_iii/hynix_hi259_iii_Sensor.c:	    LOG_INF("SENSOR_FEATURE_GET_CROP_INFO scenarioId:%d\n",
imgsensor/src/common/v1/gc02m1macro_mipi_raw/gc02m1macromipi_Sensor.c:#define LOG_1 LOG_INF("GC02M1MACRO, MIPI 1LANE\n")
imgsensor/src/common/v1/gc02m1macro_mipi_raw/gc02m1macromipi_Sensor.c:#define LOG_INF(format, args...)    pr_debug(PFX "[%s] " format, __func__, ##args)
imgsensor/src/common/v1/gc02m1macro_mipi_raw/gc02m1macromipi_Sensor.c:			LOG_INF("burst write\n");
imgsensor/src/common/v1/gc02m1macro_mipi_raw/gc02m1macromipi_Sensor.c:	LOG_INF("shutter = %d, framelength = %d\n", shutter, imgsensor.frame_length);
imgsensor/src/common/v1/gc02m1macro_mipi_raw/gc02m1macromipi_Sensor.c:	LOG_INF("GC02M1MACRO_AGC_Param[gain_index][1] = 0x%x, temp_gain = 0x%x, reg_gain = %d\n",
imgsensor/src/common/v1/gc02m1macro_mipi_raw/gc02m1macromipi_Sensor.c:	LOG_INF("le: 0x%x, se: 0x%x, gain: 0x%x\n", le, se, gain);
imgsensor/src/common/v1/gc02m1macro_mipi_raw/gc02m1macromipi_Sensor.c:*	LOG_INF("image_mirror = %d\n", image_mirror);
imgsensor/src/common/v1/gc02m1macro_mipi_raw/gc02m1macromipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc02m1macro_mipi_raw/gc02m1macromipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc02m1macro_mipi_raw/gc02m1macromipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc02m1macro_mipi_raw/gc02m1macromipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc02m1macro_mipi_raw/gc02m1macromipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc02m1macro_mipi_raw/gc02m1macromipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc02m1macro_mipi_raw/gc02m1macromipi_Sensor.c:	LOG_INF("enable: %d\n", enable);
imgsensor/src/common/v1/gc02m1macro_mipi_raw/gc02m1macromipi_Sensor.c:				LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n", imgsensor.i2c_write_id, *sensor_id);
imgsensor/src/common/v1/gc02m1macro_mipi_raw/gc02m1macromipi_Sensor.c:			LOG_INF("Read sensor id fail, write id: 0x%x, id: 0x%x\n", imgsensor.i2c_write_id, *sensor_id);
imgsensor/src/common/v1/gc02m1macro_mipi_raw/gc02m1macromipi_Sensor.c:	LOG_1;
imgsensor/src/common/v1/gc02m1macro_mipi_raw/gc02m1macromipi_Sensor.c:				LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n", imgsensor.i2c_write_id, sensor_id);
imgsensor/src/common/v1/gc02m1macro_mipi_raw/gc02m1macromipi_Sensor.c:			LOG_INF("Read sensor id fail, write id: 0x%x, id: 0x%x\n", imgsensor.i2c_write_id, sensor_id);
imgsensor/src/common/v1/gc02m1macro_mipi_raw/gc02m1macromipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc02m1macro_mipi_raw/gc02m1macromipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc02m1macro_mipi_raw/gc02m1macromipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc02m1macro_mipi_raw/gc02m1macromipi_Sensor.c:			LOG_INF("Warning: current_fps %d fps is not support, so use cap's setting: %d fps!\n",
imgsensor/src/common/v1/gc02m1macro_mipi_raw/gc02m1macromipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc02m1macro_mipi_raw/gc02m1macromipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc02m1macro_mipi_raw/gc02m1macromipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc02m1macro_mipi_raw/gc02m1macromipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc02m1macro_mipi_raw/gc02m1macromipi_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/gc02m1macro_mipi_raw/gc02m1macromipi_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/gc02m1macro_mipi_raw/gc02m1macromipi_Sensor.c:		LOG_INF("Error ScenarioId setting");
imgsensor/src/common/v1/gc02m1macro_mipi_raw/gc02m1macromipi_Sensor.c:	LOG_INF("framerate = %d\n ", framerate);
imgsensor/src/common/v1/gc02m1macro_mipi_raw/gc02m1macromipi_Sensor.c:	LOG_INF("enable = %d, framerate = %d\n", enable, framerate);
imgsensor/src/common/v1/gc02m1macro_mipi_raw/gc02m1macromipi_Sensor.c:	LOG_INF("scenario_id = %d, framerate = %d\n", scenario_id, framerate);
imgsensor/src/common/v1/gc02m1macro_mipi_raw/gc02m1macromipi_Sensor.c:				LOG_INF("Warning: current_fps %d fps is not support, so use cap's setting: %d fps!\n",
imgsensor/src/common/v1/gc02m1macro_mipi_raw/gc02m1macromipi_Sensor.c:		LOG_INF("error scenario_id = %d, we use preview scenario\n", scenario_id);
imgsensor/src/common/v1/gc02m1macro_mipi_raw/gc02m1macromipi_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/gc02m1macro_mipi_raw/gc02m1macromipi_Sensor.c:	LOG_INF("feature_id = %d\n", feature_id);
imgsensor/src/common/v1/gc02m1macro_mipi_raw/gc02m1macromipi_Sensor.c:		LOG_INF("adb_i2c_read 0x%x = 0x%x\n", sensor_reg_data->RegAddr, sensor_reg_data->RegData);
imgsensor/src/common/v1/gc02m1macro_mipi_raw/gc02m1macromipi_Sensor.c:		LOG_INF("current fps :%d\n", (UINT32)*feature_data);
imgsensor/src/common/v1/gc02m1macro_mipi_raw/gc02m1macromipi_Sensor.c:		LOG_INF("ihdr enable :%d\n", (BOOL)*feature_data);
imgsensor/src/common/v1/gc02m1macro_mipi_raw/gc02m1macromipi_Sensor.c:		LOG_INF("SENSOR_FEATURE_GET_CROP_INFO scenarioId:%d\n", (UINT32)*feature_data);
imgsensor/src/common/v1/gc02m1macro_mipi_raw/gc02m1macromipi_Sensor.c:		LOG_INF("SENSOR_SET_SENSOR_IHDR LE = %d, SE = %d, Gain = %d\n",
imgsensor/src/common/v1/gc_gc5035_iii/gc_gc5035_iii_Sensor.c:#define LOG_1 cam_pr_debug("GC5035MIPI, 2LANE\n")
imgsensor/src/common/v1/gc_gc5035_iii/gc_gc5035_iii_Sensor.c:	LOG_1;
imgsensor/src/common/v1/ov_ov02b_v/ov_ov02b_v_Sensor.c:/*#define LOG_INF(format, args...)    \
imgsensor/src/common/v1/ov_ov02b_v/ov_ov02b_v_Sensor.c:#define LOG_INF(format, args...)
imgsensor/src/common/v1/ov_ov02b_v/ov_ov02b_v_Sensor.c:	LOG_INF("imgsensor.frame_length = %d\n", imgsensor.frame_length);
imgsensor/src/common/v1/ov_ov02b_v/ov_ov02b_v_Sensor.c:    //LOG_INF("shutter =%d, framelength =%d\n", shutter,imgsensor.frame_length);
imgsensor/src/common/v1/ov_ov02b_v/ov_ov02b_v_Sensor.c:	//LOG_INF("shutter =%d, framelength =%d, realtime_fps =%d\n",
imgsensor/src/common/v1/ov_ov02b_v/ov_ov02b_v_Sensor.c:            LOG_INF("OV02BMIPI_SetGain = 16");
imgsensor/src/common/v1/ov_ov02b_v/ov_ov02b_v_Sensor.c:            LOG_INF("OV02BMIPI_SetGain = 160");
imgsensor/src/common/v1/ov_ov02b_v/ov_ov02b_v_Sensor.c:            LOG_INF("OV02BMIPI_SetGain = %d",iReg);
imgsensor/src/common/v1/ov_ov02b_v/ov_ov02b_v_Sensor.c:        LOG_INF("error gain setting");
imgsensor/src/common/v1/ov_ov02b_v/ov_ov02b_v_Sensor.c:	LOG_INF("le: 0x%x, se: 0x%x, gain: 0x%x\n", le, se, gain);
imgsensor/src/common/v1/ov_ov02b_v/ov_ov02b_v_Sensor.c:            LOG_INF("i2c write id : 0x%x, sensor id: 0x%x\n",
imgsensor/src/common/v1/ov_ov02b_v/ov_ov02b_v_Sensor.c:        LOG_INF("Read id fail,sensor id: 0x%x\n", *sensor_id);
imgsensor/src/common/v1/ov_ov02b_v/ov_ov02b_v_Sensor.c:                LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n", imgsensor.i2c_write_id, sensor_id);
imgsensor/src/common/v1/ov_ov02b_v/ov_ov02b_v_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/ov_ov02b_v/ov_ov02b_v_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/ov_ov02b_v/ov_ov02b_v_Sensor.c:    LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/ov_ov02b_v/ov_ov02b_v_Sensor.c:        //LOG_INF("[odin]default mode\n");
imgsensor/src/common/v1/ov_ov02b_v/ov_ov02b_v_Sensor.c:	LOG_INF("framerate = %d\n ", framerate);
imgsensor/src/common/v1/ov_ov02b_v/ov_ov02b_v_Sensor.c:	LOG_INF("enable = %d, framerate = %d\n", enable, framerate);
imgsensor/src/common/v1/ov_ov02b_v/ov_ov02b_v_Sensor.c://	LOG_INF("scenario_id = %d, framerate = %d\n", scenario_id, framerate);
imgsensor/src/common/v1/ov_ov02b_v/ov_ov02b_v_Sensor.c:				LOG_INF("Warning: current_fps %d fps is not support, so use cap's setting: %d fps!\n",
imgsensor/src/common/v1/ov_ov02b_v/ov_ov02b_v_Sensor.c:        LOG_INF("Warning: current_fps %d fps is not support, so use cap's setting: %d fps!\n",framerate,imgsensor_info.custom1.max_framerate/10);
imgsensor/src/common/v1/ov_ov02b_v/ov_ov02b_v_Sensor.c:		LOG_INF("error scenario_id = %d, we use preview scenario\n", scenario_id);
imgsensor/src/common/v1/ov_ov02b_v/ov_ov02b_v_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/ov_ov02b_v/ov_ov02b_v_Sensor.c:	LOG_INF("enable: %d\n", enable);
imgsensor/src/common/v1/ov_ov02b_v/ov_ov02b_v_Sensor.c:	//LOG_INF("streaming_control enable =%d\n", enable);
imgsensor/src/common/v1/ov_ov02b_v/ov_ov02b_v_Sensor.c:	LOG_INF("feature_id = %d\n", feature_id);
imgsensor/src/common/v1/ov_ov02b_v/ov_ov02b_v_Sensor.c:		LOG_INF("adb_i2c_read 0x%x = 0x%x\n", sensor_reg_data->RegAddr, sensor_reg_data->RegData);
imgsensor/src/common/v1/ov_ov02b_v/ov_ov02b_v_Sensor.c:	    LOG_INF("current fps :%d\n", (UINT32)*feature_data);
imgsensor/src/common/v1/ov_ov02b_v/ov_ov02b_v_Sensor.c:	    LOG_INF("ihdr enable :%d\n", (BOOL)*feature_data);
imgsensor/src/common/v1/ov_ov02b_v/ov_ov02b_v_Sensor.c:		LOG_INF("SENSOR_FEATURE_GET_CROP_INFO scenarioId:%d\n", (UINT32)*feature_data);
imgsensor/src/common/v1/ov_ov02b_v/ov_ov02b_v_Sensor.c:		LOG_INF("SENSOR_SET_SENSOR_IHDR LE = %d, SE = %d, Gain = %d\n",
imgsensor/src/common/v1/s5k3p8sp_mipi_raw/s5k3p8_pdaf_cal.c:/* #define LOG_1 pr_debug("s5k3p8,MIPI 4LANE\n") */
imgsensor/src/common/v1/s5k3p8sp_mipi_raw/s5k3p8_pdaf_cal.c:/* #define LOG_2 \
imgsensor/src/common/v1/hynix_hi556_i/hynix_hi556_i_Sensor.c:/*#define LOG_INF(format, args...)    \
imgsensor/src/common/v1/hynix_hi556_i/hynix_hi556_i_Sensor.c:#define LOG_INF(format, args...)
imgsensor/src/common/v1/hynix_hi556_i/hynix_hi556_i_Sensor.c:	LOG_INF("dummyline = %d, dummypixels = %d\n",
imgsensor/src/common/v1/hynix_hi556_i/hynix_hi556_i_Sensor.c:	LOG_INF("shutter =%d, framelength =%d",
imgsensor/src/common/v1/hynix_hi556_i/hynix_hi556_i_Sensor.c:	LOG_INF("set_shutter");
imgsensor/src/common/v1/hynix_hi556_i/hynix_hi556_i_Sensor.c:	LOG_INF("gain = %d , reg_gain = 0x%x\n ", gain, reg_gain);
imgsensor/src/common/v1/hynix_hi556_i/hynix_hi556_i_Sensor.c:	LOG_INF("le:0x%x, se:0x%x, gain:0x%x\n", le, se, gain);
imgsensor/src/common/v1/hynix_hi556_i/hynix_hi556_i_Sensor.c:	LOG_INF("image_mirror = %d", image_mirror);
imgsensor/src/common/v1/hynix_hi556_i/hynix_hi556_i_Sensor.c:		LOG_INF("Error image_mirror setting");
imgsensor/src/common/v1/hynix_hi556_i/hynix_hi556_i_Sensor.c:		LOG_INF("capture_setting fps = 300\n");
imgsensor/src/common/v1/hynix_hi556_i/hynix_hi556_i_Sensor.c:		LOG_INF("capture_setting fps not 300\n");
imgsensor/src/common/v1/hynix_hi556_i/hynix_hi556_i_Sensor.c:			LOG_INF("i2c write id : 0x%x, sensor id: 0x%x\n",
imgsensor/src/common/v1/hynix_hi556_i/hynix_hi556_i_Sensor.c:		LOG_INF("Read id fail,sensor id: 0x%x\n", *sensor_id);
imgsensor/src/common/v1/hynix_hi556_i/hynix_hi556_i_Sensor.c:	LOG_INF("[open]: PLATFORM:MT6737,MIPI 24LANE\n");
imgsensor/src/common/v1/hynix_hi556_i/hynix_hi556_i_Sensor.c:	LOG_INF("preview 1296*972@30fps,360Mbps/lane;"
imgsensor/src/common/v1/hynix_hi556_i/hynix_hi556_i_Sensor.c:				LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n",
imgsensor/src/common/v1/hynix_hi556_i/hynix_hi556_i_Sensor.c:		LOG_INF("open sensor id fail: 0x%x\n", sensor_id);
imgsensor/src/common/v1/hynix_hi556_i/hynix_hi556_i_Sensor.c:	LOG_INF("E");
imgsensor/src/common/v1/hynix_hi556_i/hynix_hi556_i_Sensor.c:	LOG_INF("Caputre fps:%d\n", imgsensor.current_fps);
imgsensor/src/common/v1/hynix_hi556_i/hynix_hi556_i_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/hynix_hi556_i/hynix_hi556_i_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/hynix_hi556_i/hynix_hi556_i_Sensor.c:		LOG_INF("preview\n");
imgsensor/src/common/v1/hynix_hi556_i/hynix_hi556_i_Sensor.c:	LOG_INF("framerate = %d ", framerate);
imgsensor/src/common/v1/hynix_hi556_i/hynix_hi556_i_Sensor.c:	LOG_INF("enable = %d, framerate = %d ", enable, framerate);
imgsensor/src/common/v1/hynix_hi556_i/hynix_hi556_i_Sensor.c:	LOG_INF("scenario_id = %d, framerate = %d\n",
imgsensor/src/common/v1/hynix_hi556_i/hynix_hi556_i_Sensor.c:			LOG_INF("fps %d fps not support,use cap: %d fps!\n",
imgsensor/src/common/v1/hynix_hi556_i/hynix_hi556_i_Sensor.c:	    LOG_INF("error scenario_id = %d, we use preview scenario\n",
imgsensor/src/common/v1/hynix_hi556_i/hynix_hi556_i_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/hynix_hi556_i/hynix_hi556_i_Sensor.c:	LOG_INF("set_test_pattern_mode enable: %d", enable);
imgsensor/src/common/v1/hynix_hi556_i/hynix_hi556_i_Sensor.c:	LOG_INF("feature_id = %d\n", feature_id);
imgsensor/src/common/v1/hynix_hi556_i/hynix_hi556_i_Sensor.c:	    LOG_INF("current fps :%d\n", (UINT32)*feature_data);
imgsensor/src/common/v1/hynix_hi556_i/hynix_hi556_i_Sensor.c:	    LOG_INF("ihdr enable :%d\n", (BOOL)*feature_data);
imgsensor/src/common/v1/hynix_hi556_i/hynix_hi556_i_Sensor.c:	    LOG_INF("SENSOR_FEATURE_GET_CROP_INFO scenarioId:%d\n",
imgsensor/src/common/v1/hynix_hi556_i/hynix_hi556_i_Sensor.c:	    LOG_INF("SENSOR_SET_SENSOR_IHDR LE=%d, SE=%d, Gain=%d\n",
imgsensor/src/common/v1/gc_gc02m10_ii/gc_gc02m10_ii_Sensor.c:#define LOG_1 LOG_INF("gc02m10, MIPI 1LANE\n")
imgsensor/src/common/v1/gc_gc02m10_ii/gc_gc02m10_ii_Sensor.c:/*#define LOG_INF(format, args...)    \
imgsensor/src/common/v1/gc_gc02m10_ii/gc_gc02m10_ii_Sensor.c:#define LOG_INF(format, args...)
imgsensor/src/common/v1/gc_gc02m10_ii/gc_gc02m10_ii_Sensor.c:			LOG_INF("burst write\n");
imgsensor/src/common/v1/gc_gc02m10_ii/gc_gc02m10_ii_Sensor.c:	LOG_INF("shutter = %d, framelength = %d\n", shutter, imgsensor.frame_length);
imgsensor/src/common/v1/gc_gc02m10_ii/gc_gc02m10_ii_Sensor.c:	LOG_INF("gc02m10_AGC_Param[gain_index][1] = 0x%x, temp_gain = 0x%x, reg_gain = %d\n",
imgsensor/src/common/v1/gc_gc02m10_ii/gc_gc02m10_ii_Sensor.c:	LOG_INF("le: 0x%x, se: 0x%x, gain: 0x%x\n", le, se, gain);
imgsensor/src/common/v1/gc_gc02m10_ii/gc_gc02m10_ii_Sensor.c:*	LOG_INF("image_mirror = %d\n", image_mirror);
imgsensor/src/common/v1/gc_gc02m10_ii/gc_gc02m10_ii_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc_gc02m10_ii/gc_gc02m10_ii_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc_gc02m10_ii/gc_gc02m10_ii_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc_gc02m10_ii/gc_gc02m10_ii_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc_gc02m10_ii/gc_gc02m10_ii_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc_gc02m10_ii/gc_gc02m10_ii_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc_gc02m10_ii/gc_gc02m10_ii_Sensor.c:	LOG_INF("enable: %d\n", enable);
imgsensor/src/common/v1/gc_gc02m10_ii/gc_gc02m10_ii_Sensor.c:				LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n", imgsensor.i2c_write_id, *sensor_id);
imgsensor/src/common/v1/gc_gc02m10_ii/gc_gc02m10_ii_Sensor.c:			LOG_INF("Read sensor id fail, write id: 0x%x, id: 0x%x\n", imgsensor.i2c_write_id, *sensor_id);
imgsensor/src/common/v1/gc_gc02m10_ii/gc_gc02m10_ii_Sensor.c:				LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n", imgsensor.i2c_write_id, sensor_id);
imgsensor/src/common/v1/gc_gc02m10_ii/gc_gc02m10_ii_Sensor.c:			LOG_INF("Read sensor id fail, write id: 0x%x, id: 0x%x\n", imgsensor.i2c_write_id, sensor_id);
imgsensor/src/common/v1/gc_gc02m10_ii/gc_gc02m10_ii_Sensor.c:			LOG_INF("Warning: current_fps %d fps is not support, so use cap's setting: %d fps!\n",
imgsensor/src/common/v1/gc_gc02m10_ii/gc_gc02m10_ii_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/gc_gc02m10_ii/gc_gc02m10_ii_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/gc_gc02m10_ii/gc_gc02m10_ii_Sensor.c:	//	LOG_INF("Error ScenarioId setting");
imgsensor/src/common/v1/gc_gc02m10_ii/gc_gc02m10_ii_Sensor.c:	LOG_INF("framerate = %d\n ", framerate);
imgsensor/src/common/v1/gc_gc02m10_ii/gc_gc02m10_ii_Sensor.c:	LOG_INF("enable = %d, framerate = %d\n", enable, framerate);
imgsensor/src/common/v1/gc_gc02m10_ii/gc_gc02m10_ii_Sensor.c:	LOG_INF("scenario_id = %d, framerate = %d\n", scenario_id, framerate);
imgsensor/src/common/v1/gc_gc02m10_ii/gc_gc02m10_ii_Sensor.c:				LOG_INF("Warning: current_fps %d fps is not support, so use cap's setting: %d fps!\n",
imgsensor/src/common/v1/gc_gc02m10_ii/gc_gc02m10_ii_Sensor.c:			LOG_INF("Warning: current_fps %d fps is not support, so use cap's setting: %d fps!\n",framerate,imgsensor_info.custom1.max_framerate/10);
imgsensor/src/common/v1/gc_gc02m10_ii/gc_gc02m10_ii_Sensor.c:		LOG_INF("error scenario_id = %d, we use preview scenario\n", scenario_id);
imgsensor/src/common/v1/gc_gc02m10_ii/gc_gc02m10_ii_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/gc_gc02m10_ii/gc_gc02m10_ii_Sensor.c:	//LOG_DBG("streaming_enable(0=Sw Standby,1=streaming): %d\n", enable);
imgsensor/src/common/v1/gc_gc02m10_ii/gc_gc02m10_ii_Sensor.c:	LOG_INF("feature_id = %d\n", feature_id);
imgsensor/src/common/v1/gc_gc02m10_ii/gc_gc02m10_ii_Sensor.c:		LOG_INF("adb_i2c_read 0x%x = 0x%x\n", sensor_reg_data->RegAddr, sensor_reg_data->RegData);
imgsensor/src/common/v1/gc_gc02m10_ii/gc_gc02m10_ii_Sensor.c:		LOG_INF("current fps :%d\n", (UINT32)*feature_data);
imgsensor/src/common/v1/gc_gc02m10_ii/gc_gc02m10_ii_Sensor.c:		LOG_INF("ihdr enable :%d\n", (BOOL)*feature_data);
imgsensor/src/common/v1/gc_gc02m10_ii/gc_gc02m10_ii_Sensor.c:		LOG_INF("SENSOR_FEATURE_GET_CROP_INFO scenarioId:%d\n", (UINT32)*feature_data);
imgsensor/src/common/v1/gc_gc02m10_ii/gc_gc02m10_ii_Sensor.c:		LOG_INF("SENSOR_SET_SENSOR_IHDR LE = %d, SE = %d, Gain = %d\n",
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:#define LOG_1 LOG_INF("GC02M1, MIPI 1LANE\n")
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:#define LOG_INF(format, args...)    pr_debug(PFX "[%s] " format, __func__, ##args)
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:			LOG_INF("burst write\n");
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:    LOG_INF("ae_update: flag_update_ae = 0x%x\n", flag_update_ae);
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:          LOG_INF("ae_update: AE calibration Group %d is empty!\n", idx + 1);
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:          LOG_INF("ae_update: AE calibration Group %d is valid!\n", idx + 1);
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:          LOG_INF("ae_update: ae_checksum = 0x%.2x\n", ae_checksum % 255 + 1);
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:            LOG_INF("ae_update: ae_checksum ok, update_ae.ratio = 0x%.4x\n", update_ae.ratio);
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:            LOG_INF("ae_update: ae_checksum fail, actual_checksum = 0x%.2x\n", gc02m1_otp_read_byte(0xb0 + ae_group_offset));
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:          LOG_INF("ae_update: AE calibration Group %d is invalid!\n", idx + 1);
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:	LOG_INF("ae_update: flag_lens = 0x%x\n", flag_lens);
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:		LOG_INF("ae_update: normal lens global gain update\n");
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:	LOG_INF("shutter = %d, framelength = %d\n", shutter, imgsensor.frame_length);
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:		LOG_INF("ae_update: reg_gain = 0x%x\n", reg_gain);
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:	LOG_INF("GC02M1_AGC_Param[gain_index][1] = 0x%x, temp_gain = 0x%x, reg_gain = %d\n",
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:	LOG_INF("le: 0x%x, se: 0x%x, gain: 0x%x\n", le, se, gain);
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:*	LOG_INF("image_mirror = %d\n", image_mirror);
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:	LOG_INF("enable: %d\n", enable);
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:				LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n", imgsensor.i2c_write_id, *sensor_id);
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:			LOG_INF("Read sensor id fail, write id: 0x%x, id: 0x%x\n", imgsensor.i2c_write_id, *sensor_id);
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:	LOG_1;
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:				LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n", imgsensor.i2c_write_id, sensor_id);
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:			LOG_INF("Read sensor id fail, write id: 0x%x, id: 0x%x\n", imgsensor.i2c_write_id, sensor_id);
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:			LOG_INF("Warning: current_fps %d fps is not support, so use cap's setting: %d fps!\n",
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:		LOG_INF("Error ScenarioId setting");
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:	LOG_INF("framerate = %d\n ", framerate);
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:	LOG_INF("enable = %d, framerate = %d\n", enable, framerate);
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:	LOG_INF("scenario_id = %d, framerate = %d\n", scenario_id, framerate);
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:				LOG_INF("Warning: current_fps %d fps is not support, so use cap's setting: %d fps!\n",
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:		LOG_INF("error scenario_id = %d, we use preview scenario\n", scenario_id);
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:	LOG_INF("feature_id = %d\n", feature_id);
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:		LOG_INF("adb_i2c_read 0x%x = 0x%x\n", sensor_reg_data->RegAddr, sensor_reg_data->RegData);
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:		LOG_INF("current fps :%d\n", (UINT32)*feature_data);
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:		LOG_INF("ihdr enable :%d\n", (BOOL)*feature_data);
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:		LOG_INF("SENSOR_FEATURE_GET_CROP_INFO scenarioId:%d\n", (UINT32)*feature_data);
imgsensor/src/common/v1/gc02m1_mipi_raw/gc02m1mipi_Sensor.c:		LOG_INF("SENSOR_SET_SENSOR_IHDR LE = %d, SE = %d, Gain = %d\n",
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:#define LOG_1 LOG_INF("SP250a,MIPI 1LANE\n")
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:#define LOG_2 LOG_INF("preview 1280*960@30fps,420Mbps/lane; video 1280*960@30fps,420Mbps/lane; capture 5M@15fps,420Mbps/lane\n")
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:#define LOG_INF(format, args...)    pr_debug(PFX "[%s] " format, __FUNCTION__, ##args)
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:	LOG_INF("imgsensor.frame_length %d, dummyline = %d, vb :%d\n",
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:	LOG_INF("framerate = %d, min framelength should enable = %d\n",
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:	LOG_INF("shutter =%d, framelength =%d\n", shutter,
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:	//LOG_INF("shutter: %d, target_frame_length: %d", shutter, target_frame_length);
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:	LOG_INF("shutter: %d, frame_length: %d, custom1.framelength: %d dummy_line: %d\n",
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:		LOG_INF("temp_fps:%d, cqcqvalue:%d", temp_fps, cqcqvalue);
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:			LOG_INF("test_frame_length:%d, dummy_line:%d", test_frame_length, imgsensor.dummy_line);
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:			LOG_INF("SP250aMIPI_SetGain 1111111111--0x1f = 0x%x\n",
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:			LOG_INF("SP250aMIPI_SetGain 1111111111--0x20 = 0x%x\n",
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:			LOG_INF("SP250aMIPI_SetGain 1111111111--0x21 = 0x%x\n",
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:			LOG_INF("SP250aMIPI_SetGain 1111111111--0x28 = 0x%x\n",
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:			LOG_INF("SP250aMIPI_SetGain 1111111111--0x29 = 0x%x\n",
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:			LOG_INF("SP250aMIPI_SetGain 1111111111--0x1f = 0x%x\n",
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:			LOG_INF("SP250aMIPI_SetGain 1111111111--0x20 = 0x%x\n",
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:			LOG_INF("SP250aMIPI_SetGain 1111111111--0x21 = 0x%x\n",
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:			LOG_INF("SP250aMIPI_SetGain 1111111111--0x28 = 0x%x\n",
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:			LOG_INF("SP250aMIPI_SetGain 1111111111--0x29 = 0x%x\n",
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:			LOG_INF("SP250aMIPI_SetGain = 16");
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:			LOG_INF("SP250aMIPI_SetGain = 160");
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:			LOG_INF("SP250aMIPI_SetGain = %d", iReg);
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:		LOG_INF("error gain setting");
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:	LOG_INF("image_mirror = %d\n", image_mirror);
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:		LOG_INF("Error image_mirror setting\n");
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:	LOG_INF("custom1 E\n");
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:	LOG_INF("custom1_setting 30 fps\n");
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:	LOG_INF("custom1_setting 24 fps\n");
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:				LOG_INF("gpw i2c write id: 0x%x, sensor id: 0x%x\n",
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:			LOG_INF("gpw Read sensor id fail, write id:0x%x id: 0x%x\n",
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:	LOG_1;
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:	LOG_2;
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:				LOG_INF("gpw i2c write id: 0x%x, sensor id: 0x%x\n",
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:			LOG_INF("gpw Read sensor id fail, write id:0x%x id: 0x%x\n",
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:			LOG_INF("Warning: current_fps %d fps is not support, so use cap1's setting: %d fps!\n",
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:	LOG_INF("E cur fps: %d\n", imgsensor.current_fps);
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:		LOG_INF("Error ScenarioId setting");
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:	LOG_INF("framerate = %d\n ", framerate);
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:	LOG_INF("enable = %d, framerate = %d \n", enable, framerate);
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:	LOG_INF("scenario_id = %d, framerate = %d\n", scenario_id,
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:		LOG_INF("error scenario_id = %d, we use preview scenario \n",
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:	LOG_INF("scenario_id = %d *framerate = %d\n", scenario_id,
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:	LOG_INF("enable: %d\n", enable);
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:	LOG_INF("streaming_enable(0=Sw Standby,1=streaming): %d\n",
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:	LOG_INF("feature_id = %d\n", feature_id);
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:		LOG_INF("feature_Control imgsensor.pclk = %d,imgsensor.current_fps = %d\n",
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:		LOG_INF("current fps :%d\n", (UINT32)*feature_data);
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:		LOG_INF("ihdr enable :%d\n", (BOOL)*feature_data);
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:		LOG_INF("SENSOR_FEATURE_GET_CROP_INFO scenarioId:%d\n",
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:		LOG_INF("SENSOR_SET_SENSOR_IHDR LE=%d, SE=%d, Gain=%d\n",
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:		LOG_INF("SENSOR_FEATURE_SET_SHUTTER_FRAME_TIME shutter :%d framelen :%d\n",
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:		LOG_INF("SENSOR_FEATURE_SET_STREAMING_SUSPEND\n");
imgsensor/src/common/v1/sp250a_mipi_raw/sp250amipi_Sensor.c:		LOG_INF("SENSOR_FEATURE_SET_STREAMING_RESUME, shutter:%llu\n",
imgsensor/src/common/v1/hynix_hi1337_ii/hynix_hi1337_ii_Sensor.c:/*#define LOG_INF(format, args...)    \
imgsensor/src/common/v1/hynix_hi1337_ii/hynix_hi1337_ii_Sensor.c:#define LOG_INF(format, args...)
imgsensor/src/common/v1/hynix_hi1337_ii/hynix_hi1337_ii_Sensor.c:	LOG_INF("dummyline = %d, dummypixels = %d\n",
imgsensor/src/common/v1/hynix_hi1337_ii/hynix_hi1337_ii_Sensor.c:    LOG_INF("shutter = %d, imgsensor.frame_length = %d, imgsensor.min_frame_length = %d\n",
imgsensor/src/common/v1/hynix_hi1337_ii/hynix_hi1337_ii_Sensor.c:    LOG_INF("frame_length = %d , shutter = %d \n", imgsensor.frame_length, shutter);
imgsensor/src/common/v1/hynix_hi1337_ii/hynix_hi1337_ii_Sensor.c:    LOG_INF("frame = %d, line = %d\n", frame_le, line_le);
imgsensor/src/common/v1/hynix_hi1337_ii/hynix_hi1337_ii_Sensor.c:	LOG_INF("set_shutter");
imgsensor/src/common/v1/hynix_hi1337_ii/hynix_hi1337_ii_Sensor.c:	LOG_INF("Exit! shutter =%d, framelength =%d/%d, dummy_line=%d, auto_extend=%d\n",
imgsensor/src/common/v1/hynix_hi1337_ii/hynix_hi1337_ii_Sensor.c:        LOG_INF("Error gain setting");
imgsensor/src/common/v1/hynix_hi1337_ii/hynix_hi1337_ii_Sensor.c:    LOG_INF("gain = %d , reg_gain = 0x%x\n ", gain, reg_gain);
imgsensor/src/common/v1/hynix_hi1337_ii/hynix_hi1337_ii_Sensor.c:	LOG_INF("le:0x%x, se:0x%x, gain:0x%x\n", le, se, gain);
imgsensor/src/common/v1/hynix_hi1337_ii/hynix_hi1337_ii_Sensor.c:	LOG_INF("image_mirror = %d", image_mirror);
imgsensor/src/common/v1/hynix_hi1337_ii/hynix_hi1337_ii_Sensor.c:		LOG_INF("Error image_mirror setting");
imgsensor/src/common/v1/hynix_hi1337_ii/hynix_hi1337_ii_Sensor.c:			LOG_INF("i2c write id : 0x%x, sensor id: 0x%x\n",
imgsensor/src/common/v1/hynix_hi1337_ii/hynix_hi1337_ii_Sensor.c:		LOG_INF("Read id fail,sensor id: 0x%x\n", *sensor_id);
imgsensor/src/common/v1/hynix_hi1337_ii/hynix_hi1337_ii_Sensor.c:	LOG_INF("[open]: PLATFORM:MT6737,MIPI 24LANE\n");
imgsensor/src/common/v1/hynix_hi1337_ii/hynix_hi1337_ii_Sensor.c:	LOG_INF("preview 1296*972@30fps,360Mbps/lane;"
imgsensor/src/common/v1/hynix_hi1337_ii/hynix_hi1337_ii_Sensor.c:				LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n",
imgsensor/src/common/v1/hynix_hi1337_ii/hynix_hi1337_ii_Sensor.c:		LOG_INF("open sensor id fail: 0x%x\n", sensor_id);
imgsensor/src/common/v1/hynix_hi1337_ii/hynix_hi1337_ii_Sensor.c:	LOG_INF("Caputre fps:%d\n", imgsensor.current_fps);
imgsensor/src/common/v1/hynix_hi1337_ii/hynix_hi1337_ii_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/hynix_hi1337_ii/hynix_hi1337_ii_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/hynix_hi1337_ii/hynix_hi1337_ii_Sensor.c:		LOG_INF("[odin]preview\n");
imgsensor/src/common/v1/hynix_hi1337_ii/hynix_hi1337_ii_Sensor.c:		LOG_INF("[odin]capture\n");
imgsensor/src/common/v1/hynix_hi1337_ii/hynix_hi1337_ii_Sensor.c:		LOG_INF("[odin]video preview\n");
imgsensor/src/common/v1/hynix_hi1337_ii/hynix_hi1337_ii_Sensor.c:		LOG_INF("[odin]default mode\n");
imgsensor/src/common/v1/hynix_hi1337_ii/hynix_hi1337_ii_Sensor.c:	LOG_INF("framerate = %d ", framerate);
imgsensor/src/common/v1/hynix_hi1337_ii/hynix_hi1337_ii_Sensor.c:	LOG_INF("enable = %d, framerate = %d ", enable, framerate);
imgsensor/src/common/v1/hynix_hi1337_ii/hynix_hi1337_ii_Sensor.c:	LOG_INF("scenario_id = %d, framerate = %d\n",
imgsensor/src/common/v1/hynix_hi1337_ii/hynix_hi1337_ii_Sensor.c:			LOG_INF("fps %d fps not support,use cap: %d fps!\n",
imgsensor/src/common/v1/hynix_hi1337_ii/hynix_hi1337_ii_Sensor.c:	    LOG_INF("error scenario_id = %d, we use preview scenario\n",
imgsensor/src/common/v1/hynix_hi1337_ii/hynix_hi1337_ii_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/hynix_hi1337_ii/hynix_hi1337_ii_Sensor.c:	LOG_INF("set_test_pattern_mode enable: %d", enable);
imgsensor/src/common/v1/hynix_hi1337_ii/hynix_hi1337_ii_Sensor.c:	LOG_INF("feature_id = %d\n", feature_id);
imgsensor/src/common/v1/hynix_hi1337_ii/hynix_hi1337_ii_Sensor.c:	    //LOG_INF("current fps :%d\n", (UINT32)*feature_data);
imgsensor/src/common/v1/hynix_hi1337_ii/hynix_hi1337_ii_Sensor.c:	    LOG_INF("ihdr enable :%d\n", (UINT8)*feature_data_32);
imgsensor/src/common/v1/hynix_hi1337_ii/hynix_hi1337_ii_Sensor.c:	    LOG_INF("SENSOR_FEATURE_GET_CROP_INFO scenarioId:%d\n",
imgsensor/src/common/v1/hynix_hi1337_ii/hynix_hi1337_ii_Sensor.c:	    LOG_INF("SENSOR_SET_SENSOR_IHDR LE=%d, SE=%d, Gain=%d\n",
imgsensor/src/common/v1/hynix_hi1337_ii/hynix_hi1337_ii_Sensor.c:                    LOG_INF("SENSOR_FEATURE_GET_VC_INFO %d\n", (UINT16)*feature_data);
imgsensor/src/common/v1/hynix_hi1337_ii/hynix_hi1337_ii_Sensor.c:                    LOG_INF("odin GET_PDAF_DATA EEPROM\n");
imgsensor/src/common/v1/hynix_hi1337_ii/hynix_hi1337_ii_Sensor.c:	        LOG_INF("READ PDCAL DATA\n");
imgsensor/src/common/v1/hynix_hi1337_ii/hynix_hi1337_ii_Sensor.c:		LOG_INF("SENSOR_FEATURE_GET_SENSOR_PDAF_CAPACITY scenarioId:%lld\n", *feature_data);
imgsensor/src/common/v1/hynix_hi1337_ii/hynix_hi1337_ii_Sensor.c:		LOG_INF("SENSOR_FEATURE_GET_SENSOR_PDAF_CAPACITY scenarioId:%lld\n", *feature_data);
imgsensor/src/common/v1/hynix_hi1337_ii/hynix_hi1337_ii_Sensor.c:	        	LOG_INF("[odin] pdaf mode : %d \n", imgsensor.pdaf_mode);
imgsensor/src/common/v1/ov13855_mipi_raw/ov13855mipiraw_Sensor.c:#define LOG_INF(format, args...)    \
imgsensor/src/common/v1/ov13855_mipi_raw/ov13855mipiraw_Sensor.c:	LOG_INF("shutter =%d, framelength =%d, realtime_fps =%d\n",
imgsensor/src/common/v1/ov13855_mipi_raw/ov13855mipiraw_Sensor.c:	LOG_INF("gain = %d , reg_gain = 0x%x\n ", gain, reg_gain);
imgsensor/src/common/v1/ov13855_mipi_raw/ov13855mipiraw_Sensor.c:	LOG_INF("sensor_init MULTI_WRITE\n");
imgsensor/src/common/v1/ov13855_mipi_raw/ov13855mipiraw_Sensor.c:	LOG_INF("sensor_init\n");
imgsensor/src/common/v1/ov13855_mipi_raw/ov13855mipiraw_Sensor.c:	LOG_INF("preview_setting RES_2112x1568_30fps\n");
imgsensor/src/common/v1/ov13855_mipi_raw/ov13855mipiraw_Sensor.c:	LOG_INF("capture 4224x3136_zsl_30fps currefps = %d\n",
imgsensor/src/common/v1/ov13855_mipi_raw/ov13855mipiraw_Sensor.c:	LOG_INF("normal_video_setting RES_4224x3136_zsl_30fps\n");
imgsensor/src/common/v1/ov13855_mipi_raw/ov13855mipiraw_Sensor.c:	LOG_INF("hs_video_setting RES_640x480_120fps\n");
imgsensor/src/common/v1/ov13855_mipi_raw/ov13855mipiraw_Sensor.c:	LOG_INF("slim_video_setting\n");
imgsensor/src/common/v1/ov13855_mipi_raw/ov13855mipiraw_Sensor.c:		LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n",
imgsensor/src/common/v1/ov13855_mipi_raw/ov13855mipiraw_Sensor.c:		LOG_INF("get_imgsensor_id: 0x%x fail\n", *sensor_id);
imgsensor/src/common/v1/ov13855_mipi_raw/ov13855mipiraw_Sensor.c:		LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n",
imgsensor/src/common/v1/ov13855_mipi_raw/ov13855mipiraw_Sensor.c:		LOG_INF("Open sensor id: 0x%x fail\n", sensor_id);
imgsensor/src/common/v1/ov13855_mipi_raw/ov13855mipiraw_Sensor.c:		LOG_INF("current_fps %d fps is not support,use cap1: %d fps!\n",
imgsensor/src/common/v1/ov13855_mipi_raw/ov13855mipiraw_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/ov13855_mipi_raw/ov13855mipiraw_Sensor.c:		LOG_INF("Error ScenarioId setting");
imgsensor/src/common/v1/ov13855_mipi_raw/ov13855mipiraw_Sensor.c:	LOG_INF("enable = %d, framerate = %d\n",
imgsensor/src/common/v1/ov13855_mipi_raw/ov13855mipiraw_Sensor.c:	LOG_INF("scenario_id = %d, framerate = %d\n", scenario_id, framerate);
imgsensor/src/common/v1/ov13855_mipi_raw/ov13855mipiraw_Sensor.c:	LOG_INF("[3058]scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/ov13855_mipi_raw/ov13855mipiraw_Sensor.c:		//LOG_INF("Temperature too high: %d\n",
imgsensor/src/common/v1/ov13855_mipi_raw/ov13855mipiraw_Sensor.c:		//LOG_INF("Temperature too low: %d\n",
imgsensor/src/common/v1/ov13855_mipi_raw/ov13855mipiraw_Sensor.c:	LOG_INF("streaming_enable(0=Sw Standby,1=streaming): %d\n", enable);
imgsensor/src/common/v1/ov13855_mipi_raw/ov13855mipiraw_Sensor.c:		LOG_INF("feature_id = %d\n", feature_id);
imgsensor/src/common/v1/ov13855_mipi_raw/ov13855mipiraw_Sensor.c:		LOG_INF("current fps :%d\n", imgsensor.current_fps);
imgsensor/src/common/v1/ov13855_mipi_raw/ov13855mipiraw_Sensor.c:	    LOG_INF("GET_CROP_INFO scenarioId:%d\n",
imgsensor/src/common/v1/ov13855_mipi_raw/ov13855mipiraw_Sensor.c:	    LOG_INF("SENSOR_SET_SENSOR_IHDR LE=%d, SE=%d, Gain=%d\n",
imgsensor/src/common/v1/hi259_mipi_raw/hi259mipiraw_Sensor.c:#define LOG_INF(format, args...)    \
imgsensor/src/common/v1/hi259_mipi_raw/hi259mipiraw_Sensor.c:			LOG_INF("burst write\n");
imgsensor/src/common/v1/hi259_mipi_raw/hi259mipiraw_Sensor.c:	LOG_INF("dummyline = %d, dummypixels = %d\n",
imgsensor/src/common/v1/hi259_mipi_raw/hi259mipiraw_Sensor.c:	LOG_INF("shutter = %d, imgsensor.frame_length = %d, imgsensor.min_frame_length = %d\n",
imgsensor/src/common/v1/hi259_mipi_raw/hi259mipiraw_Sensor.c:	LOG_INF("frame_length = %d , shutter = %d \n", imgsensor.frame_length, shutter);
imgsensor/src/common/v1/hi259_mipi_raw/hi259mipiraw_Sensor.c:	LOG_INF("set_shutter");
imgsensor/src/common/v1/hi259_mipi_raw/hi259mipiraw_Sensor.c:        LOG_INF("Error gain setting");
imgsensor/src/common/v1/hi259_mipi_raw/hi259mipiraw_Sensor.c:    LOG_INF("gain = %d , reg_gain = 0x%x\n ", gain, reg_gain);
imgsensor/src/common/v1/hi259_mipi_raw/hi259mipiraw_Sensor.c:	LOG_INF("image_mirror = %d", image_mirror);
imgsensor/src/common/v1/hi259_mipi_raw/hi259mipiraw_Sensor.c:		LOG_INF("Error image_mirror setting");
imgsensor/src/common/v1/hi259_mipi_raw/hi259mipiraw_Sensor.c:			LOG_INF("i2c write id : 0x%x, sensor id: 0x%x\n", imgsensor.i2c_write_id, *sensor_id);
imgsensor/src/common/v1/hi259_mipi_raw/hi259mipiraw_Sensor.c:			LOG_INF("Read sensor id fail, write id: 0x%x, id: 0x%x\n", imgsensor.i2c_write_id, *sensor_id);
imgsensor/src/common/v1/hi259_mipi_raw/hi259mipiraw_Sensor.c:		LOG_INF("Read id fail,sensor id: 0x%x\n", *sensor_id);
imgsensor/src/common/v1/hi259_mipi_raw/hi259mipiraw_Sensor.c:	LOG_INF("[open]: PLATFORM:MT6765,MIPI 1LANE\n");
imgsensor/src/common/v1/hi259_mipi_raw/hi259mipiraw_Sensor.c:				LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n", imgsensor.i2c_write_id, sensor_id);
imgsensor/src/common/v1/hi259_mipi_raw/hi259mipiraw_Sensor.c:			LOG_INF("Read sensor id fail, write id: 0x%x, id: 0x%x\n", imgsensor.i2c_write_id, sensor_id);
imgsensor/src/common/v1/hi259_mipi_raw/hi259mipiraw_Sensor.c:		LOG_INF("open sensor id fail: 0x%x\n", sensor_id);
imgsensor/src/common/v1/hi259_mipi_raw/hi259mipiraw_Sensor.c:	LOG_INF("E");
imgsensor/src/common/v1/hi259_mipi_raw/hi259mipiraw_Sensor.c:	LOG_INF("Caputre fps:%d\n", imgsensor.current_fps);
imgsensor/src/common/v1/hi259_mipi_raw/hi259mipiraw_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/hi259_mipi_raw/hi259mipiraw_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/hi259_mipi_raw/hi259mipiraw_Sensor.c:		LOG_INF("[odin]preview\n");
imgsensor/src/common/v1/hi259_mipi_raw/hi259mipiraw_Sensor.c:		LOG_INF("[odin]capture\n");
imgsensor/src/common/v1/hi259_mipi_raw/hi259mipiraw_Sensor.c:		LOG_INF("[odin]video preview\n");
imgsensor/src/common/v1/hi259_mipi_raw/hi259mipiraw_Sensor.c:		LOG_INF("[odin]default mode\n");
imgsensor/src/common/v1/hi259_mipi_raw/hi259mipiraw_Sensor.c:	LOG_INF("framerate = %d ", framerate);
imgsensor/src/common/v1/hi259_mipi_raw/hi259mipiraw_Sensor.c:	LOG_INF("enable = %d, framerate = %d ", enable, framerate);
imgsensor/src/common/v1/hi259_mipi_raw/hi259mipiraw_Sensor.c:	LOG_INF("scenario_id = %d, framerate = %d\n", scenario_id, framerate);
imgsensor/src/common/v1/hi259_mipi_raw/hi259mipiraw_Sensor.c:			LOG_INF("fps %d fps not support,use cap: %d fps!\n",
imgsensor/src/common/v1/hi259_mipi_raw/hi259mipiraw_Sensor.c:	    LOG_INF("error scenario_id = %d, we use preview scenario\n",
imgsensor/src/common/v1/hi259_mipi_raw/hi259mipiraw_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/hi259_mipi_raw/hi259mipiraw_Sensor.c:	LOG_INF("set_test_pattern_mode enable: %d", enable);
imgsensor/src/common/v1/hi259_mipi_raw/hi259mipiraw_Sensor.c:	LOG_INF("feature_id = %d\n", feature_id);
imgsensor/src/common/v1/hi259_mipi_raw/hi259mipiraw_Sensor.c:	    LOG_INF("current fps :%d\n", (UINT32)*feature_data);
imgsensor/src/common/v1/hi259_mipi_raw/hi259mipiraw_Sensor.c:	    LOG_INF("ihdr enable :%d\n", (BOOL)*feature_data);
imgsensor/src/common/v1/hi259_mipi_raw/hi259mipiraw_Sensor.c:	    LOG_INF("SENSOR_FEATURE_GET_CROP_INFO scenarioId:%d\n",
imgsensor/src/common/v1/hi259_mipi_raw/hi259mipiraw_Sensor.c:	    LOG_INF("SENSOR_SET_SENSOR_IHDR LE=%d, SE=%d, Gain=%d\n",
imgsensor/src/common/v1/hi259_mipi_raw/hi259mipiraw_Sensor.c:				LOG_INF("SENSOR_FEATURE_GET_VC_INFO %d\n", (UINT16)*feature_data);
imgsensor/src/common/v1/hi259_mipi_raw/hi259mipiraw_Sensor.c:						LOG_INF("SENSOR_FEATURE_GET_VC_INFO CAPTURE_JPEG\n");
imgsensor/src/common/v1/hi259_mipi_raw/hi259mipiraw_Sensor.c:						LOG_INF("SENSOR_FEATURE_GET_VC_INFO VIDEO PREVIEW\n");
imgsensor/src/common/v1/hi259_mipi_raw/hi259mipiraw_Sensor.c:						LOG_INF("SENSOR_FEATURE_GET_VC_INFO DEFAULT_PREVIEW\n");
imgsensor/src/common/v1/hi259_mipi_raw/hi259mipiraw_Sensor.c:		LOG_INF("odin GET_PDAF_DATA EEPROM\n");
imgsensor/src/common/v1/hi259_mipi_raw/hi259mipiraw_Sensor.c:	        LOG_INF("READ PDCAL DATA\n");
imgsensor/src/common/v1/hi259_mipi_raw/hi259mipiraw_Sensor.c:		LOG_INF("SENSOR_FEATURE_GET_SENSOR_PDAF_CAPACITY scenarioId:%lld\n", *feature_data);
imgsensor/src/common/v1/hi259_mipi_raw/hi259mipiraw_Sensor.c:		LOG_INF("SENSOR_FEATURE_GET_SENSOR_PDAF_CAPACITY scenarioId:%lld\n", *feature_data);
imgsensor/src/common/v1/hi259_mipi_raw/hi259mipiraw_Sensor.c:	        	LOG_INF("[odin] pdaf mode : %d \n", imgsensor.pdaf_mode);
imgsensor/src/common/v1/hynix_hi1337_iii/hynix_hi1337_iii_Sensor.c:/*#define LOG_INF(format, args...)    \
imgsensor/src/common/v1/hynix_hi1337_iii/hynix_hi1337_iii_Sensor.c:#define LOG_INF(format, args...)
imgsensor/src/common/v1/hynix_hi1337_iii/hynix_hi1337_iii_Sensor.c:	LOG_INF("dummyline = %d, dummypixels = %d\n",
imgsensor/src/common/v1/hynix_hi1337_iii/hynix_hi1337_iii_Sensor.c:    LOG_INF("shutter = %d, imgsensor.frame_length = %d, imgsensor.min_frame_length = %d\n",
imgsensor/src/common/v1/hynix_hi1337_iii/hynix_hi1337_iii_Sensor.c:    LOG_INF("frame_length = %d , shutter = %d \n", imgsensor.frame_length, shutter);
imgsensor/src/common/v1/hynix_hi1337_iii/hynix_hi1337_iii_Sensor.c:    LOG_INF("frame = %d, line = %d\n", frame_le, line_le);
imgsensor/src/common/v1/hynix_hi1337_iii/hynix_hi1337_iii_Sensor.c:	LOG_INF("set_shutter");
imgsensor/src/common/v1/hynix_hi1337_iii/hynix_hi1337_iii_Sensor.c:	LOG_INF("Exit! shutter =%d, framelength =%d/%d, dummy_line=%d, auto_extend=%d\n",
imgsensor/src/common/v1/hynix_hi1337_iii/hynix_hi1337_iii_Sensor.c:        LOG_INF("Error gain setting");
imgsensor/src/common/v1/hynix_hi1337_iii/hynix_hi1337_iii_Sensor.c:    LOG_INF("gain = %d , reg_gain = 0x%x\n ", gain, reg_gain);
imgsensor/src/common/v1/hynix_hi1337_iii/hynix_hi1337_iii_Sensor.c:	LOG_INF("le:0x%x, se:0x%x, gain:0x%x\n", le, se, gain);
imgsensor/src/common/v1/hynix_hi1337_iii/hynix_hi1337_iii_Sensor.c:	LOG_INF("image_mirror = %d", image_mirror);
imgsensor/src/common/v1/hynix_hi1337_iii/hynix_hi1337_iii_Sensor.c:		LOG_INF("Error image_mirror setting");
imgsensor/src/common/v1/hynix_hi1337_iii/hynix_hi1337_iii_Sensor.c:			LOG_INF("i2c write id : 0x%x, sensor id: 0x%x\n",
imgsensor/src/common/v1/hynix_hi1337_iii/hynix_hi1337_iii_Sensor.c:		LOG_INF("Read id fail,sensor id: 0x%x\n", *sensor_id);
imgsensor/src/common/v1/hynix_hi1337_iii/hynix_hi1337_iii_Sensor.c:	LOG_INF("[open]: PLATFORM:MT6737,MIPI 24LANE\n");
imgsensor/src/common/v1/hynix_hi1337_iii/hynix_hi1337_iii_Sensor.c:	LOG_INF("preview 1296*972@30fps,360Mbps/lane;"
imgsensor/src/common/v1/hynix_hi1337_iii/hynix_hi1337_iii_Sensor.c:				LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n",
imgsensor/src/common/v1/hynix_hi1337_iii/hynix_hi1337_iii_Sensor.c:		LOG_INF("open sensor id fail: 0x%x\n", sensor_id);
imgsensor/src/common/v1/hynix_hi1337_iii/hynix_hi1337_iii_Sensor.c:	LOG_INF("Caputre fps:%d\n", imgsensor.current_fps);
imgsensor/src/common/v1/hynix_hi1337_iii/hynix_hi1337_iii_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/hynix_hi1337_iii/hynix_hi1337_iii_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/hynix_hi1337_iii/hynix_hi1337_iii_Sensor.c:		LOG_INF("[odin]preview\n");
imgsensor/src/common/v1/hynix_hi1337_iii/hynix_hi1337_iii_Sensor.c:		LOG_INF("[odin]capture\n");
imgsensor/src/common/v1/hynix_hi1337_iii/hynix_hi1337_iii_Sensor.c:		LOG_INF("[odin]video preview\n");
imgsensor/src/common/v1/hynix_hi1337_iii/hynix_hi1337_iii_Sensor.c:		LOG_INF("[odin]default mode\n");
imgsensor/src/common/v1/hynix_hi1337_iii/hynix_hi1337_iii_Sensor.c:	LOG_INF("framerate = %d ", framerate);
imgsensor/src/common/v1/hynix_hi1337_iii/hynix_hi1337_iii_Sensor.c:	LOG_INF("enable = %d, framerate = %d ", enable, framerate);
imgsensor/src/common/v1/hynix_hi1337_iii/hynix_hi1337_iii_Sensor.c:	LOG_INF("scenario_id = %d, framerate = %d\n",
imgsensor/src/common/v1/hynix_hi1337_iii/hynix_hi1337_iii_Sensor.c:			LOG_INF("fps %d fps not support,use cap: %d fps!\n",
imgsensor/src/common/v1/hynix_hi1337_iii/hynix_hi1337_iii_Sensor.c:	    LOG_INF("error scenario_id = %d, we use preview scenario\n",
imgsensor/src/common/v1/hynix_hi1337_iii/hynix_hi1337_iii_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/hynix_hi1337_iii/hynix_hi1337_iii_Sensor.c:	LOG_INF("set_test_pattern_mode enable: %d", enable);
imgsensor/src/common/v1/hynix_hi1337_iii/hynix_hi1337_iii_Sensor.c:	LOG_INF("feature_id = %d\n", feature_id);
imgsensor/src/common/v1/hynix_hi1337_iii/hynix_hi1337_iii_Sensor.c:	    //LOG_INF("current fps :%d\n", (UINT32)*feature_data);
imgsensor/src/common/v1/hynix_hi1337_iii/hynix_hi1337_iii_Sensor.c:	    LOG_INF("ihdr enable :%d\n", (UINT8)*feature_data_32);
imgsensor/src/common/v1/hynix_hi1337_iii/hynix_hi1337_iii_Sensor.c:	    LOG_INF("SENSOR_FEATURE_GET_CROP_INFO scenarioId:%d\n",
imgsensor/src/common/v1/hynix_hi1337_iii/hynix_hi1337_iii_Sensor.c:	    LOG_INF("SENSOR_SET_SENSOR_IHDR LE=%d, SE=%d, Gain=%d\n",
imgsensor/src/common/v1/hynix_hi1337_iii/hynix_hi1337_iii_Sensor.c:                    LOG_INF("SENSOR_FEATURE_GET_VC_INFO %d\n", (UINT16)*feature_data);
imgsensor/src/common/v1/hynix_hi1337_iii/hynix_hi1337_iii_Sensor.c:                    LOG_INF("odin GET_PDAF_DATA EEPROM\n");
imgsensor/src/common/v1/hynix_hi1337_iii/hynix_hi1337_iii_Sensor.c:	        LOG_INF("READ PDCAL DATA\n");
imgsensor/src/common/v1/hynix_hi1337_iii/hynix_hi1337_iii_Sensor.c:		LOG_INF("SENSOR_FEATURE_GET_SENSOR_PDAF_CAPACITY scenarioId:%lld\n", *feature_data);
imgsensor/src/common/v1/hynix_hi1337_iii/hynix_hi1337_iii_Sensor.c:		LOG_INF("SENSOR_FEATURE_GET_SENSOR_PDAF_CAPACITY scenarioId:%lld\n", *feature_data);
imgsensor/src/common/v1/hynix_hi1337_iii/hynix_hi1337_iii_Sensor.c:	        	LOG_INF("[odin] pdaf mode : %d \n", imgsensor.pdaf_mode);
imgsensor/src/common/v1/ov_ov02b_iiii/ov_ov02b_iiii_Sensor.c:/*#define LOG_INF(format, args...)    \
imgsensor/src/common/v1/ov_ov02b_iiii/ov_ov02b_iiii_Sensor.c:#define LOG_INF(format, args...)
imgsensor/src/common/v1/ov_ov02b_iiii/ov_ov02b_iiii_Sensor.c:	LOG_INF("imgsensor.frame_length = %d\n", imgsensor.frame_length);
imgsensor/src/common/v1/ov_ov02b_iiii/ov_ov02b_iiii_Sensor.c:    //LOG_INF("shutter =%d, framelength =%d\n", shutter,imgsensor.frame_length);
imgsensor/src/common/v1/ov_ov02b_iiii/ov_ov02b_iiii_Sensor.c:	//LOG_INF("shutter =%d, framelength =%d, realtime_fps =%d\n",
imgsensor/src/common/v1/ov_ov02b_iiii/ov_ov02b_iiii_Sensor.c:            LOG_INF("OV02BMIPI_SetGain = 16");
imgsensor/src/common/v1/ov_ov02b_iiii/ov_ov02b_iiii_Sensor.c:            LOG_INF("OV02BMIPI_SetGain = 160");
imgsensor/src/common/v1/ov_ov02b_iiii/ov_ov02b_iiii_Sensor.c:            LOG_INF("OV02BMIPI_SetGain = %d",iReg);
imgsensor/src/common/v1/ov_ov02b_iiii/ov_ov02b_iiii_Sensor.c:        LOG_INF("error gain setting");
imgsensor/src/common/v1/ov_ov02b_iiii/ov_ov02b_iiii_Sensor.c:	LOG_INF("le: 0x%x, se: 0x%x, gain: 0x%x\n", le, se, gain);
imgsensor/src/common/v1/ov_ov02b_iiii/ov_ov02b_iiii_Sensor.c:            LOG_INF("i2c write id : 0x%x, sensor id: 0x%x\n",
imgsensor/src/common/v1/ov_ov02b_iiii/ov_ov02b_iiii_Sensor.c:        LOG_INF("Read id fail,sensor id: 0x%x\n", *sensor_id);
imgsensor/src/common/v1/ov_ov02b_iiii/ov_ov02b_iiii_Sensor.c:                LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n", imgsensor.i2c_write_id, sensor_id);
imgsensor/src/common/v1/ov_ov02b_iiii/ov_ov02b_iiii_Sensor.c:	LOG_INF("E\n");
imgsensor/src/common/v1/ov_ov02b_iiii/ov_ov02b_iiii_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/ov_ov02b_iiii/ov_ov02b_iiii_Sensor.c:    LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/ov_ov02b_iiii/ov_ov02b_iiii_Sensor.c:        //LOG_INF("[odin]default mode\n");
imgsensor/src/common/v1/ov_ov02b_iiii/ov_ov02b_iiii_Sensor.c:	LOG_INF("framerate = %d\n ", framerate);
imgsensor/src/common/v1/ov_ov02b_iiii/ov_ov02b_iiii_Sensor.c:	LOG_INF("enable = %d, framerate = %d\n", enable, framerate);
imgsensor/src/common/v1/ov_ov02b_iiii/ov_ov02b_iiii_Sensor.c://	LOG_INF("scenario_id = %d, framerate = %d\n", scenario_id, framerate);
imgsensor/src/common/v1/ov_ov02b_iiii/ov_ov02b_iiii_Sensor.c:				LOG_INF("Warning: current_fps %d fps is not support, so use cap's setting: %d fps!\n",
imgsensor/src/common/v1/ov_ov02b_iiii/ov_ov02b_iiii_Sensor.c:        LOG_INF("Warning: current_fps %d fps is not support, so use cap's setting: %d fps!\n",framerate,imgsensor_info.custom1.max_framerate/10);
imgsensor/src/common/v1/ov_ov02b_iiii/ov_ov02b_iiii_Sensor.c:		LOG_INF("error scenario_id = %d, we use preview scenario\n", scenario_id);
imgsensor/src/common/v1/ov_ov02b_iiii/ov_ov02b_iiii_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/ov_ov02b_iiii/ov_ov02b_iiii_Sensor.c:	LOG_INF("enable: %d\n", enable);
imgsensor/src/common/v1/ov_ov02b_iiii/ov_ov02b_iiii_Sensor.c:	//LOG_INF("streaming_control enable =%d\n", enable);
imgsensor/src/common/v1/ov_ov02b_iiii/ov_ov02b_iiii_Sensor.c:	LOG_INF("feature_id = %d\n", feature_id);
imgsensor/src/common/v1/ov_ov02b_iiii/ov_ov02b_iiii_Sensor.c:		LOG_INF("adb_i2c_read 0x%x = 0x%x\n", sensor_reg_data->RegAddr, sensor_reg_data->RegData);
imgsensor/src/common/v1/ov_ov02b_iiii/ov_ov02b_iiii_Sensor.c:	    LOG_INF("current fps :%d\n", (UINT32)*feature_data);
imgsensor/src/common/v1/ov_ov02b_iiii/ov_ov02b_iiii_Sensor.c:	    LOG_INF("ihdr enable :%d\n", (BOOL)*feature_data);
imgsensor/src/common/v1/ov_ov02b_iiii/ov_ov02b_iiii_Sensor.c:		LOG_INF("SENSOR_FEATURE_GET_CROP_INFO scenarioId:%d\n", (UINT32)*feature_data);
imgsensor/src/common/v1/ov_ov02b_iiii/ov_ov02b_iiii_Sensor.c:		LOG_INF("SENSOR_SET_SENSOR_IHDR LE = %d, SE = %d, Gain = %d\n",
imgsensor/src/common/v1/imx230_mipi_raw/imx230mipi_Sensor.c: * #define LOG_INF(format, args...) pr_debug(\
imgsensor/src/common/v1/hynix_hi259_ii/hynix_hi259_ii_Sensor.c:/*#define LOG_INF(format, args...)    \
imgsensor/src/common/v1/hynix_hi259_ii/hynix_hi259_ii_Sensor.c:#define LOG_INF(format, args...)
imgsensor/src/common/v1/hynix_hi259_ii/hynix_hi259_ii_Sensor.c:			LOG_INF("burst write\n");
imgsensor/src/common/v1/hynix_hi259_ii/hynix_hi259_ii_Sensor.c:	LOG_INF("dummyline = %d, dummypixels = %d\n",
imgsensor/src/common/v1/hynix_hi259_ii/hynix_hi259_ii_Sensor.c:	LOG_INF("shutter = %d, imgsensor.frame_length = %d, imgsensor.min_frame_length = %d\n",
imgsensor/src/common/v1/hynix_hi259_ii/hynix_hi259_ii_Sensor.c:	LOG_INF("frame_length = %d , shutter = %d \n", imgsensor.frame_length, shutter);
imgsensor/src/common/v1/hynix_hi259_ii/hynix_hi259_ii_Sensor.c:        LOG_INF("Error gain setting");
imgsensor/src/common/v1/hynix_hi259_ii/hynix_hi259_ii_Sensor.c:    LOG_INF("gain = %d , reg_gain = 0x%x\n ", gain, reg_gain);
imgsensor/src/common/v1/hynix_hi259_ii/hynix_hi259_ii_Sensor.c:			LOG_INF("i2c write id : 0x%x, sensor id: 0x%x\n", imgsensor.i2c_write_id, *sensor_id);
imgsensor/src/common/v1/hynix_hi259_ii/hynix_hi259_ii_Sensor.c:			LOG_INF("Read sensor id fail, write id: 0x%x, id: 0x%x\n", imgsensor.i2c_write_id, *sensor_id);
imgsensor/src/common/v1/hynix_hi259_ii/hynix_hi259_ii_Sensor.c:		LOG_INF("Read id fail,sensor id: 0x%x\n", *sensor_id);
imgsensor/src/common/v1/hynix_hi259_ii/hynix_hi259_ii_Sensor.c:	LOG_INF("[open]: PLATFORM:MT6765,MIPI 1LANE\n");
imgsensor/src/common/v1/hynix_hi259_ii/hynix_hi259_ii_Sensor.c:				LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n", imgsensor.i2c_write_id, sensor_id);
imgsensor/src/common/v1/hynix_hi259_ii/hynix_hi259_ii_Sensor.c:			LOG_INF("Read sensor id fail, write id: 0x%x, id: 0x%x\n", imgsensor.i2c_write_id, sensor_id);
imgsensor/src/common/v1/hynix_hi259_ii/hynix_hi259_ii_Sensor.c:		LOG_INF("open sensor id fail: 0x%x\n", sensor_id);
imgsensor/src/common/v1/hynix_hi259_ii/hynix_hi259_ii_Sensor.c:	LOG_INF("Caputre fps:%d\n", imgsensor.current_fps);
imgsensor/src/common/v1/hynix_hi259_ii/hynix_hi259_ii_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/hynix_hi259_ii/hynix_hi259_ii_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/hynix_hi259_ii/hynix_hi259_ii_Sensor.c:		LOG_INF("[odin]preview\n");
imgsensor/src/common/v1/hynix_hi259_ii/hynix_hi259_ii_Sensor.c:		LOG_INF("[odin]capture\n");
imgsensor/src/common/v1/hynix_hi259_ii/hynix_hi259_ii_Sensor.c:		LOG_INF("[odin]video preview\n");
imgsensor/src/common/v1/hynix_hi259_ii/hynix_hi259_ii_Sensor.c:		LOG_INF("[odin]default mode\n");
imgsensor/src/common/v1/hynix_hi259_ii/hynix_hi259_ii_Sensor.c:	LOG_INF("framerate = %d ", framerate);
imgsensor/src/common/v1/hynix_hi259_ii/hynix_hi259_ii_Sensor.c:	LOG_INF("enable = %d, framerate = %d ", enable, framerate);
imgsensor/src/common/v1/hynix_hi259_ii/hynix_hi259_ii_Sensor.c:	LOG_INF("scenario_id = %d, framerate = %d\n", scenario_id, framerate);
imgsensor/src/common/v1/hynix_hi259_ii/hynix_hi259_ii_Sensor.c:			LOG_INF("fps %d fps not support,use cap: %d fps!\n",
imgsensor/src/common/v1/hynix_hi259_ii/hynix_hi259_ii_Sensor.c:	    LOG_INF("error scenario_id = %d, we use preview scenario\n",
imgsensor/src/common/v1/hynix_hi259_ii/hynix_hi259_ii_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/hynix_hi259_ii/hynix_hi259_ii_Sensor.c:	LOG_INF("set_test_pattern_mode enable: %d", enable);
imgsensor/src/common/v1/hynix_hi259_ii/hynix_hi259_ii_Sensor.c:	LOG_INF("feature_id = %d\n", feature_id);
imgsensor/src/common/v1/hynix_hi259_ii/hynix_hi259_ii_Sensor.c:	    LOG_INF("current fps :%d\n", (UINT32)*feature_data);
imgsensor/src/common/v1/hynix_hi259_ii/hynix_hi259_ii_Sensor.c:	    LOG_INF("SENSOR_FEATURE_GET_CROP_INFO scenarioId:%d\n",
imgsensor/src/common/v1/ov02b_mipi_raw/ov02bmipiraw_Sensor.c:#define LOG_INF(format, args...)    \
imgsensor/src/common/v1/ov02b_mipi_raw/ov02bmipiraw_Sensor.c:	LOG_INF("dummyline = %d, dummypixels = %d \n", imgsensor.dummy_line, imgsensor.dummy_pixel);
imgsensor/src/common/v1/ov02b_mipi_raw/ov02bmipiraw_Sensor.c:	LOG_INF("framerate = %d, min framelength should enable = %d\n", framerate,min_framelength_en);
imgsensor/src/common/v1/ov02b_mipi_raw/ov02bmipiraw_Sensor.c:   	 //LOG_INF("shutter =%d, framelength =%d\n", shutter,imgsensor.frame_length);
imgsensor/src/common/v1/ov02b_mipi_raw/ov02bmipiraw_Sensor.c:			LOG_INF("OV02BMIPI_SetGain = 16");
imgsensor/src/common/v1/ov02b_mipi_raw/ov02bmipiraw_Sensor.c:			LOG_INF("OV02BMIPI_SetGain = 160");
imgsensor/src/common/v1/ov02b_mipi_raw/ov02bmipiraw_Sensor.c:			LOG_INF("OV02BMIPI_SetGain = %d",iReg);
imgsensor/src/common/v1/ov02b_mipi_raw/ov02bmipiraw_Sensor.c:		LOG_INF("error gain setting");
imgsensor/src/common/v1/ov02b_mipi_raw/ov02bmipiraw_Sensor.c:	LOG_INF("image_mirror = %d\n", image_mirror);
imgsensor/src/common/v1/ov02b_mipi_raw/ov02bmipiraw_Sensor.c:		LOG_INF("Error image_mirror setting\n");
imgsensor/src/common/v1/ov02b_mipi_raw/ov02bmipiraw_Sensor.c:			LOG_INF("i2c write id : 0x%x, sensor id: 0x%x\n",
imgsensor/src/common/v1/ov02b_mipi_raw/ov02bmipiraw_Sensor.c:		LOG_INF("Read id fail,sensor id: 0x%x\n", *sensor_id);
imgsensor/src/common/v1/ov02b_mipi_raw/ov02bmipiraw_Sensor.c:	LOG_INF("[open]: PLATFORM:MT6737,MIPI 24LANE\n");
imgsensor/src/common/v1/ov02b_mipi_raw/ov02bmipiraw_Sensor.c:	LOG_INF("preview 1296*972@30fps,360Mbps/lane;"
imgsensor/src/common/v1/ov02b_mipi_raw/ov02bmipiraw_Sensor.c:				LOG_INF("i2c write id: 0x%x, sensor id: 0x%x\n", imgsensor.i2c_write_id, sensor_id);
imgsensor/src/common/v1/ov02b_mipi_raw/ov02bmipiraw_Sensor.c:		LOG_INF("open sensor id fail: 0x%x\n", sensor_id);
imgsensor/src/common/v1/ov02b_mipi_raw/ov02bmipiraw_Sensor.c:	LOG_INF("E");
imgsensor/src/common/v1/ov02b_mipi_raw/ov02bmipiraw_Sensor.c:	LOG_INF("Caputre fps:%d\n", imgsensor.current_fps);
imgsensor/src/common/v1/ov02b_mipi_raw/ov02bmipiraw_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/ov02b_mipi_raw/ov02bmipiraw_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/ov02b_mipi_raw/ov02bmipiraw_Sensor.c:		LOG_INF("[odin]default mode\n");
imgsensor/src/common/v1/ov02b_mipi_raw/ov02bmipiraw_Sensor.c:	LOG_INF("framerate = %d ", framerate);
imgsensor/src/common/v1/ov02b_mipi_raw/ov02bmipiraw_Sensor.c:	LOG_INF("enable = %d, framerate = %d ", enable, framerate);
imgsensor/src/common/v1/ov02b_mipi_raw/ov02bmipiraw_Sensor.c:	LOG_INF("scenario_id = %d, framerate = %d\n",
imgsensor/src/common/v1/ov02b_mipi_raw/ov02bmipiraw_Sensor.c:			LOG_INF("fps %d fps not support,use cap: %d fps!\n",
imgsensor/src/common/v1/ov02b_mipi_raw/ov02bmipiraw_Sensor.c:	    LOG_INF("error scenario_id = %d, we use preview scenario\n",
imgsensor/src/common/v1/ov02b_mipi_raw/ov02bmipiraw_Sensor.c:	LOG_INF("scenario_id = %d\n", scenario_id);
imgsensor/src/common/v1/ov02b_mipi_raw/ov02bmipiraw_Sensor.c:	LOG_INF("enable: %d\n", enable);
imgsensor/src/common/v1/ov02b_mipi_raw/ov02bmipiraw_Sensor.c:	LOG_INF("streaming_control enable =%d\n", enable);
imgsensor/src/common/v1/ov02b_mipi_raw/ov02bmipiraw_Sensor.c:	//LOG_INF("shutter =%d, framelength =%d, realtime_fps =%d\n",
imgsensor/src/common/v1/ov02b_mipi_raw/ov02bmipiraw_Sensor.c:	LOG_INF("feature_id = %d\n", feature_id);
imgsensor/src/common/v1/ov02b_mipi_raw/ov02bmipiraw_Sensor.c:	    LOG_INF("current fps :%d\n", (UINT32)*feature_data);
imgsensor/src/common/v1/ov02b_mipi_raw/ov02bmipiraw_Sensor.c:	    LOG_INF("ihdr enable :%d\n", (BOOL)*feature_data);
imgsensor/src/common/v1/ov02b_mipi_raw/ov02bmipiraw_Sensor.c:	    LOG_INF("SENSOR_FEATURE_GET_CROP_INFO scenarioId:%d\n",
imgsensor/src/common/v1/ov02b_mipi_raw/ov02bmipiraw_Sensor.c:	    LOG_INF("SENSOR_SET_SENSOR_IHDR LE=%d, SE=%d, Gain=%d\n",
imgsensor/src/common/v1/s5k2l7_mipi_raw/s5k2l7mipiraw_Sensor.h:#define S5K2L7_GAIN_ANALOG_RATIO_MAX 4
imgsensor/src/common/v1/s5k2l7_mipi_raw/s5k2l7mipiraw_Sensor.h:#define S5K2L7_GAIN_ANALOG_MIN       BASEGAIN
imgsensor/src/common/v1/s5k2l7_mipi_raw/s5k2l7mipiraw_Sensor.h:#define S5K2L7_GAIN_ANALOG_MAX       (0x7F << 1)
imgsensor/src/common/v1/s5k2l7_mipi_raw/s5k2l7mipiraw_Sensor.h:#define S5K2L7_GAIN_RATIO_MAX S5K2L7_GAIN_ANALOG_RATIO_MAX
imgsensor/src/common/v1/s5k2l7_mipi_raw/s5k2l7mipiraw_Sensor.h:#define S5K2L7_GAIN_MIN       S5K2L7_GAIN_ANALOG_MIN
imgsensor/src/common/v1/s5k2l7_mipi_raw/s5k2l7mipiraw_Sensor.h:#define S5K2L7_GAIN_MAX       S5K2L7_GAIN_ANALOG_MAX
imgsensor/src/common/v1/s5k2l7_mipi_raw/s5k2l7mipiraw_Sensor.h:#define S5K2L7_GAIN_LE_SE_RATIO_MAX S5K2L7_GAIN_ANALOG_RATIO_MAX
imgsensor/src/common/v1/s5k2l7_mipi_raw/s5k2l7mipiraw_Sensor.c:	/* LOG_2; */
imgsensor/src/common/v1/s5k2l7_mipi_raw/s5k2l7_pdaf_cal.c:/* #define LOG_1 pr_debug("s5k2l7,MIPI 4LANE\n") */
imgsensor/src/common/v1/s5k2l7_mipi_raw/s5k2l7_pdaf_cal.c:/* #define LOG_2 pr_debug
scp/v01/scp_logger.c:#define PLT_LOG_ENABLE              0x504C5402 /*magic*/
scp/v01/scp_logger.c:#define SCP_LOGGER_ON_BIT       (1<<0)
scp/v01/scp_logger.c:#define SCP_LOGGER_DRAM_ON_BIT  (1<<1)
scp/v01/scp_logger.c:#define SCP_LOGGER_ON_CTRL_BIT    (1<<8)
scp/v01/scp_logger.c:#define SCP_LOGGER_OFF_CTRL_BIT		(0<<8)
scp/v01/scp_logger.c:#define SCP_LOGGER_ON       (SCP_LOGGER_ON_CTRL_BIT | SCP_LOGGER_ON_BIT)
scp/v01/scp_logger.c:#define SCP_LOGGER_OFF      (SCP_LOGGER_OFF_CTRL_BIT | SCP_LOGGER_ON_BIT)
scp/v01/scp_logger.c:#define SCP_LOGGER_DRAM_ON  (SCP_LOGGER_ON_CTRL_BIT | SCP_LOGGER_DRAM_ON_BIT)
scp/v01/scp_logger.c:#define SCP_LOGGER_DRAM_OFF (SCP_LOGGER_OFF_CTRL_BIT | SCP_LOGGER_DRAM_ON_BIT)
scp/v01/scp_logger.c:#define SCP_LOGGER_UT (1)
scp/v01/scp_logger.c:struct SCP_LOG_INFO {
scp/v01/scp_logger.c:#define LAST_LOG_BUF_SIZE  1024
scp/v01/scp_logger.c:static struct SCP_LOG_INFO last_log_info;
scp/v01/scp_logger.c:			ret = scp_ipi_send(IPI_LOGGER_WAKEUP, &enable,
scp/v01/scp_logger.c:#if SCP_LOGGER_UT
scp/v01/scp_logger.c:	struct SCP_LOG_INFO *log_info = (struct SCP_LOG_INFO *)data;
scp/v01/scp_logger.c:		(uint64_t)scp_get_reserve_mem_phys(SCP_A_LOGGER_MEM_ID));
scp/v01/scp_logger.c:	mt_reg_sync_writel(scp_get_reserve_mem_phys(SCP_A_LOGGER_MEM_ID),
scp/v01/scp_logger.c:#if SCP_LOGGER_ENABLE
scp/v01/scp_logger.c:	scp_ipi_id = IPI_LOGGER_INIT_A;
scp/v01/scp_logger.c:	char *crash_message = "****SCP EE LOG DUMP****\n";
scp/v01/scp_logger.c:#if SCP_LOGGER_ENABLE
scp/v01/scp_helper.c:#if SCP_LOGGER_ENABLE
scp/v01/scp_helper.c:#if SCP_LOGGER_ENABLE
scp/v01/scp_helper.c:#if SCP_LOG_FILTER_SUPPORT
scp/v01/scp_helper.c:	ret = scp_ipi_send(IPI_SCP_LOG_FILTER, &filter, len, 0, SCP_A_ID);
scp/v01/scp_helper.c:#endif  /* SCP_LOG_FILTER_SUPPORT */
scp/v01/scp_helper.c:#if SCP_LOGGER_ENABLE
scp/v01/scp_helper.c:#endif  // SCP_LOGGER_ENABLE
scp/v01/scp_helper.c:#if SCP_LOG_FILTER_SUPPORT
scp/v01/scp_helper.c:#endif  /* SCP_LOG_FILTER_SUPPORT */
scp/v01/scp_helper.c:#if SCP_LOGGER_ENABLE
scp/v01/scp_helper.c:	scp_logger_workqueue = create_singlethread_workqueue("SCP_LOG_WQ");
scp/v01/scp_helper.c:	if (scp_logger_init(scp_get_reserve_mem_virt(SCP_A_LOGGER_MEM_ID),
scp/v01/scp_helper.c:			scp_get_reserve_mem_size(SCP_A_LOGGER_MEM_ID)) == -1) {
scp/v01/scp_helper.c:#if SCP_LOGGER_ENABLE
scp/v01/scp_helper.c:#if SCP_LOGGER_ENABLE
scp/mt6765/scp_reservedmem_define.h:		.num = SCP_A_LOGGER_MEM_ID,
scp/mt6765/scp_excep.h:#define AED_LOG_PRINT_SIZE	SZ_16K
scp/mt6765/scp_ipi.h:	IPI_LOGGER_ENABLE,
scp/mt6765/scp_ipi.h:	IPI_LOGGER_WAKEUP,
scp/mt6765/scp_ipi.h:	IPI_LOGGER_INIT_A,
scp/mt6765/scp_ipi.h:	IPI_SCP_LOG_FILTER = 33,
scp/mt6765/scp_feature_define.h:#define SCP_LOGGER_ENABLE		(0)
scp/mt6765/scp_feature_define.h:#define SCP_LOG_FILTER_SUPPORT		(0)
scp/mt6765/scp_helper.h:	SCP_A_LOGGER_MEM_ID,
thermal/common/coolers/mtk_cooler_NR.c:#define CLNR_LOG_TAG	"[Cooler_NR]"
thermal/common/coolers/mtk_cooler_ISP.c:#define CLVR_ISP_LOG_TAG	"[Thermal/CL/ISP]"
thermal/common/coolers/mtk_cooler_VR_FPS.c:#define CLVR_FPS_LOG_TAG	"[Cooler_VR_FPS]"
thermal/common/mtk_thermal_platform.c:#define THRML_LOG(fmt, args...)
thermal/common/mtk_thermal_platform.c:#define THRML_ERROR_LOG(fmt, args...)
thermal/common/mtk_thermal_platform.c:		THRML_LOG("CPU%d Frame:%lu USAGE:%d\n", nCoreIndex,
thermal/common/mtk_thermal_platform.c:			THRML_LOG(
thermal/common/mtk_thermal_platform.c:			THRML_ERROR_LOG("cpu %d over limit %d\n",
thermal/common/mtk_thermal_platform.c:	THRML_LOG("[mtk_thermal_get_gpu_info]\n");
thermal/common/thermal_zones/mtk_ts_cpu.c:		printk_ratelimited(TSCPU_LOG_TAG " %u %u CPU T=%d\n",
thermal/common/thermal_zones/mtk_ts_cpu_noBank.c:		printk_ratelimited(TSCPU_LOG_TAG " %u %u CPU T=%d\n",
thermal/common/ap_thermal_limit.c:	pr_notice(TSCPU_LOG_TAG "E_WF: %s doesn't exist\n", __func__);
thermal/common/ap_thermal_limit.c:	pr_notice(TSCPU_LOG_TAG "E_WF: %s doesn't exist\n", __func__);
thermal/common/ap_thermal_limit.c:	pr_notice(TSCPU_LOG_TAG "E_WF: %s doesn't exist\n", __func__);
thermal/mtk_thermal_monitor.c:#ifdef CONFIG_MTK_MT_LOGGER
thermal/mtk_thermal_monitor.c:#define THRML_STORAGE_LOG(msg_id, func_name, ...) 
thermal/mtk_thermal_monitor.c:#define THRML_STORAGE_LOG(msg_id, func_name, ...)
thermal/mtk_thermal_monitor.c:#define THRML_LOG(fmt, args...)
thermal/mtk_thermal_monitor.c:#define THRML_ERROR_LOG(fmt, args...)
thermal/mtk_thermal_monitor.c:			THRML_ERROR_LOG("%s mkdir /proc/mtkcooler failed\n",
thermal/mtk_thermal_monitor.c:			THRML_ERROR_LOG("%s mkdir /proc/mtktz failed\n",
thermal/mtk_thermal_monitor.c:	THRML_LOG("%s enable_ThermalMonitor:%d\n", __func__,
thermal/mtk_thermal_monitor.c:		THRML_STORAGE_LOG(THRML_LOGGER_MSG_DEC_NUM, get_real_time,
thermal/mtk_thermal_monitor.c:		THRML_ERROR_LOG(
thermal/mtk_thermal_monitor.c:		THRML_ERROR_LOG("%s nCtrlCmd=%d enable_ThermalMonitor=%d\n",
thermal/mtk_thermal_monitor.c:	THRML_LOG("%s bad arg\n", __func__);
thermal/mtk_thermal_monitor.c:						THRML_LOG(
thermal/mtk_thermal_monitor.c:		THRML_ERROR_LOG("%s null data\n", __func__);
thermal/mtk_thermal_monitor.c:		THRML_ERROR_LOG("%s null data\n", __func__);
thermal/mtk_thermal_monitor.c:			THRML_LOG("%s %d: %s %d %p %d.\n", __func__, i,
thermal/mtk_thermal_monitor.c:	/*THRML_ERROR_LOG("%s bad arg\n", __func__);*/
thermal/mtk_thermal_monitor.c:		THRML_ERROR_LOG("%s null data\n", __func__);
thermal/mtk_thermal_monitor.c:		THRML_ERROR_LOG("%s null data\n", __func__);
thermal/mtk_thermal_monitor.c:			/* THRML_ERROR_LOG(
thermal/mtk_thermal_monitor.c:			/* THRML_ERROR_LOG(
thermal/mtk_thermal_monitor.c:			/* THRML_ERROR_LOG(
thermal/mtk_thermal_monitor.c:			THRML_ERROR_LOG("%s %s ma_len=%d.\n", __func__,
thermal/mtk_thermal_monitor.c:			THRML_ERROR_LOG("%s %s Tfake=%ld.\n", __func__,
thermal/mtk_thermal_monitor.c:			THRML_LOG("%s 2b ma_len: %d curr_idx_ma_len: %d\n",
thermal/mtk_thermal_monitor.c:			THRML_LOG("%s 3a ma_len: %d curr_idx_ma_len: %d\n",
thermal/mtk_thermal_monitor.c:			THRML_LOG("%s 3b ma_len: %d curr_idx_ma_len: %d\n",
thermal/mtk_thermal_monitor.c:	THRML_LOG("%s\n", __func__);
thermal/mtk_thermal_monitor.c:		THRML_ERROR_LOG("%s Can not create mtm_monitor\n", __func__);
thermal/mtk_thermal_monitor.c:		THRML_ERROR_LOG("%s Can not create mtm_indicator\n", __func__);
thermal/mtk_thermal_monitor.c:		THRML_ERROR_LOG("%s Can not create mtm_scen_call\n", __func__);
thermal/mtk_thermal_monitor.c:		THRML_ERROR_LOG("%s mkdir /proc/mtkcooler failed\n", __func__);
thermal/mtk_thermal_monitor.c:		THRML_ERROR_LOG("%s mkdir /proc/mtktz failed\n", __func__);
thermal/mtk_thermal_monitor.c:	THRML_LOG("%s\n", __func__);
thermal/mtk_thermal_monitor.c:					THRML_LOG(
thermal/mtk_thermal_monitor.c:	THRML_LOG("[.bind]+ tz: %s cdev: %s tz_data:%p cl_data:%p\n",
thermal/mtk_thermal_monitor.c:		THRML_ERROR_LOG(
thermal/mtk_thermal_monitor.c:	THRML_LOG("[.bind]- tz: %s cdev: %s tz_data:%p cl_data:%p\n",
thermal/mtk_thermal_monitor.c:	/* THRML_STORAGE_LOG(THRML_LOGGER_MSG_BIND, bind, thermal->type,
thermal/mtk_thermal_monitor.c:				THRML_LOG(
thermal/mtk_thermal_monitor.c:	THRML_LOG("[.unbind]+ tz: %s cdev: %s\n", thermal->type, cdev->type);
thermal/mtk_thermal_monitor.c:		THRML_ERROR_LOG("[.unbind]E tz: %s unregistered.\n",
thermal/mtk_thermal_monitor.c:	THRML_LOG("[.unbind]- tz: %s cdev: %s\n", thermal->type, cdev->type);
thermal/mtk_thermal_monitor.c:		THRML_ERROR_LOG("[.get_temp] tz: %s unregistered.\n",
thermal/mtk_thermal_monitor.c:		THRML_ERROR_LOG("[.get_temp] tz: %s invalid temp\n",
thermal/mtk_thermal_monitor.c:	THRML_STORAGE_LOG(THRML_LOGGER_MSG_ZONE_TEMP, get_temp,
thermal/mtk_thermal_monitor.c:	THRML_LOG("[.get_temp] tz: %s raw: %d sma: %ld\n",
thermal/mtk_thermal_monitor.c:		THRML_ERROR_LOG("[.get_temp] tz: %s dur: %ld\n",
thermal/mtk_thermal_monitor.c:	THRML_LOG("[.get_mode] tz: %s mode: %d\n", thermal->type, *mode);
thermal/mtk_thermal_monitor.c:		THRML_ERROR_LOG("[.get_mode] tz: %s unregistered.\n",
thermal/mtk_thermal_monitor.c:	THRML_LOG("[.set_mode] tz: %s mode: %d\n", thermal->type, mode);
thermal/mtk_thermal_monitor.c:		THRML_ERROR_LOG("[.set_mode] tz: %s unregistered.\n",
thermal/mtk_thermal_monitor.c:		THRML_ERROR_LOG("[.get_trip_type] tz: %s unregistered.\n",
thermal/mtk_thermal_monitor.c:	THRML_LOG("[.get_trip_type] tz: %s trip: %d type: %d\n",
thermal/mtk_thermal_monitor.c:		THRML_ERROR_LOG("[.get_trip_temp] tz: %s unregistered.\n",
thermal/mtk_thermal_monitor.c:	THRML_LOG("[.get_trip_temp] tz: %s trip: %d temp: %d\n",
thermal/mtk_thermal_monitor.c:	THRML_STORAGE_LOG(THRML_LOGGER_MSG_TRIP_POINT, get_trip_temp,
thermal/mtk_thermal_monitor.c:		THRML_ERROR_LOG("[.get_crit_temp] tz: %s unregistered.\n",
thermal/mtk_thermal_monitor.c:	THRML_LOG("[.get_crit_temp] tz: %s temp: %d\n", thermal->type,
thermal/mtk_thermal_monitor.c:		THRML_ERROR_LOG("[.notify] tz: %s unregistered.\n",
thermal/mtk_thermal_monitor.c:	THRML_LOG("%s tz: %s trips: %d passive_delay: %d polling_delay: %d\n",
thermal/mtk_thermal_monitor.c:		THRML_ERROR_LOG("%s tzdata kzalloc fail.\n", __func__);
thermal/mtk_thermal_monitor.c:			THRML_ERROR_LOG("%s proc file not created: %p\n",
thermal/mtk_thermal_monitor.c:			THRML_LOG("%s proc file created: %p\n", __func__, tz);
thermal/mtk_thermal_monitor.c:	THRML_LOG("%s+ tz : %s\n", __func__, type);
thermal/mtk_thermal_monitor.c:	THRML_LOG("%s- tz: %s\n", __func__, type);
thermal/mtk_thermal_monitor.c:	THRML_LOG("%s thermal_type:%s trip:%d cdev_type:%s  ret:%d\n", __func__,
thermal/mtk_thermal_monitor.c:		/* THRML_ERROR_LOG("thermal_zone_bind_cooling_device Fail.
thermal/mtk_thermal_monitor.c:	THRML_LOG("%s thermal_type:%s trip:%d cdev_type:%s  ret:%d\n", __func__,
thermal/mtk_thermal_monitor.c:	THRML_STORAGE_LOG(THRML_LOGGER_MSG_BIND, bind,
thermal/mtk_thermal_monitor.c:	THRML_LOG("[.get_max_state] cdev_type:%s state:%lu\n",
thermal/mtk_thermal_monitor.c:	THRML_LOG("[.get_cur_state] cdev_type:%s state:%lu\n",
thermal/mtk_thermal_monitor.c:		THRML_ERROR_LOG("[.set_cur_state]E no cdev ops.\n");
thermal/mtk_thermal_monitor.c:			THRML_LOG(
thermal/mtk_thermal_monitor.c:			THRML_LOG("[.set_cur_state] cur_state:%lu\n",
thermal/mtk_thermal_monitor.c:				THRML_LOG("[.set_cur_state] tz:%p devdata:%p\n",
thermal/mtk_thermal_monitor.c:				THRML_LOG("[.set_cur_state] last_temp:%d\n",
thermal/mtk_thermal_monitor.c:					THRML_ERROR_LOG(
thermal/mtk_thermal_monitor.c:					THRML_ERROR_LOG(
thermal/mtk_thermal_monitor.c:						THRML_LOG(
thermal/mtk_thermal_monitor.c:					THRML_LOG(
thermal/mtk_thermal_monitor.c:	THRML_LOG("[.set_cur_state] tz_type:%s cdev_type:%s trip:%d state:%lu\n"
thermal/mtk_thermal_monitor.c:	THRML_STORAGE_LOG(THRML_LOGGER_MSG_COOL_STAE, set_cur_state,
thermal/mtk_thermal_monitor.c:	THRML_LOG("[.get_available] cdev_type:%s available:%s\n",
thermal/mtk_thermal_monitor.c:	THRML_LOG("%s type:%s\n", __func__, type);
thermal/mtk_thermal_monitor.c:		THRML_ERROR_LOG("%s mcdata kzalloc fail.\n", __func__);
thermal/mtk_thermal_monitor.c:			THRML_ERROR_LOG("%s proc file not created: %p\n",
thermal/mtk_thermal_monitor.c:			THRML_LOG("%s proc file created: %p\n",
thermal/mtk_thermal_monitor.c:	THRML_LOG("%s type:%s\n", __func__, type);
thermal/mtk_thermal_monitor.c:		THRML_ERROR_LOG("%s mcdata kzalloc fail.\n", __func__);
thermal/mtk_thermal_monitor.c:			THRML_ERROR_LOG("%s proc file not created: %p\n",
thermal/mtk_thermal_monitor.c:			THRML_LOG("%s proc file created: %p\n",
thermal/mtk_thermal_monitor.c:	THRML_LOG("%s type:%s exit:%d\n", __func__, cdev->type, exit_point);
thermal/mtk_thermal_monitor.c:	THRML_LOG("%s+ cdev:%p devdata:%p cdev:%s\n", __func__,
thermal/mtk_thermal_monitor.c:	THRML_LOG("%s- mcdata:%p\n", __func__, mcdata);
thermal/mtk_thermal_monitor.c:	THRML_LOG("%s- cdev: %s\n", __func__, type);
thermal/mtk_thermal_monitor.c:	THRML_LOG("%s trip %d\n", __func__, trip);
thermal/mtk_thermal_monitor.c:			THRML_ERROR_LOG(
thermal/mt6765/inc/tscpu_settings.h:			pr_notice(TSCPU_LOG_TAG "%s: %llu us\n",	\
thermal/mt6765/inc/tscpu_settings.h:			pr_notice(TSCPU_LOG_TAG "Warning: tProfiling "	\
thermal/mt6765/inc/tscpu_settings.h: *LOG
thermal/mt6765/inc/tscpu_settings.h:#define TSCPU_LOG_TAG		"[Thermal/TZ/CPU]"
c2k_usb/rawbulk_transfer.c:unsigned int c2k_usb_dbg_level = C2K_LOG_NOTICE;
c2k_usb/viatel_rawbulk.h:#define C2K_LOG_EMERG			0
c2k_usb/viatel_rawbulk.h:#define C2K_LOG_ALERT			1
c2k_usb/viatel_rawbulk.h:#define C2K_LOG_CRIT			2
c2k_usb/viatel_rawbulk.h:#define C2K_LOG_ERR				3
c2k_usb/viatel_rawbulk.h:#define C2K_LOG_WARN			4
c2k_usb/viatel_rawbulk.h:#define C2K_LOG_NOTICE		5
c2k_usb/viatel_rawbulk.h:#define C2K_LOG_INFO			6
c2k_usb/viatel_rawbulk.h:#define C2K_LOG_DBG				7
c2k_usb/viatel_rawbulk.h:#define C2K_ERR(format, args...) do {if (c2k_dbg_level(C2K_LOG_ERR)) \
c2k_usb/viatel_rawbulk.h:#define C2K_WARN(format, args...) do {if (c2k_dbg_level(C2K_LOG_WARN)) \
c2k_usb/viatel_rawbulk.h:#define C2K_NOTE(format, args...) do {if (c2k_dbg_level(C2K_LOG_NOTICE)) \
c2k_usb/viatel_rawbulk.h:#define C2K_INFO(format, args...) do {if (c2k_dbg_level(C2K_LOG_INFO)) \
c2k_usb/viatel_rawbulk.h:#define C2K_DBG(format, args...) do {if (c2k_dbg_level(C2K_LOG_DBG)) \
base/power/spm/common/mtk_sleep_internal.h:#define SLP_SUSPEND_LOG_EN          0
base/power/spm/common/mtk_sleep_internal.h:#define SLP_SUSPEND_LOG_EN          0
base/power/spm/common/mtk_idle_internal.h:#define MTK_IDLE_LOG_REDUCE         (1 << 0)
base/power/spm/common/mtk_idle_internal.h:#define MTK_IDLE_LOG_RESOURCE_USAGE (1 << 1)
base/power/spm/common/mtk_idle_internal.h:#define MTK_IDLE_LOG_DISABLE        (1 << 2)
base/power/spm/common/mtk_idle_internal.h:#define MTK_IDLE_LOG_DUMP_LP_GS     (1 << 4)
base/power/spm/common/mtk_idle_select.c:#define LOG_STR "blocked by boot reason, system_state = "
base/power/spm/common/mtk_idle_select.c:				__func__, LOG_STR, system_state);
base/power/spm/common/mtk_idle_internal.c:		idle_flag |= MTK_IDLE_LOG_DISABLE;
base/power/spm/common/mtk_idle_internal.c:	if (!(idle_flag & MTK_IDLE_LOG_DUMP_LP_GS)) {
base/power/spm/common/mtk_idle_internal.c:	if (!(idle_flag & MTK_IDLE_LOG_DUMP_LP_GS))
base/power/spm/common/mtk_idle_profile.c:#define IDLE_LOG_BUF_LEN 1024
base/power/spm/common/mtk_idle_profile.c:	char buf[IDLE_LOG_BUF_LEN];
base/power/spm/common/mtk_idle_profile.c:			, IDLE_LOG_BUF_LEN - strlen((idle).buf), fmt, ##args))
base/power/spm/common/mtk_idle_profile.c:			IDLE_LOG_BUF_LEN - strlen(idle_state_log.buf));
base/power/spm/common/mtk_dpidle.c:static unsigned int dpidle_flag = MTK_IDLE_LOG_REDUCE;
base/power/spm/common/mtk_sodi.c:static unsigned int sodi_flag = MTK_IDLE_LOG_REDUCE;
base/power/spm/common/mtk_sodi.c:static unsigned int sodi3_flag = MTK_IDLE_LOG_REDUCE;
base/power/spm/common/mtk_sleep.c:	pr_info(", SUSPEND_LOG_EN:%d\n", SLP_SUSPEND_LOG_EN);
base/power/spm/common/mtk_sleep.c:#if SLP_SUSPEND_LOG_EN
base/power/spm/mt6765/mtk_spm_internal.h:#define LOG_BUF_SIZE        256
base/power/spm/mt6765/mtk_spm_internal.c:	char buf[LOG_BUF_SIZE] = { 0 };
base/power/spm/mt6765/mtk_spm_internal.c:			if ((strlen(buf) + strlen(local_ptr)) < LOG_BUF_SIZE)
base/power/spm/mt6765/mtk_spm_internal.c:			if ((strlen(buf) + strlen(local_ptr)) < LOG_BUF_SIZE)
base/power/spm/mt6765/mtk_spm_internal.c:			if ((strlen(buf) + strlen(local_ptr)) < LOG_BUF_SIZE)
base/power/spm/mt6765/mtk_spm_internal.c:				LOG_BUF_SIZE)
base/power/spm/mt6765/mtk_spm_internal.c:	WARN_ON(strlen(buf) >= LOG_BUF_SIZE);
base/power/spm/mt6765/mtk_spm_idle.c:	if (idle_flag & MTK_IDLE_LOG_DUMP_LP_GS)
base/power/spm/mt6765/mtk_spm_idle.c:#define IDLE_PRINT_LOG_DURATION (5000)  /* 5 seconds */
base/power/spm/mt6765/mtk_spm_idle.c:	ret = (cur_time - pre_time > IDLE_PRINT_LOG_DURATION);
base/power/spm/mt6765/mtk_spm_idle.c:	if (idle_flag & MTK_IDLE_LOG_DISABLE)
base/power/spm/mt6765/mtk_spm_idle.c:	if (!(idle_flag & MTK_IDLE_LOG_REDUCE)) {
base/power/spm/mt6765/mtk_spm_idle.c:		if (idle_flag & MTK_IDLE_LOG_RESOURCE_USAGE)
base/power/spm/mt6765/mtk_spm_idle.c:	if (idle_flag & MTK_IDLE_LOG_DISABLE)
base/power/spm/mt6765/mtk_spm_idle.c:	if (!(idle_flag & MTK_IDLE_LOG_REDUCE)) {
base/power/spm/mt6765/mtk_spm_idle.c:		if (idle_flag & MTK_IDLE_LOG_RESOURCE_USAGE)
base/power/cm_mgr_v1/mtk_cm_mgr.c:#define CMMGR_NOLOG 1
base/power/cm_mgr_v1/mtk_cm_mgr.c:#if CMMGR_NOLOG
base/power/cm_mgr_v1/mt6765/mtk_cm_mgr_platform_data.h:#define CMMGR_NOLOG 1
base/power/cm_mgr_v1/mt6765/mtk_cm_mgr_platform_data.h:#if CMMGR_NOLOG
base/power/cm_mgr_v1/mt6765/mtk_cm_mgr_platform.c:#define CMMGR_NOLOG 1
base/power/cm_mgr_v1/mt6765/mtk_cm_mgr_platform.c:#if CMMGR_NOLOG
base/power/cpufreq_v1/src/mach/mt6765/mtk_cpufreq_platform.h:#define DVFS_LOG_NUM		150
base/power/cpufreq_v1/src/mach/mt6765/mtk_cpufreq_platform.h:#define ENTRY_EACH_LOG		5
base/power/cpufreq_v1/src/mtk_cpufreq_hybrid.c:#define OFFS_LOG_S	0x03d0
base/power/cpufreq_v1/src/mtk_cpufreq_hybrid.c:#define OFFS_LOG_E	(OFFS_LOG_S + DVFS_LOG_NUM * ENTRY_EACH_LOG * 4)
base/power/cpufreq_v1/src/mtk_cpufreq_hybrid.c:#define MAX_LOG_FETCH 20
base/power/cpufreq_v1/src/mtk_cpufreq_hybrid.c:/* log_box_parsed[MAX_LOG_FETCH] is also used to save last log entry */
base/power/cpufreq_v1/src/mtk_cpufreq_hybrid.c:static struct cpu_dvfs_log_box log_box_parsed[1 + MAX_LOG_FETCH];
base/power/cpufreq_v1/src/mtk_cpufreq_hybrid.c:	unsigned int buf[ENTRY_EACH_LOG] = {0};
base/power/cpufreq_v1/src/mtk_cpufreq_hybrid.c:			if (bk_log_offs >= OFFS_LOG_E)
base/power/cpufreq_v1/src/mtk_cpufreq_hybrid.c:				bk_log_offs = OFFS_LOG_S;
base/power/cpufreq_v1/src/mtk_cpufreq_hybrid.c:			if (bk_log_offs >= OFFS_LOG_E)
base/power/cpufreq_v1/src/mtk_cpufreq_hybrid.c:				bk_log_offs = OFFS_LOG_S;
base/power/cpufreq_v1/src/mtk_cpufreq_hybrid.c:			for (j = 2; j < ENTRY_EACH_LOG; j++) {
base/power/cpufreq_v1/src/mtk_cpufreq_hybrid.c:				if (bk_log_offs >= OFFS_LOG_E)
base/power/cpufreq_v1/src/mtk_cpufreq_hybrid.c:					bk_log_offs = OFFS_LOG_S;
base/power/cpufreq_v1/src/mtk_cpufreq_hybrid.c:#define DBG_REPO_DATA_E		(DBG_REPO_S + OFFS_LOG_S)
base/power/cpufreq_v1/src/mtk_cpufreq_hybrid.c:#define DBG_REPO_LOG_S		(DBG_REPO_S + OFFS_LOG_S)
base/power/cpufreq_v1/src/mtk_cpufreq_hybrid.c:#define DBG_REPO_LOG_E		(DBG_REPO_S + OFFS_LOG_E)
base/power/cpufreq_v1/src/mtk_cpufreq_hybrid.c:#define REPO_I_LOG_S		(OFFS_LOG_S / sizeof(u32))
base/power/cpufreq_v1/inc/mtk_cpufreq_internal.h:/* #define CONFIG_CPU_DVFS_SHOWLOG 1 */
base/power/cpufreq_v1/inc/mtk_cpufreq_internal.h:#ifdef CONFIG_CPU_DVFS_SHOWLOG
base/power/cpufreq_v1/inc/mtk_cpufreq_internal.h:#endif				/* CONFIG_CPU_DVFS_SHOWLOG */
base/power/leakage_table_v2/mtk_static_power.c:#define SPOWER_LOG_NONE		0
base/power/leakage_table_v2/mtk_static_power.c:#define SPOWER_LOG_WITH_PRINTK	0
base/power/leakage_table_v2/mtk_static_power.c:/* #define SPOWER_LOG_PRINT SPOWER_LOG_WITH_PRINTK */
base/power/leakage_table_v2/mtk_static_power.c:#define SPOWER_LOG_PRINT SPOWER_LOG_NONE
base/power/leakage_table_v2/mtk_static_power.c:#if (SPOWER_LOG_PRINT == SPOWER_LOG_NONE)
base/power/leakage_table_v2/mtk_static_power.c:#elif (SPOWER_LOG_PRINT == SPOWER_LOG_WITH_PRINTK)
base/power/include/upower_v2/mtk_unified_power_mt6765.h:#define UPOWER_LOG (0)
base/power/include/upower_v2/mtk_unified_power.h:#if UPOWER_LOG
base/power/upower_v2/mtk_unified_power.c:#define LOG_BUF_LEN 512
base/power/upower_v2/mtk_unified_power.c:	char buf[LOG_BUF_LEN];
base/power/upower_v2/mtk_unified_power.c:	LOG_BUF_LEN - strlen((upower).buf), fmt, ##args))
base/power/ppm_v3/src/mtk_ppm_main.c:#define LOG_BUF_SIZE		(128)
base/power/ppm_v3/src/mtk_ppm_main.c:#define LOG_CHECK_INTERVAL	(500)/* ms */
base/power/ppm_v3/src/mtk_ppm_main.c:#define LOG_MAX_CNT		(5) /* max log cnt within a check interval */
base/power/ppm_v3/src/mtk_ppm_main.c:#define LOG_MAX_DIFF_INTERVAL	(100)/* ms */
base/power/ppm_v3/src/mtk_ppm_main.c:	if (delta1 >= LOG_CHECK_INTERVAL
base/power/ppm_v3/src/mtk_ppm_main.c:		|| delta2 >= LOG_MAX_DIFF_INTERVAL) {
base/power/ppm_v3/src/mtk_ppm_main.c:	} else if (log_cnt < LOG_MAX_CNT) {
base/power/ppm_v3/src/mtk_ppm_main.c:		char buf[LOG_BUF_SIZE];
base/power/ppm_v3/src/mtk_ppm_main.c:		ptr += snprintf(ptr, LOG_BUF_SIZE, "(%*pbl)",
base/power/ppm_v3/src/mtk_ppm_main.c:			ptr += snprintf(ptr, LOG_BUF_SIZE, "(%d)(%d)(%d)(%d) ",
base/power/ppm_v3/src/mtk_ppm_main.c:				ptr += snprintf(ptr, LOG_BUF_SIZE,
base/power/ppm_v3/inc/mtk_ppm_internal.h:/* LOG */
base/power/ppm_v3/inc/mtk_ppm_internal.h:	NO_LOG	= 0,
base/power/hps_v3/mtk_hps_internal.h:#define EN_HPS_LOG			(0)
base/power/hps_v3/mtk_hps_internal.h: * LOG
base/power/hps_v3/mtk_hotplug_cb.c:#define BUCK_CTRL_DBLOG		(0)
base/power/clkbuf_v1/mtk_clkbuf_ctl.c:#define CLKB_NOLOG 1
base/power/clkbuf_v1/mtk_clkbuf_ctl.c:#if CLKB_NOLOG
base/power/clkbuf_v1/mt6765/mtk_clkbuf_hw.c:#define CLKB_NOLOG 1
base/power/clkbuf_v1/mt6765/mtk_clkbuf_hw.c:#if CLKB_NOLOG
base/power/eem_v2/mt6765/mtk_eem.c:	hrtimer_forward_now(timer, ns_to_ktime(LOG_INTERVAL));
base/power/eem_v2/mt6765/inc/mtk_eem_config.h:#define CONFIG_EEM_SHOWLOG (0)
base/power/eem_v2/mt6765/inc/mtk_eem_config.h:#define EN_ISR_LOG (0)
base/power/eem_v2/mt6765/inc/mtk_eem_config.h:#define LOG_INTERVAL	(2LL * NSEC_PER_SEC)
base/power/eem_v2/mt6765/inc/mtk_eem_internal.h: * LOG
base/power/eem_v2/mt6765/inc/mtk_eem_internal.h:#if EN_ISR_LOG /* For Interrupt use */
base/power/eem_v2/mt6765/inc/mtk_eem_internal.h:#if CONFIG_EEM_SHOWLOG
base/power/eem_v2/mt6765/inc/mtk_eem_internal.h:#endif /* CONFIG_CPU_DVFS_SHOWLOG */
base/power/eem_v2/mt6765/inc/mtk_eem_internal_ap.h:	unsigned int ANALOG:1;
base/power/udi_v1/mtk_udi.c: * LOG
base/power/udi_v1/mtk_udi.c:#ifdef USING_XLOG
base/power/mcdi/include/mcdi_v1/mtk_mcdi_util.h:#define LOG_BUF_LEN         512
base/power/mcdi/include/mcdi_v1/mtk_mcdi_util.h:	char buf[LOG_BUF_LEN];
gpu/ged/src/ged_fdvfs.c:GED_LOG_BUF_HANDLE ghLogBuf_FDVFS;
gpu/ged/src/ged_fdvfs.c:		GED_LOG_BUF_TYPE_RINGBUFFER, NULL, "fdvfs_debug");
gpu/ged/src/ged_debugFS.c:		GED_LOGE("Failed to create '%s' debugfs entry\n", pszName);
gpu/ged/src/ged_debugFS.c:		GED_LOGE("Failed to create '%s' debugfs directory\n", pszName);
gpu/ged/src/ged_debugFS.c:		GED_LOGE("Failed to create '%s' debugfs root directory\n", GED_DEBUGFS_DIR_NAME);
gpu/ged/src/ged_main.c:#ifndef GED_BUFFER_LOG_DISABLE
gpu/ged/src/ged_main.c:#define GED_LOG_BUF_COMMON_GLES "GLES"
gpu/ged/src/ged_main.c:static GED_LOG_BUF_HANDLE ghLogBuf_GLES;
gpu/ged/src/ged_main.c:GED_LOG_BUF_HANDLE ghLogBuf_GED;
gpu/ged/src/ged_main.c:static GED_LOG_BUF_HANDLE ghLogBuf_GPU;
gpu/ged/src/ged_main.c:#define GED_LOG_BUF_COMMON_HWC "HWC"
gpu/ged/src/ged_main.c:static GED_LOG_BUF_HANDLE ghLogBuf_HWC;
gpu/ged/src/ged_main.c:#define GED_LOG_BUF_COMMON_HWC_ERR "HWC_err"
gpu/ged/src/ged_main.c:static GED_LOG_BUF_HANDLE ghLogBuf_HWC_ERR;
gpu/ged/src/ged_main.c:#define GED_LOG_BUF_COMMON_FENCE "FENCE"
gpu/ged/src/ged_main.c:static GED_LOG_BUF_HANDLE ghLogBuf_FENCE;
gpu/ged/src/ged_main.c:static GED_LOG_BUF_HANDLE ghLogBuf_FWTrace;
gpu/ged/src/ged_main.c:static GED_LOG_BUF_HANDLE ghLogBuf_ftrace;
gpu/ged/src/ged_main.c:GED_LOG_BUF_HANDLE ghLogBuf_DVFS;
gpu/ged/src/ged_main.c:GED_LOG_BUF_HANDLE ghLogBuf_ged_srv;
gpu/ged/src/ged_main.c:	GED_LOGE("%s:%d:%d\n", __func__, MAJOR(inode->i_rdev), MINOR(inode->i_rdev));
gpu/ged/src/ged_main.c:	GED_LOGE("%s:%d:%d\n", __func__, MAJOR(inode->i_rdev), MINOR(inode->i_rdev));
gpu/ged/src/ged_main.c:				GED_LOGE("ged_copy_from_user fail\n");
gpu/ged/src/ged_main.c:			GED_LOGE("%s fail io_size:%d/%d, expected: %zu/%zu", \
gpu/ged/src/ged_main.c:			GED_LOGE("GED_BRIDGE_COMMAND_##cmd fail io_size:%d/%d, expected: %zu/%zu", \
gpu/ged/src/ged_main.c:		case GED_BRIDGE_COMMAND_LOG_BUF_GET:
gpu/ged/src/ged_main.c:			SET_FUNC_AND_CHECK(ged_bridge_log_buf_get, LOGBUFGET);
gpu/ged/src/ged_main.c:		case GED_BRIDGE_COMMAND_LOG_BUF_WRITE:
gpu/ged/src/ged_main.c:			SET_FUNC_AND_CHECK(ged_bridge_log_buf_write, LOGBUFWRITE);
gpu/ged/src/ged_main.c:		case GED_BRIDGE_COMMAND_LOG_BUF_RESET:
gpu/ged/src/ged_main.c:			SET_FUNC_AND_CHECK(ged_bridge_log_buf_reset, LOGBUFRESET);
gpu/ged/src/ged_main.c:			GED_LOGE("Unknown Bridge ID: %u\n", GED_GET_BRIDGE_ID(psBridgePackageKM->ui32FunctionID));
gpu/ged/src/ged_main.c:		GED_LOGE("Fail to ged_copy_from_user\n");
gpu/ged/src/ged_main.c:		GED_LOGE("Fail to ged_copy_from_user\n");
gpu/ged/src/ged_main.c:#ifndef GED_BUFFER_LOG_DISABLE
gpu/ged/src/ged_main.c:		GED_LOGE("ged: failed to register ged proc entry!\n");
gpu/ged/src/ged_main.c:		GED_LOGE("ged: failed to init debug FS!\n");
gpu/ged/src/ged_main.c:		GED_LOGE("ged: failed to create gedlog entry!\n");
gpu/ged/src/ged_main.c:		GED_LOGE("ged: failed to create hal entry!\n");
gpu/ged/src/ged_main.c:		GED_LOGE("ged: failed to init notify sw vsync!\n");
gpu/ged/src/ged_main.c:		GED_LOGE("ged: failed to init profile dvfs!\n");
gpu/ged/src/ged_main.c:		GED_LOGE("ged: failed to init common dvfs!\n");
gpu/ged/src/ged_main.c:		GED_LOGE("ged: failed to init gralloc_extra!\n");
gpu/ged/src/ged_main.c:		GED_LOGE("ged: failed to init KPI!\n");
gpu/ged/src/ged_main.c:		GED_LOGE("ged: failed to init FRR Table!\n");
gpu/ged/src/ged_main.c:		GED_LOGE("ged: failed to init FDVFS!\n");
gpu/ged/src/ged_main.c:#ifndef GED_BUFFER_LOG_DISABLE
gpu/ged/src/ged_main.c:	ged_log_buf_alloc(1024, 64 * 1024, GED_LOG_BUF_TYPE_RINGBUFFER, "gpuinfo", "gpuinfo");
gpu/ged/src/ged_main.c:				GED_LOG_BUF_TYPE_RINGBUFFER, "GPU_FENCE", NULL);
gpu/ged/src/ged_main.c:	ghLogBuf_GLES = ged_log_buf_alloc(160, 128 * 160, GED_LOG_BUF_TYPE_RINGBUFFER, GED_LOG_BUF_COMMON_GLES, NULL);
gpu/ged/src/ged_main.c:	ghLogBuf_GED = ged_log_buf_alloc(32, 64 * 32, GED_LOG_BUF_TYPE_RINGBUFFER, "GED internal", NULL);
gpu/ged/src/ged_main.c:			GED_LOG_BUF_TYPE_RINGBUFFER, GED_LOG_BUF_COMMON_HWC_ERR, NULL);
gpu/ged/src/ged_main.c:			GED_LOG_BUF_TYPE_RINGBUFFER, GED_LOG_BUF_COMMON_HWC, NULL);
gpu/ged/src/ged_main.c:	ghLogBuf_FENCE = ged_log_buf_alloc(256, 128 * 256, GED_LOG_BUF_TYPE_RINGBUFFER, GED_LOG_BUF_COMMON_FENCE, NULL);
gpu/ged/src/ged_main.c:	ghLogBuf_ftrace = ged_log_buf_alloc(1024*32, 1024*1024, GED_LOG_BUF_TYPE_RINGBUFFER,
gpu/ged/src/ged_main.c:	ghLogBuf_FWTrace = ged_log_buf_alloc(1024*32, 1024*1024, GED_LOG_BUF_TYPE_QUEUEBUFFER, "fw_trace", "fw_trace");
gpu/ged/src/ged_main.c:		, GED_LOG_BUF_TYPE_RINGBUFFER
gpu/ged/src/ged_main.c:	ghLogBuf_ged_srv =  ged_log_buf_alloc(32, 32*80, GED_LOG_BUF_TYPE_RINGBUFFER, "ged_srv_Log", "ged_srv_debug");
gpu/ged/src/ged_main.c:		GED_LOGE("ged: failed to init GPU Tuner!\n");
gpu/ged/src/ged_bridge.c:		GED_BRIDGE_IN_LOGBUFGET *psLogBufGetIN,
gpu/ged/src/ged_bridge.c:		GED_BRIDGE_OUT_LOGBUFGET *psLogBufGetOUT)
gpu/ged/src/ged_bridge.c:		GED_BRIDGE_IN_LOGBUFWRITE *psLogBufWriteIN,
gpu/ged/src/ged_bridge.c:		GED_BRIDGE_OUT_LOGBUFWRITE *psLogBufWriteOUT)
gpu/ged/src/ged_bridge.c:		GED_BRIDGE_IN_LOGBUFRESET *psLogBufResetIn,
gpu/ged/src/ged_bridge.c:		GED_BRIDGE_OUT_LOGBUFRESET *psLogBufResetOUT)
gpu/ged/src/ged_hal.c:		GED_LOGE("unknown command:%s %c", pcCMD, *pcValue);
gpu/ged/src/ged_hal.c:	GED_LOGE("i=%d",i);
gpu/ged/src/ged_hal.c:		GED_LOGE("ged: failed to create hal dir!\n");
gpu/ged/src/ged_hal.c:		GED_LOGE("ged: failed to create total_gpu_freq_level_count entry!\n");
gpu/ged/src/ged_hal.c:		GED_LOGE("ged: failed to create custom_boost_gpu_freq entry!\n");
gpu/ged/src/ged_hal.c:		GED_LOGE("ged: failed to create custom_upbound_gpu_freq entry!\n");
gpu/ged/src/ged_hal.c:		GED_LOGE("ged: failed to create vsync_offset_level entry!\n");
gpu/ged/src/ged_hal.c:		GED_LOGE("ged: failed to create freq_hint entry!\n");
gpu/ged/src/ged_hal.c:		GED_LOGE("ged: failed to create dvfs_margin_value entry!\n");
gpu/ged/src/ged_hal.c:		GED_LOGE(
gpu/ged/src/ged_hal.c:		GED_LOGE("ged: failed to create tb dvfs_margin entry!\n");
gpu/ged/src/ged_hal.c:		GED_LOGE(
gpu/ged/src/ged_hal.c:		GED_LOGE("register fb_notifier fail!\n");
gpu/ged/src/ged_hal.c:		GED_LOGE("ged: failed to create integration_report entry!\n");
gpu/ged/src/ged_profile_dvfs.c:static GED_LOG_BUF_HANDLE ghLogBuf = 0;
gpu/ged/src/ged_profile_dvfs.c:    ghLogBuf = ged_log_buf_alloc(320, 64 * 320, GED_LOG_BUF_TYPE_QUEUEBUFFER_AUTO_INCREASE, NULL, "profile_dvfs");
gpu/ged/src/ged_profile_dvfs.c:        ghLogBuf = ged_log_buf_alloc(320, 64 * 320, GED_LOG_BUF_TYPE_QUEUEBUFFER_AUTO_INCREASE, NULL, "profile_dvfs");
gpu/ged/src/ged_frr.c:#ifdef GED_LOGE
gpu/ged/src/ged_frr.c:#undef GED_LOGE
gpu/ged/src/ged_frr.c:#define GED_LOGE 
gpu/ged/src/ged_frr.c:		GED_LOGE("[FRR] fence2ContextTable is NULL\n");
gpu/ged/src/ged_frr.c:	GED_LOGE("[FRR] [+] add item: pid(%d), cid(%llu), fid(%p)\n"
gpu/ged/src/ged_frr.c:		GED_LOGE("[FRR] [-] add item: fence2ContextTable is NULL\n");
gpu/ged/src/ged_frr.c:	GED_LOGE("[FRR] [-] add item, targetIndex(%d)\n", targetIndex);
gpu/ged/src/ged_frr.c:		GED_LOGE("[FRR] fence2ContextTable is NULL\n");
gpu/ged/src/ged_frr.c:		/* GED_LOGE("[FRR] fenceFd < 0\n");*/
gpu/ged/src/ged_frr.c:		GED_LOGE("[FRR] fence2ContextTable is NULL\n");
gpu/ged/src/ged_frr.c:		GED_LOGE("[FRR] ged_frr_wait_hw_vsync, ret(%d)\n", ret);
gpu/ged/src/ged_hashtable.c:			GED_LOGE("ged_hashtable_find: ulID=%lu ulHash=%lu fail\n", ulID, ulHash);
gpu/ged/src/ged_monitor_3D_fence.c:extern GED_LOG_BUF_HANDLE ghLogBuf_GED;
gpu/ged/src/ged_monitor_3D_fence.c:extern GED_LOG_BUF_HANDLE ghLogBuf_DVFS;
gpu/ged/src/ged_monitor_3D_fence.c:		GED_LOGI("[-]3D fences count = %d\n", atomic_read(&g_i32Count));
gpu/ged/src/ged_monitor_3D_fence.c:		GED_LOGI("[+]3D fences count = %d\n", atomic_read(&g_i32Count));
gpu/ged/src/ged_dvfs.c:extern GED_LOG_BUF_HANDLE ghLogBuf_DVFS;
gpu/ged/src/ged_dvfs.c:extern GED_LOG_BUF_HANDLE ghLogBuf_ged_srv;
gpu/ged/src/ged_dvfs.c: * GED_LOGE("@%s: Frame-based: ui64MaxBW:%llu, ui64AvgBW:%llu h/t %u/%u\n",
gpu/ged/src/ged_dvfs.c: * GED_LOGE("@%s: Frame-based: ui32MaxBW:%u, ui32AvgBW:%u, inst:%d\n",
gpu/ged/src/ged_dvfs.c:			ged_log_buf_print2(ghLogBuf_DVFS, GED_LOG_ATTR_TIME,
gpu/ged/src/ged_dvfs.c:			GED_LOGE("%s: not acceptable event:%u\n", __func__, eEvent);
gpu/ged/src/ged_dvfs.c:		GED_LOGE("%s", __func__);
gpu/ged/src/ged_dvfs.c:		GED_LOGE("%s: freq = %d", __func__,ui32FreqLevel);
gpu/ged/src/ged_dvfs.c:		GED_LOGE("%s: freq = %d", __func__ ,ui32FreqLevel);
gpu/ged/src/ged_dvfs.c:		GED_LOGE("%s: freq = %d", __func__,ui32FreqLevel);
gpu/ged/src/ged_dvfs.c:		GED_LOGE("%s:gpu_loading=%d %d, g_iSkipCount=%d", __func__,
gpu/ged/src/ged_mm.c:		GED_LOGE("ged: failed to create mm dir!\n");
gpu/ged/src/ged_log.c:	GED_LOG_ATTR_RINGBUFFER     = 0x1,
gpu/ged/src/ged_log.c:	GED_LOG_ATTR_QUEUEBUFFER    = 0x2,
gpu/ged/src/ged_log.c:	GED_LOG_ATTR_AUTO_INCREASE  = 0x4,
gpu/ged/src/ged_log.c:typedef struct GED_LOG_BUF_LINE_TAG
gpu/ged/src/ged_log.c:} GED_LOG_BUF_LINE;
gpu/ged/src/ged_log.c:typedef struct GED_LOG_BUF_TAG
gpu/ged/src/ged_log.c:	GED_LOG_BUF_TYPE    eType;
gpu/ged/src/ged_log.c:	GED_LOG_BUF_LINE    *psLine;
gpu/ged/src/ged_log.c:	char                acName[GED_LOG_BUF_NAME_LENGTH];
gpu/ged/src/ged_log.c:	char                acNodeName[GED_LOG_BUF_NODE_NAME_LENGTH];
gpu/ged/src/ged_log.c:} GED_LOG_BUF;
gpu/ged/src/ged_log.c:typedef struct GED_LOG_LISTEN_TAG
gpu/ged/src/ged_log.c:	GED_LOG_BUF_HANDLE  *pCBHnd;
gpu/ged/src/ged_log.c:	char                acName[GED_LOG_BUF_NAME_LENGTH];
gpu/ged/src/ged_log.c:} GED_LOG_LISTEN;
gpu/ged/src/ged_log.c:typedef struct GED_LOG_BUF_LIST_TAG
gpu/ged/src/ged_log.c:} GED_LOG_BUF_LIST;
gpu/ged/src/ged_log.c:static GED_LOG_BUF_LIST gsGEDLogBufList = {
gpu/ged/src/ged_log.c:static GED_LOG_BUF* ged_log_buf_from_handle(GED_LOG_BUF_HANDLE hLogBuf)
gpu/ged/src/ged_log.c:static GED_ERROR __ged_log_buf_vprint(GED_LOG_BUF *psGEDLogBuf, const char *fmt, va_list args, int attrs)
gpu/ged/src/ged_log.c:	GED_LOG_BUF_LINE *curline;
gpu/ged/src/ged_log.c:		if (attrs & GED_LOG_ATTR_RINGBUFFER)
gpu/ged/src/ged_log.c:		else if (attrs & GED_LOG_ATTR_QUEUEBUFFER)
gpu/ged/src/ged_log.c:			if (attrs & GED_LOG_ATTR_AUTO_INCREASE)
gpu/ged/src/ged_log.c:	if (attrs & GED_LOG_ATTR_TIME)
gpu/ged/src/ged_log.c:		curline->tattrs = GED_LOG_ATTR_TIME;
gpu/ged/src/ged_log.c:	if (attrs & GED_LOG_ATTR_TIME_TPT)
gpu/ged/src/ged_log.c:		curline->tattrs = GED_LOG_ATTR_TIME_TPT;
gpu/ged/src/ged_log.c:	if (attrs & GED_LOG_ATTR_RINGBUFFER)
gpu/ged/src/ged_log.c:static GED_ERROR __ged_log_buf_print(GED_LOG_BUF *psGEDLogBuf, const char *fmt, ...)
gpu/ged/src/ged_log.c:	err = __ged_log_buf_vprint(psGEDLogBuf, fmt, args, psGEDLogBuf->attrs | GED_LOG_ATTR_TIME);
gpu/ged/src/ged_log.c:static int __ged_log_buf_write(GED_LOG_BUF *psGEDLogBuf, const char __user *pszBuffer, int i32Count)
gpu/ged/src/ged_log.c:static int __ged_log_buf_check_get_early_list(GED_LOG_BUF_HANDLE hLogBuf, const char *pszName)
gpu/ged/src/ged_log.c:	GED_LOG_LISTEN *psFound = NULL, *psLogListen;
gpu/ged/src/ged_log.c:		psLogListen = list_entry(psListEntry, GED_LOG_LISTEN, sList);
gpu/ged/src/ged_log.c:	return (ssize_t)__ged_log_buf_write((GED_LOG_BUF *)pvData, pszBuffer, (int)uiCount);
gpu/ged/src/ged_log.c:	GED_LOG_BUF *psGEDLogBuf = (GED_LOG_BUF *)psSeqFile->private;
gpu/ged/src/ged_log.c:static int ged_log_buf_seq_show_print(struct seq_file *psSeqFile, GED_LOG_BUF *psGEDLogBuf, int i)
gpu/ged/src/ged_log.c:	GED_LOG_BUF_LINE *line;
gpu/ged/src/ged_log.c:		if (line->tattrs & GED_LOG_ATTR_TIME)
gpu/ged/src/ged_log.c:		if (line->tattrs & GED_LOG_ATTR_TIME_TPT)
gpu/ged/src/ged_log.c:	GED_LOG_BUF *psGEDLogBuf = (GED_LOG_BUF *)pvData;
gpu/ged/src/ged_log.c:		if (psGEDLogBuf->attrs & GED_LOG_ATTR_RINGBUFFER)
gpu/ged/src/ged_log.c:		else if (psGEDLogBuf->attrs & GED_LOG_ATTR_QUEUEBUFFER)
gpu/ged/src/ged_log.c:GED_LOG_BUF_HANDLE ged_log_buf_alloc(
gpu/ged/src/ged_log.c:		GED_LOG_BUF_TYPE eType,
gpu/ged/src/ged_log.c:	GED_LOG_BUF *psGEDLogBuf;
gpu/ged/src/ged_log.c:		return (GED_LOG_BUF_HANDLE)0;
gpu/ged/src/ged_log.c:	psGEDLogBuf = (GED_LOG_BUF*)ged_alloc(sizeof(GED_LOG_BUF));
gpu/ged/src/ged_log.c:		GED_LOGE("ged: failed to allocate log buf!\n");
gpu/ged/src/ged_log.c:		return (GED_LOG_BUF_HANDLE)0;
gpu/ged/src/ged_log.c:		case GED_LOG_BUF_TYPE_RINGBUFFER:
gpu/ged/src/ged_log.c:			psGEDLogBuf->attrs = GED_LOG_ATTR_RINGBUFFER;
gpu/ged/src/ged_log.c:		case GED_LOG_BUF_TYPE_QUEUEBUFFER:
gpu/ged/src/ged_log.c:			psGEDLogBuf->attrs = GED_LOG_ATTR_QUEUEBUFFER;
gpu/ged/src/ged_log.c:		case GED_LOG_BUF_TYPE_QUEUEBUFFER_AUTO_INCREASE:
gpu/ged/src/ged_log.c:			psGEDLogBuf->attrs = GED_LOG_ATTR_QUEUEBUFFER | GED_LOG_ATTR_AUTO_INCREASE;
gpu/ged/src/ged_log.c:	psGEDLogBuf->i32MemorySize = i32MaxBufferSizeByte + sizeof(GED_LOG_BUF_LINE) * i32MaxLineCount;
gpu/ged/src/ged_log.c:		ged_free(psGEDLogBuf, sizeof(GED_LOG_BUF));
gpu/ged/src/ged_log.c:		GED_LOGE("ged: failed to allocate log buf!\n");
gpu/ged/src/ged_log.c:		return (GED_LOG_BUF_HANDLE)0;
gpu/ged/src/ged_log.c:	psGEDLogBuf->psLine = (GED_LOG_BUF_LINE *)psGEDLogBuf->pMemory;
gpu/ged/src/ged_log.c:		snprintf(psGEDLogBuf->acName, GED_LOG_BUF_NAME_LENGTH, "%s", pszName);
gpu/ged/src/ged_log.c:		snprintf(psGEDLogBuf->acNodeName, GED_LOG_BUF_NODE_NAME_LENGTH, "%s", pszNodeName);
gpu/ged/src/ged_log.c:			GED_LOGE("ged: failed to create %s entry, err(%d)!\n", pszNodeName, err);
gpu/ged/src/ged_log.c:			return (GED_LOG_BUF_HANDLE)0;
gpu/ged/src/ged_log.c:		GED_LOGE("ged: failed to insert into a hash table, err(%d)!\n", error);
gpu/ged/src/ged_log.c:		return (GED_LOG_BUF_HANDLE)0;
gpu/ged/src/ged_log.c:	GED_LOGI("ged_log_buf_alloc OK\n");
gpu/ged/src/ged_log.c:	return (GED_LOG_BUF_HANDLE)psGEDLogBuf->ulHashNodeID;
gpu/ged/src/ged_log.c:		GED_LOG_BUF_HANDLE hLogBuf,
gpu/ged/src/ged_log.c:	GED_LOG_BUF *psGEDLogBuf = ged_log_buf_from_handle(hLogBuf);
gpu/ged/src/ged_log.c:	GED_LOG_BUF_LINE *pi32NewLine;
gpu/ged/src/ged_log.c:	i32NewMemorySize = i32NewMaxBufferSizeByte + sizeof(GED_LOG_BUF_LINE) * i32NewMaxLineCount;
gpu/ged/src/ged_log.c:	pi32NewLine = (GED_LOG_BUF_LINE *)pNewMemory;
gpu/ged/src/ged_log.c:	memcpy(pi32NewLine, psGEDLogBuf->psLine, sizeof(GED_LOG_BUF_LINE) * min(i32NewMaxLineCount, psGEDLogBuf->i32LineCount));
gpu/ged/src/ged_log.c:GED_ERROR ged_log_buf_ignore_lines(GED_LOG_BUF_HANDLE hLogBuf, int n)
gpu/ged/src/ged_log.c:	GED_LOG_BUF *psGEDLogBuf = ged_log_buf_from_handle(hLogBuf);
gpu/ged/src/ged_log.c:		if (psGEDLogBuf->attrs & GED_LOG_ATTR_QUEUEBUFFER)
gpu/ged/src/ged_log.c:GED_LOG_BUF_HANDLE ged_log_buf_get(const char* pszName)
gpu/ged/src/ged_log.c:	GED_LOG_BUF *psFound = NULL, *psLogBuf;
gpu/ged/src/ged_log.c:		return (GED_LOG_BUF_HANDLE)0;
gpu/ged/src/ged_log.c:		psLogBuf = list_entry(psListEntry, GED_LOG_BUF, sList);
gpu/ged/src/ged_log.c:		return (GED_LOG_BUF_HANDLE)0;
gpu/ged/src/ged_log.c:	return (GED_LOG_BUF_HANDLE)psFound->ulHashNodeID;
gpu/ged/src/ged_log.c:int ged_log_buf_get_early(const char* pszName, GED_LOG_BUF_HANDLE *callback_set_handle)
gpu/ged/src/ged_log.c:		GED_LOG_LISTEN *psGEDLogListen;
gpu/ged/src/ged_log.c:			GED_LOG_BUF *psFound = NULL, *psLogBuf;
gpu/ged/src/ged_log.c:				psLogBuf = list_entry(psListEntry, GED_LOG_BUF, sList);
gpu/ged/src/ged_log.c:				*callback_set_handle = (GED_LOG_BUF_HANDLE)psFound->ulHashNodeID;
gpu/ged/src/ged_log.c:		psGEDLogListen = (GED_LOG_LISTEN*)ged_alloc(sizeof(GED_LOG_LISTEN));
gpu/ged/src/ged_log.c:		snprintf(psGEDLogListen->acName, GED_LOG_BUF_NAME_LENGTH, "%s", pszName);
gpu/ged/src/ged_log.c:void ged_log_buf_free(GED_LOG_BUF_HANDLE hLogBuf)
gpu/ged/src/ged_log.c:	GED_LOG_BUF *psGEDLogBuf = ged_log_buf_from_handle(hLogBuf);
gpu/ged/src/ged_log.c:		ged_free(psGEDLogBuf, sizeof(GED_LOG_BUF));
gpu/ged/src/ged_log.c:		GED_LOGI("ged_log_buf_free OK\n");
gpu/ged/src/ged_log.c:GED_ERROR ged_log_buf_print(GED_LOG_BUF_HANDLE hLogBuf, const char *fmt, ...)
gpu/ged/src/ged_log.c:	GED_LOG_BUF *psGEDLogBuf = ged_log_buf_from_handle(hLogBuf);
gpu/ged/src/ged_log.c:GED_ERROR ged_log_buf_print2(GED_LOG_BUF_HANDLE hLogBuf, int i32LogAttrs, const char *fmt, ...)
gpu/ged/src/ged_log.c:	GED_LOG_BUF *psGEDLogBuf = ged_log_buf_from_handle(hLogBuf);
gpu/ged/src/ged_log.c:GED_ERROR ged_log_buf_reset(GED_LOG_BUF_HANDLE hLogBuf)
gpu/ged/src/ged_log.c:	GED_LOG_BUF *psGEDLogBuf = ged_log_buf_from_handle(hLogBuf);
gpu/ged/src/ged_log.c:#define GED_LOG_CMD_SIZE 64
gpu/ged/src/ged_log.c:	char acBuffer[GED_LOG_CMD_SIZE];
gpu/ged/src/ged_log.c:	if ((0 < uiCount) && (uiCount < GED_LOG_CMD_SIZE))
gpu/ged/src/ged_log.c:					GED_LOG_BUF* psGEDLogBuf = (GED_LOG_BUF*)list_entry(psListEntry, GED_LOG_BUF, sList);
gpu/ged/src/ged_log.c:		GED_LOG_BUF* psGEDLogBuf = (GED_LOG_BUF*)list_entry(psListEntry, GED_LOG_BUF, sList);
gpu/ged/src/ged_log.c:		GED_LOG_BUF* psGEDLogBuf = (GED_LOG_BUF*)list_entry(psListEntry, GED_LOG_BUF, sList);
gpu/ged/src/ged_log.c:		GED_LOGE("ged: failed to create gedlog entry!\n");
gpu/ged/src/ged_log.c:		GED_LOGE("ged: failed to create logbufs dir!\n");
gpu/ged/src/ged_log.c:		GED_LOGE("ged: failed to create a hash table!\n");
gpu/ged/src/ged_log.c:int ged_log_buf_write(GED_LOG_BUF_HANDLE hLogBuf, const char __user *pszBuffer, int i32Count)
gpu/ged/src/ged_log.c:	GED_LOG_BUF *psGEDLogBuf = ged_log_buf_from_handle(hLogBuf);
gpu/ged/src/ged_log.c:static int ged_log_buf_dump(GED_LOG_BUF *psGEDLogBuf, int i)
gpu/ged/src/ged_log.c:	GED_LOG_BUF_LINE *line;
gpu/ged/src/ged_log.c:		if (line->tattrs & GED_LOG_ATTR_TIME) {
gpu/ged/src/ged_log.c:		if (line->tattrs & GED_LOG_ATTR_TIME_TPT) {
gpu/ged/src/ged_log.c:void ged_log_dump(GED_LOG_BUF_HANDLE hLogBuf)
gpu/ged/src/ged_log.c:	GED_LOG_BUF *psGEDLogBuf = ged_log_buf_from_handle(hLogBuf);
gpu/ged/src/ged_log.c:		if (psGEDLogBuf->attrs & GED_LOG_ATTR_RINGBUFFER) {
gpu/ged/src/ged_log.c:		} else if (psGEDLogBuf->attrs & GED_LOG_ATTR_QUEUEBUFFER)
gpu/ged/src/ged_notify_sw_vsync.c:extern GED_LOG_BUF_HANDLE ghLogBuf_DVFS;
gpu/ged/src/ged_notify_sw_vsync.c:		GED_LOGE("[5566] HW VSYNC: llDiff= %lld, hw_vsync_ts=%llu, sw_vsync_ts=%llu\n", llDiff, hw_vsync_ts, sw_vsync_ts);
gpu/ged/src/ged_notify_sw_vsync.c:		GED_LOGE("[5566] SW VSYNC: llDiff= %lld, hw_vsync_ts=%llu, sw_vsync_ts=%llu\n", llDiff, hw_vsync_ts, sw_vsync_ts);
gpu/ged/src/ged_notify_sw_vsync.c:			GED_LOGE("[5566] HW Event: kick!\n");
gpu/ged/src/ged_kpi.c:static GED_LOG_BUF_HANDLE ghLogBuf;
gpu/ged/src/ged_kpi.c:				GED_LOGE("[AFRC] reset: %d, %d, afrc_rst: %d, %d\n",
gpu/ged/src/ged_kpi.c:					GED_LOGE("[AFRC] retarget to %d FPS due to over target detection\n",
gpu/ged/src/ged_kpi.c:				GED_LOGE("[AFRC] fps_grp: %d, %d, %d\n", fps_grp[0], fps_grp[1], fps_grp[2]);
gpu/ged/src/ged_kpi.c:	GED_LOGE("[AFRC]: cur_fps: %d, fps_records: %d, %d, %d, target_fps: %d\n",
gpu/ged/src/ged_kpi.c:		GED_LOGE("[GED_KPI] psHead->i32Count: %d, isSF: %d\n", psHead->i32Count, psHead->isSF);
gpu/ged/src/ged_kpi.c:				GED_LOGE("[GED_KPI] main_head changes from %p to %p\n", main_head, psHead);
gpu/ged/src/ged_kpi.c:		GED_LOGE("[GED_KPI] main_head = %p, i32Count= %d, i32QedBuffer_length=%d\n", main_head, main_head->i32Count, main_head->i32QedBuffer_length);
gpu/ged/src/ged_kpi.c:		GED_LOGE("[GED_KPI] main_head = NULL\n");
gpu/ged/src/ged_kpi.c:		GED_LOGE("[GED_KPI] use cpu_boost_policy %d\n", cpu_boost_policy);
gpu/ged/src/ged_kpi.c:		GED_LOGE("[GED_KPI] no such cpu_boost_policy %d\n", cpu_boost_policy);
gpu/ged/src/ged_kpi.c:			GED_LOGE("[GED_KPI][Exception] TYPE_S: psKPI NULL, frameID: %lu\n", psTimeStamp->i32FrameID);
gpu/ged/src/ged_kpi.c:			GED_LOGE("[GED_KPI][Exception]: no invalid FRC mode is specified, use default mode\n");
gpu/ged/src/ged_kpi.c:	GED_LOGE("[GED_KPI] ts type = %d, pid = %d, wnd = %llu, frame = %lu\n",
gpu/ged/src/ged_kpi.c:				GED_LOGE("[GED_KPI] psHead: %p, fps: %d, mode: %d, client: %d\n",
gpu/ged/src/ged_kpi.c:				GED_LOGE("[GED_KPI] timestamp matched, Type_S: psHead: %p\n", psHead);
gpu/ged/src/ged_kpi.c:					GED_LOGE("[GED_KPI] t_cpu_remained: %lld, main_head: %p\n",
gpu/ged/src/ged_kpi.c:				GED_LOGE("[GED_KPI][Exception] psHead->isSF != psTimeStamp->isSF\n");
gpu/ged/src/ged_kpi.c:				GED_LOGE("[GED_KPI][Exception] psHead->pid != psTimeStamp->pid: (%d, %d)\n",
gpu/ged/src/ged_kpi.c:			GED_LOGE("[GED_KPI] TimeStamp1, i32QedBuffer_length:%d, ts: %llu, psHead: %p\n",
gpu/ged/src/ged_kpi.c:				GED_LOGE(
gpu/ged/src/ged_kpi.c:			GED_LOGE(
gpu/ged/src/ged_kpi.c:			GED_LOGE("[GED_KPI] TYPE_S timestamp miss, ulID: %lu\n"
gpu/ged/src/ged_kpi.c:			GED_LOGE("[GED_KPI] timestamp matched, Type_S: psHead: %p\n", psHead);
gpu/ged/src/ged_kpi.c:			GED_LOGE("[GED_KPI] t_cpu_remained: %lld, main_head: %p\n", main_head->t_cpu_remained, main_head);
gpu/ged/src/ged_kpi.c:			GED_LOGE("[GED_KPI] t_cpu: %ld, %lld, t_gpu: %ld, %lld\n",
gpu/ged/src/ged_kpi.c:			GED_LOGE("%s: no such renderer for BQ_ID: %llu\n"
gpu/ged/src/ged_kpi.c:		GED_LOGE("[GED_KPI][Exception]: g_psWorkQueue: NULL or GED KPI is disabled\n");
gpu/ged/src/ged_kpi.c:		220 * GED_KPI_MAX_FPS * 10, GED_LOG_BUF_TYPE_RINGBUFFER, NULL, "KPI");
gpu/ged/include/ged_base.h:#define GED_LOGI(...) 
gpu/ged/include/ged_base.h:#define GED_LOGI(...)
gpu/ged/include/ged_base.h:#define GED_LOGE(...)
gpu/ged/include/ged_type.h:typedef void *GED_LOG_HANDLE;
gpu/ged/include/ged_type.h:typedef unsigned int GED_LOG_BUF_HANDLE;
gpu/ged/include/ged_type.h:#define GED_BRIDGE_IN_LOGBUF_SIZE 320
gpu/ged/include/ged_type.h:	GED_LOG_ATTR_TIME           = 0x100,
gpu/ged/include/ged_type.h:	GED_LOG_ATTR_TIME_TPT       = 0x200,
gpu/ged/include/ged_bridge.h:    GED_BRIDGE_IN_LOGBUFGET *psLogBufGetIN,
gpu/ged/include/ged_bridge.h:    GED_BRIDGE_OUT_LOGBUFGET *psLogBufGetOUT);
gpu/ged/include/ged_bridge.h:    GED_BRIDGE_IN_LOGBUFWRITE *psLogBufWriteIN,
gpu/ged/include/ged_bridge.h:    GED_BRIDGE_OUT_LOGBUFWRITE *psLogBufWriteOUT);
gpu/ged/include/ged_bridge.h:    GED_BRIDGE_IN_LOGBUFRESET *psLogBufResetIn,
gpu/ged/include/ged_bridge.h:    GED_BRIDGE_OUT_LOGBUFRESET *psLogBufResetOUT);
gpu/ged/include/ged_bridge_id.h:	GED_BRIDGE_COMMAND_LOG_BUF_GET = 0,
gpu/ged/include/ged_bridge_id.h:	GED_BRIDGE_COMMAND_LOG_BUF_WRITE = 1,
gpu/ged/include/ged_bridge_id.h:	GED_BRIDGE_COMMAND_LOG_BUF_RESET = 2,
gpu/ged/include/ged_bridge_id.h:#define GED_BRIDGE_IO_LOG_BUF_GET           GED_IOWR(GED_BRIDGE_COMMAND_LOG_BUF_GET)
gpu/ged/include/ged_bridge_id.h:#define GED_BRIDGE_IO_LOG_BUF_WRITE         GED_IOWR(GED_BRIDGE_COMMAND_LOG_BUF_WRITE)
gpu/ged/include/ged_bridge_id.h:#define GED_BRIDGE_IO_LOG_BUF_RESET         GED_IOWR(GED_BRIDGE_COMMAND_LOG_BUF_RESET)
gpu/ged/include/ged_bridge_id.h: *  LOG_BUF_GET
gpu/ged/include/ged_bridge_id.h:#define GED_LOG_BUF_NAME_LENGTH 64
gpu/ged/include/ged_bridge_id.h:/* Bridge in structure for LOG_BUF_GET */
gpu/ged/include/ged_bridge_id.h:typedef struct GED_BRIDGE_IN_LOGBUFGET_TAG {
gpu/ged/include/ged_bridge_id.h:	char acName[GED_LOG_BUF_NAME_LENGTH];
gpu/ged/include/ged_bridge_id.h:} GED_BRIDGE_IN_LOGBUFGET;
gpu/ged/include/ged_bridge_id.h:/* Bridge out structure for LOG_BUF_GETC */
gpu/ged/include/ged_bridge_id.h:typedef struct GED_BRIDGE_OUT_LOGBUFGET_TAG {
gpu/ged/include/ged_bridge_id.h:	GED_LOG_BUF_HANDLE hLogBuf;
gpu/ged/include/ged_bridge_id.h:} GED_BRIDGE_OUT_LOGBUFGET;
gpu/ged/include/ged_bridge_id.h: *  LOG_BUF_WRITE
gpu/ged/include/ged_bridge_id.h:/* Bridge in structure for LOG_BUF_WRITE */
gpu/ged/include/ged_bridge_id.h:typedef struct GED_BRIDGE_IN_LOGBUFWRITE_TAG {
gpu/ged/include/ged_bridge_id.h:	GED_LOG_BUF_HANDLE hLogBuf;
gpu/ged/include/ged_bridge_id.h:	char acLogBuf[GED_BRIDGE_IN_LOGBUF_SIZE];
gpu/ged/include/ged_bridge_id.h:} GED_BRIDGE_IN_LOGBUFWRITE;
gpu/ged/include/ged_bridge_id.h:/* Bridge out structure for LOG_BUF_WRITE */
gpu/ged/include/ged_bridge_id.h:typedef struct GED_BRIDGE_OUT_LOGBUFWRITE_TAG {
gpu/ged/include/ged_bridge_id.h:} GED_BRIDGE_OUT_LOGBUFWRITE;
gpu/ged/include/ged_bridge_id.h: *  LOG_BUF_RESET
gpu/ged/include/ged_bridge_id.h:/* Bridge in structure for LOG_BUF_RESET */
gpu/ged/include/ged_bridge_id.h:typedef struct GED_BRIDGE_IN_LOGBUFRESET_TAG {
gpu/ged/include/ged_bridge_id.h:	GED_LOG_BUF_HANDLE hLogBuf;
gpu/ged/include/ged_bridge_id.h:} GED_BRIDGE_IN_LOGBUFRESET;
gpu/ged/include/ged_bridge_id.h:/* Bridge out structure for LOG_BUF_RESET */
gpu/ged/include/ged_bridge_id.h:typedef struct GED_BRIDGE_OUT_LOGBUFRESET_TAG {
gpu/ged/include/ged_bridge_id.h:} GED_BRIDGE_OUT_LOGBUFRESET;
gpu/ged/include/ged_bridge_id.h:/* Bridge in structure for LOG_BUF_WRITE */
gpu/ged/include/ged_bridge_id.h:/* Bridge out structure for LOG_BUF_WRITE */
gpu/ged/include/ged_log.h:#ifndef __GED_LOG_H__
gpu/ged/include/ged_log.h:#define __GED_LOG_H__
gpu/ged/include/ged_log.h:#define GED_LOG_BUF_FORMAT_PRINTF(x,y)		__attribute__((format(printf,x,y)))
gpu/ged/include/ged_log.h:#define GED_LOG_BUF_FORMAT_PRINTF(x,y)
gpu/ged/include/ged_log.h:#define GED_LOG_BUF_NAME_LENGTH 64
gpu/ged/include/ged_log.h:#define GED_LOG_BUF_NODE_NAME_LENGTH 64
gpu/ged/include/ged_log.h:typedef enum GED_LOG_BUF_TYPE_TAG
gpu/ged/include/ged_log.h:    GED_LOG_BUF_TYPE_RINGBUFFER,
gpu/ged/include/ged_log.h:    GED_LOG_BUF_TYPE_QUEUEBUFFER,
gpu/ged/include/ged_log.h:    GED_LOG_BUF_TYPE_QUEUEBUFFER_AUTO_INCREASE,
gpu/ged/include/ged_log.h:} GED_LOG_BUF_TYPE;
gpu/ged/include/ged_log.h:GED_LOG_BUF_HANDLE ged_log_buf_alloc(int i32MaxLineCount, int i32MaxBufferSizeByte, GED_LOG_BUF_TYPE eType, const char* pszName, const char* pszNodeName);
gpu/ged/include/ged_log.h:GED_ERROR ged_log_buf_resize(GED_LOG_BUF_HANDLE hLogBuf, int i32NewMaxLineCount, int i32NewMaxBufferSizeByte);
gpu/ged/include/ged_log.h:GED_ERROR ged_log_buf_ignore_lines(GED_LOG_BUF_HANDLE hLogBuf, int i32LineCount);
gpu/ged/include/ged_log.h:GED_ERROR ged_log_buf_reset(GED_LOG_BUF_HANDLE hLogBuf);
gpu/ged/include/ged_log.h:void ged_log_buf_free(GED_LOG_BUF_HANDLE hLogBuf);
gpu/ged/include/ged_log.h:GED_LOG_BUF_HANDLE ged_log_buf_get(const char* pszName);
gpu/ged/include/ged_log.h:int ged_log_buf_get_early(const char* pszName, GED_LOG_BUF_HANDLE *callback_set_handle);
gpu/ged/include/ged_log.h:GED_ERROR ged_log_buf_print(GED_LOG_BUF_HANDLE hLogBuf, const char *fmt, ...) GED_LOG_BUF_FORMAT_PRINTF(2,3);
gpu/ged/include/ged_log.h:GED_ERROR ged_log_buf_print2(GED_LOG_BUF_HANDLE hLogBuf, int i32LogAttrs, const char *fmt, ...) GED_LOG_BUF_FORMAT_PRINTF(3,4);
gpu/ged/include/ged_log.h:int ged_log_buf_write(GED_LOG_BUF_HANDLE hLogBuf, const char __user *pszBuffer, int i32Count);
gpu/ged/include/ged_log.h:void ged_log_dump(GED_LOG_BUF_HANDLE hLogBuf);
gpu/ged/Makefile:ccflags-y += -DGED_LOG_SIZE_LIMITED
gpu/ged/Makefile:ccflags-y += -DGED_BUFFER_LOG_DISABLE
gpu/ged/Makefile:ccflags-y += -DGED_LOG_SIZE_LIMITED
gpu/ged/Makefile:ccflags-y += -DGED_BUFFER_LOG_DISABLE
gpu/gpu_rgx/m1.11ED5425693/kernel/drivers/staging/imgtec/sunxi/adf_sunxi.c:#define VALIDATE_LOG_LINES 50
gpu/gpu_rgx/m1.11ED5425693/kernel/drivers/staging/imgtec/sunxi/adf_sunxi.c:#define VALIDATE_LOG_LINE_SIZE 50
gpu/gpu_rgx/m1.11ED5425693/kernel/drivers/staging/imgtec/sunxi/adf_sunxi.c:	char validate_log[VALIDATE_LOG_LINES][VALIDATE_LOG_LINE_SIZE];
gpu/gpu_rgx/m1.11ED5425693/kernel/drivers/staging/imgtec/sunxi/adf_sunxi.c:		% VALIDATE_LOG_LINES;
gpu/gpu_rgx/m1.11ED5425693/kernel/drivers/staging/imgtec/sunxi/adf_sunxi.c:	offset = snprintf(str, VALIDATE_LOG_LINE_SIZE, "id %u:",
gpu/gpu_rgx/m1.11ED5425693/kernel/drivers/staging/imgtec/sunxi/adf_sunxi.c:	vsnprintf(str+offset, VALIDATE_LOG_LINE_SIZE-offset, fmt, args);
gpu/gpu_rgx/m1.11ED5425693/kernel/drivers/staging/imgtec/sunxi/adf_sunxi.c:	for (line = 0; line < VALIDATE_LOG_LINES; line++) {
gpu/gpu_rgx/m1.11ED5425693/kernel/drivers/staging/imgtec/sunxi/adf_sunxi.c:			% VALIDATE_LOG_LINES;
gpu/gpu_rgx/m1.11ED5425693/kernel/drivers/staging/imgtec/pvr_sync2.c:#define PVR_DUMPDEBUG_LOG(pfnDumpDebugPrintf, pvDumpDebugFile, ...) \
gpu/gpu_rgx/m1.11ED5425693/kernel/drivers/staging/imgtec/pvr_sync2.c:	PVR_DUMPDEBUG_LOG(dump_debug_printf,
gpu/gpu_rgx/m1.11ED5425693/kernel/drivers/staging/imgtec/pvr_sync2.c:		PVR_DUMPDEBUG_LOG(dump_debug_printf,
gpu/gpu_rgx/m1.11ED5425693/kernel/drivers/staging/imgtec/pvr_sync2.c:		PVR_DUMPDEBUG_LOG(dump_debug_printf,
gpu/gpu_rgx/m1.11ED5425693/kernel/drivers/staging/imgtec/pvr_sync2.c:		PVR_DUMPDEBUG_LOG(pfnDumpDebugPrintf, pvDumpDebugFile,
gpu/gpu_rgx/m1.11ED5425693/kernel/drivers/staging/imgtec/pvr_sync2.c:		PVR_DUMPDEBUG_LOG(pfnDumpDebugPrintf, pvDumpDebugFile,
gpu/gpu_rgx/m1.11ED5425693/kernel/drivers/staging/imgtec/pvr_sync2.c:			PVR_DUMPDEBUG_LOG(pfnDumpDebugPrintf, pvDumpDebugFile,
gpu/gpu_rgx/m1.11ED5425693/kernel/drivers/staging/imgtec/pvr_sync2.c:				PVR_DUMPDEBUG_LOG(pfnDumpDebugPrintf, pvDumpDebugFile,
gpu/gpu_rgx/m1.11ED5425693/kernel/drivers/staging/imgtec/pvr_sync2.c:				PVR_DUMPDEBUG_LOG(pfnDumpDebugPrintf, pvDumpDebugFile,
gpu/gpu_rgx/m1.11ED5425693/kernel/drivers/staging/imgtec/pvr_sync2.c:				PVR_DUMPDEBUG_LOG(pfnDumpDebugPrintf, pvDumpDebugFile,
gpu/gpu_rgx/m1.11ED5425693/kernel/drivers/staging/imgtec/pvr_sync2.c:		MTKPP_LOG(MTKPP_ID_SYNC, "[%p] sigl tid:%d", fence, MTKGetCurrentProcessIDKM());
gpu/gpu_rgx/m1.11ED5425693/kernel/drivers/staging/imgtec/pvr_sync2.c:	MTKPP_LOG(MTKPP_ID_SYNC, "[%p] wait tid:%d", fence, MTKGetCurrentProcessIDKM());
gpu/gpu_rgx/m1.11ED5425693/kernel/drivers/staging/imgtec/pvr_sync2.c:			MTKPP_LOG(MTKPP_ID_SYNC, "[%p] error tid: %d err %d", fence, MTKGetCurrentProcessIDKM(), err);
gpu/gpu_rgx/m1.11ED5425693/kernel/drivers/staging/imgtec/pvr_sync2.c:			MTKPP_LOG(MTKPP_ID_SYNC, "[%p] sigled tid:%d", fence, MTKGetCurrentProcessIDKM());
gpu/gpu_rgx/m1.11ED5425693/kernel/drivers/staging/imgtec/pvr_sync2.c:				PVR_DUMPDEBUG_LOG(pfnDummy, NULL,
gpu/gpu_rgx/m1.11ED5425693/kernel/drivers/staging/imgtec/pvr_sync2.c:	PVR_DUMPDEBUG_LOG(dump_debug_printf,
gpu/gpu_rgx/m1.11ED5425693/kernel/drivers/staging/imgtec/pvr_sync2.c:	PVR_DUMPDEBUG_LOG(dump_debug_printf,
gpu/gpu_rgx/m1.11ED5425693/kernel/drivers/staging/imgtec/plato/plato_drv.h:#if defined(PLATO_LOG_CHECKPOINTS)
gpu/gpu_rgx/m1.11ED5425693/kernel/drivers/staging/imgtec/pvr_counting_timeline.c:#define PVR_DUMPDEBUG_LOG(pfnDumpDebugPrintf, pvDumpDebugFile, fmt, ...) \
gpu/gpu_rgx/m1.11ED5425693/kernel/drivers/staging/imgtec/pvr_counting_timeline.c:	PVR_DUMPDEBUG_LOG(dump_debug_printf,
gpu/gpu_rgx/m1.11ED5425693/kernel/drivers/staging/imgtec/pvr_counting_timeline.c:		PVR_DUMPDEBUG_LOG(pfnDumpDebugPrintf, pvDumpDebugFile,
gpu/gpu_rgx/m1.11ED5425693/kernel/drivers/staging/imgtec/pvr_counting_timeline.c:			PVR_DUMPDEBUG_LOG(pfnDumpDebugPrintf, pvDumpDebugFile,
gpu/gpu_rgx/m1.11ED5425693/kernel/drivers/staging/imgtec/pvr_sync_file.c:#define PVR_DUMPDEBUG_LOG(pfnDumpDebugPrintf, pvDumpDebugFile, fmt, ...) 
gpu/gpu_rgx/m1.11ED5425693/kernel/drivers/staging/imgtec/pvr_sync_file.c:		PVR_DUMPDEBUG_LOG(pfnDumpDebugPrintf, pvDumpDebugFile, "------[ Native Fence Sync: timelines ]------");
gpu/gpu_rgx/m1.11ED5425693/kernel/drivers/staging/imgtec/pvr_sync_file.c:	PVR_DUMPDEBUG_LOG(dump_debug_printf,
gpu/gpu_rgx/m1.11ED5425693/kernel/drivers/staging/imgtec/pvr_sync_file.c:		PVR_DUMPDEBUG_LOG(dump_debug_printf,
gpu/gpu_rgx/m1.11ED5425693/kernel/drivers/staging/imgtec/pvr_fence.c:#define PVR_DUMPDEBUG_LOG(pfnDumpDebugPrintf, pvDumpDebugFile, fmt, ...) \
gpu/gpu_rgx/m1.11ED5425693/kernel/drivers/staging/imgtec/pvr_fence.c:	PVR_DUMPDEBUG_LOG(pfnDumpDebugPrintf, pvDumpDebugFile,
gpu/gpu_rgx/m1.11ED5425693/kernel/drivers/staging/imgtec/pvr_fence.c:		PVR_DUMPDEBUG_LOG(pfnDumpDebugPrintf, pvDumpDebugFile,
gpu/gpu_rgx/m1.11ED5425693/kernel/drivers/staging/imgtec/pvr_fence.c:		PVR_DUMPDEBUG_LOG(pfnDumpDebugPrintf, pvDumpDebugFile,
gpu/gpu_rgx/m1.11ED5425693/kernel/drivers/staging/imgtec/pvr_fence.c:		PVR_DUMPDEBUG_LOG(pfnDumpDebugPrintf, pvDumpDebugFile,
gpu/gpu_rgx/m1.11ED5425693/kernel/drivers/staging/imgtec/pvr_fence.c:			PVR_DUMPDEBUG_LOG(pfnDummy, NULL,
gpu/gpu_rgx/m1.11ED5425693/include/public/powervr/mem_types.h:typedef uint32_t IMG_DEVMEM_LOG2ALIGN_T;
gpu/gpu_rgx/m1.11ED5425693/include/rgx_mips.h:#define RGXMIPSFW_LOG2_PAGE_SIZE_4K              (12)
gpu/gpu_rgx/m1.11ED5425693/include/rgx_mips.h:#define RGXMIPSFW_PAGE_SIZE_4K                   (0x1 << RGXMIPSFW_LOG2_PAGE_SIZE_4K)
gpu/gpu_rgx/m1.11ED5425693/include/rgx_mips.h:#define RGXMIPSFW_LOG2_PAGE_SIZE_64K             (16)
gpu/gpu_rgx/m1.11ED5425693/include/rgx_mips.h:#define RGXMIPSFW_PAGE_SIZE_64K                  (0x1 << RGXMIPSFW_LOG2_PAGE_SIZE_64K)
gpu/gpu_rgx/m1.11ED5425693/include/rgx_mips.h:#define RGXMIPSFW_LOG2_PAGETABLE_PAGE_SIZE       (15)
gpu/gpu_rgx/m1.11ED5425693/include/rgx_mips.h:#define RGXMIPSFW_LOG2_PTE_ENTRY_SIZE            (2)
gpu/gpu_rgx/m1.11ED5425693/include/rgx_mips.h:#define RGXMIPSFW_TRAMPOLINE_LOG2_NUMPAGES       (2)
gpu/gpu_rgx/m1.11ED5425693/include/rgx_mips.h:#define RGXMIPSFW_TRAMPOLINE_NUMPAGES            (1 << RGXMIPSFW_TRAMPOLINE_LOG2_NUMPAGES)
gpu/gpu_rgx/m1.11ED5425693/include/rgx_mips.h:#define RGXMIPSFW_TRAMPOLINE_SIZE                (RGXMIPSFW_TRAMPOLINE_NUMPAGES << RGXMIPSFW_LOG2_PAGE_SIZE_4K)
gpu/gpu_rgx/m1.11ED5425693/include/rgx_mips.h:#define RGXMIPSFW_TRAMPOLINE_LOG2_SEGMENT_SIZE   (RGXMIPSFW_TRAMPOLINE_LOG2_NUMPAGES + RGXMIPSFW_LOG2_PAGE_SIZE_4K)
gpu/gpu_rgx/m1.11ED5425693/include/rgx_mips.h:#define RGXMIPSFW_SENSITIVE_ADDR(a)              (RGXMIPSFW_BOOT_REMAP_PHYS_ADDR_IN == (~((1<<RGXMIPSFW_TRAMPOLINE_LOG2_SEGMENT_SIZE)-1) & a))
gpu/gpu_rgx/m1.11ED5425693/include/rgx_mips.h:#define RGXMIPSFW_BOOT_REMAP_LOG2_SEGMENT_SIZE   (12)
gpu/gpu_rgx/m1.11ED5425693/include/rgx_mips.h:#define RGXMIPSFW_DATA_REMAP_LOG2_SEGMENT_SIZE   (12)
gpu/gpu_rgx/m1.11ED5425693/include/rgx_mips.h:#define RGXMIPSFW_CODE_REMAP_LOG2_SEGMENT_SIZE   (12)
gpu/gpu_rgx/m1.11ED5425693/include/config_kernel_eng_mt6765.h:#define PVRSRV_APPHINT_DISABLEFEDLOGGING IMG_FALSE
gpu/gpu_rgx/m1.11ED5425693/include/config_kernel_eng_mt6765.h:#define PVRSRV_APPHINT_ENABLEHTBLOGGROUP 0
gpu/gpu_rgx/m1.11ED5425693/include/config_kernel_eng_mt6765.h:#define PVRSRV_APPHINT_ENABLELOGGROUP RGXFWIF_LOG_TYPE_NONE
gpu/gpu_rgx/m1.11ED5425693/include/config_kernel_eng_mt6765.h:#define PVRSRV_APPHINT_FIRMWARELOGTYPE 0
gpu/gpu_rgx/m1.11ED5425693/include/config_kernel_eng_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_TQ3D 14
gpu/gpu_rgx/m1.11ED5425693/include/config_kernel_eng_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_TQ2D 14
gpu/gpu_rgx/m1.11ED5425693/include/config_kernel_eng_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_CDM 13
gpu/gpu_rgx/m1.11ED5425693/include/config_kernel_eng_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_TA 15
gpu/gpu_rgx/m1.11ED5425693/include/config_kernel_eng_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_3D 16
gpu/gpu_rgx/m1.11ED5425693/include/config_kernel_eng_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_KICKSYNC 13
gpu/gpu_rgx/m1.11ED5425693/include/config_kernel_eng_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_TQ3D 15
gpu/gpu_rgx/m1.11ED5425693/include/config_kernel_eng_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_TQ2D 15
gpu/gpu_rgx/m1.11ED5425693/include/config_kernel_eng_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_CDM 15
gpu/gpu_rgx/m1.11ED5425693/include/config_kernel_eng_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_TA 16
gpu/gpu_rgx/m1.11ED5425693/include/config_kernel_eng_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_3D 17
gpu/gpu_rgx/m1.11ED5425693/include/config_kernel_eng_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_KICKSYNC 13
gpu/gpu_rgx/m1.11ED5425693/include/log2.h:#ifndef LOG2_H
gpu/gpu_rgx/m1.11ED5425693/include/log2.h:#define LOG2_H
gpu/gpu_rgx/m1.11ED5425693/include/log2.h:#endif /* LOG2_H */
gpu/gpu_rgx/m1.11ED5425693/include/devicemem_typedefs.h:typedef IMG_DEVMEM_LOG2ALIGN_T DEVMEM_LOG2ALIGN_T;  /*!< Typedef for DeviceMem LOG2 Alignment */
gpu/gpu_rgx/m1.11ED5425693/include/devicemem_typedefs.h:    IMG_DEVMEM_LOG2ALIGN_T uiLog2ContiguityGuarantee;
gpu/gpu_rgx/m1.11ED5425693/include/rgx_heaps.h: * This means the RGX_BIF_TILING_HEAP_ALIGN_LOG2_FROM_XSTRIDE macro can be
gpu/gpu_rgx/m1.11ED5425693/include/rgx_heaps.h:#define RGX_BIF_TILING_HEAP_ALIGN_LOG2_FROM_XSTRIDE(X)       (4+X+1+8)
gpu/gpu_rgx/m1.11ED5425693/include/rgx_heaps.h:#define RGX_BIF_TILING_HEAP_LOG2_ALIGN_TO_STRIDE_BASE              (4)
gpu/gpu_rgx/m1.11ED5425693/include/pvr_debug.h:	#define PVR_LOG_ERROR(_rc, _call) 
gpu/gpu_rgx/m1.11ED5425693/include/pvr_debug.h:	#define PVR_LOG_IF_ERROR(_rc, _call)
gpu/gpu_rgx/m1.11ED5425693/include/pvr_debug.h:	#define PVR_LOGR_IF_NOMEM(_expr, _call)
gpu/gpu_rgx/m1.11ED5425693/include/pvr_debug.h:	#define PVR_LOGG_IF_NOMEM(_expr, _call, _err, _go)
gpu/gpu_rgx/m1.11ED5425693/include/pvr_debug.h:	#define PVR_LOGR_IF_ERROR(_rc, _call)
gpu/gpu_rgx/m1.11ED5425693/include/pvr_debug.h:	#define PVR_LOGRN_IF_ERROR(_rc, _call)
gpu/gpu_rgx/m1.11ED5425693/include/pvr_debug.h:	#define PVR_LOGG_IF_ERROR(_rc, _call, _go) 
gpu/gpu_rgx/m1.11ED5425693/include/pvr_debug.h:	#define PVR_LOG_IF_FALSE(_expr, _msg)
gpu/gpu_rgx/m1.11ED5425693/include/pvr_debug.h:	#define PVR_LOGR_IF_FALSE(_expr, _msg, _rc)
gpu/gpu_rgx/m1.11ED5425693/include/pvr_debug.h:	#define PVR_LOGG_IF_FALSE(_expr, _msg, _go)
gpu/gpu_rgx/m1.11ED5425693/include/pvr_debug.h:	#define PVR_LOG_ERROR(_rc, _call) (void)(_rc)
gpu/gpu_rgx/m1.11ED5425693/include/pvr_debug.h:	#define PVR_LOG_IF_ERROR(_rc, _call) (void)(_rc)
gpu/gpu_rgx/m1.11ED5425693/include/pvr_debug.h:	#define PVR_LOGR_IF_NOMEM(_expr, _call) do { if (unlikely(_expr == NULL)) { return PVRSRV_ERROR_OUT_OF_MEMORY; } MSC_SUPPRESS_4127 } while (0)
gpu/gpu_rgx/m1.11ED5425693/include/pvr_debug.h:	#define PVR_LOGG_IF_NOMEM(_expr, _call, _err, _go) do { if (unlikely(_expr == NULL)) { _err = PVRSRV_ERROR_OUT_OF_MEMORY; goto _go; } MSC_SUPPRESS_4127	} while (0)
gpu/gpu_rgx/m1.11ED5425693/include/pvr_debug.h:	#define PVR_LOGR_IF_ERROR(_rc, _call) do { if (unlikely(_rc != PVRSRV_OK)) { return (_rc); } MSC_SUPPRESS_4127 } while(0)
gpu/gpu_rgx/m1.11ED5425693/include/pvr_debug.h:	#define PVR_LOGRN_IF_ERROR(_rc, _call) do { if (unlikely(_rc != PVRSRV_OK)) { return; } MSC_SUPPRESS_4127 } while(0)
gpu/gpu_rgx/m1.11ED5425693/include/pvr_debug.h:	#define PVR_LOGG_IF_ERROR(_rc, _call, _go) do { if (unlikely(_rc != PVRSRV_OK)) { goto _go; } MSC_SUPPRESS_4127 } while(0)
gpu/gpu_rgx/m1.11ED5425693/include/pvr_debug.h:	#define PVR_LOG_IF_FALSE(_expr, _msg) (void)(_expr)
gpu/gpu_rgx/m1.11ED5425693/include/pvr_debug.h:	#define PVR_LOGR_IF_FALSE(_expr, _msg, _rc) do { if (unlikely(!(_expr))) { return (_rc); } MSC_SUPPRESS_4127 } while(0)
gpu/gpu_rgx/m1.11ED5425693/include/pvr_debug.h:	#define PVR_LOGG_IF_FALSE(_expr, _msg, _go) do { if (unlikely(!(_expr))) { goto _go; } MSC_SUPPRESS_4127 } while(0)
gpu/gpu_rgx/m1.11ED5425693/include/pvr_debug.h:	#define PVR_LOG_WARN(_rc, _call) 
gpu/gpu_rgx/m1.11ED5425693/include/pvr_debug.h:	#define PVR_LOG_WARN_IF_ERROR(_rc, _call) 
gpu/gpu_rgx/m1.11ED5425693/include/pvr_debug.h:	#define PVR_LOG_WARN(_rc, _call)
gpu/gpu_rgx/m1.11ED5425693/include/pvr_debug.h:	#define PVR_LOG_WARN_IF_ERROR(_rc, _call)
gpu/gpu_rgx/m1.11ED5425693/include/pvr_debug.h:#ifdef PVR_DISABLE_LOGGING
gpu/gpu_rgx/m1.11ED5425693/include/pvr_debug.h:#define PVR_LOG(X)
gpu/gpu_rgx/m1.11ED5425693/include/pvr_debug.h:#define PVR_LOG(X) PVRSRVReleasePrintf X
gpu/gpu_rgx/m1.11ED5425693/include/pvr_debug.h:                Invoked from the macro PVR_LOG().
gpu/gpu_rgx/m1.11ED5425693/include/pvr_debug.h:    @def PVR_LOG_ERROR
gpu/gpu_rgx/m1.11ED5425693/include/pvr_debug.h:    @def PVR_LOG_IF_ERROR
gpu/gpu_rgx/m1.11ED5425693/include/pvr_debug.h:    @def PVR_LOGR_IF_NOMEM
gpu/gpu_rgx/m1.11ED5425693/include/pvr_debug.h:    @def PVR_LOGG_IF_NOMEM
gpu/gpu_rgx/m1.11ED5425693/include/pvr_debug.h:    @def PVR_LOGR_IF_ERROR
gpu/gpu_rgx/m1.11ED5425693/include/pvr_debug.h:    @def PVR_LOGRN_IF_ERROR
gpu/gpu_rgx/m1.11ED5425693/include/pvr_debug.h:    @def PVR_LOGG_IF_ERROR
gpu/gpu_rgx/m1.11ED5425693/include/pvr_debug.h:    @def PVR_LOG_IF_FALSE
gpu/gpu_rgx/m1.11ED5425693/include/pvr_debug.h:    @def PVR_LOGR_IF_FALSE
gpu/gpu_rgx/m1.11ED5425693/include/pvr_debug.h:    @def PVR_LOGG_IF_FALSE
gpu/gpu_rgx/m1.11ED5425693/include/pvr_debug.h:    @def PVR_LOG_WARN
gpu/gpu_rgx/m1.11ED5425693/include/pvr_debug.h:    @def PVR_LOG_WARN_IF_ERROR
gpu/gpu_rgx/m1.11ED5425693/include/pvr_debug.h:    @def PVR_LOG
gpu/gpu_rgx/m1.11ED5425693/include/pvr_debug.h:    This macro will print messages only if PVRSRV_NEED_PVR_LOG macro is defined.
gpu/gpu_rgx/m1.11ED5425693/include/pvr_debug.h:    @brief Prints empty line to a log (PVRSRV_NEED_PVR_LOG must be defined).
gpu/gpu_rgx/m1.11ED5425693/include/mtk_pp.h:#define MTKPP_LOG(id, ...) 																\
gpu/gpu_rgx/m1.11ED5425693/include/mtk_pp.h:void MTKPP_LOGTIME(MTKPP_ID id, const char *);
gpu/gpu_rgx/m1.11ED5425693/include/mtk_pp.h:#define MTKPP_LOG(...)
gpu/gpu_rgx/m1.11ED5425693/include/mtk_pp.h:#define MTKPP_LOGTIME(...)
gpu/gpu_rgx/m1.11ED5425693/include/img_3dtypes.h:typedef enum _IMG_LOGICOP_
gpu/gpu_rgx/m1.11ED5425693/include/img_3dtypes.h:	IMG_LOGICOP_CLEAR = 0,     /**< Result = 0 */
gpu/gpu_rgx/m1.11ED5425693/include/img_3dtypes.h:	IMG_LOGICOP_SET,           /**< Result = -1 */
gpu/gpu_rgx/m1.11ED5425693/include/img_3dtypes.h:	IMG_LOGICOP_COPY,          /**< Result = Source */
gpu/gpu_rgx/m1.11ED5425693/include/img_3dtypes.h:	IMG_LOGICOP_COPY_INVERTED, /**< Result = ~Source */
gpu/gpu_rgx/m1.11ED5425693/include/img_3dtypes.h:	IMG_LOGICOP_NOOP,          /**< Result = Destination */
gpu/gpu_rgx/m1.11ED5425693/include/img_3dtypes.h:	IMG_LOGICOP_INVERT,        /**< Result = ~Destination */
gpu/gpu_rgx/m1.11ED5425693/include/img_3dtypes.h:	IMG_LOGICOP_AND,           /**< Result = Source & Destination */
gpu/gpu_rgx/m1.11ED5425693/include/img_3dtypes.h:	IMG_LOGICOP_NAND,          /**< Result = ~(Source & Destination) */
gpu/gpu_rgx/m1.11ED5425693/include/img_3dtypes.h:	IMG_LOGICOP_OR,            /**< Result = Source | Destination */
gpu/gpu_rgx/m1.11ED5425693/include/img_3dtypes.h:	IMG_LOGICOP_NOR,           /**< Result = ~(Source | Destination) */
gpu/gpu_rgx/m1.11ED5425693/include/img_3dtypes.h:	IMG_LOGICOP_XOR,           /**< Result = Source ^ Destination */
gpu/gpu_rgx/m1.11ED5425693/include/img_3dtypes.h:	IMG_LOGICOP_EQUIV,         /**< Result = ~(Source ^ Destination) */
gpu/gpu_rgx/m1.11ED5425693/include/img_3dtypes.h:	IMG_LOGICOP_AND_REVERSE,   /**< Result = Source & ~Destination */
gpu/gpu_rgx/m1.11ED5425693/include/img_3dtypes.h:	IMG_LOGICOP_AND_INVERTED,  /**< Result = ~Source & Destination */
gpu/gpu_rgx/m1.11ED5425693/include/img_3dtypes.h:	IMG_LOGICOP_OR_REVERSE,    /**< Result = Source | ~Destination */
gpu/gpu_rgx/m1.11ED5425693/include/img_3dtypes.h:	IMG_LOGICOP_OR_INVERTED    /**< Result = ~Source | Destination */
gpu/gpu_rgx/m1.11ED5425693/include/img_3dtypes.h:} IMG_LOGICOP;
gpu/gpu_rgx/m1.11ED5425693/include/config_kernel_user_mt6765.h:#define PVRSRV_APPHINT_DISABLEFEDLOGGING IMG_TRUE
gpu/gpu_rgx/m1.11ED5425693/include/config_kernel_user_mt6765.h:#define PVRSRV_APPHINT_ENABLEHTBLOGGROUP 0
gpu/gpu_rgx/m1.11ED5425693/include/config_kernel_user_mt6765.h:#define PVRSRV_APPHINT_ENABLELOGGROUP RGXFWIF_LOG_TYPE_NONE
gpu/gpu_rgx/m1.11ED5425693/include/config_kernel_user_mt6765.h:#define PVRSRV_APPHINT_FIRMWARELOGTYPE 0
gpu/gpu_rgx/m1.11ED5425693/include/config_kernel_user_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_TQ3D 14
gpu/gpu_rgx/m1.11ED5425693/include/config_kernel_user_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_TQ2D 14
gpu/gpu_rgx/m1.11ED5425693/include/config_kernel_user_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_CDM 13
gpu/gpu_rgx/m1.11ED5425693/include/config_kernel_user_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_TA 15
gpu/gpu_rgx/m1.11ED5425693/include/config_kernel_user_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_3D 16
gpu/gpu_rgx/m1.11ED5425693/include/config_kernel_user_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_KICKSYNC 13
gpu/gpu_rgx/m1.11ED5425693/include/config_kernel_user_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_TQ3D 15
gpu/gpu_rgx/m1.11ED5425693/include/config_kernel_user_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_TQ2D 15
gpu/gpu_rgx/m1.11ED5425693/include/config_kernel_user_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_CDM 15
gpu/gpu_rgx/m1.11ED5425693/include/config_kernel_user_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_TA 16
gpu/gpu_rgx/m1.11ED5425693/include/config_kernel_user_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_3D 17
gpu/gpu_rgx/m1.11ED5425693/include/config_kernel_user_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_KICKSYNC 13
gpu/gpu_rgx/m1.11ED5425693/include/img_opts.h:#define IMG_1_11_OPT_DISABLE_FW_LOGGING_BY_DEFAULT 0x1
gpu/gpu_rgx/m1.11ED5425693/include/pdumpdesc.h:#define IMAGE_HEADER_WORD3_LOGICAL_WIDTH_SHIFT		(0)
gpu/gpu_rgx/m1.11ED5425693/include/pdumpdesc.h:#define IMAGE_HEADER_WORD3_LOGICAL_WIDTH_CLRMSK		(0xFFFFFFFFU)
gpu/gpu_rgx/m1.11ED5425693/include/pdumpdesc.h:#define IMAGE_HEADER_WORD4_LOGICAL_HEIGHT_SHIFT		(0)
gpu/gpu_rgx/m1.11ED5425693/include/pdumpdesc.h:#define IMAGE_HEADER_WORD4_LOGICAL_HEIGHT_CLRMSK	(0xFFFFFFFFU)
gpu/gpu_rgx/m1.11ED5425693/services/include/km_apphint_defs.h:X(EnableHTBLogGroup,                UINT32Bitfield, ALWAYS,      PVRSRV_APPHINT_ENABLEHTBLOGGROUP,                htb_loggroup_tbl ) \
gpu/gpu_rgx/m1.11ED5425693/services/include/km_apphint_defs.h:X(EnableLogGroup,                   UINT32Bitfield, ALWAYS,      PVRSRV_APPHINT_ENABLELOGGROUP,                   fwt_loggroup_tbl ) \
gpu/gpu_rgx/m1.11ED5425693/services/include/km_apphint_defs.h:X(FirmwareLogType,                  UINT32List,     ALWAYS,      PVRSRV_APPHINT_FIRMWARELOGTYPE,                  fwt_logtype_tbl  ) \
gpu/gpu_rgx/m1.11ED5425693/services/include/km_apphint_defs.h:X(DisableFEDLogging,                BOOL,           ALWAYS,      PVRSRV_APPHINT_DISABLEFEDLOGGING,                NO_PARAM_TABLE   ) \
gpu/gpu_rgx/m1.11ED5425693/services/include/rgxfw_log_helper.h:#ifndef RGXFW_LOG_HELPER_H
gpu/gpu_rgx/m1.11ED5425693/services/include/rgxfw_log_helper.h:#define RGXFW_LOG_HELPER_H
gpu/gpu_rgx/m1.11ED5425693/services/include/rgxfw_log_helper.h:	RGXFW_LOG_SFGROUPLIST
gpu/gpu_rgx/m1.11ED5425693/services/include/rgxfw_log_helper.h:#endif /* RGXFW_LOG_HELPER_H */
gpu/gpu_rgx/m1.11ED5425693/services/include/htbuffer_types.h:#define HTB_GROUP_ENABLED(SF) (g_auiHTBGroupEnable[HTB_LOG_GROUP_FLAG_GROUP(HTB_SF_GID(SF))] & HTB_LOG_GROUP_FLAG(HTB_SF_GID(SF)))
gpu/gpu_rgx/m1.11ED5425693/services/include/htbuffer_types.h:	HTB_LOGMODE_UNDEF = 0,
gpu/gpu_rgx/m1.11ED5425693/services/include/htbuffer_types.h:	HTB_LOGMODE_ALLPID,
gpu/gpu_rgx/m1.11ED5425693/services/include/htbuffer_types.h:	HTB_LOGMODE_RESTRICTEDPID,
gpu/gpu_rgx/m1.11ED5425693/services/include/htbuffer_types.h:	HTB_LOGMODE_LAST = HTB_LOGMODE_RESTRICTEDPID
gpu/gpu_rgx/m1.11ED5425693/services/include/htbuffer_types.h:} HTB_LOGMODE_CTRL;
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_sf.h:#define RGXFW_LOG_SFGROUPLIST       \
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_sf.h:enum RGXFW_LOG_SFGROUPS {
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_sf.h:	RGXFW_LOG_SFGROUPLIST
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_sf.h:#define RGXFW_LOG_SFIDLIST \
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_sf.h:#define RGXFW_LOG_IDMARKER			(0x70000000U)
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_sf.h:#define RGXFW_LOG_CREATESFID(a,b,e) ((IMG_UINT32)(a) | ((IMG_UINT32)(b)<<12U) | ((IMG_UINT32)(e)<<16U)) | RGXFW_LOG_IDMARKER
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_sf.h:#define RGXFW_LOG_IDMASK			(0xFFF00000)
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_sf.h:#define RGXFW_LOG_VALIDID(I)		(((I) & RGXFW_LOG_IDMASK) == RGXFW_LOG_IDMARKER)
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_sf.h:#define X(a, b, c, d, e) c = RGXFW_LOG_CREATESFID(a,b,e),
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_sf.h:	RGXFW_LOG_SFIDLIST
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_sf.h:} RGXFW_LOG_SFids;
gpu/gpu_rgx/m1.11ED5425693/services/include/shared/ra.h:typedef IMG_UINT32 RA_LOG2QUANTUM_T;
gpu/gpu_rgx/m1.11ED5425693/services/include/shared/ra.h:           RA_LOG2QUANTUM_T uLog2Quantum,
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_NONE			0x00000000U
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_TRACE			0x00000001U
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_GROUP_MAIN		0x00000002U
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_GROUP_MTS		0x00000004U
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_GROUP_CLEANUP	0x00000008U
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_GROUP_CSW		0x00000010U
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_GROUP_BIF		0x00000020U
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_GROUP_PM		0x00000040U
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_GROUP_RTD		0x00000080U
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_GROUP_SPM		0x00000100U
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_GROUP_POW		0x00000200U
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_GROUP_HWR		0x00000400U
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_GROUP_HWP		0x00000800U
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_GROUP_RPM		0x00001000U
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_GROUP_DMA		0x00002000U
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_GROUP_MISC		0x00004000U
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_GROUP_DEBUG	0x80000000U
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_GROUP_MASK		0x80007FFEU
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_MASK			0x80007FFFU
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:#define RGXFWIF_LOG_GROUPS_STRING_LIST   "main,mts,cleanup,csw,bif,pm,rtd,spm,pow,hwr,hwp,rpm,dma,misc,debug"
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:} RGXFWIF_LOG_GROUP_MAP_ENTRY;
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:  Macro for use with the RGXFWIF_LOG_GROUP_MAP_ENTRY type to create a lookup
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:#define RGXFWIF_LOG_GROUP_NAME_VALUE_MAP { "none",    RGXFWIF_LOG_TYPE_NONE }, \
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:                                         { "main",    RGXFWIF_LOG_TYPE_GROUP_MAIN }, \
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:                                         { "mts",     RGXFWIF_LOG_TYPE_GROUP_MTS }, \
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:                                         { "cleanup", RGXFWIF_LOG_TYPE_GROUP_CLEANUP }, \
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:                                         { "csw",     RGXFWIF_LOG_TYPE_GROUP_CSW }, \
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:                                         { "bif",     RGXFWIF_LOG_TYPE_GROUP_BIF }, \
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:                                         { "pm",      RGXFWIF_LOG_TYPE_GROUP_PM }, \
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:                                         { "rtd",     RGXFWIF_LOG_TYPE_GROUP_RTD }, \
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:                                         { "spm",     RGXFWIF_LOG_TYPE_GROUP_SPM }, \
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:                                         { "pow",     RGXFWIF_LOG_TYPE_GROUP_POW }, \
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:                                         { "hwr",     RGXFWIF_LOG_TYPE_GROUP_HWR }, \
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:                                         { "hwp",     RGXFWIF_LOG_TYPE_GROUP_HWP }, \
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:                                         { "rpm",     RGXFWIF_LOG_TYPE_GROUP_RPM }, \
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:                                         { "dma",     RGXFWIF_LOG_TYPE_GROUP_DMA }, \
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:                                         { "misc",    RGXFWIF_LOG_TYPE_GROUP_MISC }, \
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:                                         { "debug",   RGXFWIF_LOG_TYPE_GROUP_DEBUG }
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:#define RGXFWIF_LOG_ENABLED_GROUPS_LIST_PFSPEC  "%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s"
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:#define RGXFWIF_LOG_ENABLED_GROUPS_LIST(types)  (((types) & RGXFWIF_LOG_TYPE_GROUP_MAIN)	?("main ")		:("")),		\
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:                                                (((types) & RGXFWIF_LOG_TYPE_GROUP_MTS)		?("mts ")		:("")),		\
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:                                                (((types) & RGXFWIF_LOG_TYPE_GROUP_CLEANUP)	?("cleanup ")	:("")),		\
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:                                                (((types) & RGXFWIF_LOG_TYPE_GROUP_CSW)		?("csw ")		:("")),		\
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:                                                (((types) & RGXFWIF_LOG_TYPE_GROUP_BIF)		?("bif ")		:("")),		\
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:                                                (((types) & RGXFWIF_LOG_TYPE_GROUP_PM)		?("pm ")		:("")),		\
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:                                                (((types) & RGXFWIF_LOG_TYPE_GROUP_RTD)		?("rtd ")		:("")),		\
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:                                                (((types) & RGXFWIF_LOG_TYPE_GROUP_SPM)		?("spm ")		:("")),		\
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:                                                (((types) & RGXFWIF_LOG_TYPE_GROUP_POW)		?("pow ")		:("")),		\
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:                                                (((types) & RGXFWIF_LOG_TYPE_GROUP_HWR)		?("hwr ")		:("")),		\
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:                                                (((types) & RGXFWIF_LOG_TYPE_GROUP_HWP)		?("hwp ")		:("")),		\
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:                                                (((types) & RGXFWIF_LOG_TYPE_GROUP_RPM)		?("rpm ")		:("")),		\
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:                                                (((types) & RGXFWIF_LOG_TYPE_GROUP_DMA)		?("dma ")		:("")),		\
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:                                                (((types) & RGXFWIF_LOG_TYPE_GROUP_MISC)	?("misc ")		:("")),		\
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:                                                (((types) & RGXFWIF_LOG_TYPE_GROUP_DEBUG)	?("debug ")		:(""))
gpu/gpu_rgx/m1.11ED5425693/services/include/rgx_fwif_km.h:	RGXFWIF_KCCB_CMD_LOGTYPE_UPDATE						= 203U | RGX_CMD_MAGIC_DWORD_SHIFTED, /*!< Ask the firmware to update its cached ui32LogType value from the (shared) tracebuf control structure */
gpu/gpu_rgx/m1.11ED5425693/services/include/htbuffer_sf.h:#define HTB_LOG_GROUPS_STRING_LIST   "ctrl,mmu,sync,main,brg"
gpu/gpu_rgx/m1.11ED5425693/services/include/htbuffer_sf.h:#define HTB_LOG_ENABLED_GROUPS_LIST_PFSPEC  "%s%s%s%s%s"
gpu/gpu_rgx/m1.11ED5425693/services/include/htbuffer_sf.h:#define HTB_LOG_SFGROUPLIST                               \
gpu/gpu_rgx/m1.11ED5425693/services/include/htbuffer_sf.h:#define HTB_LOG_SFIDLIST \
gpu/gpu_rgx/m1.11ED5425693/services/include/htbuffer_sf.h:X( 1,  HTB_GROUP_CTRL,  HTB_SF_CTRL_LOGMODE,            "HTB log mode set to %d (1- all PID, 2 - restricted PID)\n", 1) \
gpu/gpu_rgx/m1.11ED5425693/services/include/htbuffer_sf.h:X( 4,  HTB_GROUP_CTRL,  HTB_SF_CTRL_LOG_LEVEL,          "HTB log level set to %d\n", 1) \
gpu/gpu_rgx/m1.11ED5425693/services/include/htbuffer_sf.h:typedef enum _HTB_LOG_SFGROUPS {
gpu/gpu_rgx/m1.11ED5425693/services/include/htbuffer_sf.h:	HTB_LOG_SFGROUPLIST
gpu/gpu_rgx/m1.11ED5425693/services/include/htbuffer_sf.h:} HTB_LOG_SFGROUPS;
gpu/gpu_rgx/m1.11ED5425693/services/include/htbuffer_sf.h:#define HTB_LOG_GROUP_FLAG_GROUP(gid)   ( (gid-1) / HTB_FLAG_NUM_BITS_IN_EL )
gpu/gpu_rgx/m1.11ED5425693/services/include/htbuffer_sf.h:#define HTB_LOG_GROUP_FLAG(gid)         (gid? (0x1 << ((gid-1)%HTB_FLAG_NUM_BITS_IN_EL)): 0)
gpu/gpu_rgx/m1.11ED5425693/services/include/htbuffer_sf.h:#define HTB_LOG_GROUP_FLAG_NAME(gid)    HTB_LOG_TYPE_ ## gid
gpu/gpu_rgx/m1.11ED5425693/services/include/htbuffer_sf.h:typedef enum _HTB_LOG_TYPE {
gpu/gpu_rgx/m1.11ED5425693/services/include/htbuffer_sf.h:#define X(a, b) HTB_LOG_GROUP_FLAG_NAME(b) = HTB_LOG_GROUP_FLAG(a),
gpu/gpu_rgx/m1.11ED5425693/services/include/htbuffer_sf.h:	HTB_LOG_SFGROUPLIST
gpu/gpu_rgx/m1.11ED5425693/services/include/htbuffer_sf.h:} HTB_LOG_TYPE;
gpu/gpu_rgx/m1.11ED5425693/services/include/htbuffer_sf.h:#define HTB_LOG_IDMARKER            (0x70000000)
gpu/gpu_rgx/m1.11ED5425693/services/include/htbuffer_sf.h:#define HTB_LOG_CREATESFID(a,b,e)   (((a) | (b << 12) | (e << 16)) | HTB_LOG_IDMARKER)
gpu/gpu_rgx/m1.11ED5425693/services/include/htbuffer_sf.h:#define HTB_LOG_IDMASK              (0xFFF00000)
gpu/gpu_rgx/m1.11ED5425693/services/include/htbuffer_sf.h:#define HTB_LOG_VALIDID(I)          ( ((I) & HTB_LOG_IDMASK) == HTB_LOG_IDMARKER )
gpu/gpu_rgx/m1.11ED5425693/services/include/htbuffer_sf.h:typedef enum HTB_LOG_SFids {
gpu/gpu_rgx/m1.11ED5425693/services/include/htbuffer_sf.h:#define X(a, b, c, d, e) c = HTB_LOG_CREATESFID(a,b,e),
gpu/gpu_rgx/m1.11ED5425693/services/include/htbuffer_sf.h:	HTB_LOG_SFIDLIST
gpu/gpu_rgx/m1.11ED5425693/services/include/htbuffer_sf.h:} HTB_LOG_SFids;
gpu/gpu_rgx/m1.11ED5425693/services/include/htbuffer_sf.h:#define HTB_LOG_HEADER_SIZE         4
gpu/gpu_rgx/m1.11ED5425693/services/include/htbuffer_sf.h:#define HTB_LOG_MAX_PARAMS          15
gpu/gpu_rgx/m1.11ED5425693/services/server/common/tlintern.c:		PVR_LOG_IF_ERROR(eError, "OSEventObjectDestroy");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_mmu.c:	"PAGE_CATALOGUE",
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_mmu.c:			PVR_LOGG_IF_ERROR(eErr, "PDumpSNPrintf", ErrOut);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_mmu.c:     		PVR_LOGG_IF_ERROR(eErr, "PDumpWriteParameter", ErrOut);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/htbserver.c:#define HTB_LOG_RETRY_COUNT 5
gpu/gpu_rgx/m1.11ED5425693/services/server/common/htbserver.c:	HTB_LOGMODE_CTRL eLogMode;      /*!< Logging mode control */
gpu/gpu_rgx/m1.11ED5425693/services/server/common/htbserver.c:			PVR_DUMPDEBUG_LOG("------[ HTB Log state: On ]------");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/htbserver.c:			PVR_DUMPDEBUG_LOG("HTB Log mode: %d", g_sCtrl.eLogMode);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/htbserver.c:			PVR_DUMPDEBUG_LOG("HTB Log level: %d", g_sCtrl.ui32LogLevel);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/htbserver.c:			PVR_DUMPDEBUG_LOG("HTB Buffer Opmode: %d", g_sCtrl.eOpMode);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/htbserver.c:				PVR_DUMPDEBUG_LOG("HTB Log group %d: %x", i, g_auiHTBGroupEnable[i]);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/htbserver.c:			PVR_DUMPDEBUG_LOG("------[ HTB Log state: Off ]------");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/htbserver.c:	PVR_LOG_IF_ERROR(eError, "PVRSRVRegisterDbgRequestNotify");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/htbserver.c:	g_sCtrl.eLogMode = HTB_LOGMODE_ALLPID;
gpu/gpu_rgx/m1.11ED5425693/services/server/common/htbserver.c:	PVR_LOGR_IF_ERROR(eError, "OSSpinLockCreate");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/htbserver.c:		PVR_LOG(("Increasing HTBufferSize to %uKB", g_ui32HTBufferSize));
gpu/gpu_rgx/m1.11ED5425693/services/server/common/htbserver.c:	                    HTB_LOGMODE_UNDEF, HTB_OPMODE_UNDEF);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/htbserver.c:	return HTBControlKM(0, NULL, 0, 0, HTB_LOGMODE_UNDEF, ui32Value);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/htbserver.c:	const HTB_LOGMODE_CTRL eLogMode,
gpu/gpu_rgx/m1.11ED5425693/services/server/common/htbserver.c:	IMG_UINT32 ui32RetryCount = HTB_LOG_RETRY_COUNT;
gpu/gpu_rgx/m1.11ED5425693/services/server/common/htbserver.c:		PVR_LOGR_IF_ERROR(eError, "TLStreamCreate");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/htbserver.c:		PVR_LOGR_IF_ERROR(eError, "TLStreamReconfigure");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/htbserver.c:	/* HTB_LOGMODE_ALLPID overrides ui32EnablePID */
gpu/gpu_rgx/m1.11ED5425693/services/server/common/htbserver.c:	if ( HTB_LOGMODE_ALLPID == eLogMode )
gpu/gpu_rgx/m1.11ED5425693/services/server/common/htbserver.c:	if ( HTB_LOGMODE_UNDEF != eLogMode )
gpu/gpu_rgx/m1.11ED5425693/services/server/common/htbserver.c:	PVR_LOG_IF_ERROR(eError, "HTBLog");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/htbserver.c:	PVR_LOG_IF_ERROR(eError, "HTBLog");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/htbserver.c:	eError = HTBLog((IMG_HANDLE) NULL, 0, ui64Time, HTB_SF_CTRL_LOG_LEVEL, g_sCtrl.ui32LogLevel);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/htbserver.c:	PVR_LOG_IF_ERROR(eError, "HTBLog");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/htbserver.c:	eError = HTBLog((IMG_HANDLE) NULL, 0, ui64Time, HTB_SF_CTRL_LOGMODE, g_sCtrl.eLogMode);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/htbserver.c:	PVR_LOG_IF_ERROR(eError, "HTBLog");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/htbserver.c:		PVR_LOG_IF_ERROR(eError, "HTBLog");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/htbserver.c:		PVR_LOG_IF_ERROR(eError, "HTBLog");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/htbserver.c:		HTB_LOG_SFids SF,
gpu/gpu_rgx/m1.11ED5425693/services/server/common/htbserver.c:	IMG_UINT32 aui32MessageBuffer[HTB_LOG_HEADER_SIZE+HTB_LOG_MAX_PARAMS];
gpu/gpu_rgx/m1.11ED5425693/services/server/common/htbserver.c:	 * packet size is 4*(HTB_LOG_HEADER_SIZE+HTB_LOG_MAX_PARAMS) = 72 bytes,
gpu/gpu_rgx/m1.11ED5425693/services/server/common/htbserver.c:	IMG_UINT32 ui32RetryCount = HTB_LOG_RETRY_COUNT;
gpu/gpu_rgx/m1.11ED5425693/services/server/common/htbserver.c:	IMG_UINT32 ui32MessageSize = 4 * (HTB_LOG_HEADER_SIZE+ui32NumArgs);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/htbserver.c:	PVR_LOGR_IF_FALSE(ui32NumArgs == HTB_SF_PARAMNUM(SF), "ui32NumArgs invalid", PVRSRV_ERROR_INVALID_PARAMS);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/htbserver.c:	PVR_LOGR_IF_FALSE(!(ui32NumArgs != 0 && aui32Args == NULL), "aui32Args invalid", PVRSRV_ERROR_INVALID_PARAMS);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/htbserver.c:			&& ( 0 == PID || ~0 == PID || HTB_LOGMODE_ALLPID == g_sCtrl.eLogMode || _ValidPID(PID) )
gpu/gpu_rgx/m1.11ED5425693/services/server/common/connection_server.c:	PVR_LOGG_IF_ERROR(eError, "OSConnectionPrivateDataInit", failure);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/connection_server.c:	PVR_LOG(("%s connected", psConnection->pszProcName));
gpu/gpu_rgx/m1.11ED5425693/services/server/common/connection_server.c:	PVR_LOG(("%s disconnected", psConnectionData->pszProcName));
gpu/gpu_rgx/m1.11ED5425693/services/server/common/connection_server.c:		PVR_DUMPDEBUG_LOG(ACTIVE_PREFIX " No active connections");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/connection_server.c:				PVR_DUMPDEBUG_LOG("%s", sActiveConnections);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/connection_server.c:			PVR_DUMPDEBUG_LOG("%s", sActiveConnections);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv.c:	PVR_DUMPDEBUG_LOG("    Number of deferred cleanup items : %u",
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv.c:		PVR_LOG_IF_ERROR(eError, "OSEventObjectSignal");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv.c:	PVR_LOGG_IF_ERROR(eError, "OSEventObjectCreate", Exit);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv.c:	PVR_LOGG_IF_ERROR(eError, "OSLockCreate", Exit);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv.c:	PVR_LOG_IF_ERROR(eRc, "OSEventObjectClose");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv.c:	PVR_LOG_IF_ERROR(eRc, "OSEventObjectClose");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv.c:				  RGXKM_DEVICE_STATE_DISABLE_DW_LOGGING_EN))
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv.c:	PVR_LOGRN_IF_ERROR(eError, "OSEventObjectOpen");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv.c:	PVR_LOG_IF_ERROR(eError, "OSEventObjectClose");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv.c:	PVR_LOGRN_IF_ERROR(eError, "OSEventObjectOpen");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv.c:	PVR_LOG_IF_ERROR(eError, "OSEventObjectClose");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv.c:	PVR_LOGR_IF_NOMEM(psDeviceNode, "OSAllocZMem");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv.c:	PVR_LOGR_IF_NOMEM(psDeviceNode->papsRegisteredPhysHeaps, "OSAllocZMem");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv.c:	PVR_LOGR_IF_ERROR(eError, "PhysHeapRegister");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv.c:	PVR_LOGR_IF_ERROR(eError, "PhysHeapAcquire");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv.c:	PVR_LOGG_IF_ERROR(eError, "_CleanupThreadPrepare", Error);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv.c:	PVR_LOGG_IF_ERROR(eError, "OSEventObjectCreate", Error);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv.c:	PVR_LOGG_IF_ERROR(eError, "InfoPageCreate", Error);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv.c:	PVR_LOGG_IF_ERROR(eError, "OSLockCreate", Error);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv.c:			PVR_LOG_IF_ERROR(eError, "OSEventObjectSignal");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv.c:		PVR_LOG_IF_ERROR(eError, "OSThreadDestroy");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv.c:		PVR_LOG_IF_ERROR(eError, "OSEventObjectDestroy");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv.c:			PVR_LOG_IF_ERROR(eError, "OSEventObjectSignal");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv.c:		PVR_LOG_IF_ERROR(eError, "OSThreadDestroy");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv.c:		PVR_LOG_IF_ERROR(eError, "OSEventObjectDestroy");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv.c:	PVR_LOG_IF_ERROR(eError, "HTBDeInit");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv.c:			PVR_DUMPDEBUG_LOG("Device System Power State: OFF");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv.c:			PVR_DUMPDEBUG_LOG("Device System Power State: ON");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv.c:			PVR_DUMPDEBUG_LOG("Device System Power State: UNKNOWN (%d)",
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv.c:		PVR_DUMPDEBUG_LOG("------[ Server Thread Summary ]------");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv.c:			PVR_LOGG_IF_ERROR(eError, "PhysMemTest", ErrorSysDevDeInit);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv.c:	PVR_LOG_IF_ERROR(eError, "SyncCheckpointInit");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv.c:	PVR_LOG_IF_ERROR(eError, "_VzDeviceCreate");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv.c:	PVR_LOG_IF_ERROR(eError, "PVRSRVRegisterDbgRequestNotify");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv.c:	PVR_LOG_IF_ERROR(eError, "PVRSRVRegisterDbgRequestNotify");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv.c:	PVR_LOG_IF_ERROR(eError, "HTBDeviceCreate");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv.c:		PVR_LOG(("%s: Using alternate Register bank GPU address: 0x%08lx (orig: 0x%08lx)", __func__,
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv.c:	                                  (void*)((uintptr_t)RGXKM_DEVICE_STATE_DISABLE_DW_LOGGING_EN));
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv.c:		PVR_LOG_IF_ERROR(eError, "OSEventObjectSignal");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv.c:			PVR_LOG_IF_ERROR(eError, "OSEventObjectSignal");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv.c:		PVR_LOG_IF_ERROR(eError, "OSThreadDestroy");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv.c:			PVR_LOG_IF_ERROR(eError, "OSEventObjectDestroy");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv.c:	PVR_LOGR_IF_FALSE(((uiOSID > 0)&&(uiOSID < RGXFW_NUM_OS)), "Invalid guest OSID", PVRSRV_ERROR_INVALID_PARAMS);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv.c:	PVR_LOGR_IF_FALSE((eHeapOrigin == PVRSRV_DEVICE_PHYS_HEAP_ORIGIN_GUEST),
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv.c:	PVR_LOGR_IF_FALSE(((uiOSID > 0)&&(uiOSID < RGXFW_NUM_OS)), "Invalid guest OSID", PVRSRV_ERROR_INVALID_PARAMS);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv.c:	PVR_LOGR_IF_FALSE((eHeapOrigin == PVRSRV_DEVICE_PHYS_HEAP_ORIGIN_GUEST),
gpu/gpu_rgx/m1.11ED5425693/services/server/common/power.c:				PVR_LOG_IF_ERROR(eError, "OSEventObjectSignal");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/power.c:			PVR_LOG_IF_ERROR(eError, "OSEventObjectSignal");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/ri_server.c:#define _RIOutput(x) PVR_LOG(x)
gpu/gpu_rgx/m1.11ED5425693/services/server/common/ri_server.c:	PVR_LOG_IF_FALSE((iCharsWritten>0 && iCharsWritten<(IMG_INT32)RI_SYS_ALLOC_IMPORT_FRMT_SIZE), \
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvr_notifier.c:	PVR_DUMPDEBUG_LOG("------------[ PVR DBG: START (%s) ]------------",
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvr_notifier.c:	PVR_DUMPDEBUG_LOG("DDK info: %s (%s) %s",
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvr_notifier.c:	PVR_DUMPDEBUG_LOG("Time now: %" IMG_UINT64_FMTSPEC "us", \
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvr_notifier.c:		MTKPP_LOGTIME(g_use_id, "Dump Debug Data");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvr_notifier.c:			PVR_DUMPDEBUG_LOG("Services State: OK");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvr_notifier.c:			PVR_DUMPDEBUG_LOG("Services State: BAD");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvr_notifier.c:			PVR_DUMPDEBUG_LOG("Services State: UNDEFINED");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvr_notifier.c:			PVR_DUMPDEBUG_LOG("Services State: UNKNOWN (%d)",
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvr_notifier.c:	PVR_DUMPDEBUG_LOG("------------[ PVR DBG: END ]------------");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:	CACHEOP_CONFIG_KLOG    = 16,
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:		- Index = Value modulo CACHEOP_INDICES_LOG2_SIZE.
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:  + CACHEOP_INDICES_LOG2_SIZE
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:#define CACHEOP_INDICES_LOG2_SIZE	(4)
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:#define CACHEOP_INDICES_MAX			(1 << CACHEOP_INDICES_LOG2_SIZE)
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:	PVR_DUMPDEBUG_LOG("    Configuration: QSZ: %d, UKT: %d, KDFT: %d, "
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:	PVR_DUMPDEBUG_LOG("    Pending deferred CacheOp entries : %u",
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:	else if (psCacheOpWorkItem->bKMReq && !CacheOpConfigSupports(CACHEOP_CONFIG_KLOG))
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:			PVR_LOG_IF_ERROR(eError, "PMRUnlockSysPhysAddresses");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:		PVR_LOG_IF_ERROR(eError, "PMRUnlockSysPhysAddresses");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:	if (ui32Config & CACHEOP_CONFIG_KLOG)
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:		gsCwq.eConfig |= CACHEOP_CONFIG_KLOG;
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:		gsCwq.eConfig &= ~CACHEOP_CONFIG_KLOG;
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:	if (gsCwq.eConfig & CACHEOP_CONFIG_KLOG)
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:		ui32Config |= CACHEOP_CONFIG_KLOG;
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:	PVR_LOG_IF_ERROR(eError, "PMRUnlockSysPhysAddresses");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:	PVR_LOG_IF_ERROR(eError, "SyncSWGetTimelineObj");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:	PVR_LOGG_IF_ERROR(eError, "OSCPUOperation(PVRSRV_CACHE_OP_FLUSH)", exit);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:			PVR_LOGR_IF_ERROR(eError, CACHEOP_NO_GFLUSH_ERROR_STRING);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:		PVR_LOGR_IF_ERROR(eError, "uiLPhysicalSize");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:		PVR_LOGR_IF_FALSE(((uiOffset+uiSize) <= uiLPhysicalSize), CACHEOP_DEVMEM_OOR_ERROR_STRING, PVRSRV_ERROR_DEVICEMEM_OUT_OF_RANGE);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:		PVR_LOGR_IF_ERROR(eError, "PMRLockSysPhysAddresses");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:				PVR_LOG_IF_ERROR(eError, "PMRUnlockSysPhysAddresses");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:				PVR_LOGG_IF_ERROR(eError, "PMRAcquireSparseKernelMappingData", e0);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:				PVR_LOGG_IF_ERROR(eError, "PMRAcquireKernelMappingData", e0);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:				PVR_LOG_IF_ERROR(eError, "PMRReleaseKernelMappingData");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:				PVR_LOG_IF_ERROR(eError, "PMRReleaseKernelMappingData");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:				PVR_LOG_IF_ERROR(eError, "PMRReleaseKernelMappingData");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:				PVR_LOGG_IF_ERROR(eError, "PMR_CpuPhysAddr", e0);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:				PVR_LOGG_IF_ERROR(eError, "PMR_IsOffsetValid", e0);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:				PVR_LOGG_IF_ERROR(eError, "PMRAcquireSparseKernelMappingData", e0);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:				PVR_LOGG_IF_ERROR(eError, "PMRAcquireKernelMappingData", e0);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:				PVR_LOG_IF_ERROR(eError, "PMRReleaseKernelMappingData");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:		PVR_LOG_IF_ERROR(eError, "PMRUnlockSysPhysAddresses");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:		PVR_LOGR_IF_ERROR(eError, "CacheOpGlobalFlush");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:		PVR_LOG_IF_ERROR(eError, "CacheOpTimelineExec");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:			PVR_LOG(("Deferred CacheOpPMRExec failed:"
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:		PVR_LOG_IF_ERROR(eError, "CacheOpTimelineExec");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:			PVR_LOG_IF_ERROR(eError, "CacheOpTimelineExec");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:		PVR_LOG_IF_ERROR(eError, "CacheOpQListExecGlobal");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:		PVR_LOG_IF_ERROR(eError, "CacheOpQListExecRangeBased");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:	PVR_LOG_IF_ERROR(eError, "OSEventObjectSignal");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:	PVR_LOG_IF_ERROR(eError, "OSEventObjectOpen");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:			PVR_LOG_IF_ERROR(eError, "CacheOpQListExec");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:	PVR_LOG_IF_ERROR(eError, "CacheOpQListExec");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:	PVR_LOG_IF_ERROR(eError, "OSEventObjectClose");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:	PVR_LOGR_IF_ERROR(eError, "CacheOpTimelineBind");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:		PVR_LOGG_IF_ERROR(eError, "PMRLockSysPhysAddresses", e0);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:		PVR_LOG_IF_ERROR(eError, "OSEventObjectSignal");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:			PVR_LOG_IF_ERROR(eError, "CacheOpFence");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:			PVR_LOG_IF_ERROR(eError, "CacheOpTimelineExec");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:			(gsCwq.bNoGlobalFlushImpl && OSAtomicRead(&gsCwq.hDeferredSize) >= gsCwq.pui32InfoPage[CACHEOP_INFO_KMDFTHRESHLD] << CACHEOP_INDICES_LOG2_SIZE))
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:			PVR_LOGG_IF_ERROR(eError, "CacheOpExecPMR", e0);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:		PVR_LOGG_IF_ERROR(eError, "PMR_LogicalSize", e0);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:		PVR_LOGG_IF_FALSE(((puiOffset[ui32Idx]+puiSize[ui32Idx]) <= uiLogicalSize), CACHEOP_DEVMEM_OOR_ERROR_STRING, e0);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:		PVR_LOGG_IF_ERROR(eError, "PMRLockSysPhysAddresses", e0);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:		PVR_LOGG_IF_ERROR(eError, "CacheOpTimelineBind", e1);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:	PVR_LOG_IF_ERROR(eError, "OSEventObjectSignal");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:	PVR_LOGR_IF_ERROR(PVRSRV_ERROR_NOT_SUPPORTED, CACHEOP_NO_GFLUSH_ERROR_STRING);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:		PVR_LOGG_IF_ERROR(eError, "PMR_LogicalSize", e0);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:		PVR_LOGG_IF_FALSE(((puiOffset[ui32Idx]+puiSize[ui32Idx]) <= uiLogicalSize), CACHEOP_DEVMEM_OOR_ERROR_STRING, e0);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:		PVR_LOGG_IF_ERROR(eError, "CacheOpGlobalFlush", e0);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:	PVR_LOGG_IF_ERROR(eError, "PMRLockSysPhysAddresses", e0);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:	PVR_LOGG_IF_ERROR(eError, "CacheOpTimelineBind", e0);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:	PVR_LOG_IF_ERROR(eError, "OSEventObjectSignal");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:	if (! CacheOpConfigSupports(CACHEOP_CONFIG_KLOG))
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:	PVR_LOGG_IF_ERROR(eError, "CacheOpPMRExec", e0);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:	PVR_LOGR_IF_FALSE((ui32ClientGFSeqNum == 0),
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:		PVR_LOG(("CacheOp framework not initialised, failing request"));
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:	PVR_LOGG_IF_ERROR(eError2, "OSEventObjectOpen", e0);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:			PVR_LOG_IF_ERROR(eError2, "CacheOpGlobalFlush");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:			PVR_LOG(("CacheOpFence() event: "CACHEOP_ABORT_FENCE_ERROR_STRING));
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:	PVR_LOG_IF_ERROR(eError2, "OSEventObjectOpen");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:	PVR_LOGG_IF_ERROR(eError, "OSEventObjectCreate", e0);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:	PVR_LOGG_IF_ERROR(eError, "OSEventObjectCreate", e0);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:	PVR_LOGG_IF_ERROR(eError, "OSLockCreate", e0);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:	PVR_LOGG_IF_ERROR(eError, "OSLockCreate", e0);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:	PVR_LOGG_IF_ERROR(eError, "OSThreadCreatePriority", e0);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:	PVR_LOGG_IF_FALSE(gsCwq.pvConfigTune, "OSCreateStatisticEntry", e0);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:		PVR_LOG_IF_ERROR(eError, "OSEventObjectSignal");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:		PVR_LOG_IF_ERROR(eError, "OSEventObjectSignal");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:		PVR_LOG_IF_ERROR(eError, "OSThreadDestroy");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:		PVR_LOG_IF_ERROR(eError, "OSEventObjectDestroy");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:		PVR_LOG_IF_ERROR(eError, "OSEventObjectDestroy");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:		PVR_LOG_IF_ERROR(eError, "OSLockDestroy");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:		PVR_LOG_IF_ERROR(eError, "OSLockDestroy");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:	PVR_LOGR_IF_FALSE((gsCwq.uiLineSize && gsCwq.uiPageSize && gsCwq.uiPageShift), "", PVRSRV_ERROR_INIT_FAILURE);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:	PVR_LOGG_IF_ERROR(eError, "OSLockCreate", e0);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:	PVR_LOGG_IF_ERROR(eError, "OSLockCreate", e0);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/cache_km.c:	PVR_LOGG_IF_ERROR(eError, "OSCreateStatisticEntry", e0);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/physmem_tdsecbuf.c:                                      PMR_LOG2ALIGN_T uiLog2Align,
gpu/gpu_rgx/m1.11ED5425693/services/server/common/physmem_tdsecbuf.c:                                      PMR_LOG2ALIGN_T uiLog2Align,
gpu/gpu_rgx/m1.11ED5425693/services/server/common/physmem_tdsecbuf.c:                                      PMR_LOG2ALIGN_T uiLog2Align,
gpu/gpu_rgx/m1.11ED5425693/services/server/common/physmem_tdsecbuf.c:	                                (PMR_LOG2ALIGN_T)ui32Log2Align,
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pmr.c:	PMR_LOG2ALIGN_T uiLog2ContiguityGuarantee;
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pmr.c:           PMR_LOG2ALIGN_T uiLog2ContiguityGuarantee,
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pmr.c:             PMR_LOG2ALIGN_T uiLog2ContiguityGuarantee,
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pmr.c:             PMR_LOG2ALIGN_T *puiLog2Contig,
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pmr.c:             PMR_LOG2ALIGN_T uiLog2Contig,
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pmr.c:             PMR_LOG2ALIGN_T *puiLog2Contig,
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pmr.c:             PMR_LOG2ALIGN_T uiLog2Contig,
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pmr.c:		PVR_LOGR_IF_NOMEM(pcBuffer, "OSAllocMem");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pmr.c:		IMG_DEVMEM_LOG2ALIGN_T uiLog2PageSize,
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pmr.c:              IMG_DEVMEM_LOG2ALIGN_T uiLog2PageSize)
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pmr.c:                IMG_DEVMEM_LOG2ALIGN_T uiLog2PageSize)
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pmr.c:	PVR_LOG(("    PMR %p, Number of pages %u, Log2PageSize %d", psPMR, uiNumPages, uiLog2PageSize));
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pmr.c:			PVR_LOG(("      Phys Page: %s", pszBuffer));
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pmr.c:		PVR_LOG(("      Phys Page: %s", pszBuffer));
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:		PVR_LOG_ERROR(PVRSRV_ERROR_INVALID_CONTEXT,
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:		PVR_LOG_ERROR(PVRSRV_ERROR_INVALID_CONTEXT,
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:	PVR_LOGG_IF_NOMEM(psSyncBlk, "OSAllocMem", eError, fail_alloc);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:		PVR_LOG_ERROR(eError, "context device node invalid");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:		PVR_LOG_ERROR(eError, "failed to allocate ufo block");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:		PVR_LOG_ERROR(eError, "DevmemAcquireCpuVirtAddr");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:	PVR_LOG_IF_FALSE((hArena != NULL), "hArena is NULL");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:	PVR_LOG_IF_FALSE((uSize == sizeof(SYNC_CHECKPOINT_FW_OBJ)),
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:	PVR_LOG_IF_FALSE((uiSpanSize == psSyncBlock->ui32SyncBlockSize),
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:	PVR_LOG_IF_FALSE((psContext != NULL), "hArena invalid");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:	PVR_LOG_IF_FALSE((psSyncBlock != NULL), "hImport invalid");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:	PVR_LOG_IF_FALSE((uiBase == psSyncBlock->uiSpanBase), "uiBase invalid");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:		PVR_LOG_ERROR(eError, "g_pfnFenceResolve is NULL");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:	PVR_LOGR_IF_ERROR(eError, "g_psSyncCheckpointPfnStruct->pfnFenceResolve");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:		PVR_LOG_ERROR(eError, "g_psSyncCheckpointPfnStruct->pfnFenceCreate is NULL");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:		PVR_LOG_ERROR(eError, "g_psSyncCheckpointPfnStruct->pfnFenceDataRollback is NULL");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:		PVR_LOG_IF_ERROR(eError,
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:		PVR_LOG_IF_ERROR(eError, "g_psSyncCheckpointPfnStruct->pfnFenceFinalise returned error");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:		PVR_LOG_ERROR(eError, "g_psSyncCheckpointPfnStruct->pfnNoHWUpdateTimelines is NULL");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:	PVR_LOGR_IF_FALSE((pui32NumSyncOwnedUFOs != NULL), "pui32NumSyncOwnedUFOs invalid", PVRSRV_ERROR_INVALID_PARAMS);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:		PVR_LOG_ERROR(eError, "g_psSyncCheckpointPfnStruct->pfnDumpInfoOnStalledUFOs is NULL");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:		PVR_LOG(("%d sync checkpoint%s owned by %s in stalled context",
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:	PVR_LOGR_IF_FALSE((ppsSyncCheckpointContext != NULL),
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:	PVR_LOGG_IF_NOMEM(psContext, "OSAllocMem", eError, fail_alloc); /* Sets OOM error code */
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:	PVR_LOGG_IF_NOMEM(psContextCtl, "OSAllocMem", eError, fail_alloc2); /* Sets OOM error code */
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:		PVR_LOG_ERROR(eError, "SyncCheckpointContextCreate call "
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:		PVR_LOG_ERROR(eError, "SyncCheckpointContextCreate call "
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:		PVR_LOG_ERROR(eError, "SyncCheckpointContextCreate call "
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:		PVR_LOG_ERROR(eError, "SyncCheckpointContextCreate call to RA_Create(subAlloc) failed");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:		PVR_LOG_ERROR(eError, "SyncCheckpointContextCreate call to RA_Create(span) failed");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:		PVR_LOG_ERROR(eError, "SyncCheckpointContextCreate call to RA_Add(span) failed");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:	PVR_LOGR_IF_FALSE((psSyncCheckpointContext != NULL),
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:	PVR_LOGR_IF_FALSE((psSyncContext != NULL), "psSyncContext invalid", PVRSRV_ERROR_INVALID_PARAMS);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:	PVR_LOGR_IF_FALSE((ppsSyncCheckpoint != NULL), "ppsSyncCheckpoint invalid", PVRSRV_ERROR_INVALID_PARAMS);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:		PVR_LOGG_IF_NOMEM(psNewSyncCheckpoint, "OSAllocMem", eError, fail_alloc); /* Sets OOM error code */
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:		PVR_LOGG_IF_ERROR(eError, "OSLockCreate", fail_create_checkpoint_lock);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:		PVR_LOGG_IF_ERROR(eError, "RA_Alloc", fail_raalloc);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:				PVR_LOG_IF_ERROR(eError, "_SyncCheckpointRecordRemove");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:	PVR_LOG_IF_FALSE((psSyncCheckpoint != NULL), "psSyncCheckpoint invalid");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:	PVR_LOG_IF_FALSE((psSyncCheckpoint != NULL), "psSyncCheckpoint invalid");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:		PVR_LOG_IF_FALSE((psSyncCheckpointInt->psSyncCheckpointFwObj->ui32State == PVRSRV_SYNC_CHECKPOINT_ACTIVE),
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:	PVR_LOG_IF_FALSE((psSyncCheckpoint != NULL), "psSyncCheckpoint invalid");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:		PVR_LOG_IF_FALSE((psSyncCheckpointInt->psSyncCheckpointFwObj->ui32State == PVRSRV_SYNC_CHECKPOINT_ACTIVE),
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:	PVR_LOG_IF_FALSE((psSyncCheckpoint != NULL), "psSyncCheckpoint invalid");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:		PVR_LOG_IF_FALSE((psSyncCheckpointInt->psSyncCheckpointFwObj->ui32State == PVRSRV_SYNC_CHECKPOINT_ACTIVE),
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:	PVR_LOG_IF_FALSE((psSyncCheckpoint != NULL), "psSyncCheckpoint invalid");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:	PVR_LOG_IF_FALSE((psSyncCheckpoint != NULL), "psSyncCheckpoint invalid");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:	PVR_LOGR_IF_FALSE((psSyncCheckpoint != NULL), "psSyncCheckpoint invalid", "Null");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:	PVR_LOGR_IF_FALSE((psSyncCheckpoint != NULL),
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:	PVR_LOGR_IF_FALSE((psSyncCheckpoint != NULL),
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:	PVR_LOG_IF_FALSE((psSyncCheckpoint != NULL), "psSyncCheckpoint invalid");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:	PVR_LOGG_IF_FALSE((psSyncCheckpoint != NULL), "psSyncCheckpoint invalid", invalid_chkpt);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:	PVR_LOGG_IF_FALSE((psSyncCheckpoint != NULL), "psSyncCheckpoint invalid", invalid_chkpt);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:	PVR_LOGG_IF_FALSE((psSyncCheckpoint != NULL), "psSyncCheckpoint invalid", invalid_chkpt);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:	PVR_LOGG_IF_FALSE((psSyncCheckpoint != NULL),
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:	PVR_LOGR_IF_FALSE(psSyncCheckpoint != NULL, "psSyncCheckpoint invalid", 0);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:	PVR_LOGR_IF_FALSE(psSyncCheckpoint != NULL, "psSyncCheckpoint invalid", 0);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:	PVR_LOGR_IF_FALSE(psSyncCheckpoint != NULL, "psSyncCheckpoint invalid", 0);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:	PVR_LOG(("%s called because UFO with ui32FWAddr=%#08x has set to %#04x",
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:		PVR_LOG_IF_ERROR(eError, __func__);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:		PVR_DUMPDEBUG_LOG("\t- ID = %d, FWAddr = 0x%08x, r%d:e%d:f%d: %s",
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:		PVR_DUMPDEBUG_LOG("------[ Active Sync Checkpoints ]------");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:	PVR_LOGG_IF_NOMEM(psSyncRec, "OSAllocMem", eError, fail_alloc); /* Sets OOM error code */
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:		PVR_DUMPDEBUG_LOG("\t%05u %05" IMG_UINT64_FMTSPEC ".%09u %010u FWAddr=0x%08x (r%d:e%d:f%d) State=%s (%s)",
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:		PVR_DUMPDEBUG_LOG("\t%05u %05" IMG_UINT64_FMTSPEC ".%09u %010u FWAddr=0x%08x State=<null_ptr> (%s)",
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:		PVR_DUMPDEBUG_LOG("Dumping allocated sync checkpoints. Allocated: %u High watermark: %u (time ref %05" IMG_UINT64_FMTSPEC ".%09u)",
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:			PVR_DUMPDEBUG_LOG("Warning: Record limit (%u) was reached. Some sync checkpoints may not have been recorded in the debug information.",
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:		PVR_DUMPDEBUG_LOG("\t%-5s %-15s %-10s %-17s %-14s (%s)",
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:		PVR_DUMPDEBUG_LOG("Dumping all recently freed sync checkpoints @ %05" IMG_UINT64_FMTSPEC ".%09u",
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:		PVR_DUMPDEBUG_LOG("\t%-5s %-15s %-10s %-17s %-14s (%s)",
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_checkpoint.c:				PVR_LOG_IF_ERROR(eError, "_SyncCheckpointRecordRemove");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/physmem.c:             PMR_LOG2ALIGN_T uiLog2Contig,
gpu/gpu_rgx/m1.11ED5425693/services/server/common/mmu_common.c:	PVR_LOGR_IF_ERROR(eError, "RA_Alloc");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/mmu_common.c:	HTBLOGK(HTB_SF_MMU_PAGE_OP_TABLE,
gpu/gpu_rgx/m1.11ED5425693/services/server/common/mmu_common.c:	        HTBLOG_PTR_BITS_HIGH(psLevel), HTBLOG_PTR_BITS_LOW(psLevel),
gpu/gpu_rgx/m1.11ED5425693/services/server/common/mmu_common.c:	        HTBLOG_U64_BITS_HIGH(ui64PxE64), HTBLOG_U64_BITS_LOW(ui64PxE64),
gpu/gpu_rgx/m1.11ED5425693/services/server/common/mmu_common.c:			HTBLOGK(HTB_SF_MMU_PAGE_OP_TABLE,
gpu/gpu_rgx/m1.11ED5425693/services/server/common/mmu_common.c:			        HTBLOG_PTR_BITS_HIGH(psLevel), HTBLOG_PTR_BITS_LOW(psLevel),
gpu/gpu_rgx/m1.11ED5425693/services/server/common/mmu_common.c:			        HTBLOG_U64_BITS_HIGH(ui64PxE64), HTBLOG_U64_BITS_LOW(ui64PxE64),
gpu/gpu_rgx/m1.11ED5425693/services/server/common/mmu_common.c:			HTBLOGK(HTB_SF_MMU_PAGE_OP_TABLE,
gpu/gpu_rgx/m1.11ED5425693/services/server/common/mmu_common.c:			        HTBLOG_PTR_BITS_HIGH(psLevel), HTBLOG_PTR_BITS_LOW(psLevel),
gpu/gpu_rgx/m1.11ED5425693/services/server/common/mmu_common.c:			        HTBLOG_U64_BITS_HIGH(pui64Px[uiIndex]), HTBLOG_U64_BITS_LOW(pui64Px[uiIndex]),
gpu/gpu_rgx/m1.11ED5425693/services/server/common/mmu_common.c:	HTBLOGK(HTB_SF_MMU_PAGE_OP_ALLOC,
gpu/gpu_rgx/m1.11ED5425693/services/server/common/mmu_common.c:	        HTBLOG_U64_BITS_HIGH(sDevVAddrStart.uiAddr), HTBLOG_U64_BITS_LOW(sDevVAddrStart.uiAddr),
gpu/gpu_rgx/m1.11ED5425693/services/server/common/mmu_common.c:	        HTBLOG_U64_BITS_HIGH(sDevVAddrEnd.uiAddr), HTBLOG_U64_BITS_LOW(sDevVAddrEnd.uiAddr));
gpu/gpu_rgx/m1.11ED5425693/services/server/common/mmu_common.c:	HTBLOGK(HTB_SF_MMU_PAGE_OP_FREE,
gpu/gpu_rgx/m1.11ED5425693/services/server/common/mmu_common.c:	        HTBLOG_U64_BITS_HIGH(sDevVAddrStart.uiAddr), HTBLOG_U64_BITS_LOW(sDevVAddrStart.uiAddr),
gpu/gpu_rgx/m1.11ED5425693/services/server/common/mmu_common.c:	        HTBLOG_U64_BITS_HIGH(sDevVAddrEnd.uiAddr), HTBLOG_U64_BITS_LOW(sDevVAddrEnd.uiAddr));
gpu/gpu_rgx/m1.11ED5425693/services/server/common/mmu_common.c:			HTBLOGK(HTB_SF_MMU_PAGE_OP_MAP,
gpu/gpu_rgx/m1.11ED5425693/services/server/common/mmu_common.c:			        HTBLOG_U64_BITS_HIGH(sDevVAddr.uiAddr), HTBLOG_U64_BITS_LOW(sDevVAddr.uiAddr),
gpu/gpu_rgx/m1.11ED5425693/services/server/common/mmu_common.c:			        HTBLOG_U64_BITS_HIGH(sDevPAddr.uiAddr), HTBLOG_U64_BITS_LOW(sDevPAddr.uiAddr));
gpu/gpu_rgx/m1.11ED5425693/services/server/common/mmu_common.c:		HTBLOGK(HTB_SF_MMU_PAGE_OP_UNMAP,
gpu/gpu_rgx/m1.11ED5425693/services/server/common/mmu_common.c:		        HTBLOG_U64_BITS_HIGH(sDevVAddr.uiAddr), HTBLOG_U64_BITS_LOW(sDevVAddr.uiAddr));
gpu/gpu_rgx/m1.11ED5425693/services/server/common/mmu_common.c:		HTBLOGK(HTB_SF_MMU_PAGE_OP_PMRMAP,
gpu/gpu_rgx/m1.11ED5425693/services/server/common/mmu_common.c:		        HTBLOG_U64_BITS_HIGH(sDevVAddr.uiAddr), HTBLOG_U64_BITS_LOW(sDevVAddr.uiAddr),
gpu/gpu_rgx/m1.11ED5425693/services/server/common/mmu_common.c:		        HTBLOG_U64_BITS_HIGH(psDevPAddr[i].uiAddr), HTBLOG_U64_BITS_LOW(psDevPAddr[i].uiAddr));
gpu/gpu_rgx/m1.11ED5425693/services/server/common/mmu_common.c:		HTBLOGK(HTB_SF_MMU_PAGE_OP_UNMAP,
gpu/gpu_rgx/m1.11ED5425693/services/server/common/mmu_common.c:		        HTBLOG_U64_BITS_HIGH(sDevVAddr.uiAddr), HTBLOG_U64_BITS_LOW(sDevVAddr.uiAddr));
gpu/gpu_rgx/m1.11ED5425693/services/server/common/mmu_common.c:		HTBLOGK(HTB_SF_MMU_PAGE_OP_TABLE,
gpu/gpu_rgx/m1.11ED5425693/services/server/common/mmu_common.c:		        HTBLOG_PTR_BITS_HIGH(psLevel), HTBLOG_PTR_BITS_LOW(psLevel),
gpu/gpu_rgx/m1.11ED5425693/services/server/common/mmu_common.c:		        HTBLOG_U64_BITS_HIGH(uiEntry), HTBLOG_U64_BITS_LOW(uiEntry),
gpu/gpu_rgx/m1.11ED5425693/services/server/common/mmu_common.c:		PVR_LOG(("Failed to get the page size info for log2 page sizeof 12"));
gpu/gpu_rgx/m1.11ED5425693/services/server/common/mmu_common.c:				PVR_DUMPDEBUG_LOG("PC index (%d) out of bounds (%d)", ui32PCIndex, psLevel->ui32NumOfEntries);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/mmu_common.c:				PVR_DUMPDEBUG_LOG("PCE for index %d = 0x%08x and is %s",
gpu/gpu_rgx/m1.11ED5425693/services/server/common/mmu_common.c:				PVR_DUMPDEBUG_LOG("PCE for index %d = 0x%016" IMG_UINT64_FMTSPECx " and is %s",
gpu/gpu_rgx/m1.11ED5425693/services/server/common/mmu_common.c:				PVR_DUMPDEBUG_LOG("PD index (%d) out of bounds (%d)", ui32PDIndex, psLevel->ui32NumOfEntries);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/mmu_common.c:				PVR_DUMPDEBUG_LOG("PDE for index %d = 0x%08x and is %s",
gpu/gpu_rgx/m1.11ED5425693/services/server/common/mmu_common.c:					PVR_LOG(("Failed to get the page size from the PDE"));
gpu/gpu_rgx/m1.11ED5425693/services/server/common/mmu_common.c:				PVR_DUMPDEBUG_LOG("PDE for index %d = 0x%016" IMG_UINT64_FMTSPECx " and is %s",
gpu/gpu_rgx/m1.11ED5425693/services/server/common/mmu_common.c:					PVR_LOG(("Failed to get the page size from the PDE"));
gpu/gpu_rgx/m1.11ED5425693/services/server/common/mmu_common.c:					PVR_LOG(("Failed to get the page size info for log2 page sizeof %d", ui32Log2PageSize));
gpu/gpu_rgx/m1.11ED5425693/services/server/common/mmu_common.c:				PVR_DUMPDEBUG_LOG("PT index (%d) out of bounds (%d)", ui32PTIndex, psLevel->ui32NumOfEntries);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/mmu_common.c:				PVR_DUMPDEBUG_LOG("PTE for index %d = 0x%08x and is %s",
gpu/gpu_rgx/m1.11ED5425693/services/server/common/mmu_common.c:				PVR_DUMPDEBUG_LOG("PTE for index %d = 0x%016" IMG_UINT64_FMTSPECx " and is %s",
gpu/gpu_rgx/m1.11ED5425693/services/server/common/mmu_common.c:		PVR_LOG(("Unsupported MMU setup"));
gpu/gpu_rgx/m1.11ED5425693/services/server/common/mmu_common.c:			PVR_LOG(("MMU_IsVDevAddrValid: Unsupported MMU setup"));
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_server.c:		HTBLOGK(HTB_SF_SYNC_SERVER_UNREF, ui32SyncAddr);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_server.c:	HTBLOGK(HTB_SF_SYNC_SERVER_ALLOC, *pui32SyncPrimVAddr);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_server.c:		PVR_DUMPDEBUG_LOG("\tPending server sync (ID = %d, FWAddr = 0x%08x): Current = 0x%08x, NextOp = 0x%08x (%s)",
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_server.c:		PVR_DUMPDEBUG_LOG("\tPending server sync (ID = %d, FWAddr = 0x%08x): Value (Host) = 0x%08x, Value (FW) = 0x%08x, NextOp = 0x%08x (%s)",
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_server.c:		PVR_DUMPDEBUG_LOG("------[ Pending Server Syncs ]------");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_server.c:	HTBLOGK(HTB_SF_SYNC_PRIM_OP_CREATE, psNewCookie, ui32SyncBlockCount,
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_server.c:	HTBLOGK(HTB_SF_SYNC_PRIM_OP_TAKE, psServerCookie,
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_server.c:	HTBLOGK(HTB_SF_SYNC_PRIM_OP_COMPLETE, psServerCookie);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_server.c:	HTBLOGK(HTB_SF_SYNC_PRIM_OP_DESTROY, psServerCookie);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_server.c:			PVR_DUMPDEBUG_LOG("\t%s %05u %05" IMG_UINT64_FMTSPEC ".%09u FWAddr=0x%08x Val=0x%08x (%s)",
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_server.c:			PVR_DUMPDEBUG_LOG("\t%s %05u %05" IMG_UINT64_FMTSPEC ".%09u FWAddr=0x%08x Val=<null_ptr> (%s)",
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_server.c:		PVR_DUMPDEBUG_LOG("Dumping all allocated syncs. Allocated: %u High watermark: %u @ %05" IMG_UINT64_FMTSPEC ".%09u",
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_server.c:			PVR_DUMPDEBUG_LOG("Warning: Record limit (%u) was reached. Some sync checkpoints may not have been recorded in the debug information.",
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_server.c:		PVR_DUMPDEBUG_LOG("\t%-6s %-5s %-15s %-17s %-14s (%s)",
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_server.c:		PVR_DUMPDEBUG_LOG("Dumping all recently freed syncs @ %05" IMG_UINT64_FMTSPEC ".%09u",
gpu/gpu_rgx/m1.11ED5425693/services/server/common/sync_server.c:		PVR_DUMPDEBUG_LOG("\t%-6s %-5s %-15s %-17s %-14s (%s)",
gpu/gpu_rgx/m1.11ED5425693/services/server/common/tlserver.c:		PVR_LOGG_IF_ERROR (eError, "OSEventObjectOpen", e0);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/tlserver.c:		PVR_LOGG_IF_ERROR (eError, "OSEventObjectClose", e0);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/tlserver.c:	PVR_LOGG_IF_ERROR(eError, "DevmemLocalGetImportHandle", e2);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitSRVCOREBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitSYNCBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitSYNCEXPORTBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitSYNCSEXPORTBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitPDUMPCTRLBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitMMBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitCMMBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitPDUMPMMBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitPDUMPBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitDCBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitCACHEBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitSMMBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitHTBUFFERBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitPVRTLBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitRIBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitVALIDATIONBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitTUTILSBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitDEVICEMEMHISTORYBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitSYNCTRACKINGBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitRGXTQBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitRGXTA3DBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitRGXBREAKPOINTBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitRGXFWDBGBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitRGXPDUMPBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitRGXHWPERFBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitRGXREGCONFIGBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitRGXKICKSYNCBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitMMEXTMEMBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitSYNCFALLBACKBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "OSPlatformBridgeInit");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "OSPlatformBridgeDeInit");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOGR_IF_ERROR(eError, "DeinitSYNCFALLBACKBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOGR_IF_ERROR(eError, "DeinitMMEXTMEMBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOGR_IF_ERROR(eError, "DeinitSRVCOREBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOGR_IF_ERROR(eError, "DeinitSYNCBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOGR_IF_ERROR(eError, "DeinitSYNCEXPORTBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOGR_IF_ERROR(eError, "DeinitSYNCSEXPORTBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOGR_IF_ERROR(eError, "DeinitPDUMPCTRLBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOGR_IF_ERROR(eError, "DeinitMMBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOGR_IF_ERROR(eError, "DeinitCMMBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOGR_IF_ERROR(eError, "DeinitPDUMPMMBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOGR_IF_ERROR(eError, "DeinitPDUMPBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOGR_IF_ERROR(eError, "DeinitTUTILSBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOGR_IF_ERROR(eError, "DeinitDCBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOGR_IF_ERROR(eError, "DeinitCACHEBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOGR_IF_ERROR(eError, "DeinitSMMBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOGR_IF_ERROR(eError, "DeinitHTBUFFERBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOGR_IF_ERROR(eError, "DeinitPVRTLBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOGR_IF_ERROR(eError, "DeinitVALIDATIONBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOGR_IF_ERROR(eError, "DeinitRIBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOGR_IF_ERROR(eError, "DeinitDEVICEMEMHISTORYBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOGR_IF_ERROR(eError, "DeinitSYNCTRACKINGBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOGR_IF_ERROR(eError, "DeinitRGXTQBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOGR_IF_ERROR(eError, "DeinitRGXTA3DBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOGR_IF_ERROR(eError, "DeinitRGXBREAKPOINTBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOGR_IF_ERROR(eError, "DeinitRGXFWDBGBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOGR_IF_ERROR(eError, "DeinitRGXPDUMPBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOGR_IF_ERROR(eError, "DeinitRGXHWPERFBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOGR_IF_ERROR(eError, "DeinitRGXREGCONFIGBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:	PVR_LOGR_IF_ERROR(eError, "DeinitRGXKICKSYNCBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:		PVR_LOGR_IF_ERROR(eError, "InitRGXCMPBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:		PVR_LOGR_IF_ERROR(eError, "InitRGXCMPBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:		PVR_LOGR_IF_ERROR(eError, "InitRGXTQ2Bridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:		PVR_LOGR_IF_ERROR(eError, "DeinitRGXCMPBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:		PVR_LOGR_IF_ERROR(eError, "DeinitRGXSIGNALSBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pvrsrv_bridge_init.c:		PVR_LOGR_IF_ERROR(eError, "DeinitRGXTQ2Bridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/devicemem_server.c:	PVR_LOGR_IF_ERROR(eError, "MMU_AcquirePDumpMMUContext");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/devicemem_server.c:	PVR_LOG_IF_ERROR(eError, "PDumpImageDescriptor");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/devicemem_server.c:	PVR_LOGR_IF_ERROR(eError, "MMU_AcquirePDumpMMUContext");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/devicemem_server.c:	PVR_LOG_IF_ERROR(eError, "PDumpDataDescriptor");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/physmem_lma.c:	PVR_LOGR_IF_ERROR(eError, "PMR_CpuPhysAddr");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/process_stats.c:		HTBLOGK(HTB_SF_MAIN_PRE_POWER, bPowerOn, ui64DeviceDiff, ui64SystemDiff);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/process_stats.c:		HTBLOGK(HTB_SF_MAIN_POST_POWER, bPowerOn, ui64SystemDiff,ui64DeviceDiff);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/process_stats.c:	PVR_LOGR_IF_FALSE(pui32MemoryStats != NULL,
gpu/gpu_rgx/m1.11ED5425693/services/server/common/process_stats.c:		PVR_LOGR_IF_FALSE(ui32ArrSize == PVRSRV_DRIVER_STAT_TYPE_COUNT,
gpu/gpu_rgx/m1.11ED5425693/services/server/common/process_stats.c:	PVR_LOGR_IF_FALSE(ui32ArrSize == PVRSRV_PROCESS_STAT_TYPE_COUNT,
gpu/gpu_rgx/m1.11ED5425693/services/server/common/info_page_km.c:    PVR_LOGG_IF_ERROR(eError, "DevmemAllocateExportable", e0);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/info_page_km.c:    PVR_LOGG_IF_ERROR(eError, "DevmemAllocateExportable", e0);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/info_page_km.c:    PVR_LOGG_IF_ERROR(eError, "DevmemLocalGetImportHandle", e0);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/info_page_km.c:    PVR_LOGG_IF_ERROR(eError, "OSLockCreate", e0);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/info_page_km.c:    PVR_LOGR_IF_FALSE(psData->psInfoPageMemDesc != NULL, "invalid MEMDESC"
gpu/gpu_rgx/m1.11ED5425693/services/server/common/info_page_km.c:    PVR_LOGR_IF_FALSE(psData->psInfoPagePMR != NULL, "invalid PMR handle",
gpu/gpu_rgx/m1.11ED5425693/services/server/common/physmem_tdfwcode.c:	PMR_LOG2ALIGN_T uiLog2Align;
gpu/gpu_rgx/m1.11ED5425693/services/server/common/physmem_tdfwcode.c:                                   PMR_LOG2ALIGN_T uiLog2Align,
gpu/gpu_rgx/m1.11ED5425693/services/server/common/physmem_tdfwcode.c:                                   PMR_LOG2ALIGN_T uiLog2Align,
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:	PVR_LOGR_IF_ERROR(OSLockCreate(&g_PDumpCtrl.hLock), "OSLockCreate");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:		PVR_LOG(("PDump forced capture stop received. Suspend PDumping to force driver reload before next capture."));
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:			PVR_LOG(("Unrecoverable error, PDump suspended!"));
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:	PVR_LOGG_IF_FALSE(((iCount != -1) && (iCount < PDUMP_PARAM_MAX_FILE_NAME)), "OSSNPrintf", errExit);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:		PVR_LOGG_IF_ERROR(eError, "PDumpWrite", errExit);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:	PVR_LOGG_IF_ERROR(eError, "TLStreamCreate ParamInit", end);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:	PVR_LOGG_IF_ERROR(eError, "TLStreamCreate ParamMain", param_main_failed);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:	PVR_LOGG_IF_ERROR(eError, "TLStreamCreate ParamDeinit", param_deinit_failed);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:	PVR_LOGG_IF_ERROR(eError, "TLStreamCreate ScriptInit", script_init_failed);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:	PVR_LOGG_IF_ERROR(eError, "TLStreamCreate ScriptMain", script_main_failed);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:	PVR_LOGG_IF_ERROR(eError, "TLStreamCreate ScriptDeinit", script_deinit_failed);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:	PVR_LOGG_IF_ERROR(eError, "TLStreamCreate ScriptBlock", script_block_failed);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:	PVR_LOGG_IF_ERROR(eError, "OSLockCreate", errRet);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:	PVR_LOGG_IF_ERROR(eError, "PDumpCtrlInit", errRetLock);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:	PVR_LOGG_IF_ERROR(eError, "PDumpInitStreams", errRetCtrl);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:	PVR_LOGG_IF_ERROR(eError, "PDumpCommentWithFlags", errRetState);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:	PVR_LOGG_IF_ERROR(eError, "PDumpCommentWithFlags", errRetState);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:	PVR_LOGG_IF_ERROR(eError, "PDumpParameterChannelZeroedPageBlock", errRetState);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:		PVR_LOG_ERROR(eError, "_PDumpSetFrameKM");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:	PVR_LOGR_IF_ERROR(eError, "PDumpReady");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:	PVR_LOGR_IF_ERROR(eError, "PDumpSetDefaultCaptureParamsKM");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:		PVR_LOGG_IF_ERROR(eErr, "PDumpSNPrintf", ErrUnlock);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:			PVR_LOGG_IF_ERROR(eErr, "PDumpWriteScript", ErrUnlock);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:			PVR_LOGG_IF_ERROR(eErr, "PDumpWriteScript", ErrUnlock);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:	PVR_LOGG_IF_FALSE(((iCount != -1) && (iCount < ui32MaxLen)), "OSVSNPrintf", exit);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:	PVR_LOGG_IF_FALSE(((iCount != -1) && (iCount < ui32MaxLen)), "OSVSNPrintf", exit);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:	PVR_LOG(("PDUMP PANIC %08x: %s", ui32PanicNo, pszPanicMsg));
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:	PVR_LOGG_IF_ERROR(eError, "PDumpSNPrintf", e1);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:	PVR_LOGG_IF_ERROR(eError, "PDumpSNPrintf", e1);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:	PVR_LOGG_IF_ERROR(eError, "PDumpSNPrintf", e1);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:	PVR_LOGG_IF_ERROR(eError, "PDumpSNPrintf", e1);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:	PVR_LOG_IF_ERROR(eErr, "TLStreamResetByteCount Parameter Main");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:	PVR_LOG_IF_ERROR(eErr, "TLStreamResetByteCount Script Main");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:		PVR_LOG(("pdump killed, capture files may be invalid or incomplete!"));
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:		PVR_LOG_IF_ERROR(eErr, "PDumpSetDefaultCaptureParamsKM");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:	PVR_LOG(("--- PDUMP COMMON: g_PDumpScript.sCh.*.hTL (In, Mn, De, Bk) ( %p, %p, %p, %p )",
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:	PVR_LOG(("--- PDUMP COMMON: g_PDumpScript.sCh.*.ui32BufferFullRetries (In, Mn, De, Bk) ( %5d, %5d, %5d, %5d )",
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:	PVR_LOG(("--- PDUMP COMMON: g_PDumpScript.sCh.*.ui32BufferFullAborts (In, Mn, De, Bk)  ( %5d, %5d, %5d, %5d )",
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:	PVR_LOG(("--- PDUMP COMMON: g_PDumpScript.sCh.*.ui32HighestRetriesWatermark (In, Mn, De, Bk)  ( %5d, %5d, %5d, %5d )",
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:	PVR_LOG(("--- PDUMP COMMON: g_PDumpScript.ui32FileIdx( %d )", g_PDumpScript.ui32FileIdx));
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:	PVR_LOG(("--- PDUMP COMMON: g_PDumpParameters.sCh.*.hTL (In, Mn, De, Bk) ( %p, %p, %p, %p )",
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:	PVR_LOG(("--- PDUMP COMMON: g_PDumpParameters.sCh.*.ui32BufferFullRetries (In, Mn, De, Bk) ( %5d, %5d, %5d, %5d )",
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:	PVR_LOG(("--- PDUMP COMMON: g_PDumpParameters.sCh.*.ui32BufferFullAborts (In, Mn, De, Bk)  ( %5d, %5d, %5d, %5d )",
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:	PVR_LOG(("--- PDUMP COMMON: g_PDumpParameters.sCh.*.ui32HighestRetriesWatermark (In, Mn, De, Bk)  ( %5d, %5d, %5d, %5d )",
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:	PVR_LOG(("--- PDUMP COMMON: g_PDumpParameters.sWOff.* (In, Mn, De, Bk) ( %d, %d, %d, %d )",
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:	PVR_LOG(("--- PDUMP COMMON: g_PDumpParameters.ui32FileIdx( %d )", g_PDumpParameters.ui32FileIdx));
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:	PVR_LOG(("--- PDUMP COMMON: g_PDumpCtrl( %p ) eServiceState( %d ), IsDriverInInitPhase( %s ) ui32Flags( %x )",
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:	PVR_LOG(("--- PDUMP COMMON: ui32DefaultCapMode( %d ) ui32CurrentFrame( %d )",
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:	PVR_LOG(("--- PDUMP COMMON: sCaptureRange.ui32Start( %x ) sCaptureRange.ui32End( %x ) sCaptureRange.ui32Interval( %u )",
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:	PVR_LOG(("--- PDUMP COMMON: IsInCaptureRange( %s ) InPowerTransition( %d )",
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_server.c:	PVR_LOG(("--- PDUMP COMMON: sBlockCtrl.ui32BlockLength( %d ), sBlockCtrl.ui32CurrentBlock( %d )",
gpu/gpu_rgx/m1.11ED5425693/services/server/common/physmem_fwdedicatedmem.c:	PMR_LOG2ALIGN_T    uiLog2Align;
gpu/gpu_rgx/m1.11ED5425693/services/server/common/physmem_fwdedicatedmem.c:                                         PMR_LOG2ALIGN_T uiLog2Align,
gpu/gpu_rgx/m1.11ED5425693/services/server/common/physmem_fwdedicatedmem.c:                                         PMR_LOG2ALIGN_T uiLog2Align,
gpu/gpu_rgx/m1.11ED5425693/services/server/common/pdump_physmem.c:				PVR_LOG_IF_ERROR(eError, "PDumpWriteParameter");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/srvcore.c:			PVR_LOG(("(FAIL) %s: Mismatch in client-side and KM driver build options; "
gpu/gpu_rgx/m1.11ED5425693/services/server/common/srvcore.c:			PVR_LOG(("(FAIL) %s: Mismatch in client-side and KM driver build options; "
gpu/gpu_rgx/m1.11ED5425693/services/server/common/srvcore.c:			PVR_LOG(("%s: COMPAT_TEST: Client-side (0x%04x) (%s) and KM driver (0x%04x) (%s) build options differ.",
gpu/gpu_rgx/m1.11ED5425693/services/server/common/srvcore.c:		PVR_LOG(("(FAIL) %s: Incompatible driver DDK version (%u.%u) / client DDK version (%u.%u).",
gpu/gpu_rgx/m1.11ED5425693/services/server/common/srvcore.c:	PVR_LOG(("User requested PVR debug info"));
gpu/gpu_rgx/m1.11ED5425693/services/server/common/srvcore.c:	PVR_LOG(("User requested OS reset"));
gpu/gpu_rgx/m1.11ED5425693/services/server/common/srvcore.c:	PVR_LOG(("HW operation timeout, dump server info"));
gpu/gpu_rgx/m1.11ED5425693/services/server/common/srvcore.c:	PVR_LOGG_IF_ERROR(eError, "OSLockCreate", errorLockCreateFailed);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/srvcore.c:	PVR_LOGG_IF_ERROR(eError, "PVRSRVPoolCreate", erroPoolCreateFailed);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/srvcore.c:			HTBLOGK(HTB_SF_BRG_BRIDGE_CALL_ERR, ui32Timestamp,
gpu/gpu_rgx/m1.11ED5425693/services/server/common/srvcore.c:			HTBLOGK(HTB_SF_BRG_BRIDGE_CALL, ui32Timestamp,
gpu/gpu_rgx/m1.11ED5425693/services/server/common/tlstream.c:	PVR_LOGG_IF_ERROR(eError, "DevmemAllocateExportable", e0);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/tlstream.c:	PVR_LOGG_IF_ERROR(eError, "DevmemAcquireCpuVirtAddr", e1);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/tlstream.c:		PVR_LOGG_IF_ERROR(eError, "TLAllocSharedMem", e3);
gpu/gpu_rgx/m1.11ED5425693/services/server/common/tlstream.c:			PVR_LOGRN_IF_ERROR(eError, "OSEventObjectWaitTimeout");
gpu/gpu_rgx/m1.11ED5425693/services/server/common/tlstream.c:		PVR_LOG_IF_ERROR(eRc, "TLStream->pfProducerCallback");
gpu/gpu_rgx/m1.11ED5425693/services/server/include/pvr_notifier.h: * Macro used within debug dump functions to send output either to PVR_LOG or
gpu/gpu_rgx/m1.11ED5425693/services/server/include/pvr_notifier.h:#define _MTKPP_GPULOG_FW(...) MTKPP_LOG(g_use_id, __VA_ARGS__)
gpu/gpu_rgx/m1.11ED5425693/services/server/include/pvr_notifier.h:#define PVR_DUMPDEBUG_LOG(...)
gpu/gpu_rgx/m1.11ED5425693/services/server/include/pvr_notifier.h:#define PVR_DUMPDEBUG_LOG(...)   
gpu/gpu_rgx/m1.11ED5425693/services/server/include/pvr_notifier.h:                                    PVR_LOG() will be used as the default
gpu/gpu_rgx/m1.11ED5425693/services/server/include/physmem.h:                 PMR_LOG2ALIGN_T uiLog2Contig,
gpu/gpu_rgx/m1.11ED5425693/services/server/include/htbserver.h:			 const HTB_LOGMODE_CTRL eLogMode,
gpu/gpu_rgx/m1.11ED5425693/services/server/include/htbserver.h:HTBLogKM(IMG_UINT32 PID, IMG_UINT64 ui64TimeStamp, HTB_LOG_SFids SF,
gpu/gpu_rgx/m1.11ED5425693/services/server/include/fwtrace_string.h:#define X(a, b, c, d, e) { RGXFW_LOG_CREATESFID(a,b,e) , d },
gpu/gpu_rgx/m1.11ED5425693/services/server/include/fwtrace_string.h:	RGXFW_LOG_SFIDLIST
gpu/gpu_rgx/m1.11ED5425693/services/server/include/physmem_tdfwcode.h:                                   PMR_LOG2ALIGN_T uiLog2Align,
gpu/gpu_rgx/m1.11ED5425693/services/server/include/devicemem_server_utils.h:			PVR_LOG(("DevmemCPUCacheMode: Unknown CPU cache mode 0x%08x", ui32CPUCacheMode));
gpu/gpu_rgx/m1.11ED5425693/services/server/include/devicemem_server_utils.h:			PVR_LOG(("DevmemDeviceCacheMode: Unknown device cache mode 0x%08x", ui32DeviceCacheMode));
gpu/gpu_rgx/m1.11ED5425693/services/server/include/physmem_fwdedicatedmem.h:                                         PMR_LOG2ALIGN_T uiLog2Align,
gpu/gpu_rgx/m1.11ED5425693/services/server/include/pmr.h:typedef IMG_UINT32 PMR_LOG2ALIGN_T;
gpu/gpu_rgx/m1.11ED5425693/services/server/include/pmr.h:             PMR_LOG2ALIGN_T uiLog2ContiguityGuarantee,
gpu/gpu_rgx/m1.11ED5425693/services/server/include/pmr.h:             PMR_LOG2ALIGN_T *puiLog2Contig,
gpu/gpu_rgx/m1.11ED5425693/services/server/include/pmr.h:             PMR_LOG2ALIGN_T uiLog2Contig,
gpu/gpu_rgx/m1.11ED5425693/services/server/include/pmr.h:				IMG_DEVMEM_LOG2ALIGN_T uiLog2PageSize);
gpu/gpu_rgx/m1.11ED5425693/services/server/include/pmr.h:					IMG_DEVMEM_LOG2ALIGN_T uiLog2PageSize);
gpu/gpu_rgx/m1.11ED5425693/services/server/include/pmr.h:                   IMG_DEVMEM_LOG2ALIGN_T uiLog2PageSize,
gpu/gpu_rgx/m1.11ED5425693/services/server/include/physmem_tdsecbuf.h:                                      PMR_LOG2ALIGN_T uiLog2Align,
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/pvr_bridge_k.c:	PVR_LOG_IF_ERROR(eError, "InitDMABUFBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/pvr_bridge_k.c:	PVR_LOGG_IF_ERROR(eError, "OSEventObjectCreate", error_);
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/pvr_bridge_k.c:	PVR_LOGR_IF_ERROR(eError, "DeinitDMABUFBridge");
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/pvr_bridge_k.c:			PVR_LOG(("%s: waiting for user threads (%d)", __func__,
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/pvr_bridge_k.c:			PVR_LOG(("%s: waiting for kernel threads (%d)", __func__,
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/physmem_test.c:	PVR_LOGR_IF_NOMEM(psDeviceNode, "OSAllocZMem");
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/physmem_test.c:	PVR_LOGG_IF_ERROR(eError, "PVRSRVPhysMemHeapsInit", ErrorSysDevDeInit);
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/physmem_test.c:	PVR_LOGR_IF_NOMEM(apsDevPAddr, "OSAllocMem");
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/physmem_test.c:	PVR_LOGG_IF_NOMEM(pbValid, "OSAllocMem", eError, ErrorFreePMRPageListMem);
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/physmem_test.c:	PVR_LOGG_IF_NOMEM(pcWriteBuffer, "OSAllocMem", eError, ErrorFreePMRPageStateMem);
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/physmem_test.c:	PVR_LOGG_IF_NOMEM(pcWriteBuffer, "OSAllocMem", eError, ErrorFreeWriteBuffer);
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/physmem_test.c:	PVR_LOGG_IF_NOMEM(pui32MappingTable, "OSAllocMem", eError, ErrorFreeReadBuffer);
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/physmem_test.c:			PVR_LOG_IF_ERROR(eError, "PMRReleaseKernelMappingData");
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/physmem_test.c:			PVR_LOG_IF_ERROR(eError, "PMRReleaseKernelMappingData");
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/physmem_test.c:		PVR_LOGR_IF_NOMEM(pcWriteBuffer, "OSAllocMem");
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/physmem_test.c:		PVR_LOGG_IF_NOMEM(pcWriteBuffer, "OSAllocMem", eError, ErrorFreeWriteBuffer);
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/physmem_test.c:	PVR_LOGR_IF_ERROR(eError, "PhysmemNewRamBackedPMR");
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/physmem_test.c:	PVR_LOGG_IF_ERROR(eError, "PMRLockSysPhysAddresses", ErrorUnrefPMR);
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/physmem_test.c:	PVR_LOGG_IF_ERROR(eError, "PMRAcquireKernelMappingData", ErrorUnlockPhysAddresses);
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/osfunc.c:		PVR_DUMPDEBUG_LOG("  %s : %s",
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/osfunc.c:	_ged_log_owner = ged_log_buf_alloc(128, 128 * 32, GED_LOG_BUF_TYPE_RINGBUFFER, "OwnerLog", "oL");
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/osfunc.c:	PVR_LOGG_IF_FALSE(hEventObject != NULL, "Invalid hEventObject handle",
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/osfunc.c:	PVR_LOGG_IF_FALSE(hEventObject != NULL, "Invalid phOSEvent handle pointer",
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/osfunc.c:	PVR_LOGG_IF_ERROR(eError, "LinuxEventObjectAdd", error);
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/osfunc.c:	PVR_LOGR_IF_FALSE(hOSEventKM != NULL, "Invalid hOSEventKM handle",
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/osfunc.c:	PVR_LOGR_IF_ERROR(eError, "LinuxEventObjectDelete");
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/osfunc.c:	ged_log_buf_print2(_ged_log_owner, GED_LOG_ATTR_TIME, "%d / %d [+]", gsOwner->pid, gsOwner->tgid);
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/osfunc.c:	ged_log_buf_print2(_ged_log_owner, GED_LOG_ATTR_TIME, "%d / %d [-]", gsOwner->pid, gsOwner->tgid);
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/osfunc.c:	PVR_DUMPDEBUG_LOG("OS kernel info: %s %s %s %s",
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/physmem_osmem_linux.c:#define PVR_MIN_PHYSMEM_CONTIG_ALLOC_LOG2PGSZ	RGX_HEAP_4KB_PAGE_SHIFT
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/physmem_osmem_linux.c:#define PVR_MAX_PHYSMEM_CONTIG_ALLOC_LOG2PGSZ	RGX_HEAP_2MB_PAGE_SHIFT
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/physmem_osmem_linux.c:		if (uiAlign > uiSize || uiAlign > (1 << PVR_MAX_PHYSMEM_CONTIG_ALLOC_LOG2PGSZ))
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/physmem_osmem_linux.c:		PVR_ASSERT(uiLog2AllocPageSize > PVR_MIN_PHYSMEM_CONTIG_ALLOC_LOG2PGSZ);
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/pvr_gputrace.c:	PVR_LOGR_IF_ERROR(eError, "OSLockCreate");
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/pvr_gputrace.c:	PVR_LOGR_IF_ERROR (eError, "OSLockCreate");
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/pvr_gputrace.c:	PVR_LOGG_IF_NOMEM(psData, "OSAllocZMem", eError, e0);
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/pvr_gputrace.c:	PVR_LOGG_IF_ERROR(eError, "OSLockCreate", e0);
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/pvr_gputrace.c:		PVR_LOGG_IF_ERROR(eError, "PVRSRVRGXCtrlHWPerfKM", err_out);
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/pvr_gputrace.c:	PVR_LOGG_IF_ERROR(eError, "TLClientOpenStream", err_out);
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/pvr_gputrace.c:	PVR_LOGG_IF_ERROR(eError, "PVRSRVRegisterCmdCompleteNotify", err_close_stream);
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/pvr_gputrace.c:		PVR_LOG_IF_ERROR(eError, "PVRSRVRGXCtrlHWPerfKM");
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/pvr_gputrace.c:		PVR_LOG_IF_ERROR(eError, "PVRSRVUnregisterCmdCompleteNotify");
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/pvr_gputrace.c:		PVR_LOG_IF_ERROR(eError, "TLClientCloseStream");
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/pvr_gputrace.c:		PVR_LOG_IF_ERROR(eError, "TLClientCloseStream");
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/pvr_gputrace.c:				PVR_LOG_ERROR(eError, "TLClientReleaseData");
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/pvr_gputrace.c:		PVR_LOG_ERROR(eError, "TLClientAcquireData");
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/htb_debug.c:		if (HTB_SF_LAST == ui32LogIdx && HTB_LOG_VALIDID(ui32Data)
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/htb_debug.c:			    "%s: Unrecognised LOG value '%x' GID %x Params %d ID %x @ '%p'",
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/htb_debug.c:typedef struct _HTB_TRACEBUF_LOG_ {
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/htb_debug.c:	HTB_LOG_SFids eSFId;
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/htb_debug.c:} HTB_TRACEBUF_LOG;
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/htb_debug.c:static const HTB_TRACEBUF_LOG aLogs[] = {
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/htb_debug.c:#define X(a, b, c, d, e) {HTB_LOG_CREATESFID(a,b,e), #c, d, e},
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/htb_debug.c:	HTB_LOG_SFIDLIST
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/htb_debug.c:	HTB_LOG_SFGROUPLIST
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/htb_debug.c:		if (HTB_LOG_VALIDID(ui32Data))
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/htb_debug.c:				    "%s: Unrecognised LOG value '%x' GID %x Params %d ID %x @ '%p'",
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/htb_debug.c:		    "%s: Unrecognised and invalid LOG value detected '%x",
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/htb_debug.c:		PVR_DUMPDEBUG_LOG("\n<========================== *** PACKETS DROPPED *** ======================>\n");
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/htb_debug.c:		 * and then PVR_DUMPDEBUG_LOG() that in one shot
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/htb_debug.c:			PVR_DUMPDEBUG_LOG("Buffer overrun - "IMG_SIZE_FMTSPEC" printed,"
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/htb_debug.c:		PVR_DUMPDEBUG_LOG("%s", pszBuffer);
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/htb_debug.c:					PVR_DUMPDEBUG_LOG("Buffer overrun - "IMG_SIZE_FMTSPEC" printed,"
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/htb_debug.c:				PVR_DUMPDEBUG_LOG("%s", pszBuffer);
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/htb_debug.c:					PVR_DUMPDEBUG_LOG("Buffer overrun - "IMG_SIZE_FMTSPEC" printed,"
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/htb_debug.c:				PVR_DUMPDEBUG_LOG("%s", pszBuffer);
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/htb_debug.c:						PVR_DUMPDEBUG_LOG("Buffer overrun - "IMG_SIZE_FMTSPEC" printed,"
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/htb_debug.c:					PVR_DUMPDEBUG_LOG("%s", pszBuffer);
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/htb_debug.c:						PVR_DUMPDEBUG_LOG("Buffer overrun - "IMG_SIZE_FMTSPEC" printed,"
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/htb_debug.c:					PVR_DUMPDEBUG_LOG("%s", pszBuffer);
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/htb_debug.c:	PVR_LOGR_IF_ERROR(eError, "PVRDebugFSCreateEntry");
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/pvr_debug.c:/******** BUFFERED LOG MESSAGES ********/
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/event.c:	PVR_LOGR_IF_ERROR(OSLockCreate(&psLinuxEventObject->hLock), "OSLockCreate");
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/event.c:	PVR_LOG(("%s: EvObj(%p) schedule: Avoided(%u) Called(%u) ReturnedImmediately(%u) SleptFully(%u) SleptPartially(%u)",
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/event.c:	PVR_LOG(("%s: LINUX_EVENT_OBJECT_STATS disabled!", __func__));
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/km_apphint.c:	RGXFWIF_LOG_GROUP_NAME_VALUE_MAP
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/km_apphint.c:#define X(a, b) { #b, HTB_LOG_GROUP_FLAG(a) },
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/km_apphint.c:	HTB_LOG_SFGROUPLIST
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/km_apphint.c:	{ "all", HTB_LOGMODE_ALLPID},
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/km_apphint.c:	{ "restricted", HTB_LOGMODE_RESTRICTEDPID}
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/km_apphint.c:	PVR_DUMPDEBUG_LOG("  %s", group_name);
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/km_apphint.c:			PVR_DUMPDEBUG_LOG("    %s: <Error>",
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/km_apphint.c:			PVR_DUMPDEBUG_LOG("    %s: %s",
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/km_apphint.c:		PVR_DUMPDEBUG_LOG("    none");
gpu/gpu_rgx/m1.11ED5425693/services/server/env/linux/km_apphint.c:		PVR_DUMPDEBUG_LOG("------[ AppHint Settings ]------");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.h:                                  PMR_LOG2ALIGN_T uiLog2Align,
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.h:                                     PMR_LOG2ALIGN_T uiLog2Align,
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.h:                                          PMR_LOG2ALIGN_T uiLog2Align,
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	PVR_DUMPDEBUG_LOG("%s info: %d.%d @ %8d (%s) build options: 0x%08x",				\
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	PVR_DUMPDEBUG_LOG("FW info: %d.%d @ %8d (%s) build options: 0x%08x",				\
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	PVR_LOGR_IF_ERROR(eError, "RGXPollMetaRegThroughSP");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	PVR_LOGR_IF_ERROR(eError, "RGXWriteWithSP");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	PVR_LOGR_IF_ERROR(eError, "RGXPollMetaRegThroughSP");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			PVR_DUMPDEBUG_LOG("_ValidateWithSP: Mismatch while validating %s at offset 0x%x: CPU 0x%08x (%p), FW 0x%08x (%x)",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	PVR_DUMPDEBUG_LOG("Match between Host and Meta view of the %s", pszDesc);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		PVR_DUMPDEBUG_LOG("%s Match between Host and MIPS views of the FW code", pszFormat);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		PVR_DUMPDEBUG_LOG("%s Mismatch between Host and MIPS views of the FW code", pszFormat);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		PVR_DUMPDEBUG_LOG("  [%u] Name: %s Base address: " IMG_DEV_VIRTADDR_FMTSPEC
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		PVR_DUMPDEBUG_LOG("  [%u] Name: %s Base address: " IMG_DEV_VIRTADDR_FMTSPEC
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		PVR_DUMPDEBUG_LOG("      Whole allocation was %s", psResult->bMap ? "mapped": "unmapped");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		PVR_DUMPDEBUG_LOG("      Pages %u to %u (" IMG_DEV_VIRTADDR_FMTSPEC "-" IMG_DEV_VIRTADDR_FMTSPEC ") %s%s",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		PVR_DUMPDEBUG_LOG("  No results");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:typedef struct _FAULT_INFO_LOG_
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:} FAULT_INFO_LOG;
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:static FAULT_INFO_LOG gsFaultInfoLog = { 0 };
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		PVR_DUMPDEBUG_LOG("(%u) Device memory history for page fault address" IMG_DEV_VIRTADDR_FMTSPEC
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		PVR_DUMPDEBUG_LOG("Device memory history for page fault address" IMG_DEV_VIRTADDR_FMTSPEC
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			PVR_DUMPDEBUG_LOG("%s:", pszWhich);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:					PVR_DUMPDEBUG_LOG("%sNo matching Devmem History for fault address", pszIndent);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:				PVR_DUMPDEBUG_LOG("%sCould not find PID for PC 0x%016" IMG_UINT64_FMTSPECx, pszIndent, sPCDevPAddr.uiAddr);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			PVR_DUMPDEBUG_LOG("%sPage fault not applicable to Devmem History", pszIndent);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		PVR_DUMPDEBUG_LOG("PM faulted at PC address = 0x%016" IMG_UINT64_FMTSPECx, psFaultData->sLevelData[MMU_LEVEL_0].ui64Address);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:					PVR_DUMPDEBUG_LOG("%s for index %d = 0x%08x and is %s",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:					PVR_DUMPDEBUG_LOG("%s for index %d = 0x%016" IMG_UINT64_FMTSPECx " and is %s",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:				PVR_DUMPDEBUG_LOG("%s index (%d) out of bounds (%d)",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		PVR_DUMPDEBUG_LOG("%sLocated PC address: 0x%016" IMG_UINT64_FMTSPECx, pszIndent, psPCDevPAddr->uiAddr);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			PVR_DUMPDEBUG_LOG("%sChecking faulting address " IMG_DEV_VIRTADDR_FMTSPEC, pszIndent, psFaultAddr->uiAddr);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		PVR_DUMPDEBUG_LOG("%s - OK", pszBIFNames[eBankID]);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		PVR_DUMPDEBUG_LOG("%s%s - FAULT:",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			PVR_DUMPDEBUG_LOG("%s  * MMU status (0x%016" IMG_UINT64_FMTSPECx "): PC = %d%s, Page Size = %d, MMU data type = %d%s%s.",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			PVR_DUMPDEBUG_LOG("%s  * Request (0x%016" IMG_UINT64_FMTSPECx
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			PVR_DUMPDEBUG_LOG("%sFW logged fault using PC Address: 0x%016" IMG_UINT64_FMTSPECx, pszIndent, sPCDevPAddr.uiAddr);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		PVR_DUMPDEBUG_LOG("%sMMU (%s) - OK", pszIndent, pszMetaOrCore);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		PVR_DUMPDEBUG_LOG("%sMMU (%s) - FAULT:", pszIndent, pszMetaOrCore);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		PVR_DUMPDEBUG_LOG("%s  * MMU status (0x%016" IMG_UINT64_FMTSPECx "): PC = %d, %s 0x%010" IMG_UINT64_FMTSPECx ", %s (%s)%s%s%s%s.",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			PVR_DUMPDEBUG_LOG("%sFW logged fault using PC Address: 0x%016" IMG_UINT64_FMTSPECx, pszIndent, sPCDevPAddr.uiAddr);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		PVR_DUMPDEBUG_LOG(INDENT "Cause exception: %s", pszException);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		PVR_DUMPDEBUG_LOG(INDENT "FDC interrupt pending");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		PVR_DUMPDEBUG_LOG(INDENT "Interrupt uses general interrupt vector");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		PVR_DUMPDEBUG_LOG(INDENT "Performance Counter Interrupt pending");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		PVR_DUMPDEBUG_LOG(INDENT "Unusable Coprocessor: %d", RGXMIPSFW_C0_CAUSE_UNUSABLE_UNIT(ui32Cause));
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	PVR_DUMPDEBUG_LOG("DEBUG                        :");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		PVR_DUMPDEBUG_LOG(INDENT "Debug exception: %s", pszDException);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			PVR_DUMPDEBUG_LOG(INDENT "Failed to validate any FW code corruption");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			PVR_DUMPDEBUG_LOG(INDENT "%s", psDebugEntry->pszExplanation);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	PVR_DUMPDEBUG_LOG("DEPC                    :0x%08X", ui32DEPC);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:				PVR_DUMPDEBUG_LOG("Overlap between TLB entry %u and %u", i , j);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	PVR_DUMPDEBUG_LOG("%2u) VA 0x%08X (%3uk) -> PA0 0x%08" IMG_UINT64_FMTSPECx " %s%s%s, "
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		PVR_DUMPDEBUG_LOG("    Remap %2u : IN 0x%08X (%3uk) => OUT 0x%08" IMG_UINT64_FMTSPECx,
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		PVR_DUMPDEBUG_LOG("    Remap %2u : IN 0x%08X (%3uk) => OUT 0x%08" IMG_UINT64_FMTSPECx,
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			PVR_DUMPDEBUG_LOG("FW-T%d Assert: %s (%s:%d)",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			PVR_DUMPDEBUG_LOG("FW Fault %d: %s (%s:%d)",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			PVR_DUMPDEBUG_LOG("            Data = 0x%08x, CRTimer = 0x%012"IMG_UINT64_FMTSPECx", OSTimer = %" IMG_UINT64_FMTSPEC ".%09" IMG_UINT64_FMTSPEC,
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			PVR_DUMPDEBUG_LOG("T%u polling %s (reg:0x%08X mask:0x%08X)",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	PVR_DUMPDEBUG_LOG("%s", pszLine);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			PVR_DUMPDEBUG_LOG("DM %d (GP)", dm);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:				PVR_DUMPDEBUG_LOG("DM %d (HWRflags 0x%08x:%s)", dm, psRGXFWIfTraceBufCtl->aui32HWRRecoveryFlags[dm], sPerDmHwrDescription);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:				PVR_DUMPDEBUG_LOG("DM %d", dm);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:				PVR_DUMPDEBUG_LOG("  %s PID = %u, frame = %d, HWRTData = 0x%08X, EventStatus = 0x%08X%s",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:					PVR_DUMPDEBUG_LOG("  %s CRTimer = 0x%012"IMG_UINT64_FMTSPECx", OSTimer = %" IMG_UINT64_FMTSPEC ".%09" IMG_UINT64_FMTSPEC ", CyclesElapsed = %" IMG_INT64_FMTSPECd,
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:					PVR_DUMPDEBUG_LOG("  %s CRTimer = 0x%012"IMG_UINT64_FMTSPECx", CyclesElapsed = %" IMG_INT64_FMTSPECd,
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:						PVR_DUMPDEBUG_LOG("  %s PreResetTimeInCycles = %" IMG_INT64_FMTSPECd ", HWResetTimeInCycles = %" IMG_INT64_FMTSPECd ", FreelistReconTimeInCycles = %" IMG_INT64_FMTSPECd ", TotalRecoveryTimeInCycles = %" IMG_INT64_FMTSPECd,
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:						PVR_DUMPDEBUG_LOG("  %s PreResetTimeInCycles = %" IMG_INT64_FMTSPECd ", HWResetTimeInCycles = %" IMG_INT64_FMTSPECd ", TotalRecoveryTimeInCycles = %" IMG_INT64_FMTSPECd,
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:						PVR_DUMPDEBUG_LOG("    T%u polling %s (reg:0x%08X mask:0x%08X last:0x%08X)",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			PVR_DUMPDEBUG_LOG("MMU Pending page: Yes");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:				PVR_DUMPDEBUG_LOG("Cannot check address on PM cat base %u", ui32CatBase);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:				PVR_DUMPDEBUG_LOG("Checking device virtual address " IMG_DEV_VIRTADDR_FMTSPEC
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		PVR_DUMPDEBUG_LOG("RGX FW State: %s%s", pszState, pszReason);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		PVR_DUMPDEBUG_LOG("RGX FW State: %s%s (HWRState 0x%08x:%s)", pszState, pszReason, psRGXFWIfTraceBuf->ui32HWRStateFlags, sHwrStateDescription);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		PVR_DUMPDEBUG_LOG("RGX FW Power State: %s (APM %s: %d ok, %d denied, %d non-idle, %d retry, %d other, %d total. Latency: %u ms)",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		PVR_DUMPDEBUG_LOG("RGX DVFS: %u frequency changes. Current frequency: %u.%03u MHz (sampled at %" IMG_UINT64_FMTSPEC ")",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			PVR_DUMPDEBUG_LOG("          Previous frequencies: %u.%03u, %u.%03u, %u.%03u MHz (Sampled at "
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			PVR_DUMPDEBUG_LOG("RGX FW OS %u - State: %s; Freelists: %s%s%s", ui32OSid,
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		PVR_DUMPDEBUG_LOG("RGX FW State: Unavailable under Guest Mode of operation");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		PVR_DUMPDEBUG_LOG("RGX FW Power State: Unavailable under Guest Mode of operation");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		PVR_DUMPDEBUG_LOG("STATS[START]: RGXFWIF_STATS_FRAMEWORK_MAX=%d", RGXFWIF_STATS_FRAMEWORK_MAX);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:				PVR_DUMPDEBUG_LOG("STATS[%08x]:%s", ui32Index1, pszLine);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		PVR_DUMPDEBUG_LOG("STATS[END]");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	PVR_DUMPDEBUG_LOG("META Slave Port extra debug:");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		PVR_DUMPDEBUG_LOG("  * %s: 0x%8.8X", pszRegName, ui32RegVal);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		PVR_DUMPDEBUG_LOG("  * 0xA20[%d]: 0x%8.8X", ui32Idx, ui32RegVal);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			PVR_DUMPDEBUG_LOG("  * 0x%X[%d]: 0x%8.8X", ui32RegAddr, ui32Idx, ui32RegVal);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	PVR_DUMPDEBUG_LOG("------[ RGX Device: Start ]------");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	PVR_DUMPDEBUG_LOG("------[ RGX Device: End ]------");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:typedef struct _TRACEBUF_LOG_ {
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	RGXFW_LOG_SFids	eSFId;
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:} TRACEBUF_LOG;
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:static const TRACEBUF_LOG aLogDefinitions[] =
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:#define X(a, b, c, d, e) {RGXFW_LOG_CREATESFID(a,b,e), #c, d, e},
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	RGXFW_LOG_SFIDLIST
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	const TRACEBUF_LOG *psLogDef = &aLogDefinitions[0];
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		const TRACEBUF_LOG *psLogDef2;
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:					PVR_DUMPDEBUG_LOG("Integrity Check FAIL: %s has an unsupported type not recognized (fmt: %%%c). Please fix.",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			PVR_DUMPDEBUG_LOG("Integrity Check FAIL: %s has %d arguments but only %d are specified. Please fix.",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			PVR_DUMPDEBUG_LOG("Integrity Check FAIL: %s has %d arguments but a maximum of 20 are supported. Please fix.",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			PVR_DUMPDEBUG_LOG("Integrity Check FAIL: %s id %x is not unique, there are %d more. Please fix.",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		if (psRGXFWIfTraceBufCtl->ui32LogType & RGXFWIF_LOG_TYPE_GROUP_MASK)
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			PVR_DUMPDEBUG_LOG("Debug log type: %s ( " RGXFWIF_LOG_ENABLED_GROUPS_LIST_PFSPEC ")",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:							  ((psRGXFWIfTraceBufCtl->ui32LogType & RGXFWIF_LOG_TYPE_TRACE)?("trace"):("tbi")),
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:							  RGXFWIF_LOG_ENABLED_GROUPS_LIST(psRGXFWIfTraceBufCtl->ui32LogType)
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			PVR_DUMPDEBUG_LOG("Debug log type: none");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:					if (ui32DataToId == RGXFW_SF_LAST  &&  RGXFW_LOG_VALIDID(ui32Data))
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:						PVR_DUMPDEBUG_LOG("WARNING: Unrecognized id (%x). From here on the trace might be wrong!", ui32Data);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:						PVR_DUMPDEBUG_LOG("ASSERTION %s failed at %s:%u",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:					PVR_DUMPDEBUG_LOG(szBuffer, ui64Timestamp, tid, groups[RGXFW_SF_GID(ui32Data)],
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	PVR_DUMPDEBUG_LOG("------[ RGX registers ]------");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	PVR_DUMPDEBUG_LOG("RGX Register Base Address (Linear):   0x%p", psDevInfo->pvRegsBaseKM);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	PVR_DUMPDEBUG_LOG("RGX Register Base Address (Physical): 0x%08lX", (unsigned long)psDevInfo->sRegsPhysBase.uiAddr);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:#define DDLOG32(R)      PVR_DUMPDEBUG_LOG(REG32_FMTSPEC, #R, OSReadHWReg32(pvRegsBaseKM, RGX_CR_##R));
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:#define DDLOG64(R)      PVR_DUMPDEBUG_LOG(REG64_FMTSPEC, #R, OSReadHWReg64(pvRegsBaseKM, RGX_CR_##R));
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:#define DDLOG32_DPX(R)  PVR_DUMPDEBUG_LOG(REG32_FMTSPEC, #R, OSReadHWReg32(pvRegsBaseKM, DPX_CR_##R));
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:#define DDLOG64_DPX(R)  PVR_DUMPDEBUG_LOG(REG64_FMTSPEC, #R, OSReadHWReg64(pvRegsBaseKM, DPX_CR_##R));
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:#define DDLOGVAL32(S,V) PVR_DUMPDEBUG_LOG(REG32_FMTSPEC, S, V);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG64(CORE_ID);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG32(CORE_ID);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG32(CORE_REVISION);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG32(DESIGNER_REV_FIELD1);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG32(DESIGNER_REV_FIELD2);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG64(CHANGESET_NUMBER);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG32(META_SP_MSLVIRQSTATUS);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG64(CLK_CTRL);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG64(CLK_STATUS);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG64(CLK_CTRL2);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG64(CLK_STATUS2);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG64(CLK_XTPLUS_CTRL);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG64(CLK_XTPLUS_STATUS);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG32(EVENT_STATUS);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG64(TIMER);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG64(MMU_FAULT_STATUS);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG64(MMU_FAULT_STATUS_META);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG32(BIF_FAULT_BANK0_MMU_STATUS);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG64(BIF_FAULT_BANK0_REQ_STATUS);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG32(BIF_FAULT_BANK1_MMU_STATUS);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG64(BIF_FAULT_BANK1_REQ_STATUS);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG32(BIF_MMU_STATUS);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG32(BIF_MMU_ENTRY);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG64(BIF_MMU_ENTRY_STATUS);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG32(BIF_JONES_OUTSTANDING_READ);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG32(BIF_BLACKPEARL_OUTSTANDING_READ);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG32(BIF_DUST_OUTSTANDING_READ);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			DDLOG32(BIF_STATUS_MMU);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			DDLOG32(BIF_READS_EXT_STATUS);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			DDLOG32(BIF_READS_INT_STATUS);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG32(BIFPM_STATUS_MMU);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG32(BIFPM_READS_EXT_STATUS);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG32(BIFPM_READS_INT_STATUS);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		PVR_DUMPDEBUG_LOG("Warning: BRN44871 is present");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG64(CONTEXT_MAPPING0);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG64(CONTEXT_MAPPING1);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG64(CONTEXT_MAPPING2);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG64(CONTEXT_MAPPING3);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG64(CONTEXT_MAPPING4);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG64(BIF_CAT_BASE_INDEX);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG64(BIF_CAT_BASE0);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG64(BIF_CAT_BASE1);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG64(BIF_CAT_BASE2);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG64(BIF_CAT_BASE3);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG64(BIF_CAT_BASE4);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG64(BIF_CAT_BASE5);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG64(BIF_CAT_BASE6);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG64(BIF_CAT_BASE7);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG32(BIF_CTRL_INVAL);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG32(BIF_CTRL);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG64(BIF_PM_CAT_BASE_VCE0);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG64(BIF_PM_CAT_BASE_TE0);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG64(BIF_PM_CAT_BASE_ALIST0);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG64(BIF_PM_CAT_BASE_VCE1);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG64(BIF_PM_CAT_BASE_TE1);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG64(BIF_PM_CAT_BASE_ALIST1);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG32(PERF_TA_PHASE);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG32(PERF_TA_CYCLE);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG32(PERF_3D_PHASE);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG32(PERF_3D_CYCLE);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOGVAL32("PERF_TA_OR_3D_CYCLE", ui32TAOr3DCycles);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOGVAL32("PERF_TA_AND_3D_CYCLE", ui32TAAnd3DCycles);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG32(PERF_COMPUTE_PHASE);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG32(PERF_COMPUTE_CYCLE);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG32(PM_PARTIAL_RENDER_ENABLE);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG32(ISP_RENDER);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG64(TLA_STATUS);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG64(MCU_FENCE);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG32(VDM_CONTEXT_STORE_STATUS);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG64(VDM_CONTEXT_STORE_TASK0);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG64(VDM_CONTEXT_STORE_TASK1);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG64(VDM_CONTEXT_STORE_TASK2);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG64(VDM_CONTEXT_RESUME_TASK0);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG64(VDM_CONTEXT_RESUME_TASK1);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG64(VDM_CONTEXT_RESUME_TASK2);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG32(ISP_CTL);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG32(ISP_STATUS);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG32(MTS_INTCTX);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG32(MTS_BGCTX);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG32(MTS_BGCTX_COUNTED_SCHEDULE);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG32(MTS_SCHEDULE);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG32(MTS_GPU_INT_STATUS);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG32(CDM_CONTEXT_STORE_STATUS);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG64(CDM_CONTEXT_PDS0);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG64(CDM_CONTEXT_PDS1);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG64(CDM_TERMINATE_PDS);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG64(CDM_TERMINATE_PDS1);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG64(CDM_CONTEXT_LOAD_PDS0);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG64(CDM_CONTEXT_LOAD_PDS1);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG32(JONES_IDLE);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	DDLOG32(SIDEKICK_IDLE);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG32(SLC_IDLE);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG32(SLC_STATUS0);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG64(SLC_STATUS1);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			DDLOG64(SLC_STATUS2);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG32(SLC_CTRL_BYPASS);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG64(SLC_CTRL_MISC);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG32(SLC3_IDLE);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG64(SLC3_STATUS);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG32(SLC3_FAULT_STOP_STATUS);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		PVR_LOGG_IF_ERROR(eError, "RGXReadWithSP", _METASPError);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOGVAL32("T0 TXENABLE", ui32RegVal);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		PVR_LOGG_IF_ERROR(eError, "RGXReadWithSP", _METASPError);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOGVAL32("T0 TXSTATUS", ui32RegVal);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		PVR_LOGG_IF_ERROR(eError, "RGXReadWithSP", _METASPError);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOGVAL32("T0 TXDEFR", ui32RegVal);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		PVR_LOGG_IF_ERROR(eError, "RGXReadMetaCoreReg", _METASPError);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOGVAL32("T0 PC", ui32RegVal);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		PVR_LOGG_IF_ERROR(eError, "RGXReadMetaCoreReg", _METASPError);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOGVAL32("T0 PCX", ui32RegVal);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		PVR_LOGG_IF_ERROR(eError, "RGXReadMetaCoreReg", _METASPError);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOGVAL32("T0 SP", ui32RegVal);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			PVR_LOGG_IF_ERROR(eError, "RGXReadWithSP", _METASPError);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			DDLOGVAL32("T1 TXENABLE", ui32RegVal);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			PVR_LOGG_IF_ERROR(eError, "RGXReadWithSP", _METASPError);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			DDLOGVAL32("T1 TXSTATUS", ui32RegVal);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			PVR_LOGG_IF_ERROR(eError, "RGXReadWithSP", _METASPError);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			DDLOGVAL32("T1 TXDEFR", ui32RegVal);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			PVR_LOGG_IF_ERROR(eError, "RGXReadMetaCoreReg", _METASPError);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			DDLOGVAL32("T1 PC", ui32RegVal);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			PVR_LOGG_IF_ERROR(eError, "RGXReadMetaCoreReg", _METASPError);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			DDLOGVAL32("T1 PCX", ui32RegVal);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			PVR_LOGG_IF_ERROR(eError, "RGXReadMetaCoreReg", _METASPError);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			DDLOGVAL32("T1 SP", ui32RegVal);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			PVR_LOGG_IF_ERROR(eError, "RGXReadWithSP", _METASPError);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			DDLOGVAL32("PERF_COUNT0", ui32RegVal);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			PVR_LOGG_IF_ERROR(eError, "RGXReadWithSP", _METASPError);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			DDLOGVAL32("PERF_COUNT1", ui32RegVal);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:				PVR_DUMPDEBUG_LOG("Failed to validate any FW code corruption");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			PVR_DUMPDEBUG_LOG("Skipping FW code memory corruption checking as META is disabled");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG32(MIPS_ADDR_REMAP1_CONFIG1);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG64(MIPS_ADDR_REMAP1_CONFIG2);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG32(MIPS_ADDR_REMAP2_CONFIG1);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG64(MIPS_ADDR_REMAP2_CONFIG2);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG32(MIPS_ADDR_REMAP3_CONFIG1);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG64(MIPS_ADDR_REMAP3_CONFIG2);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG32(MIPS_ADDR_REMAP4_CONFIG1);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG64(MIPS_ADDR_REMAP4_CONFIG2);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG32(MIPS_ADDR_REMAP5_CONFIG1);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG64(MIPS_ADDR_REMAP5_CONFIG2);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG64(MIPS_WRAPPER_CONFIG);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		DDLOG32(MIPS_EXCEPTION_STATUS);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			PVR_DUMPDEBUG_LOG("---- [ MIPS internal state ] ----");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:				PVR_DUMPDEBUG_LOG("MIPS extra debug not available");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:				DDLOGVAL32("PC", sMIPSState.ui32ErrorEPC);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:				DDLOGVAL32("STATUS_REGISTER", sMIPSState.ui32StatusRegister);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:				DDLOGVAL32("CAUSE_REGISTER", sMIPSState.ui32CauseRegister);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:				DDLOGVAL32("BAD_REGISTER", sMIPSState.ui32BadRegister);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:				DDLOGVAL32("EPC", sMIPSState.ui32EPC);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:				DDLOGVAL32("SP", sMIPSState.ui32SP);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:				DDLOGVAL32("BAD_INSTRUCTION", sMIPSState.ui32BadInstr);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:					PVR_DUMPDEBUG_LOG("TLB                           :");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:								PVR_DUMPDEBUG_LOG("BRN63553 WA present with a valid TLB entry mapping address 0x0.");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:							PVR_DUMPDEBUG_LOG("Remap unmapped address => 0x%08X",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			PVR_DUMPDEBUG_LOG("--------------------------------");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:				MTKPP_LOGTIME(g_use_id, "DEBUG_REQUEST_VERBOSITY_LOW");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:				MTKPP_LOGTIME(g_use_id, "DEBUG_REQUEST_VERBOSITY_MEDIUM");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:				MTKPP_LOGTIME(g_use_id, "DEBUG_REQUEST_VERBOSITY_HIGH");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	PVR_DUMPDEBUG_LOG("------[ Driver Info ]------");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		PVR_DUMPDEBUG_LOG("FW info: UNINITIALIZED");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	PVR_DUMPDEBUG_LOG("Comparison of UM/KM components: %s", (psPVRSRVData->sDriverInfo.bIsNoMatch) ? ("MISMATCH") : ("MATCHING"));
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	PVR_DUMPDEBUG_LOG("KM Arch: %s", (psPVRSRVData->sDriverInfo.ui8KMBitArch & BUILD_ARCH_64BIT)?
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		PVR_DUMPDEBUG_LOG("Driver Mode: %s", (PVRSRV_VZ_MODE_IS(DRIVER_MODE_HOST))?"Host":"Guest");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		PVR_DUMPDEBUG_LOG("Mismatch between the number of Operating Systems supported by KM driver (%d) and FW (%d)",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			PVR_DUMPDEBUG_LOG("UM Connected Clients Arch: %s and %s", Bit64, Bit32);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			PVR_DUMPDEBUG_LOG("UM Connected Clients: %s",(psPVRSRVData->sDriverInfo.ui8UMSupportedArch &
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	PVR_DUMPDEBUG_LOG("------[ RGX Summary ]------");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	PVR_DUMPDEBUG_LOG("MTK Version String: %s", MTK_DEBUG_VERSION_STR);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	PVR_DUMPDEBUG_LOG("RGX BVNC: %d.%d.%d.%d", psDevInfo->sDevFeatureCfg.ui32B, \
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	PVR_DUMPDEBUG_LOG("RGX Device State: %s", _RGXGetDebugDevStateString(psDeviceNode->eDevState));
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	PVR_DUMPDEBUG_LOG("RGX Power State: %s", _RGXGetDebugDevPowerStateString(ePowerState));
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			PVR_DUMPDEBUG_LOG(" (!) %s. No registers dumped", PVRSRV_VZ_MODE_IS(DRIVER_MODE_GUEST) ? "Guest Mode of operation" : "RGX power is down");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			PVR_DUMPDEBUG_LOG("RGX Kernel CCB WO:0x%X RO:0x%X",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:			PVR_DUMPDEBUG_LOG("RGX Firmware CCB WO:0x%X RO:0x%X",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:	        PVR_DUMPDEBUG_LOG("RGX WorkEst CCB WO:0x%X RO:0x%X",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:				PVR_DUMPDEBUG_LOG("RGX Checkpoint CCB WO:0x%X RO:0x%X (Check State: FW=%#X, HOST=%#X)",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		PVR_DUMPDEBUG_LOG("RGX Kernel CCB commands executed = %d",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:						PVR_DUMPDEBUG_LOG(MSG_IRQ_CNT_TYPE "%u: FW IRQ count = %u", ui32idx, ui32IrqCnt);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:							PVR_DUMPDEBUG_LOG("Last sampled IRQ count in LISR = %u", psDevInfo->aui32SampleIRQCount[ui32idx]);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:		PVR_DUMPDEBUG_LOG("FW OS config flags = 0x%X (%s)", psOSConfig->ui32ConfigFlags, sFwFlagsDescription);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:				if (psRGXFWIfTraceBufCtl->ui32LogType & RGXFWIF_LOG_TYPE_GROUP_MASK)
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:					PVR_DUMPDEBUG_LOG("Debug log type: %s ( " RGXFWIF_LOG_ENABLED_GROUPS_LIST_PFSPEC ")",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:									  ((psRGXFWIfTraceBufCtl->ui32LogType & RGXFWIF_LOG_TYPE_TRACE)?("trace"):("tbi")),
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:									  RGXFWIF_LOG_ENABLED_GROUPS_LIST(psRGXFWIfTraceBufCtl->ui32LogType)
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:					PVR_DUMPDEBUG_LOG("Debug log type: none");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:					PVR_DUMPDEBUG_LOG("RGX FW thread %d: Trace buffer not yet allocated",tid);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:				PVR_DUMPDEBUG_LOG("------[ RGX FW thread %d trace START ]------", tid);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:				PVR_DUMPDEBUG_LOG("FWT[traceptr]: %X", psRGXFWIfTraceBufCtl->sTraceBuf[tid].ui32TracePointer);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:				PVR_DUMPDEBUG_LOG("FWT[tracebufsize]: %X", psRGXFWIfTraceBufCtl->ui32TraceBufSizeInDWords);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:							PVR_DUMPDEBUG_LOG("FWT[%08x]: 00000000 ... 00000000", ui32LineOffset);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:							PVR_DUMPDEBUG_LOG("FWT[...]: %d lines were all zero", ui32CountLines);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:						PVR_DUMPDEBUG_LOG("FWT[%08x]:%s", ui32LineOffset, pszLine);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:					PVR_DUMPDEBUG_LOG("FWT[END]: %d lines were all zero", ui32CountLines);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:				PVR_DUMPDEBUG_LOG("------[ RGX FW thread %d trace END ]------", tid);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:					PVR_DUMPDEBUG_LOG("------[ FW Thread 1 PCX list (most recent first) ]------");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:						PVR_DUMPDEBUG_LOG("  0x%08x", pui32T1PCX[i]);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:					PVR_DUMPDEBUG_LOG("------[ FW Thread 1 PCX list [END] ]------");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:				PVR_DUMPDEBUG_LOG("------[ Full CCB Status ]------");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdebug.c:				PVR_DUMPDEBUG_LOG("------[ Stalled FWCtxs ]------");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxkicksync.c:									 ui32CCBAllocSizeLog2 ? ui32CCBAllocSizeLog2 : RGX_KICKSYNC_CCB_SIZE_LOG2,
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxkicksync.c:									 ui32CCBMaxAllocSizeLog2 ? ui32CCBMaxAllocSizeLog2 : RGX_KICKSYNC_CCB_MAX_SIZE_LOG2,
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxkicksync.c:		PVR_LOG(("%s: Unexpected error from RGXFWRequestCommonContextCleanUp (%s)",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxpower.c:					PVR_LOG(("%s: FW reached boot stage %i/%i.",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxpower.c:			PVR_LOG_ERROR(eError, "PVRSRVPowerTryLock");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxinit.c:#define RGX_MMU_LOG2_PAGE_SIZE_4KB   (12)
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxinit.c:#define RGX_MMU_LOG2_PAGE_SIZE_16KB  (14)
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxinit.c:#define RGX_MMU_LOG2_PAGE_SIZE_64KB  (16)
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxinit.c:#define RGX_MMU_LOG2_PAGE_SIZE_256KB (18)
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxinit.c:#define RGX_MMU_LOG2_PAGE_SIZE_1MB   (20)
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxinit.c:#define RGX_MMU_LOG2_PAGE_SIZE_2MB   (21)
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxinit.c:	PVR_LOG(("RGX Firmware image '%s' loaded", pszLoadedFwStr));
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxinit.c:	IMG_DEVMEM_LOG2ALIGN_T uiLog2Align = OSGetPageShift();
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxinit.c:		uiLog2Align = RGXMIPSFW_LOG2_PAGE_SIZE_64K;
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxinit.c:	IMG_DEVMEM_LOG2ALIGN_T uiLog2Align = OSGetPageShift();
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxinit.c:		uiLog2Align = RGXMIPSFW_LOG2_PAGE_SIZE_64K;
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxinit.c:			PVR_LOG(("(FAIL) RGXDevInitCompatCheck: Mismatch in Firmware and KM driver build options; "
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxinit.c:			PVR_LOG(("(FAIL) RGXDevInitCompatCheck: Mismatch in Firmware-side and KM driver build options; "
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxinit.c:		PVR_LOG(("(FAIL) RGXDevInitCompatCheck: Incompatible driver DDK version (%u.%u) / Firmware DDK version (%u.%u).",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxinit.c:		PVR_LOG(("(WARN) RGXDevInitCompatCheck: Different driver DDK build version (%d) / Firmware DDK build version (%d).",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxinit.c:			PVR_LOG(("(FAIL) %s: Incompatible compatibility struct version of driver (%u) and firmware (%u).",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxinit.c:			PVR_LOG(("(FAIL) RGXDevInitCompatCheck: Mismatch in KM driver BVNC (%u.%u.%u.%u) and Firmware BVNC (%u.%u.%u.%u)",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxinit.c:		PVR_LOG(("BVNC compatibility checks between driver and HW are disabled (AppHint override)"));
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxinit.c:		PVR_LOG(("Compatibility checks: Ignoring fields: '%s%s%s%s' of HW BVNC.",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxinit.c:			PVR_LOG(("(FAIL) %s: Incompatible compatibility struct version of HW (%d) and FW (%d).",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxinit.c:			PVR_LOG(("(FAIL) RGXDevInitCompatCheck: Incompatible HW BVNC (%d.%d.%d.%d) and FW BVNC (%d.%d.%d.%d).",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxinit.c:		PVR_LOG(("RGXDevInitCompatCheck: Incompatible driver %s version (%d) / HW %s version (%d).",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxinit.c:			PVR_LOG(("%s: Reading RGX META register failed. Is the GPU correctly powered up? (%u)",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxinit.c:				RGXMIPSFW_TRAMPOLINE_LOG2_SEGMENT_SIZE,
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxinit.c:	*pui32Value &= RGXFWIF_LOG_TYPE_GROUP_MASK;
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxinit.c:		if (*pui32Value & RGXFWIF_LOG_TYPE_TRACE)
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxinit.c:		else if (*pui32Value & RGXFWIF_LOG_TYPE_GROUP_MASK)
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxinit.c:			ui32Value |= RGXFWIF_LOG_TYPE_TRACE;
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxinit.c:			ui32RGXFWLogType = RGXFWIF_LOG_TYPE_GROUP_MAIN;
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxinit.c:			ui32RGXFWLogType |= RGXFWIF_LOG_TYPE_TRACE;
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxinit.c:	PVR_LOG_IF_ERROR(eError, "DeviceDepBridgeDeInit");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxinit.c:	PVR_LOG_IF_ERROR(eError, "HTBDeInit");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxinit.c:			.uiLog2TilingStrideFactor = (RGX_BIF_TILING_HEAP_LOG2_ALIGN_TO_STRIDE_BASE - tiling_mode)
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxinit.c:						     RGX_BIF_TILING_HEAP_ALIGN_LOG2_FROM_XSTRIDE(xstride), \
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxinit.c:	PVR_LOGG_IF_ERROR(eError, "RGXHWPerfInit", e14);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxinit.c:	PVR_LOG_IF_ERROR(eError, "PVRSRVRegisterDbgRequestNotify");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxinit.c:	PVR_LOG_IF_ERROR(eError, "DeviceDepBridgeInit");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.h:#define MIN_SAFE_CCB_SIZE_LOG2         13  /* 8K (2 Pages) */
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.h:#define MAX_SAFE_CCB_SIZE_LOG2         18  /* 256K (64 Pages) */
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.h:#define RGX_TQ3D_CCB_SIZE_LOG2         PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_TQ3D
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.h:static_assert(RGX_TQ3D_CCB_SIZE_LOG2 >= MIN_SAFE_CCB_SIZE_LOG2 &&
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.h:	RGX_TQ3D_CCB_SIZE_LOG2 <= MAX_SAFE_CCB_SIZE_LOG2, "TQ3D CCB size is invalid");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.h:#define RGX_TQ3D_CCB_MAX_SIZE_LOG2		PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_TQ3D
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.h:static_assert(RGX_TQ3D_CCB_MAX_SIZE_LOG2 >= PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_TQ3D
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.h:	&& RGX_TQ3D_CCB_MAX_SIZE_LOG2 <= MAX_SAFE_CCB_SIZE_LOG2, "TQ3D max CCB size is invalid");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.h:#define RGX_TQ2D_CCB_SIZE_LOG2         PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_TQ2D
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.h:static_assert(RGX_TQ2D_CCB_SIZE_LOG2 >= MIN_SAFE_CCB_SIZE_LOG2 &&
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.h:	RGX_TQ2D_CCB_SIZE_LOG2 <= MAX_SAFE_CCB_SIZE_LOG2, "TQ2D CCB size is invalid");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.h:#define RGX_TQ2D_CCB_MAX_SIZE_LOG2		PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_TQ2D
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.h:static_assert(RGX_TQ2D_CCB_MAX_SIZE_LOG2 >= PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_TQ2D &&
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.h:	RGX_TQ2D_CCB_MAX_SIZE_LOG2 <= MAX_SAFE_CCB_SIZE_LOG2, "TQ2D max CCB size is invalid");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.h:#define RGX_CDM_CCB_SIZE_LOG2          PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_CDM
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.h:static_assert(RGX_CDM_CCB_SIZE_LOG2 >= MIN_SAFE_CCB_SIZE_LOG2 &&
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.h:	RGX_CDM_CCB_SIZE_LOG2 <= MAX_SAFE_CCB_SIZE_LOG2, "CDM CCB size is invalid");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.h:#define RGX_CDM_CCB_MAX_SIZE_LOG2		PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_CDM
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.h:static_assert(RGX_CDM_CCB_MAX_SIZE_LOG2 >= PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_CDM &&
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.h:	RGX_CDM_CCB_MAX_SIZE_LOG2 <= MAX_SAFE_CCB_SIZE_LOG2, "CDM max CCB size is invalid");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.h:#define RGX_TA_CCB_SIZE_LOG2           PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_TA
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.h:static_assert(RGX_TA_CCB_SIZE_LOG2 >= MIN_SAFE_CCB_SIZE_LOG2 &&
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.h:	RGX_TA_CCB_SIZE_LOG2 <= MAX_SAFE_CCB_SIZE_LOG2, "TA CCB size is invalid");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.h:#define RGX_TA_CCB_MAX_SIZE_LOG2		PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_TA
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.h:static_assert(RGX_TA_CCB_MAX_SIZE_LOG2 >= PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_TA &&
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.h:	RGX_TA_CCB_MAX_SIZE_LOG2 <= MAX_SAFE_CCB_SIZE_LOG2, "TA max CCB size is invalid");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.h:#define RGX_3D_CCB_SIZE_LOG2           PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_3D
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.h:static_assert(RGX_3D_CCB_SIZE_LOG2 >= MIN_SAFE_CCB_SIZE_LOG2 &&
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.h:	RGX_3D_CCB_SIZE_LOG2 <= MAX_SAFE_CCB_SIZE_LOG2, "3D CCB size is invalid");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.h:#define RGX_3D_CCB_MAX_SIZE_LOG2		PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_3D
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.h:static_assert(RGX_3D_CCB_MAX_SIZE_LOG2 >= PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_3D &&
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.h:	RGX_3D_CCB_MAX_SIZE_LOG2 <= MAX_SAFE_CCB_SIZE_LOG2, "3D max CCB size is invalid");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.h:#define RGX_KICKSYNC_CCB_SIZE_LOG2     PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_KICKSYNC
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.h:static_assert(RGX_KICKSYNC_CCB_SIZE_LOG2 >= MIN_SAFE_CCB_SIZE_LOG2 &&
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.h:	RGX_KICKSYNC_CCB_SIZE_LOG2 <= MAX_SAFE_CCB_SIZE_LOG2, "KickSync CCB size is invalid");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.h:#define RGX_KICKSYNC_CCB_MAX_SIZE_LOG2	PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_KICKSYNC
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.h:static_assert(RGX_KICKSYNC_CCB_MAX_SIZE_LOG2 >= PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_KICKSYNC &&
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.h:	RGX_KICKSYNC_CCB_MAX_SIZE_LOG2 <= MAX_SAFE_CCB_SIZE_LOG2, "KickSync max CCB size is invalid");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxpdump.c:	pui32Word[3] = ui32LogicalWidth << IMAGE_HEADER_WORD3_LOGICAL_WIDTH_SHIFT;
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxpdump.c:	pui32Word[4] = ui32LogicalHeight << IMAGE_HEADER_WORD4_LOGICAL_HEIGHT_SHIFT;
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxworkest.c:		PVR_LOG_IF_ERROR(eError, "WorkEstCheckFirmwareCCB: WorkEstRetire failed");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxworkest.c:	PVR_LOGR_IF_FALSE(psDevInfo, "WorkEstPrepare: Device info not available", eError);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxworkest.c:	PVR_LOGR_IF_FALSE(psWorkEstHostData, "WorkEstPrepare: Host data not available", eError);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxworkest.c:	PVR_LOGR_IF_FALSE(psWorkloadMatchingData, "WorkEstPrepare: Workload Matching Data not available", eError);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxworkest.c:	PVR_LOGR_IF_FALSE(psWorkloadMatchingData->psHashLock, "WorkEstPrepare: Hash lock not available", eError);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxworkest.c:	PVR_LOGR_IF_FALSE(psWorkloadMatchingData->psHashTable, "WorkEstPrepare: Hash table not available", eError);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxworkest.c:	PVR_LOGR_IF_ERROR(eError, "WorkEstPrepare: Unable to access System Monotonic clock");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxworkest.c:	PVR_LOGR_IF_FALSE(psReturnCmd, "WorkEstRetire: Missing return command", eError);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxworkest.c:	PVR_LOGR_IF_FALSE((psReturnCmd->ui64ReturnDataIndex < RETURN_DATA_ARRAY_SIZE), "WorkEstRetire: Handle reference out-of-bounds", eError);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxworkest.c:	PVR_LOGR_IF_FALSE(psWorkEstHostData, "WorkEstRetire: Missing host data", eError);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxworkest.c:	PVR_LOGG_IF_FALSE(psWorkloadMatchingData, "WorkEstRetire: Missing matching data", hasherror);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxworkest.c:	PVR_LOGG_IF_FALSE(psWorkloadMatchingData->psHashTable, "WorkEstRetire: Missing hash", hasherror);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxworkest.c:	PVR_LOGG_IF_FALSE(psWorkloadMatchingData->psHashLock, "WorkEstRetire: Missing hash/lock", hasherror);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxworkest.c:		PVR_LOG(("WorkEstRetire: HASH_Insert failed"));
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/env/linux/km/rgxfwload.c:	PVR_LOG(("Digital signature for '%s' verified successfully.",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxlayer_impl.c:	PVR_LOG(("Starting fabric coherency test ....."));
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxlayer_impl.c:				PVR_LOG(("CPU:Write/GPU:Read Snoop Miss Test: starting [run #%u]", ui32OddEven));
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxlayer_impl.c:				PVR_LOG(("GPU:Write/CPU:Read Snoop Miss Test: starting [run #%u]", ui32OddEven));
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxlayer_impl.c:				PVR_LOG(("CPU:Write/GPU:Read Snoop Hit  Test: starting [run #%u]", ui32OddEven));
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxlayer_impl.c:				PVR_LOG(("GPU:Write/CPU:Read Snoop Hit  Test: starting [run #%u]", ui32OddEven));
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxlayer_impl.c:				PVR_LOG(("Internal error, exiting test"));
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxlayer_impl.c:						PVR_LOG(("At Offset: %d, Expected: %x, Got: %x",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxlayer_impl.c:				PVR_LOG(("CPU:Write/GPU:Read Snoop Miss Test: completed [run #%u]: %s", ui32OddEven, bSubTestPassed ? "PASSED" : "FAILED"));
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxlayer_impl.c:				PVR_LOG(("GPU:Write/CPU:Read Snoop Miss Test: completed [run #%u]: %s", ui32OddEven, bSubTestPassed ? "PASSED" : "FAILED"));
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxlayer_impl.c:				PVR_LOG(("CPU:Write/GPU:Read Snoop Hit  Test: completed [run #%u]: %s", ui32OddEven, bSubTestPassed ? "PASSED" : "FAILED"));
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxlayer_impl.c:				PVR_LOG(("GPU:Write/CPU:Read Snoop Hit  Test: completed [run #%u]: %s", ui32OddEven, bSubTestPassed ? "PASSED" : "FAILED"));
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxlayer_impl.c:				PVR_LOG(("Internal error, exiting test"));
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxlayer_impl.c:		PVR_LOG(("fabric coherency test: PASSED"));
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxlayer_impl.c:		PVR_LOG(("fabric coherency test: FAILED"));
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:	PVR_LOGR_IF_ERROR(eError, "OSLockCreate");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:	PVR_LOGRN_IF_ERROR(eError, "RGXWaitForFWOp");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:	PVR_LOGG_IF_ERROR(eError, "TLStreamCreate", e1);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:	PVR_LOG_IF_ERROR(eError, "TLStreamSetNotifStream");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:	PVR_LOGG_IF_ERROR(eError, "RGXWaitForFWOp", return_);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:		PVR_LOG_IF_ERROR(eError, "PVRSRVCreateHWPerfHostThread");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:		PVR_LOG_IF_ERROR(eError, "PVRSRVDestroyHWPerfHostThread");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:		PVR_LOG(("HWPerfHost deferred events buffer high-watermark / size: (%u / %u)",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:		PVR_LOG(("HWPerfHost deferred event retries: WaitForAtomicCtxPktHighWatermark(%u) "\
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:	PVR_LOGR_IF_FALSE(ui32InfoPageIdx >= HWPERF_INFO_IDX_START &&
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:	PVR_LOGR_IF_FALSE((NULL != psDevInfo), "psDevInfo invalid", PVRSRV_ERROR_INVALID_PARAMS);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:	PVR_LOGR_IF_FALSE((NULL != psDeviceNode), "psConnection invalid", PVRSRV_ERROR_INVALID_PARAMS);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:	PVR_LOGR_IF_FALSE(ui32ArrayLen > 0, "ui32ArrayLen is 0",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:	PVR_LOGR_IF_FALSE(psBlockConfigs != NULL, "psBlockConfigs is NULL",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:		PVR_LOGR_IF_ERROR(eError, "DevmemFwAllocate");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:		PVR_LOGG_IF_ERROR(eError, "DevmemAcquireCpuVirtAddr", fail1);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:		PVR_LOGG_IF_ERROR(eError, "RGXScheduleCommand", fail2);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:		PVR_LOGG_IF_ERROR(eError, "RGXWaitForFWOp", fail2);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:			PVR_LOGR_IF_ERROR(eError, "DevmemFwAllocate");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:			PVR_LOGG_IF_ERROR(eError, "DevmemAcquireCpuVirtAddr", fail1);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:		PVR_LOGG_IF_ERROR(eError, "RGXScheduleCommand", fail2);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:		PVR_LOGG_IF_ERROR(eError, "RGXWaitForFWOp", fail2);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:		PVR_LOGR_IF_ERROR(eError, "RGXScheduleCommand");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:		PVR_LOGR_IF_ERROR(eError, "RGXWaitForFWOp");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:	PVR_LOGG_IF_ERROR(eError, "OSLockCreate", error);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:		PVR_LOG_IF_ERROR(eError, "PVRSRVCreateHWPerfHostThread");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:	PVR_LOGR_IF_ERROR(eError, "TLStreamCreate");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:	PVR_LOG_IF_ERROR(eError, "TLStreamSetNotifStream");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:	PVR_LOG_IF_ERROR(eError, "TLStreamMarkStreamOpen");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:	PVR_LOGG_IF_ERROR(eError, "OSInstallMISR", err_install_misr);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:	PVR_LOGG_IF_ERROR(eError, "OSSpinLockCreate", err_spinlock_create);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:			/* PVR_LOG/printk isn't recommended in atomic context. Perhaps we'll do
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:			//			PVR_LOG(("%s: No more space in deferred events buffer (%u/%u) W=%u,R=%u",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:		PVR_LOGR_IF_ERROR(eError, "TLClientOpenStream(RGX_HWPerf)");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:		PVR_LOGR_IF_ERROR(eError, "TLClientOpenStream(Host_HWPerf)");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:	PVR_LOGG_IF_ERROR(eError, "RGXHWPerfLazyConnect", e0);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:	PVR_LOGG_IF_ERROR(eError, "RGXHWPerfOpen", e1);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:		PVR_LOGR_IF_ERROR(eError, "PVRSRVRGXCtrlHWPerfKM");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:		PVR_LOGR_IF_ERROR(eError, "PVRSRVRGXCtrlHWPerfKM");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:	PVR_LOGR_IF_FALSE((NULL != psHWPerfConnection), "psHWPerfConnection invalid",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:	PVR_LOGR_IF_FALSE((0 != ui16NumCustomCounters), "uiNumBlocks invalid",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:	PVR_LOGR_IF_FALSE((NULL != pui32CustomCounterIDs),"asBlockConfigs invalid",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:	PVR_LOGR_IF_FALSE((!(ui16CustomBlockID > RGX_HWPERF_MAX_CUSTOM_BLKS)),"ui16CustomBlockID invalid",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:	PVR_LOGR_IF_FALSE((!(ui16NumCustomCounters > RGX_HWPERF_MAX_CUSTOM_CNTRS)),"ui16NumCustomCounters invalid",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:		PVR_LOGR_IF_ERROR(eError, "PVRSRVRGXCtrlCustHWPerfKM");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:		PVR_LOGR_IF_ERROR(eError, "PVRSRVRGXCtrlHWPerfCountersKM");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:		PVR_LOGR_IF_ERROR(eError, "TLClientAcquireData");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:				PVR_LOG_IF_ERROR(eError, "TLClientReleaseData");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:				PVR_LOG_IF_ERROR(eError, "TLClientCloseStream");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:	PVR_LOG_IF_ERROR(eError, "RGXHWPerfClose");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxhwperf.c:	PVR_LOG_IF_ERROR(eError, "RGXHWPerfFreeConnection");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxtransfer.c:									 ui32CCBAllocSizeLog2 ? ui32CCBAllocSizeLog2 : RGX_TQ3D_CCB_SIZE_LOG2,
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxtransfer.c:									 ui32CCBMaxAllocSizeLog2 ? ui32CCBMaxAllocSizeLog2 : RGX_TQ3D_CCB_MAX_SIZE_LOG2,
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxtransfer.c:									 ui32CCBAllocSizeLog2 ? ui32CCBAllocSizeLog2 : RGX_TQ2D_CCB_SIZE_LOG2,
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxtransfer.c:									 ui32CCBMaxAllocSizeLog2 ? ui32CCBMaxAllocSizeLog2 : RGX_TQ2D_CCB_MAX_SIZE_LOG2,
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxtransfer.c:		PVR_LOG(("%s: Unexpected error from RGXFWRequestCommonContextCleanUp (%s)",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxtransfer.c:		PVR_LOG(("%s: Unexpected error from RGXFWRequestCommonContextCleanUp (%s)",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxtransfer.c:		HTBLOGK(HTB_SF_MAIN_KICK_3D,
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxtransfer.c:		HTBLOGK(HTB_SF_MAIN_KICK_2D,
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxstartstop.c:	IMG_UINT64 ui64RemapSettings = RGXMIPSFW_BOOT_REMAP_LOG2_SEGMENT_SIZE; /* Same for all remap registers */
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxstartstop.c:		ui64RemapSettings = RGXMIPSFW_TRAMPOLINE_LOG2_SEGMENT_SIZE;
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxtdmtransfer.c:			ui32CCBAllocSizeLog2 ? ui32CCBAllocSizeLog2 : RGX_TQ2D_CCB_SIZE_LOG2,
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxtdmtransfer.c:			ui32CCBMaxAllocSizeLog2 ? ui32CCBMaxAllocSizeLog2 : RGX_TQ2D_CCB_MAX_SIZE_LOG2,
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxtdmtransfer.c:		PVR_LOG(("%s: Unexpected error from RGXFWRequestCommonContextCleanUp (%s)",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxtdmtransfer.c:		/* HTBLOGK(HTB_SF_MAIN_KICK_TDM, */
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxmipsmmuinit.c:	sRGXMMUPCEConfig.uiAddrLog2Align = (IMG_UINT32)RGXMIPSFW_LOG2_PAGE_SIZE_4K; /* Alignment of PD AND PC */
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxmipsmmuinit.c:	sRGXMMUTopLevelDevVAddrConfig.uiPTIndexShift = (IMG_UINT32)RGXMIPSFW_LOG2_PAGE_SIZE_4K;
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxmipsmmuinit.c:	sRGXMMUPDEConfig_4KBDP.uiAddrLog2Align = (IMG_UINT32)RGXMIPSFW_LOG2_PAGE_SIZE_4K;
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxmipsmmuinit.c:	sRGXMMUPTEConfig_4KBDP.uiBytesPerEntry = 1 << RGXMIPSFW_LOG2_PTE_ENTRY_SIZE;
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxmipsmmuinit.c:	sRGXMMUPTEConfig_4KBDP.uiAddrLog2Align = (IMG_UINT32)RGXMIPSFW_LOG2_PAGE_SIZE_4K;
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxmipsmmuinit.c:	sRGXMMUPTEConfig_64KBDP.uiBytesPerEntry = 1 << RGXMIPSFW_LOG2_PTE_ENTRY_SIZE;
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxmipsmmuinit.c:	sRGXMMUPTEConfig_64KBDP.uiAddrLog2Align = (IMG_UINT32)RGXMIPSFW_LOG2_PAGE_SIZE_4K;
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxmipsmmuinit.c:	sRGXMMUDevVAddrConfig_64KBDP.uiPTIndexShift = (IMG_UINT32)RGXMIPSFW_LOG2_PAGE_SIZE_64K;
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxmipsmmuinit.c:	sRGXMMUDeviceAttributes.ui32BaseAlign = RGXMIPSFW_LOG2_PAGETABLE_PAGE_SIZE;
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxmipsmmuinit.c:	case RGXMIPSFW_LOG2_PAGE_SIZE_64K:
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxmipsmmuinit.c:	case RGXMIPSFW_LOG2_PAGE_SIZE_4K:
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxmipsmmuinit.c:	case RGXMIPSFW_LOG2_PAGE_SIZE_64K:
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxmipsmmuinit.c:	case RGXMIPSFW_LOG2_PAGE_SIZE_4K:
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxsrvinit.c:#define X(a, b) { #b, HTB_LOG_GROUP_FLAG(a) },
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxsrvinit.c:	HTB_LOG_SFGROUPLIST
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxsrvinit.c:static SRV_INIT_PARAM_UINT32_LOOKUP fwt_loggroup_tbl[] = { RGXFWIF_LOG_GROUP_NAME_VALUE_MAP };
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxsrvinit.c:		ui32LogType |= RGXFWIF_LOG_TYPE_TRACE;
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxsrvinit.c:				ui32LogType |= RGXFWIF_LOG_TYPE_GROUP_MAIN;
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxsrvinit.c:				ui32LogType |= RGXFWIF_LOG_TYPE_GROUP_MAIN;
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxsrvinit.c:			ui32LogType &= ~RGXFWIF_LOG_TYPE_TRACE;
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxsrvinit.c:			ui32LogType = RGXFWIF_LOG_TYPE_TRACE;
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxsrvinit.c:#if !((IMG_1_11_OPTS) & IMG_1_11_OPT_DISABLE_FW_LOGGING_BY_DEFAULT)
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxsrvinit.c:		ui32LogType |= (RGXFWIF_LOG_TYPE_TRACE |
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxsrvinit.c:				RGXFWIF_LOG_TYPE_GROUP_MAIN |
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxsrvinit.c:				RGXFWIF_LOG_TYPE_GROUP_PM |
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxsrvinit.c:				RGXFWIF_LOG_TYPE_GROUP_POW |
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxsrvinit.c:				RGXFWIF_LOG_TYPE_GROUP_HWR);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxsrvinit.c:	ui32DeviceFlags |= psHints->bDisableFEDLogging ? RGXKM_DEVICE_STATE_DISABLE_DW_LOGGING_EN : 0;
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxsrvinit.c:	PVR_LOGG_IF_ERROR(eError, "DevmemAcquireCpuVirtAddr", cleanup_initfw);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxsrvinit.c:		PVR_LOGG_IF_ERROR(eError, "DevmemAcquireCpuVirtAddr", release_code);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxsrvinit.c:		PVR_LOGG_IF_ERROR(eError, "DevmemAcquireCpuVirtAddr", release_data);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxsrvinit.c:		PVR_LOGG_IF_ERROR(eError, "DevmemAcquireCpuVirtAddr", release_corememcode);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxsrvinit.c:	PVR_LOGG_IF_ERROR(eError, "DevmemAcquireCpuVirtAddr", failHWPerfCountersMemDescAqCpuVirt);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxta3d.c:		PVR_LOG(("%s: Unexpected error from RGXFWRequestCommonContextCleanUp (%s)",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxta3d.c:		PVR_LOG(("%s: Unexpected error from RGXFWRequestCommonContextCleanUp (%s)",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxta3d.c:	PVR_LOG(("Freelist FWAddr 0x%08x, ID = %d, CheckSum 0x%016" IMG_UINT64_FMTSPECx,
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxta3d.c:	PVR_LOG(("  Initial Memory block"));
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxta3d.c:	PVR_LOG(("  Grow Memory blocks"));
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxta3d.c:		PVR_LOG(("%s: Failed to allocate buffer to check freelist %p!",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxta3d.c:		PVR_LOG(("%s: Failed to get freelist data for freelist %p!",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxta3d.c:				PVR_LOG(("%s: Freelist consistency failure: FW addr: 0x%08X, Double entry found 0x%08x on idx: %d and %d of %d",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxta3d.c:		PVR_LOG(("%s: Checksum mismatch for freelist %p! Expected 0x%016" IMG_UINT64_FMTSPECx " calculated 0x%016" IMG_UINT64_FMTSPECx,
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxta3d.c:		PVR_LOG(("%s: Sleeping for ever!", __func__));
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxta3d.c:	PVR_LOG_IF_ERROR(eError, "RIWriteMEMDESCEntryKM");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxta3d.c:			PVR_LOG_IF_ERROR(eError, "RIDeleteMEMDESCEntryKM");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxta3d.c:	PVR_LOGG_IF_ERROR(eError, "Devmem AcquireCpuVirtAddr", FWRTDataCpuMapError);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxta3d.c:	PVR_LOGG_IF_ERROR(eError, "Devmem AcquireCpuVirtAddr", FWFreeListCpuMap);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxta3d.c:	PVR_LOGG_IF_ERROR(eError, "Devmem AcquireCpuVirtAddr", err_fwalloc);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxta3d.c:			ui32CCBAllocSizeLog2 ? ui32CCBAllocSizeLog2 : RGX_TA_CCB_SIZE_LOG2,
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxta3d.c:			ui32CCBMaxAllocSizeLog2 ? ui32CCBMaxAllocSizeLog2 : RGX_TA_CCB_MAX_SIZE_LOG2,
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxta3d.c:			ui32CCBAllocSizeLog2 ? ui32CCBAllocSizeLog2 : RGX_3D_CCB_SIZE_LOG2,
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxta3d.c:			ui32CCBMaxAllocSizeLog2 ? ui32CCBMaxAllocSizeLog2 : RGX_3D_CCB_MAX_SIZE_LOG2,
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxta3d.c:		HTBLOGK(HTB_SF_MAIN_KICK_TA,
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxta3d.c:		HTBLOGK(HTB_SF_MAIN_KICK_3D,
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxmem.c:		PVR_LOG(("_RecordUnregisteredMemoryContext: Failed to get PC address for memory context"));
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxmem.c:			PVR_LOG(("Failed to get PC address for memory context"));
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxmem.c:			PVR_DUMPDEBUG_LOG("Found memory context (PID = %d, %s)",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxmem.c:		PVR_LOG(("Failed to get PC address for kernel memory context"));
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxmem.c:			PVR_LOG(("Failed to get PC address for memory context"));
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxmem.c:			PVR_LOG(("Failed to get PC address for kernel memory context"));
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxcompute.c:									 ui32CCBAllocSizeLog2 ? ui32CCBAllocSizeLog2 : RGX_CDM_CCB_SIZE_LOG2,
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxcompute.c:									 ui32CCBMaxAllocSizeLog2 ? ui32CCBMaxAllocSizeLog2 : RGX_CDM_CCB_MAX_SIZE_LOG2,
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxcompute.c:		PVR_LOG(("%s: Unexpected error from RGXFWRequestCommonContextCleanUp (%s)",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxcompute.c:	HTBLOGK(HTB_SF_MAIN_KICK_CDM,
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.c:	PVR_LOG_IF_ERROR(eError, "RGXCCBPDumpDrainCCB");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.c:				PVR_LOGR_IF_ERROR(eError, "RGXPdumpDrainKCCB");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.c:		PVR_LOG(("Failed to acquire CCB space for %u byte command:", ui32CmdSize));
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.c:	PVR_LOG(("%s: Client CCB (%s) watermark (%u) hit %d%% of its allocation size (%u)",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.c:	PVR_LOG(("GPU %s command buffer usage high (%u). This is not an error but the application may not run optimally.",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.c:	if ((ui32CCBSizeLog2 < MIN_SAFE_CCB_SIZE_LOG2) ||
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.c:		(ui32CCBSizeLog2 > MAX_SAFE_CCB_SIZE_LOG2))
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.c:			aszCCBRequestors[eRGXCCBRequestor][REQ_PDUMP_COMMENT], ui32CCBSizeLog2, MIN_SAFE_CCB_SIZE_LOG2, MAX_SAFE_CCB_SIZE_LOG2));
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.c:		(ui32CCBMaxSizeLog2 > MAX_SAFE_CCB_SIZE_LOG2))
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.c:			aszCCBRequestors[eRGXCCBRequestor][REQ_PDUMP_COMMENT], ui32CCBMaxSizeLog2, ui32CCBSizeLog2, MAX_SAFE_CCB_SIZE_LOG2));
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.c:		PVR_LOG(("CCBUtilisationInfo: GPU %s command buffer was full %d times out of %d. "
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.c:					PVR_LOG(("%s: Client CCB (%s) grew to %u", __func__, psClientCCB->szName, psClientCCB->ui32Size));
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.c:	PVR_DUMPDEBUG_LOG("FWCtx 0x%08X (%s)", sFWCommonContext.ui32Addr,
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.c:		PVR_DUMPDEBUG_LOG("  `--<Empty>");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.c:		PVR_DUMPDEBUG_LOG("  %s--%s %s @ %u Int=%u Ext=%u",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.c:					PVR_DUMPDEBUG_LOG("  %s  %s--Addr:0x%08x Val=0x%08x %s",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.c:			PVR_DUMPDEBUG_LOG("FWCtx 0x%08X @ %d (%s) pending on %s:",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.c:				PVR_DUMPDEBUG_LOG("  Addr:0x%08x  Value=0x%08x",psUFOPtr[jj].puiAddrUFO.ui32Addr, psUFOPtr[jj].ui32Value);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.c:				PVR_DUMPDEBUG_LOG("  Addr:0x%08x Value(Host)=0x%08x Value(FW)=0x%08x",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.c:				PVR_DUMPDEBUG_LOG(" FWCtx 0x%08X fenced command is of type %s",sFWCommonContext.ui32Addr, _CCBCmdTypename(psCommandHeader->eCmdType));
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.c:						PVR_DUMPDEBUG_LOG(" preventing %s:",_CCBCmdTypename(eCommandType));
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.c:							PVR_DUMPDEBUG_LOG("  Addr:0x%08x  Value=0x%08x",psUFOPtr[jj].puiAddrUFO.ui32Addr, psUFOPtr[jj].ui32Value);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.c:							PVR_DUMPDEBUG_LOG("  Addr:0x%08x Value(Host)=0x%08x Value(FW)=0x%08x",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.c:					PVR_DUMPDEBUG_LOG(" FWCtx 0x%08X has no further commands",sFWCommonContext.ui32Addr);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.c:				PVR_DUMPDEBUG_LOG(" FWCtx 0x%08X has no further commands",sFWCommonContext.ui32Addr);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.c:			PVR_LOG(("Fence found on context 0x%x '%s' has %d UFOs", FWCommonContextGetFWAddress(psStalledClientCCB->psServerCommonContext).ui32Addr, psStalledClientCCB->szName, (IMG_UINT32)(psCommandHeader->ui32CmdSize/sizeof(RGXFWIF_UFO))));
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.c:					PVR_LOG(("  %d/%d FWAddr 0x%x requires 0x%x (currently 0x%x)", jj+1,
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.c:					PVR_LOG(("  %d/%d FWAddr 0x%x requires 0x%x", jj+1,
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.c:				PVR_LOG_IF_ERROR(eErr, "SyncCheckpointDumpInfoOnStalledUFOs() call failed.");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxccb.c:				PVR_LOG(("Forced update command issued for FWCtx 0x%08X", sSignalFencesCmd.uCmdData.sForceUpdateData.psContext.ui32Addr));
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdevice.h:#define RGXKM_DEVICE_STATE_DISABLE_DW_LOGGING_EN    (0x2) /*!< Used to disable the Devices Watchdog logging */
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdevice.h:   MTS can have is 255, therefore 512 (LOG2 = 9) is large enough to account for
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdevice.h:#define RETURN_DATA_ARRAY_SIZE_LOG2 (6)
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdevice.h:#define RETURN_DATA_ARRAY_SIZE      ((1UL) << RETURN_DATA_ARRAY_SIZE_LOG2)
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdevice.h:#define WORKLOAD_HASH_SIZE_LOG2		5
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxdevice.h:#define WORKLOAD_HASH_SIZE 			((1UL) << WORKLOAD_HASH_SIZE_LOG2)
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwdbg.c:	if (ui32RGXFWLogType & ~RGXFWIF_LOG_TYPE_MASK)
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwdbg.c:		sLogTypeUpdateCmd.eCmdType = RGXFWIF_KCCB_CMD_LOGTYPE_UPDATE;
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwdbg.c:	PVR_LOG(("---------------[ Begin Freelist Page List Dump ]------------------"));
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwdbg.c:	PVR_LOG(("----------------[ End Freelist Page List Dump ]-------------------"));
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxmmuinit.c:	 * PAGE CATALOGUE (4 Byte):
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.c:#define RGXFWIF_KCCB_NUMCMDS_LOG2_GPUVIRT_WITHOUT_FEATURE  (6)
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.c:#define RGXFWIF_KCCB_NUMCMDS_LOG2_DEFAULT                  (7)
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.c:#define RGXFWIF_FWCCB_NUMCMDS_LOG2   (8)
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.c:#define RGXFWIF_FWCCB_NUMCMDS_LOG2   (5)
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.c:#define RGXFWIF_CHECKPOINTCCB_NUMCMDS_LOG2 (10)
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.c:#define RGXFWIF_WORKEST_FWCCB_NUMCMDS_LOG2   (7)
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.c:			&& (psTraceBufCtl->ui32LogType & ~RGXFWIF_LOG_TYPE_TRACE)
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.c:			&& (psTraceBufCtl->ui32LogType & RGXFWIF_LOG_TYPE_GROUP_MASK))
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.c:			&& (psTraceBufCtl->ui32LogType & RGXFWIF_LOG_TYPE_TRACE)
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.c:			&& (psTraceBufCtl->ui32LogType & RGXFWIF_LOG_TYPE_GROUP_MASK)
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.c:					(RGXFWIF_KCCB_NUMCMDS_LOG2_GPUVIRT_WITHOUT_FEATURE) : (RGXFWIF_KCCB_NUMCMDS_LOG2_DEFAULT);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.c:			RGXFWIF_FWCCB_NUMCMDS_LOG2,
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.c:			RGXFWIF_CHECKPOINTCCB_NUMCMDS_LOG2,
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.c:	PVR_LOG_IF_FALSE(psDVFSDeviceCfg->pasOPPTable, "RGXSetupFirmware: Missing OPP Table");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.c:	if (ui32LogType & ~RGXFWIF_LOG_TYPE_MASK)
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.c:	PVR_LOGG_IF_ERROR(eError, "RGXTraceBufferInitOnDemandResources", fail);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.c:			RGXFWIF_WORKEST_FWCCB_NUMCMDS_LOG2,
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.c:	PVR_LOGG_IF_ERROR(eError, "RGXTBIBufferInitOnDemandResources", fail);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.c:	PVR_LOGG_IF_ERROR(eError, "RGXServerFeatureFlagsToHWPerfFlags", fail);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.c:		PVR_LOGG_IF_ERROR(eError, "RGXHWPerfInitOnDemandResources", fail);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.c:	PDUMPCOMMENT("( MAIN Group Enable: 0x%08x)", RGXFWIF_LOG_TYPE_GROUP_MAIN);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.c:	PDUMPCOMMENT("( MTS Group Enable: 0x%08x)", RGXFWIF_LOG_TYPE_GROUP_MTS);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.c:	PDUMPCOMMENT("( CLEANUP Group Enable: 0x%08x)", RGXFWIF_LOG_TYPE_GROUP_CLEANUP);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.c:	PDUMPCOMMENT("( CSW Group Enable: 0x%08x)", RGXFWIF_LOG_TYPE_GROUP_CSW);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.c:	PDUMPCOMMENT("( BIF Group Enable: 0x%08x)", RGXFWIF_LOG_TYPE_GROUP_BIF);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.c:	PDUMPCOMMENT("( PM Group Enable: 0x%08x)", RGXFWIF_LOG_TYPE_GROUP_PM);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.c:	PDUMPCOMMENT("( RTD Group Enable: 0x%08x)", RGXFWIF_LOG_TYPE_GROUP_RTD);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.c:	PDUMPCOMMENT("( SPM Group Enable: 0x%08x)", RGXFWIF_LOG_TYPE_GROUP_SPM);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.c:	PDUMPCOMMENT("( POW Group Enable: 0x%08x)", RGXFWIF_LOG_TYPE_GROUP_POW);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.c:	PDUMPCOMMENT("( HWR Group Enable: 0x%08x)", RGXFWIF_LOG_TYPE_GROUP_HWR);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.c:	PDUMPCOMMENT("( HWP Group Enable: 0x%08x)", RGXFWIF_LOG_TYPE_GROUP_HWP);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.c:		PDUMPCOMMENT("( DMA Group Enable: 0x%08x)", RGXFWIF_LOG_TYPE_GROUP_DMA);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.c:	PDUMPCOMMENT("( MISC Group Enable: 0x%08x)", RGXFWIF_LOG_TYPE_GROUP_MISC);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.c:	PDUMPCOMMENT("( DEBUG Group Enable: 0x%08x)", RGXFWIF_LOG_TYPE_GROUP_DEBUG);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.c:		case RGXFWIF_KCCB_CMD_LOGTYPE_UPDATE:
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.c:	PVR_LOGR_IF_FALSE(ui32CmdMemCopySize !=0, "RGXGetCmdMemCopySize failed", PVRSRV_ERROR_INVALID_CCB_COMMAND);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.c:			PVR_LOGG_IF_ERROR(eError, "RGXPdumpDrainKCCB", _RGXSendCommandRaw_Exit);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.c:		HTBLOGK(HTB_SF_MAIN_KICK_UNCOUNTED);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.c:		HTBLOGK(HTB_SF_MAIN_FWCCB_CMD, psFwCCBCmd->eCmdType);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.c:			PVR_LOGG_IF_ERROR(eError, "RGXScheduleCommand", return_);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.c:			PVR_LOGG_IF_ERROR(eError, "RGXWaitForFWOp", return_);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.c:		PVR_LOG(("RGXCheckForStalledClientContexts: Failed to acquire hCCBStallCheckLock, returning..."));
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.c:			PVR_LOG(("Possible stalled client RGX contexts detected: %s%s%s%s%s%s%s%s%s",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.c:			PVR_LOG(("Trying to identify stalled context...(%s) [%d]",
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.c:				PVR_LOG(("No further stalled client contexts exist"));
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.c:			PVR_LOG(("(FAIL) RGXDevInitCompatCheck: Mismatch in Firmware and client build options; "
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxfwutils.c:			PVR_LOG(("(FAIL) RGXDevInitCompatCheck: Mismatch in Firmware and client build options; "
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxbvnc.c:#define PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, szShortName, Feature)															\
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxbvnc.c:		{ PVR_LOG(("%s %d", szShortName, psDevInfo->sDevFeatureCfg.ui32FeaturesValues[RGX_FEATURE_##Feature##_IDX])); }		\
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxbvnc.c:		{ PVR_LOG(("%s N/A", szShortName)); }
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxbvnc.c:	PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, "NC:       ", NUM_CLUSTERS);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxbvnc.c:	PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, "CSF:      ", CDM_CONTROL_STREAM_FORMAT);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxbvnc.c:	PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, "FBCDCA:   ", FBCDC_ARCHITECTURE);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxbvnc.c:	PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, "MCMB:     ", META_COREMEM_BANKS);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxbvnc.c:	PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, "MCMS:     ", META_COREMEM_SIZE);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxbvnc.c:	PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, "MDMACnt:  ", META_DMA_CHANNEL_COUNT);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxbvnc.c:	PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, "NIIP:     ", NUM_ISP_IPP_PIPES);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxbvnc.c:	PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, "PBW:      ", PHYS_BUS_WIDTH);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxbvnc.c:	PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, "STEArch:  ", SCALABLE_TE_ARCH);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxbvnc.c:	PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, "SVCEA:    ", SCALABLE_VCE);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxbvnc.c:	PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, "SLCBanks: ", SLC_BANKS);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxbvnc.c:	PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, "SLCCLS:   ", SLC_CACHE_LINE_SIZE_BITS);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxbvnc.c:	PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, "SLCSize:  ", SLC_SIZE_IN_BYTES);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxbvnc.c:	PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, "VASB:     ", VIRTUAL_ADDRESS_SPACE_BITS);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxbvnc.c:	PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, "META:     ", META);
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxbvnc.c:				PVR_LOG(("%s", gaszFeaturesNoValuesNames[ui32IdOrNameIdx - 1]));
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxbvnc.c:				PVR_LOG(("ERN/BRN : %d", gaui64ErnsBrnsIDs[ui32IdOrNameIdx - 1]));
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxbvnc.c:				PVR_LOG(("Unknown ErnBrn bit: 0x%0" IMG_UINT64_FMTSPECx, ((IMG_UINT64)1 << (ui32IdOrNameIdx - 1))));
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxbvnc.c:	PVR_LOG(("BVNC module parameter honoured: %s", aszBVNCString));
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxbvnc.c:		PVR_LOG(("Read BVNC " RGX_BVNC_STR_FMTSPEC \
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxbvnc.c:		PVR_LOG_IF_FALSE((pui64Cfg != NULL), "Driver parameter BVNC configuration not found!");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxbvnc.c:			PVR_LOGR_IF_ERROR(eError, "pfnPrePowerState ON");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxbvnc.c:			PVR_LOGR_IF_ERROR(eError, "pfnPostPowerState ON");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxbvnc.c:		PVR_LOG(("Read BVNC " RGX_BVNC_STR_FMTSPEC \
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxbvnc.c:			PVR_LOGR_IF_ERROR(eError, "pfnPrePowerState OFF");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxbvnc.c:			PVR_LOGR_IF_ERROR(eError, "pfnPostPowerState OFF");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxbvnc.c:			PVR_LOG_IF_FALSE((pui64Cfg != NULL), "HW device BVNC configuration not found!");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxbvnc.c:			PVR_LOG_ERROR(PVRSRV_ERROR_DEVICE_REGISTER_FAILED, "CORE_ID register returns zero. Unknown BVNC");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxbvnc.c:		PVR_LOG(("Reverting to compile time BVNC %s", RGX_BVNC_KM));
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxbvnc.c:		PVR_LOG_IF_FALSE((pui64Cfg != NULL), "Compile time BVNC configuration not found!");
gpu/gpu_rgx/m1.11ED5425693/services/server/devices/rgx/rgxbvnc.c:	PVR_LOG(("RGX Device registered with BVNC " RGX_BVNC_STR_FMTSPEC, \
gpu/gpu_rgx/m1.11ED5425693/services/shared/common/devicemem.c:	IMG_DEVMEM_LOG2ALIGN_T uiLog2DataPageSize;
gpu/gpu_rgx/m1.11ED5425693/services/shared/common/devicemem.c:	IMG_DEVMEM_LOG2ALIGN_T uiLog2ImportAlignment;
gpu/gpu_rgx/m1.11ED5425693/services/shared/common/devicemem.c:	IMG_DEVMEM_LOG2ALIGN_T uiLog2TilingStrideFactor;
gpu/gpu_rgx/m1.11ED5425693/services/shared/common/devicemem.c:		DEVMEM_LOG2ALIGN_T *puiLog2Contig)
gpu/gpu_rgx/m1.11ED5425693/services/shared/common/devicemem.c:	IMG_DEVMEM_LOG2ALIGN_T uiLog2Contig;
gpu/gpu_rgx/m1.11ED5425693/services/shared/common/devicemem.c:	IMG_DEVMEM_LOG2ALIGN_T uiLog2Contig = 0;
gpu/gpu_rgx/m1.11ED5425693/services/shared/common/ra.c:		   RA_LOG2QUANTUM_T uLog2Quantum,
gpu/gpu_rgx/m1.11ED5425693/services/shared/common/tlclient.c:		PVR_LOGG_IF_ERROR(eError, "BridgeTLOpenStream", e1);
gpu/gpu_rgx/m1.11ED5425693/services/shared/common/tlclient.c:	PVR_LOGG_IF_ERROR(eError, "DevmemMakeLocalImportHandle", e2);
gpu/gpu_rgx/m1.11ED5425693/services/shared/common/tlclient.c:	PVR_LOGG_IF_ERROR(eError, "DevmemImport", e3);
gpu/gpu_rgx/m1.11ED5425693/services/shared/common/tlclient.c:	PVR_LOGG_IF_ERROR(eError, "DevmemAcquireCpuVirtAddr", e4);
gpu/gpu_rgx/m1.11ED5425693/services/shared/common/htbuffer.c:	HTB_LOGMODE_CTRL eLogPidMode,
gpu/gpu_rgx/m1.11ED5425693/services/shared/common/htbuffer.c:_HTBLog(IMG_HANDLE hSrvHandle, IMG_UINT32 PID, IMG_UINT64 ui64TimeStampus, HTB_LOG_SFids SF, va_list args)
gpu/gpu_rgx/m1.11ED5425693/services/shared/common/htbuffer.c:	IMG_UINT32 aui32Args[HTB_LOG_MAX_PARAMS];
gpu/gpu_rgx/m1.11ED5425693/services/shared/common/htbuffer.c:	PVR_ASSERT(ui32NumArgs <= HTB_LOG_MAX_PARAMS);
gpu/gpu_rgx/m1.11ED5425693/services/shared/common/htbuffer.c:	ui32NumArgs = (ui32NumArgs>HTB_LOG_MAX_PARAMS)? HTB_LOG_MAX_PARAMS: ui32NumArgs;
gpu/gpu_rgx/m1.11ED5425693/services/shared/include/htbuffer.h:#define HTBLOGK(SF, args...) do { if (HTB_GROUP_ENABLED(SF)) HTBLogSimple((IMG_HANDLE) NULL, SF, ## args); } while (0)
gpu/gpu_rgx/m1.11ED5425693/services/shared/include/htbuffer.h:#define HTBLOG(handle, SF, args...) do { if (HTB_GROUP_ENABLED(SF)) HTBLogSimple(handle, SF, ## args); } while (0)
gpu/gpu_rgx/m1.11ED5425693/services/shared/include/htbuffer.h:#define HTBLOG_PTR_BITS_HIGH(p) ((IMG_UINT32)((((IMG_UINT64)((uintptr_t)p))>>32)&0xffffffff))
gpu/gpu_rgx/m1.11ED5425693/services/shared/include/htbuffer.h:#define HTBLOG_PTR_BITS_LOW(p)  ((IMG_UINT32)(((IMG_UINT64)((uintptr_t)p))&0xffffffff))
gpu/gpu_rgx/m1.11ED5425693/services/shared/include/htbuffer.h:#define HTBLOG_U64_BITS_HIGH(u) ((IMG_UINT32)((u>>32)&0xffffffff))
gpu/gpu_rgx/m1.11ED5425693/services/shared/include/htbuffer.h:#define HTBLOG_U64_BITS_LOW(u)  ((IMG_UINT32)(u&0xffffffff))
gpu/gpu_rgx/m1.11ED5425693/services/shared/include/htbuffer.h:#if !defined(HTB_DEBUG_LOG_GROUP)
gpu/gpu_rgx/m1.11ED5425693/services/shared/include/htbuffer.h:#undef HTB_LOG_TYPE_DBG    /* No trace statements in this log group should be checked in */
gpu/gpu_rgx/m1.11ED5425693/services/shared/include/htbuffer.h:#define HTB_LOG_TYPE_DBG    __BUILDERROR__
gpu/gpu_rgx/m1.11ED5425693/services/shared/include/htbuffer_init.h:	HTB_LOGMODE_CTRL eLogMode,
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_generic.c:	PVR_LOGR_IF_FALSE((NULL != psPhysHeapRegion->hPrivData), "DMA physheap already created", PVRSRV_ERROR_INVALID_PARAMS);
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_generic.c:		PVR_LOG_IF_FALSE((0 != psPhysHeapRegion->sStartAddr.uiAddr), "Invalid DMA physheap start address");
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_generic.c:		PVR_LOG_IF_FALSE((0 != psPhysHeapRegion->sCardBase.uiAddr), "Invalid DMA physheap card address");
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_generic.c:		PVR_LOG_IF_FALSE((0 != psPhysHeapRegion->uiSize), "Invalid DMA physheap size");
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_generic.c:	PVR_LOGR_IF_FALSE((NULL != psPhysHeapConfig), "Invalid physheap config", PVRSRV_ERROR_INVALID_PARAMS);
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_generic.c:		PVR_LOGG_IF_NOMEM(psPhysHeapConfig->pasRegions, "OSAllocZMem", eError, e0);
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_generic.c:		PVR_LOGG_IF_NOMEM(psDmaAlloc, "OSAllocZMem", eError, e0);
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_generic.c:	PVR_LOGG_IF_ERROR(eError, "SysVzGetPhysHeapAddrSize", e0);
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_generic.c:	PVR_LOGG_IF_ERROR(eError, "SysVzGetPhysHeapOrigin", e0);
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_generic.c:				PVR_LOGG_IF_ERROR(eError, "SysVzCreateDmaPhysHeap", e0);
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_generic.c:			PVR_LOGG_IF_FALSE((0 != psPhysHeapRegion->sStartAddr.uiAddr), "Invalid DMA physheap start address", e0);
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_generic.c:			PVR_LOGG_IF_FALSE((0 != psPhysHeapRegion->sCardBase.uiAddr), "Invalid DMA physheap card address", e0);
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_generic.c:			PVR_LOGG_IF_FALSE((0 != psPhysHeapRegion->uiSize), "Invalid DMA physheap size", e0);
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_generic.c:				PVR_LOGG_IF_ERROR(eError, "SysVzRegisterPhysHeap", e0);
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_generic.c:				PVR_LOGG_IF_FALSE((psPhysHeapConfig->ui32NumOfRegions == 0), "Invalid refcount", e0);
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_generic.c:		PVR_LOGG_IF_FALSE((0 != psPhysHeapRegion->sStartAddr.uiAddr), "Invalid UMA carve-out physheap start address", e0);
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_generic.c:		PVR_LOGG_IF_FALSE((0 != psPhysHeapRegion->sCardBase.uiAddr), "Invalid UMA carve-out physheap card address", e0);
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_generic.c:		PVR_LOGG_IF_FALSE((0 != psPhysHeapRegion->uiSize), "Invalid UMA carve-out physheap size", e0);
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_generic.c:		PVR_LOGG_IF_FALSE((NULL != gahPhysHeapIoRemap[ePhysHeap]), "OSMapPhysToLin", e0);
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_generic.c:			PVR_LOG_IF_FALSE((psPhysHeapConfig->ui32NumOfRegions == 0), "Invalid refcount");
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_generic.c:		PVR_LOG_IF_FALSE((psPhysHeapConfig->ui32NumOfRegions == 0), "Invalid refcount");
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_support.c:		PVR_LOG(("Using static PVZ bootstrap setup"));
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_support.c: 		PVR_LOG(("Using dynamic PVZ bootstrap setup"));
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_support.c:	PVR_LOGR_IF_ERROR(eError, "SysVzPvzConnectionInit");
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_support.c:	PVR_LOGR_IF_ERROR(eError, "SysVzPvzConnectionValidate");
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_support.c:		PVR_LOGR_IF_ERROR(eError, "SysVzCreateDevConfig");
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_support.c:		PVR_LOGR_IF_ERROR(eError, "SysVzCreateDevPhysHeaps");
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_support.c:	PVR_LOGR_IF_ERROR(eError, "SysVzInitDevPhysHeaps");
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_support.c:	PVR_LOG_IF_ERROR(eError, "PvzClientCreateDevConfig");
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_support.c:	PVR_LOG_IF_ERROR(eError, "SysVzDestroyDevConfig");
gpu/gpu_rgx/m1.11ED5425693/services/system/common/env/linux/dma_support.c:		PVR_LOG_IF_FALSE((IMG_FALSE), "Invalid parameter");
gpu/gpu_rgx/m1.11ED5425693/services/system/common/env/linux/dma_support.c:	PVR_LOGR_IF_FALSE((psDmaAlloc->pvVirtAddr), "DMA/CMA allocation failed", PVRSRV_ERROR_FAILED_TO_ALLOC_PAGES);
gpu/gpu_rgx/m1.11ED5425693/services/system/common/env/linux/dma_support.c:		PVR_LOG_IF_FALSE((IMG_FALSE), "Invalid parameter");
gpu/gpu_rgx/m1.11ED5425693/services/system/common/env/linux/dma_support.c:		PVR_LOG_IF_FALSE((IMG_FALSE), "Invalid parameter");
gpu/gpu_rgx/m1.11ED5425693/services/system/common/env/linux/dma_support.c:		PVR_LOG_IF_FALSE((IMG_FALSE), "Invalid parameter");
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vmm_type_stub.c:	PVR_LOGR_IF_FALSE((NULL != psPvzConnection), "VMMCreatePvzConnection", PVRSRV_ERROR_INVALID_PARAMS);
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vmm_type_stub.c:	PVR_LOG_IF_FALSE((NULL != psPvzConnection), "VMMDestroyPvzConnection");
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_common.c:	PVR_LOGG_IF_ERROR(eError, "SysVzGetPhysHeapOrigin", e0);
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_common.c:		PVR_LOGG_IF_ERROR(eError, "PvzClientCreateDevPhysHeaps", e0);
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_common.c:	PVR_LOGG_IF_ERROR(eError, "PvzClientMapDevPhysHeap", e0);
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_common.c:		PVR_LOGG_IF_ERROR(eError, "PvzClientDestroyDevPhysHeaps", e0);
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_common.c:	PVR_LOGG_IF_ERROR(eError, "SysVzGetPhysHeapOrigin", e0);
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_common.c:		PVR_LOGR_IF_FALSE((NULL != psPhysHeapConfig), "SysVzGetPhysHeapConfig", PVRSRV_ERROR_INVALID_PARAMS);
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_common.c:		PVR_LOGR_IF_FALSE((NULL != psPhysHeapConfig->pasRegions), "SysVzGetPhysHeapConfig", PVRSRV_ERROR_INTERNAL_ERROR);
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_common.c:		PVR_LOGR_IF_FALSE((0 != sDevPAddr.uiAddr), "SysVzGetPhysHeapConfig", PVRSRV_ERROR_INVALID_PARAMS);
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_common.c:		PVR_LOGR_IF_FALSE((0 != ui64DevPSize), "SysVzGetPhysHeapConfig", PVRSRV_ERROR_INVALID_PARAMS);
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_common.c:		PVR_LOGG_IF_ERROR(eError, "PvzClientMapDevPhysHeap", e0);
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_common.c:	PVR_LOGG_IF_ERROR(eError, "PvzClientMapDevPhysHeap", e0);
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_common.c:		PVR_LOGG_IF_ERROR(eError, "PvzClientMapDevPhysHeap", e0);
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_common.c:	PVR_LOGR_IF_FALSE((eHeap < PVRSRV_DEVICE_PHYS_HEAP_LAST), "Invalid Heap", PVRSRV_ERROR_INVALID_PARAMS);
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_common.c:	PVR_LOGR_IF_FALSE((eHeap != PVRSRV_DEVICE_PHYS_HEAP_CPU_LOCAL), "Skipping CPU local heap registration", PVRSRV_OK);
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_common.c:	PVR_LOGR_IF_FALSE((NULL != psPhysHeapConfig), "SysVzGetPhysHeapConfig", PVRSRV_ERROR_INVALID_PARAMS);
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_common.c:			PVR_LOG_IF_ERROR(eError, "SysDmaRegisterForIoRemapping");
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_common.c:	PVR_LOG_IF_FALSE((psPhysHeapConfig!=NULL), "SysVzGetPhysHeapConfig");
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_common.c:	PVR_LOG_IF_FALSE((psPhysHeap != NULL), "eHeapType >= PVRSRV_DEVICE_PHYS_HEAP_LAST");
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_common.c:	PVR_LOGR_IF_FALSE((psPhysHeapConfig != NULL), "Invalid PhysHeapConfig", eError);
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_common.c:	PVR_LOGR_IF_FALSE((ui64PhysHeapSize != 0), "Invalid PhysHeapSize", eError);
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_common.c:	PVR_LOG_IF_ERROR(eError, "SysVzSetPhysHeapAddrSize");
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_common.c:	PVR_LOGR_IF_FALSE((ui32DevID == 0), "Invalid Device ID", eError);
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_common.c:	PVR_LOGR_IF_FALSE((psPVRSRVData != NULL), "Invalid PVRSRVData", eError);
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_common.c:	PVR_LOGR_IF_FALSE((ui32OSID > 0 && ui32OSID < RGXFW_NUM_OS), "Invalid OSID", eError);
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_common.c:					PVR_LOGR_IF_ERROR(eError, "SysVzGetPhysHeapOrigin");
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_common.c:			PVR_LOGR_IF_ERROR(eError, "SysVzGetPhysHeapOrigin");
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_common.c:	PVR_LOGR_IF_FALSE((ui32DevID == 0), "Invalid Device ID", eError);
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_common.c:	PVR_LOGR_IF_FALSE((psPVRSRVData != NULL), "Invalid PVRSRVData", eError);
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_common.c:	PVR_LOGG_IF_ERROR(eError, "SysVzGetPhysHeapOrigin", e0);
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_common.c:		PVR_LOGG_IF_ERROR(eError, "RGXVzRegisterFirmwarePhysHeap", e0);
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_common.c:			PVR_LOGG_IF_ERROR(eError, "SysVzGetPhysHeapOrigin failed to invalidate MMU cache", e0);
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_common.c:	PVR_LOGR_IF_FALSE((ui32DevID == 0), "Invalid Device ID", eError);
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_common.c:	PVR_LOGR_IF_FALSE((psPVRSRVData != NULL), "Invalid PVRSRVData", eError);
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_common.c:	PVR_LOGG_IF_ERROR(eError, "SysVzGetPhysHeapOrigin", e0);
gpu/gpu_rgx/m1.11ED5425693/services/system/common/vz_physheap_common.c:		PVR_LOG_IF_ERROR(eError, "RGXVzUnregisterFirmwarePhysHeap");
gpu/gpu_rgx/m1.11ED5425693/services/system/rgx_mtk/mtk_pp.c:void MTKPP_LOGTIME(MTKPP_ID id, const char *str)
gpu/gpu_rgx/m1.11ED5425693/services/system/rgx_mtk/mt6765/mtk_mfgsys.c:	ged_log_buf_print2(_mtk_ged_log, GED_LOG_ATTR_TIME, "BUCK_ON");
gpu/gpu_rgx/m1.11ED5425693/services/system/rgx_mtk/mt6765/mtk_mfgsys.c:	ged_log_buf_print2(_mtk_ged_log, GED_LOG_ATTR_TIME, "BUCK_OFF");
gpu/gpu_rgx/m1.11ED5425693/services/system/rgx_mtk/mt6765/mtk_mfgsys.c:			GED_LOG_BUF_TYPE_RINGBUFFER, "PowerLog", "ppL");
gpu/gpu_rgx/m1.11ED5425693/services/system/rgx_mtk/mt6765/mtk_mfgsys.c:			GED_LOG_BUF_TYPE_RINGBUFFER, "RegStack", "RTrace");
gpu/gpu_rgx/m1.11ED5425693/services/system/rgx_mtk/mt6765/mtk_mfgsys.c:			GED_LOG_BUF_TYPE_RINGBUFFER, "GPUImport", "GImp");
gpu/gpu_rgx/m1.11ED5425693/services/system/rgx_mtk/mt6765/mtk_mfgsys.c:	ged_log_buf_print2(_track_ged_log, GED_LOG_ATTR_TIME, "%s", func_name);
gpu/gpu_rgx/m1.11ED5425693/services/system/rgx_mtk/sysconfig.c:			PVR_LOG(("irq_res = 0x%x", (int)irq_res->start));
gpu/gpu_rgx/m1.11ED5425693/services/system/rgx_mtk/sysconfig.c:			PVR_LOG(("reg_res = 0x%x, 0x%x",
gpu/gpu_rgx/m1.11ED5425693/services/system/rgx_linux_tc/sysconfig.c:	PVR_DUMPDEBUG_LOG("------[ rgx_tc system debug ]------");
gpu/gpu_rgx/m1.11ED5425693/services/system/rgx_linux_tc/sysconfig.c:		PVR_DUMPDEBUG_LOG("Chip temperature: %d degrees C", tmp);
gpu/gpu_rgx/m1.11ED5425693/services/system/rgx_linux_tc/sysconfig.c:	PVR_DUMPDEBUG_LOG("PLL status: %x", pll);
gpu/gpu_rgx/m1.11ED5425693/generated/rgxfwdbg_bridge/common_rgxfwdbg_bridge.h:#define PVRSRV_BRIDGE_RGXFWDBG_RGXFWDEBUGSETFWLOG			PVRSRV_BRIDGE_RGXFWDBG_CMD_FIRST+1
gpu/gpu_rgx/m1.11ED5425693/generated/rgxfwdbg_bridge/common_rgxfwdbg_bridge.h:typedef struct PVRSRV_BRIDGE_IN_RGXFWDEBUGSETFWLOG_TAG
gpu/gpu_rgx/m1.11ED5425693/generated/rgxfwdbg_bridge/common_rgxfwdbg_bridge.h:} __attribute__ ((packed)) PVRSRV_BRIDGE_IN_RGXFWDEBUGSETFWLOG;
gpu/gpu_rgx/m1.11ED5425693/generated/rgxfwdbg_bridge/common_rgxfwdbg_bridge.h:typedef struct PVRSRV_BRIDGE_OUT_RGXFWDEBUGSETFWLOG_TAG
gpu/gpu_rgx/m1.11ED5425693/generated/rgxfwdbg_bridge/common_rgxfwdbg_bridge.h:} __attribute__ ((packed)) PVRSRV_BRIDGE_OUT_RGXFWDEBUGSETFWLOG;
gpu/gpu_rgx/m1.11ED5425693/generated/rgxfwdbg_bridge/server_rgxfwdbg_bridge.c:			       PVRSRV_BRIDGE_IN_RGXFWDEBUGSETFWLOG *
gpu/gpu_rgx/m1.11ED5425693/generated/rgxfwdbg_bridge/server_rgxfwdbg_bridge.c:			       PVRSRV_BRIDGE_OUT_RGXFWDEBUGSETFWLOG *
gpu/gpu_rgx/m1.11ED5425693/generated/rgxfwdbg_bridge/server_rgxfwdbg_bridge.c:			      PVRSRV_BRIDGE_RGXFWDBG_RGXFWDEBUGSETFWLOG,
gpu/gpu_rgx/m1.11ED5425693/generated/rgxfwdbg_bridge/server_rgxfwdbg_bridge.c:				PVRSRV_BRIDGE_RGXFWDBG_RGXFWDEBUGSETFWLOG);
gpu/gpu_rgx/m1.11ED5425693/generated/htbuffer_bridge/server_htbuffer_bridge.c:		   PVRSRV_BRIDGE_IN_HTBLOG * psHTBLogIN,
gpu/gpu_rgx/m1.11ED5425693/generated/htbuffer_bridge/server_htbuffer_bridge.c:		   PVRSRV_BRIDGE_OUT_HTBLOG * psHTBLogOUT,
gpu/gpu_rgx/m1.11ED5425693/generated/htbuffer_bridge/server_htbuffer_bridge.c:	if (unlikely(psHTBLogIN->ui32NumArgs > HTB_LOG_MAX_PARAMS))
gpu/gpu_rgx/m1.11ED5425693/generated/htbuffer_bridge/server_htbuffer_bridge.c:	PVR_LOGR_IF_ERROR(OSLockCreate(&pHTBUFFERBridgeLock), "OSLockCreate");
gpu/gpu_rgx/m1.11ED5425693/generated/htbuffer_bridge/server_htbuffer_bridge.c:			      PVRSRV_BRIDGE_HTBUFFER_HTBLOG, PVRSRVBridgeHTBLog,
gpu/gpu_rgx/m1.11ED5425693/generated/htbuffer_bridge/server_htbuffer_bridge.c:	PVR_LOGR_IF_ERROR(OSLockDestroy(pHTBUFFERBridgeLock), "OSLockDestroy");
gpu/gpu_rgx/m1.11ED5425693/generated/htbuffer_bridge/server_htbuffer_bridge.c:				PVRSRV_BRIDGE_HTBUFFER_HTBLOG);
gpu/gpu_rgx/m1.11ED5425693/generated/htbuffer_bridge/common_htbuffer_bridge.h:#define PVRSRV_BRIDGE_HTBUFFER_HTBLOG			PVRSRV_BRIDGE_HTBUFFER_CMD_FIRST+1
gpu/gpu_rgx/m1.11ED5425693/generated/htbuffer_bridge/common_htbuffer_bridge.h:typedef struct PVRSRV_BRIDGE_IN_HTBLOG_TAG
gpu/gpu_rgx/m1.11ED5425693/generated/htbuffer_bridge/common_htbuffer_bridge.h:} __attribute__ ((packed)) PVRSRV_BRIDGE_IN_HTBLOG;
gpu/gpu_rgx/m1.11ED5425693/generated/htbuffer_bridge/common_htbuffer_bridge.h:typedef struct PVRSRV_BRIDGE_OUT_HTBLOG_TAG
gpu/gpu_rgx/m1.11ED5425693/generated/htbuffer_bridge/common_htbuffer_bridge.h:} __attribute__ ((packed)) PVRSRV_BRIDGE_OUT_HTBLOG;
gpu/gpu_rgx/m1.11ED5425693/generated/pdumpctrl_bridge/server_pdumpctrl_bridge.c:	PVR_LOGR_IF_ERROR(OSLockCreate(&pPDUMPCTRLBridgeLock), "OSLockCreate");
gpu/gpu_rgx/m1.11ED5425693/generated/pdumpctrl_bridge/server_pdumpctrl_bridge.c:	PVR_LOGR_IF_ERROR(OSLockDestroy(pPDUMPCTRLBridgeLock), "OSLockDestroy");
gpu/gpu_rgx/m1.11ED5425693/generated/devicememhistory_bridge/server_devicememhistory_bridge.c:	PVR_LOGR_IF_ERROR(OSLockCreate(&pDEVICEMEMHISTORYBridgeLock),
gpu/gpu_rgx/m1.11ED5425693/generated/devicememhistory_bridge/server_devicememhistory_bridge.c:	PVR_LOGR_IF_ERROR(OSLockDestroy(pDEVICEMEMHISTORYBridgeLock),
gpu/gpu_rgx/m1.11ED5425693/generated/cache_bridge/common_cache_bridge.h:#define PVRSRV_BRIDGE_CACHE_CACHEOPLOG			PVRSRV_BRIDGE_CACHE_CMD_FIRST+2
gpu/gpu_rgx/m1.11ED5425693/generated/cache_bridge/common_cache_bridge.h:typedef struct PVRSRV_BRIDGE_IN_CACHEOPLOG_TAG
gpu/gpu_rgx/m1.11ED5425693/generated/cache_bridge/common_cache_bridge.h:} __attribute__ ((packed)) PVRSRV_BRIDGE_IN_CACHEOPLOG;
gpu/gpu_rgx/m1.11ED5425693/generated/cache_bridge/common_cache_bridge.h:typedef struct PVRSRV_BRIDGE_OUT_CACHEOPLOG_TAG
gpu/gpu_rgx/m1.11ED5425693/generated/cache_bridge/common_cache_bridge.h:} __attribute__ ((packed)) PVRSRV_BRIDGE_OUT_CACHEOPLOG;
gpu/gpu_rgx/m1.11ED5425693/generated/cache_bridge/server_cache_bridge.c:		       PVRSRV_BRIDGE_IN_CACHEOPLOG * psCacheOpLogIN,
gpu/gpu_rgx/m1.11ED5425693/generated/cache_bridge/server_cache_bridge.c:		       PVRSRV_BRIDGE_OUT_CACHEOPLOG * psCacheOpLogOUT,
gpu/gpu_rgx/m1.11ED5425693/generated/cache_bridge/server_cache_bridge.c:			      PVRSRV_BRIDGE_CACHE_CACHEOPLOG,
gpu/gpu_rgx/m1.11ED5425693/generated/cache_bridge/server_cache_bridge.c:				PVRSRV_BRIDGE_CACHE_CACHEOPLOG);
gpu/gpu_rgx/m1.13ED5776728/kernel/drivers/staging/imgtec/sunxi/adf_sunxi.c:#define VALIDATE_LOG_LINES 50
gpu/gpu_rgx/m1.13ED5776728/kernel/drivers/staging/imgtec/sunxi/adf_sunxi.c:#define VALIDATE_LOG_LINE_SIZE 50
gpu/gpu_rgx/m1.13ED5776728/kernel/drivers/staging/imgtec/sunxi/adf_sunxi.c:	char validate_log[VALIDATE_LOG_LINES][VALIDATE_LOG_LINE_SIZE];
gpu/gpu_rgx/m1.13ED5776728/kernel/drivers/staging/imgtec/sunxi/adf_sunxi.c:		% VALIDATE_LOG_LINES;
gpu/gpu_rgx/m1.13ED5776728/kernel/drivers/staging/imgtec/sunxi/adf_sunxi.c:	offset = snprintf(str, VALIDATE_LOG_LINE_SIZE, "id %u:",
gpu/gpu_rgx/m1.13ED5776728/kernel/drivers/staging/imgtec/sunxi/adf_sunxi.c:	vsnprintf(str+offset, VALIDATE_LOG_LINE_SIZE-offset, fmt, args);
gpu/gpu_rgx/m1.13ED5776728/kernel/drivers/staging/imgtec/sunxi/adf_sunxi.c:	for (line = 0; line < VALIDATE_LOG_LINES; line++) {
gpu/gpu_rgx/m1.13ED5776728/kernel/drivers/staging/imgtec/sunxi/adf_sunxi.c:			% VALIDATE_LOG_LINES;
gpu/gpu_rgx/m1.13ED5776728/kernel/drivers/staging/imgtec/pvr_sync2.c:#define PVR_DUMPDEBUG_LOG(pfnDumpDebugPrintf, pvDumpDebugFile, ...) \
gpu/gpu_rgx/m1.13ED5776728/kernel/drivers/staging/imgtec/pvr_sync2.c:	PVR_DUMPDEBUG_LOG(dump_debug_printf,
gpu/gpu_rgx/m1.13ED5776728/kernel/drivers/staging/imgtec/pvr_sync2.c:		PVR_DUMPDEBUG_LOG(dump_debug_printf,
gpu/gpu_rgx/m1.13ED5776728/kernel/drivers/staging/imgtec/pvr_sync2.c:		PVR_DUMPDEBUG_LOG(dump_debug_printf,
gpu/gpu_rgx/m1.13ED5776728/kernel/drivers/staging/imgtec/pvr_sync2.c:		PVR_DUMPDEBUG_LOG(pfnDumpDebugPrintf, pvDumpDebugFile,
gpu/gpu_rgx/m1.13ED5776728/kernel/drivers/staging/imgtec/pvr_sync2.c:		PVR_DUMPDEBUG_LOG(pfnDumpDebugPrintf, pvDumpDebugFile,
gpu/gpu_rgx/m1.13ED5776728/kernel/drivers/staging/imgtec/pvr_sync2.c:			PVR_DUMPDEBUG_LOG(pfnDumpDebugPrintf, pvDumpDebugFile,
gpu/gpu_rgx/m1.13ED5776728/kernel/drivers/staging/imgtec/pvr_sync2.c:				PVR_DUMPDEBUG_LOG(pfnDumpDebugPrintf, pvDumpDebugFile,
gpu/gpu_rgx/m1.13ED5776728/kernel/drivers/staging/imgtec/pvr_sync2.c:				PVR_DUMPDEBUG_LOG(pfnDumpDebugPrintf, pvDumpDebugFile,
gpu/gpu_rgx/m1.13ED5776728/kernel/drivers/staging/imgtec/pvr_sync2.c:				PVR_DUMPDEBUG_LOG(pfnDumpDebugPrintf, pvDumpDebugFile,
gpu/gpu_rgx/m1.13ED5776728/kernel/drivers/staging/imgtec/pvr_sync2.c:		MTKPP_LOG(MTKPP_ID_SYNC, "[%p] sigl tid:%d", fence, MTKGetCurrentProcessIDKM());
gpu/gpu_rgx/m1.13ED5776728/kernel/drivers/staging/imgtec/pvr_sync2.c:	MTKPP_LOG(MTKPP_ID_SYNC, "[%p] wait tid:%d", fence, MTKGetCurrentProcessIDKM());
gpu/gpu_rgx/m1.13ED5776728/kernel/drivers/staging/imgtec/pvr_sync2.c:			MTKPP_LOG(MTKPP_ID_SYNC, "[%p] error tid: %d err %d", fence, MTKGetCurrentProcessIDKM(), err);
gpu/gpu_rgx/m1.13ED5776728/kernel/drivers/staging/imgtec/pvr_sync2.c:			MTKPP_LOG(MTKPP_ID_SYNC, "[%p] sigled tid:%d", fence, MTKGetCurrentProcessIDKM());
gpu/gpu_rgx/m1.13ED5776728/kernel/drivers/staging/imgtec/pvr_sync2.c:				PVR_DUMPDEBUG_LOG(pfnDummy, NULL,
gpu/gpu_rgx/m1.13ED5776728/kernel/drivers/staging/imgtec/pvr_sync2.c:	PVR_DUMPDEBUG_LOG(dump_debug_printf,
gpu/gpu_rgx/m1.13ED5776728/kernel/drivers/staging/imgtec/pvr_sync2.c:	PVR_DUMPDEBUG_LOG(dump_debug_printf,
gpu/gpu_rgx/m1.13ED5776728/kernel/drivers/staging/imgtec/plato/plato_drv.h:#if defined(PLATO_LOG_CHECKPOINTS)
gpu/gpu_rgx/m1.13ED5776728/kernel/drivers/staging/imgtec/pvr_counting_timeline.c:#define PVR_DUMPDEBUG_LOG(pfnDumpDebugPrintf, pvDumpDebugFile, fmt, ...) \
gpu/gpu_rgx/m1.13ED5776728/kernel/drivers/staging/imgtec/pvr_counting_timeline.c:	PVR_DUMPDEBUG_LOG(dump_debug_printf,
gpu/gpu_rgx/m1.13ED5776728/kernel/drivers/staging/imgtec/pvr_counting_timeline.c:		PVR_DUMPDEBUG_LOG(pfnDumpDebugPrintf, pvDumpDebugFile,
gpu/gpu_rgx/m1.13ED5776728/kernel/drivers/staging/imgtec/pvr_counting_timeline.c:			PVR_DUMPDEBUG_LOG(pfnDumpDebugPrintf, pvDumpDebugFile,
gpu/gpu_rgx/m1.13ED5776728/kernel/drivers/staging/imgtec/pvr_sync_file.c:#define PVR_DUMPDEBUG_LOG(pfnDumpDebugPrintf, pvDumpDebugFile, fmt, ...) \
gpu/gpu_rgx/m1.13ED5776728/kernel/drivers/staging/imgtec/pvr_sync_file.c:		PVR_DUMPDEBUG_LOG(pfnDumpDebugPrintf, pvDumpDebugFile, "------[ Native Fence Sync: timelines ]------");
gpu/gpu_rgx/m1.13ED5776728/kernel/drivers/staging/imgtec/pvr_sync_file.c:	PVR_DUMPDEBUG_LOG(dump_debug_printf,
gpu/gpu_rgx/m1.13ED5776728/kernel/drivers/staging/imgtec/pvr_sync_file.c:			PVR_DUMPDEBUG_LOG(dump_debug_printf,
gpu/gpu_rgx/m1.13ED5776728/kernel/drivers/staging/imgtec/pvr_fence.c:#define PVR_DUMPDEBUG_LOG(pfnDumpDebugPrintf, pvDumpDebugFile, fmt, ...) \
gpu/gpu_rgx/m1.13ED5776728/kernel/drivers/staging/imgtec/pvr_fence.c:	PVR_DUMPDEBUG_LOG(pfnDumpDebugPrintf, pvDumpDebugFile,
gpu/gpu_rgx/m1.13ED5776728/kernel/drivers/staging/imgtec/pvr_fence.c:		PVR_DUMPDEBUG_LOG(pfnDumpDebugPrintf, pvDumpDebugFile,
gpu/gpu_rgx/m1.13ED5776728/kernel/drivers/staging/imgtec/pvr_fence.c:		PVR_DUMPDEBUG_LOG(pfnDumpDebugPrintf, pvDumpDebugFile,
gpu/gpu_rgx/m1.13ED5776728/kernel/drivers/staging/imgtec/pvr_fence.c:		PVR_DUMPDEBUG_LOG(pfnDumpDebugPrintf, pvDumpDebugFile,
gpu/gpu_rgx/m1.13ED5776728/kernel/drivers/staging/imgtec/pvr_fence.c:			PVR_DUMPDEBUG_LOG(pfnDummy, NULL,
gpu/gpu_rgx/m1.13ED5776728/kernel/drivers/staging/imgtec/pvr_platform_drv.c:	MTK_LOGI("@%s: pvrsrvkm driver probe\n", __func__);
gpu/gpu_rgx/m1.13ED5776728/kernel/drivers/staging/imgtec/pvr_platform_drv.c:	MTK_LOGI("@%s: start to initialize pvrsrvkm driver\n", __func__);
gpu/gpu_rgx/m1.13ED5776728/include/public/powervr/mem_types.h:typedef uint32_t IMG_DEVMEM_LOG2ALIGN_T;
gpu/gpu_rgx/m1.13ED5776728/include/rgx_mips.h:#define RGXMIPSFW_LOG2_PAGE_SIZE_4K              (12)
gpu/gpu_rgx/m1.13ED5776728/include/rgx_mips.h:#define RGXMIPSFW_PAGE_SIZE_4K                   (0x1 << RGXMIPSFW_LOG2_PAGE_SIZE_4K)
gpu/gpu_rgx/m1.13ED5776728/include/rgx_mips.h:#define RGXMIPSFW_LOG2_PAGE_SIZE_64K             (16)
gpu/gpu_rgx/m1.13ED5776728/include/rgx_mips.h:#define RGXMIPSFW_PAGE_SIZE_64K                  (0x1 << RGXMIPSFW_LOG2_PAGE_SIZE_64K)
gpu/gpu_rgx/m1.13ED5776728/include/rgx_mips.h:#define RGXMIPSFW_LOG2_PAGE_SIZE_256K            (18)
gpu/gpu_rgx/m1.13ED5776728/include/rgx_mips.h:#define RGXMIPSFW_PAGE_SIZE_256K                 (0x1 << RGXMIPSFW_LOG2_PAGE_SIZE_256K)
gpu/gpu_rgx/m1.13ED5776728/include/rgx_mips.h:#define RGXMIPSFW_LOG2_PAGE_SIZE_1MB             (20)
gpu/gpu_rgx/m1.13ED5776728/include/rgx_mips.h:#define RGXMIPSFW_PAGE_SIZE_1MB                  (0x1 << RGXMIPSFW_LOG2_PAGE_SIZE_1MB)
gpu/gpu_rgx/m1.13ED5776728/include/rgx_mips.h:#define RGXMIPSFW_LOG2_PAGE_SIZE_4MB             (22)
gpu/gpu_rgx/m1.13ED5776728/include/rgx_mips.h:#define RGXMIPSFW_PAGE_SIZE_4MB                  (0x1 << RGXMIPSFW_LOG2_PAGE_SIZE_4MB)
gpu/gpu_rgx/m1.13ED5776728/include/rgx_mips.h:#define RGXMIPSFW_LOG2_PTE_ENTRY_SIZE            (2)
gpu/gpu_rgx/m1.13ED5776728/include/rgx_mips.h:#define RGXMIPSFW_LOG2_PAGETABLE_SIZE_4K         (RGX_FIRMWARE_HEAP_SHIFT - RGXMIPSFW_LOG2_PAGE_SIZE_4K + RGXMIPSFW_LOG2_PTE_ENTRY_SIZE)
gpu/gpu_rgx/m1.13ED5776728/include/rgx_mips.h:#define RGXMIPSFW_LOG2_PAGETABLE_SIZE_64K        (RGX_FIRMWARE_HEAP_SHIFT - RGXMIPSFW_LOG2_PAGE_SIZE_64K + RGXMIPSFW_LOG2_PTE_ENTRY_SIZE)
gpu/gpu_rgx/m1.13ED5776728/include/rgx_mips.h:#define RGXMIPSFW_MAX_LOG2_PAGETABLE_SIZE        (18) /* 256KB page table */
gpu/gpu_rgx/m1.13ED5776728/include/rgx_mips.h:#define RGXMIPSFW_TRAMPOLINE_LOG2_NUMPAGES       (2)
gpu/gpu_rgx/m1.13ED5776728/include/rgx_mips.h:#define RGXMIPSFW_TRAMPOLINE_NUMPAGES            (1 << RGXMIPSFW_TRAMPOLINE_LOG2_NUMPAGES)
gpu/gpu_rgx/m1.13ED5776728/include/rgx_mips.h:#define RGXMIPSFW_TRAMPOLINE_SIZE                (RGXMIPSFW_TRAMPOLINE_NUMPAGES << RGXMIPSFW_LOG2_PAGE_SIZE_4K)
gpu/gpu_rgx/m1.13ED5776728/include/rgx_mips.h:#define RGXMIPSFW_TRAMPOLINE_LOG2_SEGMENT_SIZE   (RGXMIPSFW_TRAMPOLINE_LOG2_NUMPAGES + RGXMIPSFW_LOG2_PAGE_SIZE_4K)
gpu/gpu_rgx/m1.13ED5776728/include/rgx_mips.h:#define RGXMIPSFW_SENSITIVE_ADDR(a)              (RGXMIPSFW_BOOT_REMAP_PHYS_ADDR_IN == (~((1<<RGXMIPSFW_TRAMPOLINE_LOG2_SEGMENT_SIZE)-1) & a))
gpu/gpu_rgx/m1.13ED5776728/include/rgx_mips.h:#define RGXMIPSFW_BOOT_REMAP_LOG2_SEGMENT_SIZE   (12)
gpu/gpu_rgx/m1.13ED5776728/include/rgx_mips.h:#define RGXMIPSFW_DATA_REMAP_LOG2_SEGMENT_SIZE   (12)
gpu/gpu_rgx/m1.13ED5776728/include/rgx_mips.h:#define RGXMIPSFW_CODE_REMAP_LOG2_SEGMENT_SIZE   (12)
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_eng_mt6765.h:#define PVRSRV_APPHINT_DISABLEFEDLOGGING IMG_FALSE
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_eng_mt6765.h:#define PVRSRV_APPHINT_ENABLEHTBLOGGROUP 0
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_eng_mt6765.h:#define PVRSRV_APPHINT_ENABLELOGGROUP RGXFWIF_LOG_TYPE_NONE
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_eng_mt6765.h:#define PVRSRV_APPHINT_FIRMWARELOGTYPE 0
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_eng_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_TQ3D 14
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_eng_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_TQ2D 14
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_eng_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_CDM 13
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_eng_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_TA 15
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_eng_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_3D 16
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_eng_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_KICKSYNC 13
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_eng_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_TDM 14
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_eng_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_TQ3D 17
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_eng_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_TQ2D 17
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_eng_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_CDM 15
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_eng_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_TA 16
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_eng_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_3D 17
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_eng_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_KICKSYNC 13
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_eng_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_TDM 17
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_eng_mt6779.h:#define PVRSRV_APPHINT_DISABLEFEDLOGGING IMG_FALSE
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_eng_mt6779.h:#define PVRSRV_APPHINT_ENABLEHTBLOGGROUP 0
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_eng_mt6779.h:#define PVRSRV_APPHINT_ENABLELOGGROUP RGXFWIF_LOG_TYPE_NONE
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_eng_mt6779.h:#define PVRSRV_APPHINT_FIRMWARELOGTYPE 0
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_eng_mt6779.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_TQ3D 14
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_eng_mt6779.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_TQ2D 14
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_eng_mt6779.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_CDM 13
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_eng_mt6779.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_TA 15
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_eng_mt6779.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_3D 16
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_eng_mt6779.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_KICKSYNC 13
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_eng_mt6779.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_TDM 14
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_eng_mt6779.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_TQ3D 17
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_eng_mt6779.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_TQ2D 17
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_eng_mt6779.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_CDM 15
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_eng_mt6779.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_TA 16
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_eng_mt6779.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_3D 17
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_eng_mt6779.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_KICKSYNC 13
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_eng_mt6779.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_TDM 17
gpu/gpu_rgx/m1.13ED5776728/include/log2.h:#ifndef LOG2_H
gpu/gpu_rgx/m1.13ED5776728/include/log2.h:#define LOG2_H
gpu/gpu_rgx/m1.13ED5776728/include/log2.h:#endif /* LOG2_H */
gpu/gpu_rgx/m1.13ED5776728/include/devicemem_typedefs.h:typedef IMG_DEVMEM_LOG2ALIGN_T DEVMEM_LOG2ALIGN_T;  /*!< Typedef for DeviceMem LOG2 Alignment */
gpu/gpu_rgx/m1.13ED5776728/include/devicemem_typedefs.h:    IMG_DEVMEM_LOG2ALIGN_T uiLog2ContiguityGuarantee;
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_user_mt6779.h:#define PVRSRV_APPHINT_DISABLEFEDLOGGING IMG_FALSE
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_user_mt6779.h:#define PVRSRV_APPHINT_ENABLEHTBLOGGROUP 0
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_user_mt6779.h:#define PVRSRV_APPHINT_ENABLELOGGROUP RGXFWIF_LOG_TYPE_NONE
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_user_mt6779.h:#define PVRSRV_APPHINT_FIRMWARELOGTYPE 0
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_user_mt6779.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_TQ3D 14
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_user_mt6779.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_TQ2D 14
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_user_mt6779.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_CDM 13
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_user_mt6779.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_TA 15
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_user_mt6779.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_3D 16
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_user_mt6779.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_KICKSYNC 13
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_user_mt6779.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_TDM 14
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_user_mt6779.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_TQ3D 17
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_user_mt6779.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_TQ2D 17
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_user_mt6779.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_CDM 15
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_user_mt6779.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_TA 16
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_user_mt6779.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_3D 17
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_user_mt6779.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_KICKSYNC 13
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_user_mt6779.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_TDM 17
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h:	#define PVR_LOG_ERROR(_rc, _call) \
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h:	#define PVR_LOG_IF_ERROR(_rc, _call) do \
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h:	#define PVR_LOG_RETURN_IF_NOMEM(_expr, _call) do \
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h:	#define PVR_LOG_GOTO_IF_NOMEM(_expr, _err, _go) do \
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h:	#define PVR_LOG_RETURN_IF_ERROR(_rc, _call) do \
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h:	#define PVR_LOG_RETURN_VOID_IF_ERROR(_rc, _call) do \
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h:	#define PVR_LOG_GOTO_IF_ERROR(_rc, _call, _go) do \
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h:	#define PVR_LOG_GOTO_WITH_ERROR(_call, _err, _rc, _go) do \
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h:	#define PVR_LOG_IF_FALSE(_expr, _msg) do \
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h:	#define PVR_LOG_RETURN_IF_FALSE(_expr, _msg, _rc) do \
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h:	#define PVR_LOG_RETURN_VOID_IF_FALSE(_expr, _msg) do \
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h:	#define PVR_LOG_GOTO_IF_FALSE(_expr, _msg, _go) do \
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h:	#define PVR_LOG_RETURN_IF_INVALID_PARAM(_expr, _param) do \
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h:	#define PVR_LOG_GOTO_IF_INVALID_PARAM(_expr, _err, _go) do \
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h:	#define PVR_LOG_ERROR(_rc, _call) (void)(_rc)
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h:	#define PVR_LOG_IF_ERROR(_rc, _call) (void)(_rc)
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h:	#define PVR_LOG_RETURN_IF_NOMEM(_expr, _call) do { if (unlikely(_expr == NULL)) { return PVRSRV_ERROR_OUT_OF_MEMORY; } MSC_SUPPRESS_4127 } while (0)
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h:	#define PVR_LOG_GOTO_IF_NOMEM(_expr, _err, _go) do { if (unlikely(_expr == NULL)) { _err = PVRSRV_ERROR_OUT_OF_MEMORY; goto _go; } MSC_SUPPRESS_4127	} while (0)
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h:	#define PVR_LOG_RETURN_IF_ERROR(_rc, _call) do { if (unlikely(_rc != PVRSRV_OK)) { return (_rc); } MSC_SUPPRESS_4127 } while (0)
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h:	#define PVR_LOG_RETURN_VOID_IF_ERROR(_rc, _call) do { if (unlikely(_rc != PVRSRV_OK)) { return; } MSC_SUPPRESS_4127 } while (0)
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h:	#define PVR_LOG_GOTO_IF_ERROR(_rc, _call, _go) do { if (unlikely(_rc != PVRSRV_OK)) { goto _go; } MSC_SUPPRESS_4127 } while (0)
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h:	#define PVR_LOG_GOTO_WITH_ERROR(_call, _err, _rc, _go) do { _err = _rc; goto _go; MSC_SUPPRESS_4127 } while (0)
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h:	#define PVR_LOG_IF_FALSE(_expr, _msg) (void)(_expr)
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h:	#define PVR_LOG_RETURN_IF_FALSE(_expr, _msg, _rc) do { if (unlikely(!(_expr))) { return (_rc); } MSC_SUPPRESS_4127 } while (0)
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h:	#define PVR_LOG_RETURN_VOID_IF_FALSE(_expr, _msg) do { if (unlikely(!(_expr))) { return; } MSC_SUPPRESS_4127 } while (0)
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h:	#define PVR_LOG_GOTO_IF_FALSE(_expr, _msg, _go) do { if (unlikely(!(_expr))) { goto _go; } MSC_SUPPRESS_4127 } while (0)
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h:	#define PVR_LOG_RETURN_IF_INVALID_PARAM(_expr, _param) do { if (unlikely(!(_expr))) { return PVRSRV_ERROR_INVALID_PARAMS; } MSC_SUPPRESS_4127 } while (0)
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h:	#define PVR_LOG_GOTO_IF_INVALID_PARAM(_expr, _err, _go) do { if (unlikely(!(_expr))) { _err = PVRSRV_ERROR_INVALID_PARAMS; goto _go; } MSC_SUPPRESS_4127 } while (0)
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h: *       be printed. Otherwise use PVR_LOG_RETURN_IF_ERROR macro.
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h: *       be printed. Otherwise use PVR_LOG_RETURN_IF_FALSE macro.
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h: *       be printed. Otherwise use PVR_LOG_RETURN_IF_INVALID_PARAM macro.
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h: *       be printed. Otherwise use PVR_LOG_RETURN_IF_NOMEM macro.
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h: *       be printed. Otherwise use PVR_LOG_GOTO_IF_NOMEM macro.
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h: *       be printed. Otherwise use PVR_LOG_GOTO_IF_INVALID_PARAM macro.
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h: *       be printed. Otherwise use PVR_LOG_GOTO_IF_FALSE macro.
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h: *       be printed. Otherwise use PVR_LOG_GOTO_IF_ERROR macro.
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h: *       be printed. Otherwise use PVR_LOG_GOTO_WITH_ERROR macro.
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h:#define PVR_LOG(X) PVRSRVReleasePrintf X
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h:                Invoked from the macro PVR_LOG(). Used in Services Server only.
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h:    @def PVR_LOG_ERROR
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h:    @def PVR_LOG_IF_ERROR
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h:    @def PVR_LOG_RETURN_IF_NOMEM
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h:    @def PVR_LOG_GOTO_IF_NOMEM
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h:    @def PVR_LOG_RETURN_IF_ERROR
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h:    @def PVR_LOG_RETURN_VOID_IF_ERROR
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h:    @def PVR_LOG_GOTO_IF_ERROR
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h:    @def PVR_LOG_GOTO_WITH_ERROR
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h:    @def PVR_LOG_IF_FALSE
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h:    @def PVR_LOG_RETURN_IF_FALSE
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h:    @def PVR_LOG_RETURN_VOID_IF_FALSE
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h:    @def PVR_LOG_GOTO_IF_FALSE
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h:    @def PVR_LOG_RETURN_IF_INVALID_PARAM
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h:    @def PVR_LOG_GOTO_IF_INVALID_PARAM
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h:    @def PVR_LOG
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h:    This macro will print messages only if PVRSRV_NEED_PVR_LOG macro is defined.
gpu/gpu_rgx/m1.13ED5776728/include/pvr_debug.h:    @brief Prints empty line to a log (PVRSRV_NEED_PVR_LOG must be defined).
gpu/gpu_rgx/m1.13ED5776728/include/mtk_pp.h:#define MTKPP_LOG(id, ...) \
gpu/gpu_rgx/m1.13ED5776728/include/mtk_pp.h:void MTKPP_LOGTIME(enum MTKPP_ID id, const char *);
gpu/gpu_rgx/m1.13ED5776728/include/mtk_pp.h:#define MTKPP_LOG(...)
gpu/gpu_rgx/m1.13ED5776728/include/mtk_pp.h:#define MTKPP_LOGTIME(...)
gpu/gpu_rgx/m1.13ED5776728/include/img_3dtypes.h:typedef enum _IMG_LOGICOP_
gpu/gpu_rgx/m1.13ED5776728/include/img_3dtypes.h:	IMG_LOGICOP_CLEAR = 0,     /**< Result = 0 */
gpu/gpu_rgx/m1.13ED5776728/include/img_3dtypes.h:	IMG_LOGICOP_SET,           /**< Result = -1 */
gpu/gpu_rgx/m1.13ED5776728/include/img_3dtypes.h:	IMG_LOGICOP_COPY,          /**< Result = Source */
gpu/gpu_rgx/m1.13ED5776728/include/img_3dtypes.h:	IMG_LOGICOP_COPY_INVERTED, /**< Result = ~Source */
gpu/gpu_rgx/m1.13ED5776728/include/img_3dtypes.h:	IMG_LOGICOP_NOOP,          /**< Result = Destination */
gpu/gpu_rgx/m1.13ED5776728/include/img_3dtypes.h:	IMG_LOGICOP_INVERT,        /**< Result = ~Destination */
gpu/gpu_rgx/m1.13ED5776728/include/img_3dtypes.h:	IMG_LOGICOP_AND,           /**< Result = Source & Destination */
gpu/gpu_rgx/m1.13ED5776728/include/img_3dtypes.h:	IMG_LOGICOP_NAND,          /**< Result = ~(Source & Destination) */
gpu/gpu_rgx/m1.13ED5776728/include/img_3dtypes.h:	IMG_LOGICOP_OR,            /**< Result = Source | Destination */
gpu/gpu_rgx/m1.13ED5776728/include/img_3dtypes.h:	IMG_LOGICOP_NOR,           /**< Result = ~(Source | Destination) */
gpu/gpu_rgx/m1.13ED5776728/include/img_3dtypes.h:	IMG_LOGICOP_XOR,           /**< Result = Source ^ Destination */
gpu/gpu_rgx/m1.13ED5776728/include/img_3dtypes.h:	IMG_LOGICOP_EQUIV,         /**< Result = ~(Source ^ Destination) */
gpu/gpu_rgx/m1.13ED5776728/include/img_3dtypes.h:	IMG_LOGICOP_AND_REVERSE,   /**< Result = Source & ~Destination */
gpu/gpu_rgx/m1.13ED5776728/include/img_3dtypes.h:	IMG_LOGICOP_AND_INVERTED,  /**< Result = ~Source & Destination */
gpu/gpu_rgx/m1.13ED5776728/include/img_3dtypes.h:	IMG_LOGICOP_OR_REVERSE,    /**< Result = Source | ~Destination */
gpu/gpu_rgx/m1.13ED5776728/include/img_3dtypes.h:	IMG_LOGICOP_OR_INVERTED    /**< Result = ~Source | Destination */
gpu/gpu_rgx/m1.13ED5776728/include/img_3dtypes.h:} IMG_LOGICOP;
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_user_mt6765.h:#define PVRSRV_APPHINT_DISABLEFEDLOGGING IMG_FALSE
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_user_mt6765.h:#define PVRSRV_APPHINT_ENABLEHTBLOGGROUP 0
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_user_mt6765.h:#define PVRSRV_APPHINT_ENABLELOGGROUP RGXFWIF_LOG_TYPE_NONE
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_user_mt6765.h:#define PVRSRV_APPHINT_FIRMWARELOGTYPE 0
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_user_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_TQ3D 14
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_user_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_TQ2D 14
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_user_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_CDM 13
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_user_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_TA 15
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_user_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_3D 16
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_user_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_KICKSYNC 13
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_user_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_TDM 14
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_user_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_TQ3D 17
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_user_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_TQ2D 17
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_user_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_CDM 15
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_user_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_TA 16
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_user_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_3D 17
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_user_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_KICKSYNC 13
gpu/gpu_rgx/m1.13ED5776728/include/config_kernel_user_mt6765.h:#define PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_TDM 17
gpu/gpu_rgx/m1.13ED5776728/include/pdumpdesc.h:#define IMAGE_HEADER_WORD3_LOGICAL_WIDTH_SHIFT		(0)
gpu/gpu_rgx/m1.13ED5776728/include/pdumpdesc.h:#define IMAGE_HEADER_WORD3_LOGICAL_WIDTH_CLRMSK		(0xFFFFFFFFU)
gpu/gpu_rgx/m1.13ED5776728/include/pdumpdesc.h:#define IMAGE_HEADER_WORD4_LOGICAL_HEIGHT_SHIFT		(0)
gpu/gpu_rgx/m1.13ED5776728/include/pdumpdesc.h:#define IMAGE_HEADER_WORD4_LOGICAL_HEIGHT_CLRMSK	(0xFFFFFFFFU)
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_NONE			0x00000000U
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_TRACE			0x00000001U
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_GROUP_MAIN		0x00000002U
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_GROUP_MTS		0x00000004U
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_GROUP_CLEANUP	0x00000008U
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_GROUP_CSW		0x00000010U
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_GROUP_BIF		0x00000020U
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_GROUP_PM		0x00000040U
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_GROUP_RTD		0x00000080U
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_GROUP_SPM		0x00000100U
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_GROUP_POW		0x00000200U
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_GROUP_HWR		0x00000400U
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_GROUP_HWP		0x00000800U
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_GROUP_RPM		0x00001000U
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_GROUP_DMA		0x00002000U
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_GROUP_MISC		0x00004000U
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_GROUP_DEBUG	0x80000000U
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_GROUP_MASK		0x80007FFEU
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_MASK			0x80007FFFU
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:#define RGXFWIF_LOG_GROUPS_STRING_LIST   "main,mts,cleanup,csw,bif,pm,rtd,spm,pow,hwr,hwp,rpm,dma,misc,debug"
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:} RGXFWIF_LOG_GROUP_MAP_ENTRY;
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:  Macro for use with the RGXFWIF_LOG_GROUP_MAP_ENTRY type to create a lookup
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:#define RGXFWIF_LOG_GROUP_NAME_VALUE_MAP { "none",    RGXFWIF_LOG_TYPE_NONE }, \
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:                                         { "main",    RGXFWIF_LOG_TYPE_GROUP_MAIN }, \
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:                                         { "mts",     RGXFWIF_LOG_TYPE_GROUP_MTS }, \
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:                                         { "cleanup", RGXFWIF_LOG_TYPE_GROUP_CLEANUP }, \
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:                                         { "csw",     RGXFWIF_LOG_TYPE_GROUP_CSW }, \
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:                                         { "bif",     RGXFWIF_LOG_TYPE_GROUP_BIF }, \
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:                                         { "pm",      RGXFWIF_LOG_TYPE_GROUP_PM }, \
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:                                         { "rtd",     RGXFWIF_LOG_TYPE_GROUP_RTD }, \
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:                                         { "spm",     RGXFWIF_LOG_TYPE_GROUP_SPM }, \
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:                                         { "pow",     RGXFWIF_LOG_TYPE_GROUP_POW }, \
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:                                         { "hwr",     RGXFWIF_LOG_TYPE_GROUP_HWR }, \
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:                                         { "hwp",     RGXFWIF_LOG_TYPE_GROUP_HWP }, \
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:                                         { "rpm",     RGXFWIF_LOG_TYPE_GROUP_RPM }, \
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:                                         { "dma",     RGXFWIF_LOG_TYPE_GROUP_DMA }, \
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:                                         { "misc",    RGXFWIF_LOG_TYPE_GROUP_MISC }, \
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:                                         { "debug",   RGXFWIF_LOG_TYPE_GROUP_DEBUG }
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:#define RGXFWIF_LOG_ENABLED_GROUPS_LIST_PFSPEC  "%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s"
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:#define RGXFWIF_LOG_ENABLED_GROUPS_LIST(types)  (((types) & RGXFWIF_LOG_TYPE_GROUP_MAIN)	?("main ")		:("")),		\
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:                                                (((types) & RGXFWIF_LOG_TYPE_GROUP_MTS)		?("mts ")		:("")),		\
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:                                                (((types) & RGXFWIF_LOG_TYPE_GROUP_CLEANUP)	?("cleanup ")	:("")),		\
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:                                                (((types) & RGXFWIF_LOG_TYPE_GROUP_CSW)		?("csw ")		:("")),		\
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:                                                (((types) & RGXFWIF_LOG_TYPE_GROUP_BIF)		?("bif ")		:("")),		\
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:                                                (((types) & RGXFWIF_LOG_TYPE_GROUP_PM)		?("pm ")		:("")),		\
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:                                                (((types) & RGXFWIF_LOG_TYPE_GROUP_RTD)		?("rtd ")		:("")),		\
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:                                                (((types) & RGXFWIF_LOG_TYPE_GROUP_SPM)		?("spm ")		:("")),		\
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:                                                (((types) & RGXFWIF_LOG_TYPE_GROUP_POW)		?("pow ")		:("")),		\
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:                                                (((types) & RGXFWIF_LOG_TYPE_GROUP_HWR)		?("hwr ")		:("")),		\
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:                                                (((types) & RGXFWIF_LOG_TYPE_GROUP_HWP)		?("hwp ")		:("")),		\
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:                                                (((types) & RGXFWIF_LOG_TYPE_GROUP_RPM)		?("rpm ")		:("")),		\
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:                                                (((types) & RGXFWIF_LOG_TYPE_GROUP_DMA)		?("dma ")		:("")),		\
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:                                                (((types) & RGXFWIF_LOG_TYPE_GROUP_MISC)	?("misc ")		:("")),		\
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:                                                (((types) & RGXFWIF_LOG_TYPE_GROUP_DEBUG)	?("debug ")		:(""))
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:#define PVR_SLR_LOG_ENTRIES 10
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:#define PVR_SLR_LOG_STRLEN  30 /*!< MAX_CLIENT_CCB_NAME not visible to this header */
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:	IMG_CHAR				aszCCBName[PVR_SLR_LOG_STRLEN];
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:	RGXFWIF_SLR_ENTRY          sSLRLog[PVR_SLR_LOG_ENTRIES];
gpu/gpu_rgx/m1.13ED5776728/services/include/rogue/rgx_fwif_km.h:	RGXFWIF_KCCB_CMD_LOGTYPE_UPDATE						= 203U | RGX_CMD_MAGIC_DWORD_SHIFTED, /*!< Ask the firmware to update its cached ui32LogType value from the (shared) tracebuf control structure */
gpu/gpu_rgx/m1.13ED5776728/services/include/km_apphint_defs_common.h:X(EnableHTBLogGroup,                UINT32Bitfield, ALWAYS,      PVRSRV_APPHINT_ENABLEHTBLOGGROUP,                htb_loggroup_tbl ) \
gpu/gpu_rgx/m1.13ED5776728/services/include/km_apphint_defs_common.h:X(EnableLogGroup,                   UINT32Bitfield, ALWAYS,      PVRSRV_APPHINT_ENABLELOGGROUP,                   fwt_loggroup_tbl ) \
gpu/gpu_rgx/m1.13ED5776728/services/include/km_apphint_defs_common.h:X(FirmwareLogType,                  UINT32List,     ALWAYS,      PVRSRV_APPHINT_FIRMWARELOGTYPE,                  fwt_logtype_tbl  ) \
gpu/gpu_rgx/m1.13ED5776728/services/include/km_apphint_defs_common.h:X(DisableFEDLogging,                BOOL,           ALWAYS,      PVRSRV_APPHINT_DISABLEFEDLOGGING,                NO_PARAM_TABLE   ) \
gpu/gpu_rgx/m1.13ED5776728/services/include/rgxfw_log_helper.h:#ifndef RGXFW_LOG_HELPER_H
gpu/gpu_rgx/m1.13ED5776728/services/include/rgxfw_log_helper.h:#define RGXFW_LOG_HELPER_H
gpu/gpu_rgx/m1.13ED5776728/services/include/rgxfw_log_helper.h:	RGXFW_LOG_SFGROUPLIST
gpu/gpu_rgx/m1.13ED5776728/services/include/rgxfw_log_helper.h:#endif /* RGXFW_LOG_HELPER_H */
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_NONE			0x00000000U
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_TRACE			0x00000001U
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_GROUP_MAIN		0x00000002U
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_GROUP_MTS		0x00000004U
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_GROUP_CLEANUP	0x00000008U
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_GROUP_CSW		0x00000010U
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_GROUP_BIF		0x00000020U
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_GROUP_PM		0x00000040U
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_GROUP_RTD		0x00000080U
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_GROUP_SPM		0x00000100U
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_GROUP_POW		0x00000200U
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_GROUP_HWR		0x00000400U
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_GROUP_HWP		0x00000800U
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_GROUP_RPM		0x00001000U
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_GROUP_DMA		0x00002000U
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_GROUP_MISC		0x00004000U
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_GROUP_DEBUG	0x80000000U
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_GROUP_MASK		0x80007FFEU
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:#define RGXFWIF_LOG_TYPE_MASK			0x80007FFFU
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:#define RGXFWIF_LOG_GROUPS_STRING_LIST   "main,mts,cleanup,csw,bif,pm,rtd,spm,pow,hwr,hwp,rpm,dma,misc,debug"
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:} RGXFWIF_LOG_GROUP_MAP_ENTRY;
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:  Macro for use with the RGXFWIF_LOG_GROUP_MAP_ENTRY type to create a lookup
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:#define RGXFWIF_LOG_GROUP_NAME_VALUE_MAP { "none",    RGXFWIF_LOG_TYPE_NONE }, \
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:                                         { "main",    RGXFWIF_LOG_TYPE_GROUP_MAIN }, \
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:                                         { "mts",     RGXFWIF_LOG_TYPE_GROUP_MTS }, \
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:                                         { "cleanup", RGXFWIF_LOG_TYPE_GROUP_CLEANUP }, \
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:                                         { "csw",     RGXFWIF_LOG_TYPE_GROUP_CSW }, \
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:                                         { "bif",     RGXFWIF_LOG_TYPE_GROUP_BIF }, \
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:                                         { "pm",      RGXFWIF_LOG_TYPE_GROUP_PM }, \
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:                                         { "rtd",     RGXFWIF_LOG_TYPE_GROUP_RTD }, \
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:                                         { "spm",     RGXFWIF_LOG_TYPE_GROUP_SPM }, \
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:                                         { "pow",     RGXFWIF_LOG_TYPE_GROUP_POW }, \
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:                                         { "hwr",     RGXFWIF_LOG_TYPE_GROUP_HWR }, \
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:                                         { "hwp",     RGXFWIF_LOG_TYPE_GROUP_HWP }, \
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:                                         { "rpm",     RGXFWIF_LOG_TYPE_GROUP_RPM }, \
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:                                         { "dma",     RGXFWIF_LOG_TYPE_GROUP_DMA }, \
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:                                         { "misc",    RGXFWIF_LOG_TYPE_GROUP_MISC }, \
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:                                         { "debug",   RGXFWIF_LOG_TYPE_GROUP_DEBUG }
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:#define RGXFWIF_LOG_ENABLED_GROUPS_LIST_PFSPEC  "%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s"
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:#define RGXFWIF_LOG_ENABLED_GROUPS_LIST(types)  (((types) & RGXFWIF_LOG_TYPE_GROUP_MAIN)	?("main ")		:("")),		\
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:                                                (((types) & RGXFWIF_LOG_TYPE_GROUP_MTS)		?("mts ")		:("")),		\
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:                                                (((types) & RGXFWIF_LOG_TYPE_GROUP_CLEANUP)	?("cleanup ")	:("")),		\
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:                                                (((types) & RGXFWIF_LOG_TYPE_GROUP_CSW)		?("csw ")		:("")),		\
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:                                                (((types) & RGXFWIF_LOG_TYPE_GROUP_BIF)		?("bif ")		:("")),		\
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:                                                (((types) & RGXFWIF_LOG_TYPE_GROUP_PM)		?("pm ")		:("")),		\
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:                                                (((types) & RGXFWIF_LOG_TYPE_GROUP_RTD)		?("rtd ")		:("")),		\
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:                                                (((types) & RGXFWIF_LOG_TYPE_GROUP_SPM)		?("spm ")		:("")),		\
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:                                                (((types) & RGXFWIF_LOG_TYPE_GROUP_POW)		?("pow ")		:("")),		\
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:                                                (((types) & RGXFWIF_LOG_TYPE_GROUP_HWR)		?("hwr ")		:("")),		\
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:                                                (((types) & RGXFWIF_LOG_TYPE_GROUP_HWP)		?("hwp ")		:("")),		\
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:                                                (((types) & RGXFWIF_LOG_TYPE_GROUP_RPM)		?("rpm ")		:("")),		\
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:                                                (((types) & RGXFWIF_LOG_TYPE_GROUP_DMA)		?("dma ")		:("")),		\
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:                                                (((types) & RGXFWIF_LOG_TYPE_GROUP_MISC)	?("misc ")		:("")),		\
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:                                                (((types) & RGXFWIF_LOG_TYPE_GROUP_DEBUG)	?("debug ")		:(""))
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:#define PVR_SLR_LOG_ENTRIES 10
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:#define PVR_SLR_LOG_STRLEN  30 /*!< MAX_CLIENT_CCB_NAME not visible to this header */
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:	IMG_CHAR				aszCCBName[PVR_SLR_LOG_STRLEN];
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:	RGXFWIF_SLR_ENTRY          sSLRLog[PVR_SLR_LOG_ENTRIES];
gpu/gpu_rgx/m1.13ED5776728/services/include/volcanic/rgx_fwif_km.h:	RGXFWIF_KCCB_CMD_LOGTYPE_UPDATE                    = 206U | RGX_CMD_MAGIC_DWORD_SHIFTED, /*!< Ask the firmware to update its cached ui32LogType value from the (shared) tracebuf control structure */
gpu/gpu_rgx/m1.13ED5776728/services/include/htbuffer_types.h:#define HTB_GROUP_ENABLED(SF) (g_auiHTBGroupEnable[HTB_LOG_GROUP_FLAG_GROUP(HTB_SF_GID(SF))] & HTB_LOG_GROUP_FLAG(HTB_SF_GID(SF)))
gpu/gpu_rgx/m1.13ED5776728/services/include/htbuffer_types.h:	HTB_LOGMODE_UNDEF = 0,
gpu/gpu_rgx/m1.13ED5776728/services/include/htbuffer_types.h:	HTB_LOGMODE_ALLPID,
gpu/gpu_rgx/m1.13ED5776728/services/include/htbuffer_types.h:	HTB_LOGMODE_RESTRICTEDPID,
gpu/gpu_rgx/m1.13ED5776728/services/include/htbuffer_types.h:	HTB_LOGMODE_LAST = HTB_LOGMODE_RESTRICTEDPID
gpu/gpu_rgx/m1.13ED5776728/services/include/htbuffer_types.h:} HTB_LOGMODE_CTRL;
gpu/gpu_rgx/m1.13ED5776728/services/include/rgx_fwif_sf.h:#define RGXFW_LOG_SFGROUPLIST       \
gpu/gpu_rgx/m1.13ED5776728/services/include/rgx_fwif_sf.h:enum RGXFW_LOG_SFGROUPS {
gpu/gpu_rgx/m1.13ED5776728/services/include/rgx_fwif_sf.h:	RGXFW_LOG_SFGROUPLIST
gpu/gpu_rgx/m1.13ED5776728/services/include/rgx_fwif_sf.h:#define RGXFW_LOG_SFIDLIST \
gpu/gpu_rgx/m1.13ED5776728/services/include/rgx_fwif_sf.h:#define RGXFW_LOG_IDMARKER			(0x70000000U)
gpu/gpu_rgx/m1.13ED5776728/services/include/rgx_fwif_sf.h:#define RGXFW_LOG_CREATESFID(a,b,e) ((IMG_UINT32)(a) | ((IMG_UINT32)(b)<<12U) | ((IMG_UINT32)(e)<<16U)) | RGXFW_LOG_IDMARKER
gpu/gpu_rgx/m1.13ED5776728/services/include/rgx_fwif_sf.h:#define RGXFW_LOG_IDMASK			(0xFFF00000)
gpu/gpu_rgx/m1.13ED5776728/services/include/rgx_fwif_sf.h:#define RGXFW_LOG_VALIDID(I)		(((I) & RGXFW_LOG_IDMASK) == RGXFW_LOG_IDMARKER)
gpu/gpu_rgx/m1.13ED5776728/services/include/rgx_fwif_sf.h:#define X(a, b, c, d, e) c = RGXFW_LOG_CREATESFID(a,b,e),
gpu/gpu_rgx/m1.13ED5776728/services/include/rgx_fwif_sf.h:	RGXFW_LOG_SFIDLIST
gpu/gpu_rgx/m1.13ED5776728/services/include/rgx_fwif_sf.h:} RGXFW_LOG_SFids;
gpu/gpu_rgx/m1.13ED5776728/services/include/htbuffer_sf.h:#define HTB_LOG_GROUPS_STRING_LIST   "ctrl,mmu,sync,main,brg"
gpu/gpu_rgx/m1.13ED5776728/services/include/htbuffer_sf.h:#define HTB_LOG_ENABLED_GROUPS_LIST_PFSPEC  "%s%s%s%s%s"
gpu/gpu_rgx/m1.13ED5776728/services/include/htbuffer_sf.h:#define HTB_LOG_SFGROUPLIST                               \
gpu/gpu_rgx/m1.13ED5776728/services/include/htbuffer_sf.h:#define HTB_LOG_SFIDLIST \
gpu/gpu_rgx/m1.13ED5776728/services/include/htbuffer_sf.h:X( 1,  HTB_GROUP_CTRL,  HTB_SF_CTRL_LOGMODE,            "HTB log mode set to %d (1- all PID, 2 - restricted PID)\n", 1) \
gpu/gpu_rgx/m1.13ED5776728/services/include/htbuffer_sf.h:X( 4,  HTB_GROUP_CTRL,  HTB_SF_CTRL_LOG_LEVEL,          "HTB log level set to %d\n", 1) \
gpu/gpu_rgx/m1.13ED5776728/services/include/htbuffer_sf.h:typedef enum _HTB_LOG_SFGROUPS {
gpu/gpu_rgx/m1.13ED5776728/services/include/htbuffer_sf.h:	HTB_LOG_SFGROUPLIST
gpu/gpu_rgx/m1.13ED5776728/services/include/htbuffer_sf.h:} HTB_LOG_SFGROUPS;
gpu/gpu_rgx/m1.13ED5776728/services/include/htbuffer_sf.h:#define HTB_LOG_GROUP_FLAG_GROUP(gid)   ((gid-1) / HTB_FLAG_NUM_BITS_IN_EL)
gpu/gpu_rgx/m1.13ED5776728/services/include/htbuffer_sf.h:#define HTB_LOG_GROUP_FLAG(gid)         (gid ? (0x1 << ((gid-1)%HTB_FLAG_NUM_BITS_IN_EL)) : 0)
gpu/gpu_rgx/m1.13ED5776728/services/include/htbuffer_sf.h:#define HTB_LOG_GROUP_FLAG_NAME(gid)    HTB_LOG_TYPE_ ## gid
gpu/gpu_rgx/m1.13ED5776728/services/include/htbuffer_sf.h:typedef enum _HTB_LOG_TYPE {
gpu/gpu_rgx/m1.13ED5776728/services/include/htbuffer_sf.h:#define X(a, b) HTB_LOG_GROUP_FLAG_NAME(b) = HTB_LOG_GROUP_FLAG(a),
gpu/gpu_rgx/m1.13ED5776728/services/include/htbuffer_sf.h:	HTB_LOG_SFGROUPLIST
gpu/gpu_rgx/m1.13ED5776728/services/include/htbuffer_sf.h:} HTB_LOG_TYPE;
gpu/gpu_rgx/m1.13ED5776728/services/include/htbuffer_sf.h:#define HTB_LOG_IDMARKER            (0x70000000)
gpu/gpu_rgx/m1.13ED5776728/services/include/htbuffer_sf.h:#define HTB_LOG_CREATESFID(a,b,e)   (((a) | (b << 12) | (e << 16)) | HTB_LOG_IDMARKER)
gpu/gpu_rgx/m1.13ED5776728/services/include/htbuffer_sf.h:#define HTB_LOG_IDMASK              (0xFFF00000)
gpu/gpu_rgx/m1.13ED5776728/services/include/htbuffer_sf.h:#define HTB_LOG_VALIDID(I)          ( ((I) & HTB_LOG_IDMASK) == HTB_LOG_IDMARKER )
gpu/gpu_rgx/m1.13ED5776728/services/include/htbuffer_sf.h:typedef enum HTB_LOG_SFids {
gpu/gpu_rgx/m1.13ED5776728/services/include/htbuffer_sf.h:#define X(a, b, c, d, e) c = HTB_LOG_CREATESFID(a,b,e),
gpu/gpu_rgx/m1.13ED5776728/services/include/htbuffer_sf.h:	HTB_LOG_SFIDLIST
gpu/gpu_rgx/m1.13ED5776728/services/include/htbuffer_sf.h:} HTB_LOG_SFids;
gpu/gpu_rgx/m1.13ED5776728/services/include/htbuffer_sf.h:#define HTB_LOG_HEADER_SIZE         4
gpu/gpu_rgx/m1.13ED5776728/services/include/htbuffer_sf.h:#define HTB_LOG_MAX_PARAMS          15
gpu/gpu_rgx/m1.13ED5776728/services/server/common/tlintern.c:		PVR_LOG_IF_ERROR(eError, "OSEventObjectDestroy");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/tlintern.c:				PVR_LOG_IF_ERROR(eError, "OSEventObjectDestroy");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_mmu.c:	"PAGE_CATALOGUE",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_mmu.c:			PVR_LOG_GOTO_IF_ERROR(eErr, "PDumpSNPrintf", ErrOut);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_mmu.c:			PVR_LOG_GOTO_IF_ERROR(eErr, "PDumpWriteParameter", ErrOut);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_mmu.c:	PVR_LOG_GOTO_IF_ERROR(eErr, "_PdumpFreeMMUContext", ErrUnlock);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htbserver.c:#define HTB_LOG_RETRY_COUNT 5
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htbserver.c:	HTB_LOGMODE_CTRL eLogMode;      /*!< Logging mode control */
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htbserver.c:			PVR_DUMPDEBUG_LOG("------[ HTB Log state: On ]------");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htbserver.c:			PVR_DUMPDEBUG_LOG("HTB Log mode: %d", g_sCtrl.eLogMode);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htbserver.c:			PVR_DUMPDEBUG_LOG("HTB Log level: %d", g_sCtrl.ui32LogLevel);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htbserver.c:			PVR_DUMPDEBUG_LOG("HTB Buffer Opmode: %d", g_sCtrl.eOpMode);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htbserver.c:				PVR_DUMPDEBUG_LOG("HTB Log group %d: %x", i, g_auiHTBGroupEnable[i]);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htbserver.c:			PVR_DUMPDEBUG_LOG("------[ HTB Log state: Off ]------");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htbserver.c:	PVR_LOG_IF_ERROR(eError, "PVRSRVRegisterDbgRequestNotify");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htbserver.c:	g_sCtrl.eLogMode = HTB_LOGMODE_ALLPID;
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htbserver.c:	PVR_LOG_RETURN_IF_ERROR(eError, "OSSpinLockCreate");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htbserver.c:		PVR_LOG(("Increasing HTBufferSize to %uKB", g_ui32HTBufferSize));
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htbserver.c:	                    HTB_LOGMODE_UNDEF, HTB_OPMODE_UNDEF);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htbserver.c:	return HTBControlKM(0, NULL, 0, 0, HTB_LOGMODE_UNDEF, ui32Value);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htbserver.c:	const HTB_LOGMODE_CTRL eLogMode,
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htbserver.c:	IMG_UINT32 ui32RetryCount = HTB_LOG_RETRY_COUNT;
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htbserver.c:		PVR_LOG_RETURN_IF_ERROR(eError, "TLStreamCreate");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htbserver.c:		PVR_LOG_RETURN_IF_ERROR(eError, "TLStreamReconfigure");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htbserver.c:	/* HTB_LOGMODE_ALLPID overrides ui32EnablePID */
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htbserver.c:	if ( HTB_LOGMODE_ALLPID == eLogMode )
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htbserver.c:	if ( HTB_LOGMODE_UNDEF != eLogMode )
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htbserver.c:	PVR_LOG_IF_ERROR(eError, "HTBLog");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htbserver.c:	PVR_LOG_IF_ERROR(eError, "HTBLog");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htbserver.c:	eError = HTBLog((IMG_HANDLE) NULL, 0, ui64Time, HTB_SF_CTRL_LOG_LEVEL, g_sCtrl.ui32LogLevel);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htbserver.c:	PVR_LOG_IF_ERROR(eError, "HTBLog");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htbserver.c:	eError = HTBLog((IMG_HANDLE) NULL, 0, ui64Time, HTB_SF_CTRL_LOGMODE, g_sCtrl.eLogMode);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htbserver.c:	PVR_LOG_IF_ERROR(eError, "HTBLog");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htbserver.c:		PVR_LOG_IF_ERROR(eError, "HTBLog");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htbserver.c:		PVR_LOG_IF_ERROR(eError, "HTBLog");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htbserver.c:		HTB_LOG_SFids SF,
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htbserver.c:	IMG_UINT32 aui32MessageBuffer[HTB_LOG_HEADER_SIZE+HTB_LOG_MAX_PARAMS];
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htbserver.c:	 * packet size is 4*(HTB_LOG_HEADER_SIZE+HTB_LOG_MAX_PARAMS) = 72 bytes,
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htbserver.c:	IMG_UINT32 ui32RetryCount = HTB_LOG_RETRY_COUNT;
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htbserver.c:	IMG_UINT32 ui32MessageSize = 4 * (HTB_LOG_HEADER_SIZE+ui32NumArgs);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htbserver.c:	PVR_LOG_GOTO_IF_INVALID_PARAM(aui32Args != NULL, eError, ReturnError);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htbserver.c:	PVR_LOG_GOTO_IF_INVALID_PARAM(ui32NumArgs == HTB_SF_PARAMNUM(SF), eError, ReturnError);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htbserver.c:	PVR_LOG_GOTO_IF_INVALID_PARAM(ui32NumArgs <= HTB_LOG_MAX_PARAMS, eError, ReturnError);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htbserver.c:			&& ( 0 == PID || ~0 == PID || HTB_LOGMODE_ALLPID == g_sCtrl.eLogMode || _ValidPID(PID) )
gpu/gpu_rgx/m1.13ED5776728/services/server/common/vmm_pvz_server.c:	PVR_LOG_RETURN_IF_FALSE((ui32DevID == 0), "Invalid Device ID", PVRSRV_ERROR_INVALID_PARAMS);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/vmm_pvz_server.c:		PVR_LOG_GOTO_IF_ERROR(eError, "RGXFwRawHeapAllocMap", e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/vmm_pvz_server.c:		PVR_LOG_GOTO_IF_ERROR(eError, "MMUCacheInvalidateKick", e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/vmm_pvz_server.c:	PVR_LOG_RETURN_IF_FALSE((ui32DevID == 0), "Invalid Device ID", PVRSRV_ERROR_INVALID_PARAMS);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/vmm_pvz_server.c:		PVR_LOG_GOTO_IF_ERROR(eError, "RGXFWSetFwOsState", e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/vmm_pvz_client.c:	PVR_LOG_RETURN_IF_ERROR(eError, "PhysHeapRegionGetDevPAddr");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/vmm_pvz_client.c:	PVR_LOG_RETURN_IF_FALSE((sDevPAddr.uiAddr != 0), "PhysHeapRegionGetDevPAddr", PVRSRV_ERROR_INVALID_PARAMS);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/vmm_pvz_client.c:	PVR_LOG_RETURN_IF_ERROR(eError, "PhysHeapRegionGetSize");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/vmm_pvz_client.c:	PVR_LOG_RETURN_IF_FALSE((ui64Size != 0), "PhysHeapRegionGetSize", PVRSRV_ERROR_INVALID_PARAMS);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/devicemem_history_server.c:	PVR_LOG_GOTO_IF_ERROR(eError, "OSLockCreate", err_lock);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/devicemem_history_server.c:	PVR_LOG_GOTO_IF_ERROR(eError, "CreateRecords", err_allocations);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/devicemem_history_server.c:	PVR_LOG_GOTO_IF_ERROR(eError, "DICreateEntry", err_di_creation);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/connection_server.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(psConnection, "psConnection");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/connection_server.c:			PVR_LOG_RETURN_IF_ERROR(eError, "PVRSRVFreeKernelHandles");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/connection_server.c:			PVR_LOG_RETURN_IF_ERROR(eError, "PVRSRVFreeHandleBase:1");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/connection_server.c:		PVR_LOG_RETURN_IF_ERROR(eError, "PVRSRVFreeHandleBase:2");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/connection_server.c:		PVR_LOG_RETURN_IF_ERROR(eError, "OSConnectionPrivateDataDeInit");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/connection_server.c:	PVR_LOG_RETURN_IF_NOMEM(psConnection, "psConnection");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/connection_server.c:	PVR_LOG_GOTO_IF_ERROR(eError, "PVRSRVStatsRegisterProcess", failure);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/connection_server.c:	PVR_LOG_GOTO_IF_ERROR(eError, "OSConnectionPrivateDataInit", failure);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/connection_server.c:	PVR_LOG(("%s connected", psConnection->pszProcName));
gpu/gpu_rgx/m1.13ED5776728/services/server/common/connection_server.c:	PVR_LOG_GOTO_IF_ERROR(eError, "SyncRegisterConnection", failure);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/connection_server.c:	PVR_LOG_GOTO_IF_ERROR(eError, "PDumpRegisterConnection", failure);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/connection_server.c:	PVR_LOG_GOTO_IF_ERROR(eError, "PVRSRVAllocHandleBase", failure);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/connection_server.c:		PVR_LOG_GOTO_IF_NOMEM(psProcessHandleBase, eError, failureLock);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/connection_server.c:	PVR_LOG_IF_ERROR(eErrorKernel, "PVRSRVPurgeHandles");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/connection_server.c:	PVR_LOG(("%s disconnected", psConnectionData->pszProcName));
gpu/gpu_rgx/m1.13ED5776728/services/server/common/connection_server.c:			PVR_DUMPDEBUG_LOG(CONNECTIONS_PREFIX " No active connections");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/connection_server.c:					PVR_DUMPDEBUG_LOG("%s", sActiveConnections);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/connection_server.c:				PVR_DUMPDEBUG_LOG("%s", sActiveConnections);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/connection_server.c:		PVR_DUMPDEBUG_LOG(CONNECTIONS_PREFIX " No active connections");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_GOTO_IF_NOMEM(*ppsRegionRA, eError, e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:		PVR_LOG_ERROR(eError, "RA_Add");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_DUMPDEBUG_LOG("    Number of deferred cleanup items : %u",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:		PVR_LOG_IF_ERROR(eError, "OSEventObjectSignal");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_GOTO_IF_ERROR(eError, "OSEventObjectCreate", Exit);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_GOTO_IF_ERROR(eError, "OSLockCreate", Exit);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_IF_ERROR(eRc, "OSEventObjectClose");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_IF_ERROR(eRc, "OSEventObjectClose");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:				  RGXKM_DEVICE_STATE_DISABLE_DW_LOGGING_EN))
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_RETURN_VOID_IF_ERROR(eError, "OSEventObjectOpen");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_IF_ERROR(eError, "OSEventObjectClose");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_RETURN_VOID_IF_ERROR(eError, "OSEventObjectOpen");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_IF_ERROR(eError, "OSEventObjectClose");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_RETURN_IF_NOMEM(psDeviceNode, "OSAllocZMem");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_RETURN_IF_NOMEM(psDeviceNode->papsRegisteredPhysHeaps, "OSAllocZMem");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_RETURN_IF_ERROR(eError, "PhysHeapRegister");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_RETURN_IF_ERROR(eError, "PhysHeapAcquire");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:		PVR_LOG_GOTO_IF_ERROR(eError, "DevicememHistoryInitKM", Error);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_GOTO_IF_ERROR(eError, "_CleanupThreadPrepare", Error);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_GOTO_IF_ERROR(eError, "OSThreadCreatePriority:1", Error);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_GOTO_IF_ERROR(eError, "OSEventObjectCreate", Error);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_GOTO_IF_ERROR(eError, "OSThreadCreatePriority:2", Error);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:		PVR_LOG_GOTO_WITH_ERROR("psProcessHandleBase_Table", eError, PVRSRV_ERROR_UNABLE_TO_CREATE_HASH_TABLE, Error);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_GOTO_IF_ERROR(eError, "OSLockCreate:1", Error);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_GOTO_IF_ERROR(eError, "OSLockCreate:2", Error);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_GOTO_IF_ERROR(eError, "InfoPageCreate", Error);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_GOTO_IF_ERROR(eError, "CacheOpInit2", Error);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:			PVR_LOG_IF_ERROR(eError, "OSEventObjectSignal");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:		PVR_LOG_IF_ERROR(eError, "OSThreadDestroy");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:		PVR_LOG_IF_ERROR(eError, "OSEventObjectDestroy");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:			PVR_LOG_IF_ERROR(eError, "OSEventObjectSignal");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:		PVR_LOG_IF_ERROR(eError, "OSThreadDestroy");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:		PVR_LOG_IF_ERROR(eError, "OSEventObjectDestroy");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_IF_ERROR(eError, "HTBDeInit");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_IF_ERROR(eError, "PVRSRVHandleDeInit");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_IF_ERROR(eError, "DCDeInit");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_IF_ERROR(eError, "PMRDeInit");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_IF_ERROR(eError, "ServerBridgeDeinit");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_IF_ERROR(eError, "PhysHeapDeinit");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_GOTO_IF_ERROR(eError, "PhysHeapRegionGetDevPAddr", error);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_GOTO_IF_ERROR(eError, "PhysHeapRegionGetSize", error);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_DUMPDEBUG_LOG("------[ System Summary ]------");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:			PVR_DUMPDEBUG_LOG("Device System Power State: OFF");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:			PVR_DUMPDEBUG_LOG("Device System Power State: ON");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:			PVR_DUMPDEBUG_LOG("Device System Power State: UNKNOWN (%d)",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_DUMPDEBUG_LOG("MaxHWTOut: %dus, WtTryCt: %d, WDGTOut(on,off): (%dms,%dms)",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:		PVR_DUMPDEBUG_LOG("------[ Server Thread Summary ]------");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_GOTO_IF_ERROR(eError, "PhysHeapAcquire:GPU", ErrorDeinit);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_GOTO_IF_ERROR(eError, "PhysHeapAcquire:CPU", ErrorDeinit);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_GOTO_IF_ERROR(eError, "PhysHeapAcquire:FW", ErrorDeinit);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_GOTO_IF_ERROR(eError, "PhysHeapAcquire:EXTERNAL", ErrorDeinit);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:			PVR_LOG_GOTO_WITH_ERROR("ui32RegionCount", eError, PVRSRV_ERROR_DEVICEMEM_INVALID_LMA_HEAP, ErrorDeinit);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:		PVR_LOG_GOTO_IF_NOMEM(psDeviceNode->apsLocalDevMemArenas, eError, ErrorDeinit);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:			PVR_LOG_GOTO_WITH_ERROR("apszRANames", eError, PVRSRV_ERROR_OUT_OF_MEMORY, ErrorDeinit);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:			PVR_LOG_GOTO_IF_ERROR(eError, "PhysHeapRegionGetSize", ErrorDeinit);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:			PVR_LOG_GOTO_IF_ERROR(eError, "PhysHeapRegionGetCpuPAddr", ErrorDeinit);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:			PVR_LOG_GOTO_IF_ERROR(eError, "PhysHeapRegionGetDevPAddr", ErrorDeinit);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:			PVR_LOG_GOTO_IF_NOMEM(psDeviceNode->apszRANames[ui32RegionId], eError, ErrorDeinit);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:			PVR_LOG_GOTO_IF_ERROR(eError, "CreateRegionRA(GPU)", ErrorDeinit);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:		PVR_LOG_GOTO_IF_ERROR(eError, "CreateLMASubArenas", ErrorDeinit);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_RETURN_IF_NOMEM(psDeviceNode, "psDeviceNode");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_GOTO_IF_ERROR(eError, "PVRSRVStatsRegisterProcess", ErrorFreeDeviceNode);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_GOTO_IF_ERROR(eError, "SysDevInit", ErrorDeregisterStats);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:			PVR_LOG_GOTO_IF_ERROR(eError, "PhysMemTest", ErrorSysDevDeInit);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_GOTO_IF_ERROR(eError, "SyncCheckpointInit", ErrorSyncCheckpointInit);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_GOTO_IF_ERROR(eError, "PhysmemInitFWDedicatedMem", ErrorOnFWMemInit);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_GOTO_IF_ERROR(eError, "PVRSRVRegisterDbgRequestNotify", ErrorRegDbgReqNotify);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_GOTO_IF_ERROR(eError, "PVRSRVRegisterDbgRequestNotify(threads)", ErrorRegThreadsDbgReqNotify);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_GOTO_IF_ERROR(eError, "HTBDeviceCreate", ErrorHTBDeviceCreate);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_GOTO_IF_ERROR(eError, "InitDVFS", ErrorDecrementDeviceCount);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:		PVR_LOG(("%s: Using alternate Register bank GPU address: 0x%08lx (orig: 0x%08lx)", __func__,
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_RETURN_IF_ERROR(eError, "OSLockCreate");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_RETURN_IF_ERROR(eError, "PVRSRVStatsRegisterProcess");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXInit", Exit);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_IF_ERROR(eError, "PVRSRVDeviceFinalise");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	                                  (void*)((uintptr_t)RGXKM_DEVICE_STATE_DISABLE_DW_LOGGING_EN));
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:			PVR_LOG_RETURN_IF_ERROR(eError, "PVRSRVPollForValueKM");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_RETURN_IF_ERROR(eError, "PVRSRVPowerLock");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:		PVR_LOG_IF_ERROR(eError, "ConnectionLock destruction failed");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:		PVR_LOG(("%s: Unexpected OSid value %u - expecting %u", __func__,
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_IF_ERROR(eError, "_LMA_DoPhyContigPagesAlloc");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_IF_ERROR(eError, "_LMA_DoPhyContigPagesAlloc");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:		PVR_LOG_GOTO_IF_ERROR(eError, "SyncCheckpointContextCreate", ErrorExit);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:		PVR_LOG_GOTO_IF_ERROR(eError, "SyncPrimAlloc", ErrorExit);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:		PVR_LOG_GOTO_IF_ERROR(eError, "PVRSRVPowerLock", ErrorExit);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:			PVR_LOG_GOTO_IF_ERROR(eError, "RGXInitHWPerfCounters", ErrorExit);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:			PVR_LOG_GOTO_IF_ERROR(eError, "RGXPdumpDrainKCCB", ErrorExit);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	if (BITMASK_HAS(ePollFlags, POLL_FLAG_LOG_ERROR))
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:	PVR_LOG_GOTO_IF_ERROR(eError, "OSEventObjectOpen", EventObjectOpenError);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:		PVR_LOG_IF_ERROR(eError, "OSEventObjectSignal");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:			PVR_LOG_IF_ERROR(eError, "OSEventObjectSignal");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:		PVR_LOG_IF_ERROR(eError, "OSThreadDestroy");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv.c:			PVR_LOG_IF_ERROR(eError, "OSEventObjectDestroy");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/vz_vmm_pvz.c:	PVR_LOG(("Using static PVZ bootstrap setup"));
gpu/gpu_rgx/m1.13ED5776728/services/server/common/vz_vmm_pvz.c:	PVR_LOG(("Using dynamic PVZ bootstrap setup"));
gpu/gpu_rgx/m1.13ED5776728/services/server/common/vz_vmm_pvz.c:	PVR_LOG_RETURN_IF_ERROR(eError, "PvzConnectionValidate");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/power.c:	PVR_LOG_RETURN_IF_ERROR(eError, "OSLockCreate");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/power.c:				PVR_LOG_IF_ERROR(eError, "OSEventObjectSignal");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/power.c:			PVR_LOG_IF_ERROR(eError, "OSEventObjectSignal");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/power.c:	PVR_LOG_RETURN_IF_NOMEM(psPowerDevice, "psPowerDevice");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/power.c:	PVR_LOG_RETURN_IF_ERROR(eError, "PVRSRVPowerLock");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/power.c:			PVR_LOG_IF_ERROR(eError, "PVRSRVDeviceIdleCancelRequestKM");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/power.c:		PVR_LOG_RETURN_IF_ERROR(eError, "PVRSRVPowerLock");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/power.c:			PVR_LOG_GOTO_IF_ERROR(eError, "PVRSRVDeviceIdleCancelRequestKM", ErrorUnlockAndExit);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/ri_server.c:#define _RIOutput(x) PVR_LOG(x)
gpu/gpu_rgx/m1.13ED5776728/services/server/common/ri_server.c:	PVR_LOG_IF_FALSE((iCharsWritten>0 && iCharsWritten<(IMG_INT32)RI_SYS_ALLOC_IMPORT_FRMT_SIZE), \
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvr_notifier.c:	PVR_DUMPDEBUG_LOG("%s info: %d.%d @ %8d (%s) build options: 0x%08x",				\
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvr_notifier.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(phNotify, "phNotify");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvr_notifier.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(pfnCmdCompleteNotify, "pfnCmdCompleteNotify");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvr_notifier.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(hCmdCompHandle, "hCmdCompHandle");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvr_notifier.c:	PVR_LOG_RETURN_IF_NOMEM(psNotify, "psNotify");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvr_notifier.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(psNotify, "hNotify");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvr_notifier.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(phNotify, "phNotify");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvr_notifier.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(psDevNode, "psDevNode");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvr_notifier.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(pfnDbgRequestNotify, "pfnDbRequestNotify");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvr_notifier.c:	PVR_LOG_RETURN_IF_NOMEM(psNotify, "psNotify");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvr_notifier.c:	PVR_LOG_GOTO_IF_INVALID_PARAM(psHead, eError, ErrorReleaseLock);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvr_notifier.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(psNotify, "psNotify");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvr_notifier.c:	PVR_DUMPDEBUG_LOG("------------[ PVR DBG: START (%s) ]------------",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvr_notifier.c:	PVR_DUMPDEBUG_LOG("DDK info: %s (%s) %s",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvr_notifier.c:	PVR_DUMPDEBUG_LOG("Time now: %" IMG_UINT64_FMTSPEC "us",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvr_notifier.c:		MTKPP_LOGTIME(g_use_id, "Dump Debug Data");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvr_notifier.c:			PVR_DUMPDEBUG_LOG("Services State: OK");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvr_notifier.c:			PVR_DUMPDEBUG_LOG("Services State: BAD");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvr_notifier.c:			PVR_DUMPDEBUG_LOG("Services State: UNDEFINED");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvr_notifier.c:			PVR_DUMPDEBUG_LOG("Services State: UNKNOWN (%d)",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvr_notifier.c:	PVR_DUMPDEBUG_LOG("------[ Driver Info ]------");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvr_notifier.c:	PVR_DUMPDEBUG_LOG("Comparison of UM/KM components: %s",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvr_notifier.c:	PVR_DUMPDEBUG_LOG("KM Arch: %s",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvr_notifier.c:		PVR_DUMPDEBUG_LOG("Driver Mode: %s",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvr_notifier.c:			PVR_DUMPDEBUG_LOG("UM Connected Clients Arch: %s and %s", Bit64, Bit32);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvr_notifier.c:			PVR_DUMPDEBUG_LOG("UM Connected Clients: %s",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvr_notifier.c:	PVR_DUMPDEBUG_LOG("Window system: %s", (IS_DECLARED(WINDOW_SYSTEM)) ? (WINDOW_SYSTEM) : "Not declared");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvr_notifier.c:	PVR_DUMPDEBUG_LOG("------------[ PVR DBG: END ]------------");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:	CACHEOP_CONFIG_KLOG    = 16,
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:		- Index = Value modulo CACHEOP_INDICES_LOG2_SIZE.
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:  + CACHEOP_INDICES_LOG2_SIZE
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:#define CACHEOP_INDICES_LOG2_SIZE	(4)
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:#define CACHEOP_INDICES_MAX			(1 << CACHEOP_INDICES_LOG2_SIZE)
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:	PVR_DUMPDEBUG_LOG("    Configuration: QSZ: %d, UKT: %d, KDFT: %d, "
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:	PVR_DUMPDEBUG_LOG("    Pending deferred CacheOp entries : %u",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:	else if (psCacheOpWorkItem->bKMReq && !CacheOpConfigSupports(CACHEOP_CONFIG_KLOG))
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:			PVR_LOG_IF_ERROR(eError, "PMRUnlockSysPhysAddresses");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:		PVR_LOG_IF_ERROR(eError, "PMRUnlockSysPhysAddresses");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:	if (ui32Config & CACHEOP_CONFIG_KLOG)
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:		gsCwq.eConfig |= CACHEOP_CONFIG_KLOG;
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:		gsCwq.eConfig &= ~CACHEOP_CONFIG_KLOG;
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:	if (gsCwq.eConfig & CACHEOP_CONFIG_KLOG)
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:		ui32Config |= CACHEOP_CONFIG_KLOG;
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:	PVR_LOG_IF_ERROR(eError, "PMRUnlockSysPhysAddresses");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:	PVR_LOG_IF_ERROR(eError, "SyncSWGetTimelineObj");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:		PVR_LOG_RETURN_IF_ERROR(eError, "uiLPhysicalSize");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:		PVR_LOG_RETURN_IF_FALSE(((uiOffset+uiSize) <= uiLPhysicalSize), CACHEOP_DEVMEM_OOR_ERROR_STRING, PVRSRV_ERROR_DEVICEMEM_OUT_OF_RANGE);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:		PVR_LOG_RETURN_IF_ERROR(eError, "PMRLockSysPhysAddresses");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:				PVR_LOG_IF_ERROR(eError, "PMRUnlockSysPhysAddresses");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:				PVR_LOG_GOTO_IF_ERROR(eError, "PMRAcquireSparseKernelMappingData", e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:				PVR_LOG_GOTO_IF_ERROR(eError, "PMRAcquireKernelMappingData", e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:				PVR_LOG_GOTO_WITH_ERROR("PMRReleaseKernelMappingData", eError, PVRSRV_ERROR_INVALID_CPU_ADDR, e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:				PVR_LOG_IF_ERROR(eError, "PMRReleaseKernelMappingData");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:				PVR_LOG_IF_ERROR(eError, "PMRReleaseKernelMappingData");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:				PVR_LOG_GOTO_IF_ERROR(eError, "PMR_CpuPhysAddr", e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:				PVR_LOG_GOTO_IF_ERROR(eError, "PMR_IsOffsetValid", e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:				PVR_LOG_GOTO_IF_ERROR(eError, "PMRAcquireSparseKernelMappingData", e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:				PVR_LOG_GOTO_IF_ERROR(eError, "PMRAcquireKernelMappingData", e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:				PVR_LOG_IF_ERROR(eError, "PMRReleaseKernelMappingData");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:		PVR_LOG_IF_ERROR(eError, "PMRUnlockSysPhysAddresses");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:			PVR_LOG(("Deferred CacheOpPMRExec failed:"
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:		PVR_LOG_IF_ERROR(eError, "CacheOpTimelineExec");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:	PVR_LOG_IF_ERROR(eError, "CacheOpQListExecRangeBased");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:	PVR_LOG_IF_ERROR(eError, "OSEventObjectSignal");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:	PVR_LOG_IF_ERROR(eError, "OSEventObjectOpen");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:			PVR_LOG_IF_ERROR(eError, "CacheOpQListExec");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:	PVR_LOG_IF_ERROR(eError, "CacheOpQListExec");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:	PVR_LOG_IF_ERROR(eError, "OSEventObjectClose");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:	PVR_LOG_RETURN_IF_ERROR(eError, "CacheOpTimelineBind");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:		PVR_LOG_GOTO_IF_ERROR(eError, "PMRLockSysPhysAddresses", e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:		PVR_LOG_IF_ERROR(eError, "OSEventObjectSignal");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:			PVR_LOG_IF_ERROR(eError, "CacheOpFence");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:			PVR_LOG_IF_ERROR(eError, "CacheOpTimelineExec");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:			PVR_LOG_GOTO_IF_ERROR(eError, "CacheOpExecPMR", e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:		PVR_LOG_GOTO_IF_ERROR(eError, "PMR_LogicalSize", e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:		PVR_LOG_GOTO_IF_FALSE(((puiOffset[ui32Idx]+puiSize[ui32Idx]) <= uiLogicalSize), CACHEOP_DEVMEM_OOR_ERROR_STRING, e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:		PVR_LOG_GOTO_IF_ERROR(eError, "PMRLockSysPhysAddresses", e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:			PVR_LOG_GOTO_IF_ERROR(eError, "PMRUnlockSysPhysAddresses", e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:		PVR_LOG_GOTO_IF_ERROR(eError, "CacheOpTimelineBind", e1);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:	PVR_LOG_IF_ERROR(eError, "OSEventObjectSignal");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:	if (CacheOpConfigSupports(CACHEOP_CONFIG_KLOG))
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:	PVR_LOG_GOTO_IF_ERROR(eError, "CacheOpPMRExec", e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:		PVR_LOG(("CacheOp framework not initialised, failing request"));
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:	PVR_LOG_GOTO_IF_ERROR(eError2, "OSEventObjectOpen", e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:			PVR_LOG(("CacheOpFence() event: "CACHEOP_ABORT_FENCE_ERROR_STRING));
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:	PVR_LOG_IF_ERROR(eError2, "OSEventObjectOpen");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:	PVR_LOG_GOTO_IF_ERROR(eError, "OSEventObjectCreate", e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:	PVR_LOG_GOTO_IF_ERROR(eError, "OSEventObjectCreate", e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:	PVR_LOG_GOTO_IF_ERROR(eError, "OSLockCreate", e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:	PVR_LOG_GOTO_IF_ERROR(eError, "OSLockCreate", e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:	PVR_LOG_GOTO_IF_ERROR(eError, "OSThreadCreatePriority", e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:		PVR_LOG_GOTO_IF_FALSE(gsCwq.psConfigTune, "DICreateEntry", e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:		PVR_LOG_IF_ERROR(eError, "OSEventObjectSignal");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:		PVR_LOG_IF_ERROR(eError, "OSEventObjectSignal");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:		PVR_LOG_IF_ERROR(eError, "OSThreadDestroy");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:		PVR_LOG_IF_ERROR(eError, "OSEventObjectDestroy");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:		PVR_LOG_IF_ERROR(eError, "OSEventObjectDestroy");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:		PVR_LOG_IF_ERROR(eError, "OSLockDestroy");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:		PVR_LOG_IF_ERROR(eError, "OSLockDestroy");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:	PVR_LOG_RETURN_IF_FALSE((gsCwq.uiLineSize && gsCwq.uiPageSize && gsCwq.uiPageShift), "", PVRSRV_ERROR_INIT_FAILURE);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:	PVR_LOG_GOTO_IF_ERROR(eError, "OSLockCreate", e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/cache_km.c:		PVR_LOG_GOTO_IF_ERROR(eError, "DICreateEntry", e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pmr.c:	PMR_LOG2ALIGN_T uiLog2ContiguityGuarantee;
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pmr.c:           PMR_LOG2ALIGN_T uiLog2ContiguityGuarantee,
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pmr.c:             PMR_LOG2ALIGN_T uiLog2ContiguityGuarantee,
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pmr.c:             PMR_LOG2ALIGN_T *puiLog2Contig,
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pmr.c:             PMR_LOG2ALIGN_T uiLog2Contig,
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pmr.c:             PMR_LOG2ALIGN_T *puiLog2Contig,
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pmr.c:             PMR_LOG2ALIGN_T uiLog2Contig,
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pmr.c:		PVR_LOG_GOTO_WITH_ERROR("psPMR->psFuncTab", eError, PVRSRV_ERROR_INVALID_PARAMS, e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pmr.c:		PVR_LOG_GOTO_WITH_ERROR("psPMR->psFuncTab", eError, PVRSRV_ERROR_PMR_NOT_PERMITTED, e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pmr.c:		PVR_LOG_RETURN_IF_NOMEM(pcBuffer, "OSAllocMem");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pmr.c:		IMG_DEVMEM_LOG2ALIGN_T uiLog2PageSize,
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pmr.c:		PVR_LOG_GOTO_WITH_ERROR("psPageListPMR", eError, PVRSRV_ERROR_INVALID_PARAMS, return_error);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pmr.c:		PVR_LOG_GOTO_WITH_ERROR("psReferencePMR", eError, PVRSRV_ERROR_INVALID_PARAMS, return_error);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pmr.c:	PVR_LOG_GOTO_IF_NOMEM(psPageList, eError, return_error);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pmr.c:		PVR_LOG_GOTO_IF_NOMEM(pasDevAddrPtr, eError, unlock_phys_addrs);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pmr.c:			PVR_LOG_GOTO_WITH_ERROR("pbPageIsValid", eError, PVRSRV_ERROR_OUT_OF_MEMORY, free_devaddr_array);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pmr.c:	PVR_LOG_GOTO_IF_ERROR(eError, "PMR_DevPhysAddr", free_valid_array);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pmr.c:              IMG_DEVMEM_LOG2ALIGN_T uiLog2PageSize)
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pmr.c:		PVR_LOG_GOTO_WITH_ERROR("psPMR", eError, PVRSRV_ERROR_INVALID_PARAMS, Sparse_Error);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pmr.c:		PVR_LOG_GOTO_IF_ERROR(eError, "PMRAcquireKernelMappingData", AcquireKernelMapping_Error);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pmr.c:                IMG_DEVMEM_LOG2ALIGN_T uiLog2PageSize)
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pmr.c:		PVR_LOG_GOTO_WITH_ERROR("psPMR", eError, PVRSRV_ERROR_INVALID_PARAMS, Sparse_Error);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pmr.c:	PVR_LOG(("    PMR %p, Number of pages %u, Log2PageSize %d", psPMR, uiNumPages, uiLog2PageSize));
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pmr.c:			PVR_LOG(("      Phys Page: %s", pszBuffer));
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pmr.c:		PVR_LOG(("      Phys Page: %s", pszBuffer));
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pmr.c:	PVR_LOG_GOTO_IF_ERROR(eError, "OSLockCreate", out);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pmr.c:	PVR_LOG_GOTO_IF_ERROR(eError, "MMapStatsInit", out);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:		PVR_LOG_ERROR(PVRSRV_ERROR_INVALID_CONTEXT,
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:		PVR_LOG_ERROR(PVRSRV_ERROR_INVALID_CONTEXT,
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:	PVR_LOG_GOTO_IF_NOMEM(psSyncBlk, eError, fail_alloc);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:	PVR_LOG_GOTO_IF_INVALID_PARAM(psDevNode, eError, fail_alloc_ufo_block);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:	PVR_LOG_GOTO_IF_ERROR(eError, "pfnAllocUFOBlock", fail_alloc_ufo_block);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:	PVR_LOG_GOTO_IF_ERROR(eError, "DevmemAcquireCpuVirtAddr", fail_devmem_acquire);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:	PVR_LOG_RETURN_IF_INVALID_PARAM((hArena != NULL), "hArena");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:	PVR_LOG_RETURN_IF_INVALID_PARAM((uSize == sizeof(SYNC_CHECKPOINT_FW_OBJ)), "uSize");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:	PVR_LOG_IF_FALSE((uiSpanSize == psSyncBlock->ui32SyncBlockSize),
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:	PVR_LOG_RETURN_VOID_IF_FALSE((psContext != NULL), "hArena invalid");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:	PVR_LOG_RETURN_VOID_IF_FALSE((psSyncBlock != NULL), "hImport invalid");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:	PVR_LOG_RETURN_VOID_IF_FALSE((uiBase == psSyncBlock->uiSpanBase), "uiBase invalid");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:		PVR_LOG_ERROR(eError, "g_pfnFenceResolve is NULL");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:	PVR_LOG_RETURN_IF_ERROR(eError, "g_psSyncCheckpointPfnStruct->pfnFenceResolve");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:		PVR_LOG_ERROR(eError, "g_psSyncCheckpointPfnStruct->pfnFenceCreate is NULL");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:		PVR_LOG_ERROR(eError, "g_psSyncCheckpointPfnStruct->pfnFenceDataRollback is NULL");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:		PVR_LOG_IF_ERROR(eError,
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:		PVR_LOG_IF_ERROR(eError, "g_psSyncCheckpointPfnStruct->pfnFenceFinalise returned error");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:		PVR_LOG_ERROR(eError, "g_psSyncCheckpointPfnStruct->pfnNoHWUpdateTimelines is NULL");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:	PVR_LOG_RETURN_IF_FALSE((pui32NumSyncOwnedUFOs != NULL), "pui32NumSyncOwnedUFOs invalid", PVRSRV_ERROR_INVALID_PARAMS);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:		PVR_LOG_ERROR(eError, "g_psSyncCheckpointPfnStruct->pfnDumpInfoOnStalledUFOs is NULL");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:		PVR_LOG(("%d sync checkpoint%s owned by %s in stalled context",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:	PVR_LOG_RETURN_IF_FALSE((ppsSyncCheckpointContext != NULL),
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:	PVR_LOG_GOTO_IF_NOMEM(psContext, eError, fail_alloc); /* Sets OOM error code */
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:	PVR_LOG_GOTO_IF_NOMEM(psContextCtl, eError, fail_alloc2); /* Sets OOM error code */
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:	PVR_LOG_GOTO_IF_ERROR(eError, "OSLockCreate:1", fail_create_context_lock);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:	PVR_LOG_GOTO_IF_ERROR(eError, "OSSpinLockCreate:1", fail_create_deferred_cleanup_lock);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:	PVR_LOG_GOTO_IF_ERROR(eError, "OSSpinLockCreate:2", fail_create_pool_lock);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:	PVR_LOG_GOTO_IF_NOMEM(psContext->psSubAllocRA, eError, fail_suballoc);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:	PVR_LOG_GOTO_IF_NOMEM(psContext->psSpanRA, eError, fail_span);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:		PVR_LOG_ERROR(eError, "SyncCheckpointContextCreate call to RA_Add(span) failed");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:	PVR_LOG_RETURN_IF_FALSE((psSyncCheckpointContext != NULL),
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:	PVR_LOG_RETURN_IF_FALSE((psSyncContext != NULL), "psSyncContext invalid", PVRSRV_ERROR_INVALID_PARAMS);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:	PVR_LOG_RETURN_IF_FALSE((ppsSyncCheckpoint != NULL), "ppsSyncCheckpoint invalid", PVRSRV_ERROR_INVALID_PARAMS);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:		PVR_LOG_GOTO_IF_NOMEM(psNewSyncCheckpoint, eError, fail_alloc); /* Sets OOM error code */
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:		PVR_LOG_GOTO_IF_ERROR(eError, "RA_Alloc", fail_raalloc);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:				PVR_LOG_IF_ERROR(eError, "_SyncCheckpointRecordRemove");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:	PVR_LOG_RETURN_VOID_IF_FALSE((psSyncCheckpoint != NULL), "psSyncCheckpoint invalid");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:	PVR_LOG_IF_FALSE((psSyncCheckpoint != NULL), "psSyncCheckpoint invalid");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:		PVR_LOG_IF_FALSE((psSyncCheckpointInt->psSyncCheckpointFwObj->ui32State == PVRSRV_SYNC_CHECKPOINT_ACTIVE),
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:	PVR_LOG_IF_FALSE((psSyncCheckpoint != NULL), "psSyncCheckpoint invalid");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:		PVR_LOG_IF_FALSE((psSyncCheckpointInt->psSyncCheckpointFwObj->ui32State == PVRSRV_SYNC_CHECKPOINT_ACTIVE),
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:	PVR_LOG_IF_FALSE((psSyncCheckpoint != NULL), "psSyncCheckpoint invalid");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:		PVR_LOG_IF_FALSE((psSyncCheckpointInt->psSyncCheckpointFwObj->ui32State == PVRSRV_SYNC_CHECKPOINT_ACTIVE),
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:	PVR_LOG_IF_FALSE((psSyncCheckpoint != NULL), "psSyncCheckpoint invalid");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:	PVR_LOG_IF_FALSE((psSyncCheckpoint != NULL), "psSyncCheckpoint invalid");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:	PVR_LOG_RETURN_IF_FALSE((psSyncCheckpoint != NULL), "psSyncCheckpoint invalid", "Null");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(psSyncCheckpoint, "psSyncCheckpoint");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(psSyncCheckpoint, "psSyncCheckpoint");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:	PVR_LOG_RETURN_VOID_IF_FALSE(psSyncCheckpoint != NULL, "psSyncCheckpoint");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:	PVR_LOG_GOTO_IF_FALSE((psSyncCheckpoint != NULL), "psSyncCheckpoint invalid", invalid_chkpt);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:	PVR_LOG_GOTO_IF_FALSE((psSyncCheckpoint != NULL), "psSyncCheckpoint invalid", invalid_chkpt);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:	PVR_LOG_GOTO_IF_FALSE((psSyncCheckpoint != NULL), "psSyncCheckpoint invalid", invalid_chkpt);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:	PVR_LOG_GOTO_IF_FALSE((psSyncCheckpoint != NULL), "psSyncCheckpoint invalid", invalid_chkpt);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:	PVR_LOG_RETURN_IF_FALSE(psSyncCheckpoint != NULL, "psSyncCheckpoint invalid", 0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:	PVR_LOG_RETURN_IF_FALSE(psSyncCheckpoint != NULL, "psSyncCheckpoint invalid", 0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:	PVR_LOG_RETURN_IF_FALSE(psSyncCheckpoint != NULL, "psSyncCheckpoint invalid", 0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:	PVR_LOG(("%s called because UFO with ui32FWAddr=%#08x has set to %#04x",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:		PVR_LOG_IF_ERROR(eError, __func__);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:		PVR_DUMPDEBUG_LOG("\t- ID = %d, FWAddr = 0x%08x, r%d:e%d:f%d: %s",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:		PVR_DUMPDEBUG_LOG("------[ Active Sync Checkpoints ]------");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:	PVR_LOG_GOTO_IF_NOMEM(psSyncRec, eError, fail_alloc); /* Sets OOM error code */
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:		PVR_DUMPDEBUG_LOG("\t%05u %05" IMG_UINT64_FMTSPEC ".%09u %010u FWAddr=0x%08x (r%d:e%d:f%d) State=%s (%s)",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:		PVR_DUMPDEBUG_LOG("\t%05u %05" IMG_UINT64_FMTSPEC ".%09u %010u FWAddr=0x%08x State=<null_ptr> (%s)",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:		PVR_DUMPDEBUG_LOG("Dumping allocated sync checkpoints. Allocated: %u High watermark: %u (time ref %05" IMG_UINT64_FMTSPEC ".%09u)",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:			PVR_DUMPDEBUG_LOG("Warning: Record limit (%u) was reached. Some sync checkpoints may not have been recorded in the debug information.",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:		PVR_DUMPDEBUG_LOG("\t%-5s %-15s %-10s %-17s %-14s (%s)",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:		PVR_DUMPDEBUG_LOG("Dumping all recently freed sync checkpoints @ %05" IMG_UINT64_FMTSPEC ".%09u",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:		PVR_DUMPDEBUG_LOG("\t%-5s %-15s %-10s %-17s %-14s (%s)",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:	PVR_LOG_RETURN_IF_ERROR(eError, "g_pfnFenceGetCheckpoints");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:			PVR_LOG_IF_ERROR(eError, "DevmemPDumpDevmemPol32");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_checkpoint.c:				PVR_LOG_IF_ERROR(eError, "_SyncCheckpointRecordRemove");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/physmem.c:	PVR_LOG_RETURN_IF_ERROR(eError, "pfnDevPxAlloc:1");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/physmem.c:		PVR_LOG_RETURN_IF_ERROR(eError, "pfnDevPxAlloc:2");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/physmem.c:             PMR_LOG2ALIGN_T uiLog2Contig,
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:	PVR_LOG_RETURN_IF_ERROR(eError, "RA_Alloc");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:		PVR_LOG_GOTO_WITH_ERROR("_MMU_PhysMemAlloc", eError, PVRSRV_ERROR_OUT_OF_MEMORY, e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:		PVR_LOG_RETURN_IF_ERROR(eErr, "_SetupPTE");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:	HTBLOGK(HTB_SF_MMU_PAGE_OP_TABLE,
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:	        HTBLOG_PTR_BITS_HIGH(psLevel), HTBLOG_PTR_BITS_LOW(psLevel),
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:	        HTBLOG_U64_BITS_HIGH(ui64PxE64), HTBLOG_U64_BITS_LOW(ui64PxE64),
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:			HTBLOGK(HTB_SF_MMU_PAGE_OP_TABLE,
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:			        HTBLOG_PTR_BITS_HIGH(psLevel), HTBLOG_PTR_BITS_LOW(psLevel),
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:			        HTBLOG_U64_BITS_HIGH(ui64PxE64), HTBLOG_U64_BITS_LOW(ui64PxE64),
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:			HTBLOGK(HTB_SF_MMU_PAGE_OP_TABLE,
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:			        HTBLOG_PTR_BITS_HIGH(psLevel), HTBLOG_PTR_BITS_LOW(psLevel),
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:			        HTBLOG_U64_BITS_HIGH(pui64Px[uiIndex]), HTBLOG_U64_BITS_LOW(pui64Px[uiIndex]),
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:	HTBLOGK(HTB_SF_MMU_PAGE_OP_ALLOC,
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:	        HTBLOG_U64_BITS_HIGH(sDevVAddrStart.uiAddr), HTBLOG_U64_BITS_LOW(sDevVAddrStart.uiAddr),
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:	        HTBLOG_U64_BITS_HIGH(sDevVAddrEnd.uiAddr), HTBLOG_U64_BITS_LOW(sDevVAddrEnd.uiAddr));
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:	HTBLOGK(HTB_SF_MMU_PAGE_OP_FREE,
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:	        HTBLOG_U64_BITS_HIGH(sDevVAddrStart.uiAddr), HTBLOG_U64_BITS_LOW(sDevVAddrStart.uiAddr),
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:	        HTBLOG_U64_BITS_HIGH(sDevVAddrEnd.uiAddr), HTBLOG_U64_BITS_LOW(sDevVAddrEnd.uiAddr));
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:			PVR_LOG_GOTO_WITH_ERROR("psDevAttrs->eTopLevel", eError, PVRSRV_ERROR_INVALID_PARAMS, e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:	PVR_LOG_GOTO_IF_NOMEM(psMMUContext, eError, e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:	PVR_LOG_GOTO_IF_NOMEM(psPhysMemCtx, eError, e1);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:	PVR_LOG_GOTO_IF_NOMEM(psPhysMemCtx->pszPhysMemRAName, eError, e2);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:	PVR_LOG_GOTO_IF_NOMEM(psPhysMemCtx->psCleanupData, eError, e4);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:		PVR_LOG_GOTO_WITH_ERROR("_PxMemAlloc", eError, PVRSRV_ERROR_OUT_OF_MEMORY, e5);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:	PVR_LOG_GOTO_IF_ERROR(eError, "OSLockCreate", e6);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(psMMUContext, "psMMUContext");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(psDevVAddr, "psDevVAddr");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(puActualSize, "puActualSize");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:	PVR_LOG_RETURN_IF_ERROR(eError, "pfnGetPageSizeConfiguration");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:	PVR_LOG_RETURN_VOID_IF_FALSE(psMMUContext != NULL, "psMMUContext");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:	PVR_LOG_GOTO_IF_INVALID_PARAM(psMMUContext, eError, e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:	PVR_LOG_GOTO_IF_INVALID_PARAM(psPMR, eError, e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:		PVR_LOG_GOTO_IF_NOMEM(psDevPAddr, eError, e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:			PVR_LOG_GOTO_WITH_ERROR("pbValid", eError, PVRSRV_ERROR_OUT_OF_MEMORY, e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:		PVR_LOG_GOTO_WITH_ERROR("psConfig->uiBytesPerEntry", eError, PVRSRV_ERROR_INVALID_PARAMS, e2);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:			HTBLOGK(HTB_SF_MMU_PAGE_OP_MAP,
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:			        HTBLOG_U64_BITS_HIGH(sDevVAddr.uiAddr), HTBLOG_U64_BITS_LOW(sDevVAddr.uiAddr),
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:			        HTBLOG_U64_BITS_HIGH(sDevPAddr.uiAddr), HTBLOG_U64_BITS_LOW(sDevPAddr.uiAddr));
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:			PVR_LOG_GOTO_IF_ERROR(eError, "_SetupPTE", e3);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:		HTBLOGK(HTB_SF_MMU_PAGE_OP_UNMAP,
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:		        HTBLOG_U64_BITS_HIGH(sDevVAddr.uiAddr), HTBLOG_U64_BITS_LOW(sDevVAddr.uiAddr));
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:		PVR_LOG_GOTO_IF_NOMEM(psDevPAddr, eError, return_error);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:			PVR_LOG_GOTO_WITH_ERROR("pbValid", eError, PVRSRV_ERROR_OUT_OF_MEMORY, free_paddr_array);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:		PVR_LOG_GOTO_WITH_ERROR("psConfig->uiBytesPerEntry", eError, PVRSRV_ERROR_MMU_CONFIG_IS_WRONG, put_mmu_context);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:		HTBLOGK(HTB_SF_MMU_PAGE_OP_PMRMAP,
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:		        HTBLOG_U64_BITS_HIGH(sDevVAddr.uiAddr), HTBLOG_U64_BITS_LOW(sDevVAddr.uiAddr),
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:		        HTBLOG_U64_BITS_HIGH(psDevPAddr[i].uiAddr), HTBLOG_U64_BITS_LOW(psDevPAddr[i].uiAddr));
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:		HTBLOGK(HTB_SF_MMU_PAGE_OP_UNMAP,
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:		        HTBLOG_U64_BITS_HIGH(sDevVAddr.uiAddr), HTBLOG_U64_BITS_LOW(sDevVAddr.uiAddr));
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:		HTBLOGK(HTB_SF_MMU_PAGE_OP_TABLE,
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:		        HTBLOG_PTR_BITS_HIGH(psLevel), HTBLOG_PTR_BITS_LOW(psLevel),
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:		        HTBLOG_U64_BITS_HIGH(uiEntry), HTBLOG_U64_BITS_LOW(uiEntry),
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:			PVR_LOG_GOTO_IF_ERROR(eError, "PMR_IsOffsetValid", e_exit);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:					PVR_LOG_GOTO_WITH_ERROR("psConfig->uiBytesPerEntry", eError, PVRSRV_ERROR_MMU_CONFIG_IS_WRONG, e_exit);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:				PVR_LOG_GOTO_WITH_ERROR("psConfig->uiBytesPerEntry", eError, PVRSRV_ERROR_MMU_CONFIG_IS_WRONG, e_exit);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:		PVR_LOG(("Failed to get the page size info for log2 page sizeof 12"));
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:					PVR_LOG(("Invalid RGX_MMUCTRL_PC_DATA_ENTRY mask for 32-bit\
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:					PVR_LOG(("Invalid RGX_MMUCTRL_PD_DATA_ENTRY mask for 32-bit\
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:					PVR_LOG(("Failed to get the page size from the PDE"));
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:						PVR_LOG(("Failed to get the page size from the virtual address"));
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:					PVR_LOG(("Failed to get the page size from the PDE"));
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:					PVR_LOG(("Failed to get the page size info for log2 page sizeof %d", ui32Log2PageSize));
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:					PVR_LOG(("Invalid RGX_MMUCTRL_PT_DATA_ENTRY mask for 32-bit\
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:		PVR_LOG(("Unsupported MMU setup: %d", eMMULevel));
gpu/gpu_rgx/m1.13ED5776728/services/server/common/mmu_common.c:			PVR_LOG(("MMU_IsVDevAddrValid: Unsupported MMU setup"));
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_server.c:			PVR_DUMPDEBUG_LOG("\t%s %05u %05" IMG_UINT64_FMTSPEC ".%09u FWAddr=0x%08x Val=0x%08x (%s)",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_server.c:			PVR_DUMPDEBUG_LOG("\t%s %05u %05" IMG_UINT64_FMTSPEC ".%09u FWAddr=0x%08x Val=<null_ptr> (%s)",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_server.c:		PVR_DUMPDEBUG_LOG("Dumping all allocated syncs. Allocated: %u High watermark: %u @ %05" IMG_UINT64_FMTSPEC ".%09u",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_server.c:			PVR_DUMPDEBUG_LOG("Warning: Record limit (%u) was reached. Some sync checkpoints may not have been recorded in the debug information.",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_server.c:		PVR_DUMPDEBUG_LOG("\t%-6s %-5s %-15s %-17s %-14s (%s)",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_server.c:		PVR_DUMPDEBUG_LOG("Dumping all recently freed syncs @ %05" IMG_UINT64_FMTSPEC ".%09u",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/sync_server.c:		PVR_DUMPDEBUG_LOG("\t%-6s %-5s %-15s %-17s %-14s (%s)",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/tlserver.c:		PVR_LOG_GOTO_IF_ERROR (eError, "OSEventObjectOpen", e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/tlserver.c:		PVR_LOG_GOTO_IF_ERROR (eError, "OSEventObjectClose", e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/tlserver.c:		PVR_LOG_GOTO_IF_NOMEM(psNewSD, eError, e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/tlserver.c:	PVR_LOG_GOTO_IF_ERROR(eError, "DevmemLocalGetImportHandle", e2);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/tlserver.c:	PVR_LOG_IF_ERROR(eError, "TLStreamWrite");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htb_debug.c:		if (HTB_SF_LAST == ui32LogIdx && HTB_LOG_VALIDID(ui32Data)
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htb_debug.c:			    "%s: Unrecognised LOG value '%x' GID %x Params %d ID %x @ '%p'",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htb_debug.c:typedef struct _HTB_TRACEBUF_LOG_ {
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htb_debug.c:	HTB_LOG_SFids eSFId;
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htb_debug.c:} HTB_TRACEBUF_LOG;
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htb_debug.c:static const HTB_TRACEBUF_LOG aLogs[] = {
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htb_debug.c:#define X(a, b, c, d, e) {HTB_LOG_CREATESFID(a,b,e), #c, d, e},
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htb_debug.c:	HTB_LOG_SFIDLIST
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htb_debug.c:	HTB_LOG_SFGROUPLIST
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htb_debug.c:		if (HTB_LOG_VALIDID(ui32Data))
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htb_debug.c:				    "%s: Unrecognised LOG value '%x' GID %x Params %d ID %x @ '%p'",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htb_debug.c:		    "%s: Unrecognised and invalid LOG value detected '%x'",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htb_debug.c:		PVR_DUMPDEBUG_LOG("\n<========================== *** PACKETS DROPPED *** ======================>\n");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htb_debug.c:		 * and then PVR_DUMPDEBUG_LOG() that in one shot
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htb_debug.c:			PVR_DUMPDEBUG_LOG("Buffer overrun - "IMG_SIZE_FMTSPEC" printed,"
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htb_debug.c:		PVR_DUMPDEBUG_LOG("%s", pszBuffer);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htb_debug.c:					PVR_DUMPDEBUG_LOG("Buffer overrun - "IMG_SIZE_FMTSPEC" printed,"
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htb_debug.c:				PVR_DUMPDEBUG_LOG("%s", pszBuffer);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htb_debug.c:					PVR_DUMPDEBUG_LOG("Buffer overrun - "IMG_SIZE_FMTSPEC" printed,"
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htb_debug.c:				PVR_DUMPDEBUG_LOG("%s", pszBuffer);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htb_debug.c:						PVR_DUMPDEBUG_LOG("Buffer overrun - "IMG_SIZE_FMTSPEC" printed,"
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htb_debug.c:					PVR_DUMPDEBUG_LOG("%s", pszBuffer);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htb_debug.c:						PVR_DUMPDEBUG_LOG("Buffer overrun - "IMG_SIZE_FMTSPEC" printed,"
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htb_debug.c:					PVR_DUMPDEBUG_LOG("%s", pszBuffer);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/htb_debug.c:	PVR_LOG_RETURN_IF_ERROR(eError, "DICreateEntry");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitSRVCOREBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitSYNCBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitPDUMPCTRLBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitMMBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitCMMBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitPDUMPMMBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitPDUMPBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitDCBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitCACHEBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitSMMBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitHTBUFFERBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitPVRTLBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitRIBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitVALIDATIONBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitTUTILSBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitDEVICEMEMHISTORYBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitSYNCTRACKINGBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitRGXTQBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitRGXTA3DBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitRGXBREAKPOINTBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitRGXFWDBGBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitRGXPDUMPBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitRGXHWPERFBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitRGXREGCONFIGBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitRGXKICKSYNCBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitMMEXTMEMBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "InitSYNCFALLBACKBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "OSPlatformBridgeInit");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_IF_ERROR(eError, "OSPlatformBridgeDeInit");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_RETURN_IF_ERROR(eError, "DeinitSYNCFALLBACKBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_RETURN_IF_ERROR(eError, "DeinitMMEXTMEMBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_RETURN_IF_ERROR(eError, "DeinitSRVCOREBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_RETURN_IF_ERROR(eError, "DeinitSYNCBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_RETURN_IF_ERROR(eError, "DeinitPDUMPCTRLBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_RETURN_IF_ERROR(eError, "DeinitMMBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_RETURN_IF_ERROR(eError, "DeinitCMMBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_RETURN_IF_ERROR(eError, "DeinitPDUMPMMBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_RETURN_IF_ERROR(eError, "DeinitPDUMPBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_RETURN_IF_ERROR(eError, "DeinitTUTILSBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_RETURN_IF_ERROR(eError, "DeinitDCBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_RETURN_IF_ERROR(eError, "DeinitCACHEBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_RETURN_IF_ERROR(eError, "DeinitSMMBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_RETURN_IF_ERROR(eError, "DeinitHTBUFFERBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_RETURN_IF_ERROR(eError, "DeinitPVRTLBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_RETURN_IF_ERROR(eError, "DeinitVALIDATIONBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_RETURN_IF_ERROR(eError, "DeinitRIBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_RETURN_IF_ERROR(eError, "DeinitDEVICEMEMHISTORYBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_RETURN_IF_ERROR(eError, "DeinitSYNCTRACKINGBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_RETURN_IF_ERROR(eError, "DeinitRGXTQBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_RETURN_IF_ERROR(eError, "DeinitRGXTA3DBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_RETURN_IF_ERROR(eError, "DeinitRGXBREAKPOINTBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_RETURN_IF_ERROR(eError, "DeinitRGXFWDBGBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_RETURN_IF_ERROR(eError, "DeinitRGXPDUMPBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_RETURN_IF_ERROR(eError, "DeinitRGXHWPERFBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_RETURN_IF_ERROR(eError, "DeinitRGXREGCONFIGBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:	PVR_LOG_RETURN_IF_ERROR(eError, "DeinitRGXKICKSYNCBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:		PVR_LOG_RETURN_IF_ERROR(eError, "InitRGXCMPBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:		PVR_LOG_RETURN_IF_ERROR(eError, "InitRGXCMPBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:		PVR_LOG_RETURN_IF_ERROR(eError, "InitRGXTQ2Bridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:		PVR_LOG_RETURN_IF_ERROR(eError, "DeinitRGXCMPBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:		PVR_LOG_RETURN_IF_ERROR(eError, "DeinitRGXSIGNALSBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pvrsrv_bridge_init.c:		PVR_LOG_RETURN_IF_ERROR(eError, "DeinitRGXTQ2Bridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/devicemem_server.c:	PVR_LOG_GOTO_IF_NOMEM(psDevmemCtx, eError, fail_alloc);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/devicemem_server.c:	PVR_LOG_GOTO_IF_ERROR(eError, "MMU_ContextCreate", fail_mmucontext);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/devicemem_server.c:		PVR_LOG_GOTO_IF_ERROR(eError, "pfnRegisterMemoryContext", fail_register);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/devicemem_server.c:	PVR_LOG_RETURN_IF_NOMEM(psDevmemHeap, "psDevmemHeap");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/devicemem_server.c:	PVR_LOG_GOTO_IF_NOMEM(psMapping, eError, e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/devicemem_server.c:		PVR_LOG_IF_ERROR(eError1, "PMRUnlockSysPhysAddresses");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/devicemem_server.c:	PVR_LOG_GOTO_IF_NOMEM(psReservation, eError, e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/devicemem_server.c:	PVR_LOG_RETURN_IF_NOMEM(psCtxExport, "psCtxExport");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/devicemem_server.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(psDevmemCtx, "psDevmemCtx");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/devicemem_server.c:	PVR_LOG_RETURN_IF_ERROR(eError, "MMU_AcquirePDumpMMUContext");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/devicemem_server.c:	PVR_LOG_IF_ERROR(eError, "PDumpImageDescriptor");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/devicemem_server.c:	PVR_LOG_RETURN_IF_ERROR(eError, "MMU_AcquirePDumpMMUContext");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/devicemem_server.c:	PVR_LOG_IF_ERROR(eError, "PDumpDataDescriptor");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/physmem_lma.c:				PVR_LOG_GOTO_WITH_ERROR("pui32MapTable", eError, PVRSRV_ERROR_PMR_INVALID_MAP_INDEX_ARRAY, errorOnRAAlloc);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/physmem_lma.c:				PVR_LOG_GOTO_WITH_ERROR("Mapping already exists", eError, PVRSRV_ERROR_PMR_MAPPING_ALREADY_EXISTS, errorOnRAAlloc);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/physmem_lma.c:			PVR_LOG_GOTO_IF_ERROR(eError, "_PoisonAlloc", errorOnPoison);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/physmem_lma.c:			PVR_LOG_GOTO_IF_ERROR(eError, "_ZeroAlloc", errorOnZero);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/physmem_lma.c:	PVR_LOG_RETURN_IF_FALSE(
gpu/gpu_rgx/m1.13ED5776728/services/server/common/physmem_lma.c:						PVR_LOG_GOTO_WITH_ERROR("psPageArray[uiFreepgidx].uiAddr", eError, PVRSRV_ERROR_INVALID_PARAMS, e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/physmem_lma.c:					PVR_LOG_GOTO_WITH_ERROR("Trying to allocate already allocated page again", eError, PVRSRV_ERROR_INVALID_PARAMS, e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/physmem_lma.c:					PVR_LOG_GOTO_WITH_ERROR("Unable to remap memory due to missing page", eError, PVRSRV_ERROR_INVALID_PARAMS, e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/physmem_lma.c:			PVR_LOG_GOTO_IF_ERROR(eError, "_AllocLMPages", e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/physmem_lma.c:	PVR_LOG_RETURN_IF_ERROR(eError, "PMR_CpuPhysAddr");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/physmem_lma.c:	PVR_LOG_GOTO_IF_ERROR(eError, "PMRCreatePMR", errorOnCreate);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/process_stats.c:		HTBLOGK(HTB_SF_MAIN_PRE_POWER, bPowerOn, ui64DeviceDiff, ui64SystemDiff);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/process_stats.c:		HTBLOGK(HTB_SF_MAIN_POST_POWER, bPowerOn, ui64SystemDiff, ui64DeviceDiff);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/process_stats.c:	PVR_LOG_IF_ERROR(eError, "DICreateEntry (1)");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/process_stats.c:	PVR_LOG_IF_ERROR(eError, "DICreateEntry (2)");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/process_stats.c:	PVR_LOG_IF_ERROR(eError, "DICreateEntry (3)");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/process_stats.c:	PVR_LOG_IF_ERROR(eError, "DICreateEntry (4)");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/process_stats.c:	PVR_LOG_IF_ERROR(eError, "DICreateGroup (1)");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/process_stats.c:	PVR_LOG_IF_ERROR(eError, "DICreateGroup (2)");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/process_stats.c:	PVR_LOG_IF_ERROR(eError, "DICreateGroup (3)");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/process_stats.c:		PVR_LOG_IF_ERROR(error, "DICreateEntry (1)");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/process_stats.c:		PVR_LOG_IF_ERROR(error, "DICreateEntry (2)");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/process_stats.c:		PVR_LOG_IF_ERROR(error, "DICreateEntry (3)");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/process_stats.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(pui32MemoryStats, "pui32MemoryStats");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/process_stats.c:		PVR_LOG_RETURN_IF_FALSE(ui32ArrSize == PVRSRV_DRIVER_STAT_TYPE_COUNT,
gpu/gpu_rgx/m1.13ED5776728/services/server/common/process_stats.c:	PVR_LOG_RETURN_IF_FALSE(ui32ArrSize == PVRSRV_PROCESS_STAT_TYPE_COUNT,
gpu/gpu_rgx/m1.13ED5776728/services/server/common/info_page_km.c:    PVR_LOG_GOTO_IF_ERROR(eError, "DevmemAllocateExportable", e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/info_page_km.c:    PVR_LOG_GOTO_IF_ERROR(eError, "DevmemAllocateExportable", e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/info_page_km.c:    PVR_LOG_GOTO_IF_ERROR(eError, "DevmemLocalGetImportHandle", e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/info_page_km.c:    PVR_LOG_GOTO_IF_ERROR(eError, "OSLockCreate", e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/info_page_km.c:    PVR_LOG_RETURN_IF_FALSE(psData->psInfoPageMemDesc != NULL, "invalid MEMDESC"
gpu/gpu_rgx/m1.13ED5776728/services/server/common/info_page_km.c:    PVR_LOG_RETURN_IF_FALSE(psData->psInfoPagePMR != NULL, "invalid PMR handle",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(psBase != NULL, "psBase");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(psEntry != NULL, "psEntry");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(psNewEntry != NULL, "psNewEntry");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(psBase != NULL, "psBase");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(psEntry != NULL, "psEntry");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_RETURN_IF_ERROR(eError, "GetHandleData");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_RETURN_IF_ERROR(eError, "UnlinkFromParent");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_RETURN_IF_ERROR(eError, "IterateOverChildren");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_RETURN_IF_NOMEM(psNewHandleData, "OSAllocZMem");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_GOTO_IF_ERROR(eError, "pfnAcquireHandle",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:		PVR_LOG_GOTO_IF_FALSE(eError == PVRSRV_OK, "couldn't add handle to hash table",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(psBase != NULL, "psBase");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(pfnReleaseData != NULL, "pfnReleaseData");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_GOTO_IF_INVALID_PARAM(psBase, eError, Exit);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_GOTO_IF_FALSE(eError == PVRSRV_OK, "failed to get parent handle structure",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_GOTO_IF_FALSE(eError == PVRSRV_OK, "Failed to get parent handle structure",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_GOTO_IF_FALSE(eError == PVRSRV_OK, "failed to get parent handle structure",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_GOTO_IF_FALSE(eError == PVRSRV_OK, "parent handle failed to adopt subhandle",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(psBase != NULL, "psBase");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(psBase != NULL, "psBase");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(psBase != NULL, "psBase");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(psBase != NULL, "psBase");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(psBase != NULL, "psBase");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_RETURN_IF_ERROR(eError, "IterateOverChildren->HandleUnrefAndMaybeMarkForFree");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_RETURN_IF_ERROR(eError, "IterateOverChildren->HandleFreePrivData");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_RETURN_IF_ERROR(eError, "UnlinkFromParent");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_RETURN_IF_ERROR(eError, "IterateOverChildren->HandleFreeDestroy");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_RETURN_IF_ERROR(eError, "pfnReleaseHandle");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_RETURN_IF_FALSE(psBase != NULL, "psBase invalid",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_RETURN_IF_FALSE(gpsHandleFuncs != NULL, "handle management not initialised",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(ppsBase != NULL, "ppsBase");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_RETURN_IF_NOMEM(psBase, "psBase");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_GOTO_IF_ERROR(eError, "OSLockCreate", ErrorFreeHandleBase);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_GOTO_IF_FALSE(psBase->psHashTab != NULL, "couldn't create data pointer"
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(psData != NULL, "psData");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(psData->psBase != NULL, "psData->psBase");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_RETURN_IF_ERROR(eError, "GetHandleData");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(psBase != NULL, "psBase");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_RETURN_IF_ERROR(eError, "GetHandleData");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_RETURN_IF_ERROR(eError, "GetHandleData");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_RETURN_IF_ERROR(eError, "GetHandleData");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:		PVR_LOG_RETURN_IF_FALSE(eError == PVRSRV_OK, "failed to iterate over kernel handles",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:			PVR_LOG_RETURN_IF_FALSE(eError == PVRSRV_OK, "couldn't release kernel handle",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(psData != NULL, "psData");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(psData->psBase != NULL, "psData->psBase");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(psData->eHandleFreeType != PVRSRV_HANDLE_TYPE_NONE,
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_RETURN_IF_ERROR(eError, "GetHandleData");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_GOTO_IF_ERROR(eError, "pfnIterateOverHandles", ExitUnlock);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_GOTO_IF_ERROR(eError, "pfnIterateOverHandles", ExitUnlock);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_RETURN_IF_ERROR(eError, "OSLockCreate");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_GOTO_IF_ERROR(eError, "PVRSRVHandleGetFuncTable", ErrorHandleDeinit);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_GOTO_IF_ERROR(eError, "PVRSRVAllocHandleBase", ErrorHandleDeinit);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/handle.c:	PVR_LOG_GOTO_IF_ERROR(eError, "pfnEnableHandlePurging",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/di_server.c:	PVR_LOG_GOTO_IF_ERROR(eError, "psImpl->pfnInit()", return_);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/di_server.c:	PVR_LOG_GOTO_IF_NOMEM(psNativeGroup, eError, deinit_impl_);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/di_server.c:	PVR_LOG_GOTO_IF_ERROR(eError, "psImpl->sCb.pfnCreateGroup", free_memory_);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/di_server.c:	PVR_LOG_RETURN_IF_ERROR(eError, "OSLockCreate");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/di_server.c:	PVR_LOG_GOTO_IF_NOMEM(psNativeEntry, eError, return_);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/di_server.c:	PVR_LOG_GOTO_IF_ERROR(eError, "psImpl->sCb.pfnCreateGroup", free_memory_);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/di_server.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(pszName != NULL, "pszName");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/di_server.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(_ValidateIteratorCb(psIterCb, eType),
gpu/gpu_rgx/m1.13ED5776728/services/server/common/di_server.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(ppsEntry != NULL, "psEntry");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/di_server.c:	PVR_LOG_RETURN_IF_NOMEM(psEntry, "OSAllocMem");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/di_server.c:	PVR_LOG_RETURN_VOID_IF_FALSE(psEntry != NULL,
gpu/gpu_rgx/m1.13ED5776728/services/server/common/di_server.c:	PVR_LOG_GOTO_IF_NOMEM(psNativeGroup, eError, return_);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/di_server.c:	PVR_LOG_GOTO_IF_ERROR(eError, "psImpl->sCb.pfnCreateGroup", free_memory_);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/di_server.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(pszName != NULL, "pszName");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/di_server.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(ppsGroup != NULL, "ppsDiGroup");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/di_server.c:	PVR_LOG_RETURN_IF_NOMEM(psGroup, "OSAllocMem");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/di_server.c:	PVR_LOG_RETURN_VOID_IF_FALSE(psGroup != NULL,
gpu/gpu_rgx/m1.13ED5776728/services/server/common/di_server.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(pszName != NULL, "pszName");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/di_server.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(_ValidateImplCb(psImplCb), "psImplCb");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/di_server.c:	PVR_LOG_RETURN_IF_NOMEM(psDiImpl, "OSAllocMem");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:	PVR_LOG_RETURN_IF_ERROR(OSLockCreate(&g_PDumpCtrl.hLock), "OSLockCreate");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:		PVR_LOG(("PDump forced capture stop received. Suspend PDumping to force driver reload before next capture."));
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:			PVR_LOG(("Unrecoverable error, PDump suspended!"));
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:	PVR_LOG_GOTO_IF_FALSE(((iCount != -1) && (iCount < PDUMP_PARAM_MAX_FILE_NAME)), "OSSNPrintf", errExit);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:		PVR_LOG_GOTO_IF_ERROR(eError, "PDumpWrite", errExit);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:	PVR_LOG_GOTO_IF_ERROR(eError, "TLStreamCreate ParamInit", end);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:	PVR_LOG_GOTO_IF_ERROR(eError, "TLStreamCreate ParamMain", param_main_failed);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:	PVR_LOG_GOTO_IF_ERROR(eError, "TLStreamCreate ParamDeinit", param_deinit_failed);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:	PVR_LOG_GOTO_IF_ERROR(eError, "TLStreamCreate ScriptInit", script_init_failed);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:	PVR_LOG_GOTO_IF_ERROR(eError, "TLStreamCreate ScriptMain", script_main_failed);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:	PVR_LOG_GOTO_IF_ERROR(eError, "TLStreamCreate ScriptDeinit", script_deinit_failed);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:	PVR_LOG_GOTO_IF_ERROR(eError, "TLStreamCreate ScriptBlock", script_block_failed);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:	PVR_LOG_GOTO_IF_ERROR(eError, "OSLockCreate", errRet);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:	PVR_LOG_GOTO_IF_ERROR(eError, "PDumpCtrlInit", errRetLock);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:	PVR_LOG_GOTO_IF_ERROR(eError, "PDumpInitStreams", errRetCtrl);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:	PVR_LOG_GOTO_IF_ERROR(eError, "PDumpCommentWithFlags", errRetState);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:	PVR_LOG_GOTO_IF_ERROR(eError, "PDumpCommentWithFlags", errRetState);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:	PVR_LOG_GOTO_IF_ERROR(eError, "PDumpParameterChannelZeroedPageBlock", errRetState);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:		PVR_LOG_ERROR(eError, "_PDumpSetFrameKM");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:	PVR_LOG_RETURN_IF_ERROR(eError, "PDumpReady");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:	PVR_LOG_RETURN_IF_ERROR(eError, "PDumpSetDefaultCaptureParamsKM");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:		PVR_LOG_GOTO_IF_ERROR(eErr, "PDumpSNPrintf", ErrUnlock);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:			PVR_LOG_GOTO_IF_ERROR(eErr, "PDumpWriteScript", ErrUnlock);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:			PVR_LOG_GOTO_IF_ERROR(eErr, "PDumpWriteScript", ErrUnlock);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:	PVR_LOG_GOTO_IF_FALSE(((iCount != -1) && (iCount < ui32MaxLen)), "OSVSNPrintf", exit);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:	PVR_LOG_GOTO_IF_FALSE(((iCount != -1) && (iCount < ui32MaxLen)), "OSVSNPrintf", exit);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:	PVR_LOG(("PDUMP PANIC %08x: %s", ui32PanicNo, pszPanicMsg));
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:	PVR_LOG_GOTO_IF_ERROR(eError, "PDumpSNPrintf", e1);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:	PVR_LOG_GOTO_IF_ERROR(eError, "PDumpCOMCommand", e1);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:	PVR_LOG_GOTO_IF_ERROR(eError, "PDumpCOMCommand", e1);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:	PVR_LOG_GOTO_IF_ERROR(eError, "PDumpSNPrintf", e1);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:	PVR_LOG_GOTO_IF_ERROR(eError, "PDumpSNPrintf", e1);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:	PVR_LOG_GOTO_IF_ERROR(eErr, "RGXPDumpPrepareOutputImageDescriptorHdr", error_release_script);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:	PVR_LOG_GOTO_IF_ERROR(eErr, "RGXPDumpPrepareOutputDataDescriptorHdr", error_release_script);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:	PVR_LOG_IF_ERROR(eErr, "TLStreamResetByteCount Parameter Main");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:	PVR_LOG_IF_ERROR(eErr, "TLStreamResetByteCount Script Main");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:		PVR_LOG(("pdump killed, capture files may be invalid or incomplete!"));
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:		PVR_LOG_IF_ERROR(eErr, "PDumpSetDefaultCaptureParamsKM");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:	PVR_LOG(("--- PDUMP COMMON: g_PDumpScript.sCh.*.hTL (In, Mn, De, Bk) ( %p, %p, %p, %p )",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:	PVR_LOG(("--- PDUMP COMMON: g_PDumpScript.sCh.*.ui32BufferFullRetries (In, Mn, De, Bk) ( %5d, %5d, %5d, %5d )",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:	PVR_LOG(("--- PDUMP COMMON: g_PDumpScript.sCh.*.ui32BufferFullAborts (In, Mn, De, Bk)  ( %5d, %5d, %5d, %5d )",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:	PVR_LOG(("--- PDUMP COMMON: g_PDumpScript.sCh.*.ui32HighestRetriesWatermark (In, Mn, De, Bk)  ( %5d, %5d, %5d, %5d )",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:	PVR_LOG(("--- PDUMP COMMON: g_PDumpScript.ui32FileIdx( %d )", g_PDumpScript.ui32FileIdx));
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:	PVR_LOG(("--- PDUMP COMMON: g_PDumpParameters.sCh.*.hTL (In, Mn, De, Bk) ( %p, %p, %p, %p )",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:	PVR_LOG(("--- PDUMP COMMON: g_PDumpParameters.sCh.*.ui32BufferFullRetries (In, Mn, De, Bk) ( %5d, %5d, %5d, %5d )",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:	PVR_LOG(("--- PDUMP COMMON: g_PDumpParameters.sCh.*.ui32BufferFullAborts (In, Mn, De, Bk)  ( %5d, %5d, %5d, %5d )",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:	PVR_LOG(("--- PDUMP COMMON: g_PDumpParameters.sCh.*.ui32HighestRetriesWatermark (In, Mn, De, Bk)  ( %5d, %5d, %5d, %5d )",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:	PVR_LOG(("--- PDUMP COMMON: g_PDumpParameters.sWOff.* (In, Mn, De, Bk) ( %d, %d, %d, %d )",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:	PVR_LOG(("--- PDUMP COMMON: g_PDumpParameters.ui32FileIdx( %d )", g_PDumpParameters.ui32FileIdx));
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:	PVR_LOG(("--- PDUMP COMMON: g_PDumpCtrl( %p ) eServiceState( %d ), IsDriverInInitPhase( %s ) ui32Flags( %x )",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:	PVR_LOG(("--- PDUMP COMMON: ui32DefaultCapMode( %d ) ui32CurrentFrame( %d )",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:	PVR_LOG(("--- PDUMP COMMON: sCaptureRange.ui32Start( %x ) sCaptureRange.ui32End( %x ) sCaptureRange.ui32Interval( %u )",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:	PVR_LOG(("--- PDUMP COMMON: IsInCaptureRange( %s ) InPowerTransition( %d )",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_server.c:	PVR_LOG(("--- PDUMP COMMON: sBlockCtrl.ui32BlockLength( %d ), sBlockCtrl.ui32CurrentBlock( %d )",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/physheap.c:	PVR_LOG_RETURN_IF_ERROR(eError, "OSLockCreate");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/physmem_fwdedicatedmem.c:	PMR_LOG2ALIGN_T    uiLog2Align;
gpu/gpu_rgx/m1.13ED5776728/services/server/common/physmem_fwdedicatedmem.c:                                         PMR_LOG2ALIGN_T uiLog2Align,
gpu/gpu_rgx/m1.13ED5776728/services/server/common/physmem_fwdedicatedmem.c:	PVR_LOG_RETURN_IF_ERROR(eError, "RA_Alloc");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/physmem_fwdedicatedmem.c:	PVR_LOG_GOTO_IF_ERROR(eError, "PhysHeapAcquire", errorOnPhysHeapAcquire);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/physmem_fwdedicatedmem.c:	PVR_LOG_GOTO_IF_ERROR(eError, "CreateRegionRA(DedicatedFwMem)", errorOnRACreate);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/physmem_fwdedicatedmem.c:                                         PMR_LOG2ALIGN_T uiLog2Align,
gpu/gpu_rgx/m1.13ED5776728/services/server/common/physmem_fwdedicatedmem.c:		PVR_LOG_GOTO_WITH_ERROR("psRGXData->bHasFWMemPhysHeap", eError, PVRSRV_ERROR_NOT_IMPLEMENTED, errorOnAcquireHeap);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/physmem_tdfwmem.c:	PMR_LOG2ALIGN_T uiLog2Align;
gpu/gpu_rgx/m1.13ED5776728/services/server/common/physmem_tdfwmem.c:                                  PMR_LOG2ALIGN_T uiLog2Align,
gpu/gpu_rgx/m1.13ED5776728/services/server/common/physmem_tdfwmem.c:		PVR_LOG_GOTO_WITH_ERROR("psRGXData->bHasTDFWMemPhysHeap",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/physmem_tdfwmem.c:	PVR_LOG_GOTO_IF_ERROR(eError, "PhysHeapRegionGetCpuPAddr", errorOnValidateParams);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/physmem_tdfwmem.c:	PVR_LOG_GOTO_IF_ERROR(eError, "PhysHeapRegionGetSize", errorOnValidateParams);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/physmem_tdfwmem.c:		PVR_LOG_GOTO_WITH_ERROR("Trusted Device physical heap not aligned to a Rogue cache line",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/physmem_tdfwmem.c:                                  PMR_LOG2ALIGN_T uiLog2Align,
gpu/gpu_rgx/m1.13ED5776728/services/server/common/pdump_physmem.c:		PVR_LOG_RETURN_IF_ERROR(eError, "PDumpWriteParameter");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/srvcore.c:			PVR_LOG(("(FAIL) %s: Mismatch in client-side and KM driver build options; "
gpu/gpu_rgx/m1.13ED5776728/services/server/common/srvcore.c:			PVR_LOG(("(FAIL) %s: Mismatch in client-side and KM driver build options; "
gpu/gpu_rgx/m1.13ED5776728/services/server/common/srvcore.c:			PVR_LOG(("%s: COMPAT_TEST: Client-side (0x%04x) (%s) and KM driver (0x%04x) (%s) build options differ.",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/srvcore.c:		PVR_LOG(("(FAIL) %s: Incompatible driver DDK version (%u.%u) / client DDK version (%u.%u).",
gpu/gpu_rgx/m1.13ED5776728/services/server/common/srvcore.c:	PVR_LOG(("User requested PVR debug info"));
gpu/gpu_rgx/m1.13ED5776728/services/server/common/srvcore.c:	PVR_LOG(("User requested OS reset"));
gpu/gpu_rgx/m1.13ED5776728/services/server/common/srvcore.c:	PVR_LOG(("HW operation timeout, dump server info"));
gpu/gpu_rgx/m1.13ED5776728/services/server/common/srvcore.c:	PVR_LOG_GOTO_IF_ERROR(eError, "OSLockCreate", errorLockCreateFailed);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/srvcore.c:	PVR_LOG_GOTO_IF_ERROR(eError, "PVRSRVPoolCreate", erroPoolCreateFailed);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/srvcore.c:	PVR_LOG_GOTO_IF_ERROR(err, "PVRSRVPoolGet", unlock_and_return_error);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/srvcore.c:		PVR_LOG_GOTO_WITH_ERROR("CopyFromUserWrapper", err, PVRSRV_ERROR_BRIDGE_EFAULT, unlock_and_return_error);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/srvcore.c:		PVR_LOG_GOTO_WITH_ERROR("pfBridgeHandler", err, PVRSRV_ERROR_BRIDGE_EPERM, unlock_and_return_error);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/srvcore.c:		PVR_LOG_IF_ERROR(err, "PVRSRVPoolPut");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/srvcore.c:			HTBLOGK(HTB_SF_BRG_BRIDGE_CALL_ERR, ui32Timestamp,
gpu/gpu_rgx/m1.13ED5776728/services/server/common/srvcore.c:			HTBLOGK(HTB_SF_BRG_BRIDGE_CALL, ui32Timestamp,
gpu/gpu_rgx/m1.13ED5776728/services/server/common/tlstream.c:	PVR_LOG_GOTO_IF_ERROR(eError, "DevmemAllocateExportable", e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/tlstream.c:	PVR_LOG_GOTO_IF_ERROR(eError, "DevmemAcquireCpuVirtAddr", e1);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/tlstream.c:		PVR_LOG_GOTO_IF_ERROR(eError, "TLAllocSharedMem", e3);
gpu/gpu_rgx/m1.13ED5776728/services/server/common/tlstream.c:			PVR_LOG_RETURN_VOID_IF_ERROR(eError, "OSEventObjectWaitTimeout");
gpu/gpu_rgx/m1.13ED5776728/services/server/common/tlstream.c:		PVR_LOG_IF_ERROR(eRc, "TLStream->pfProducerCallback");
gpu/gpu_rgx/m1.13ED5776728/services/server/include/pvr_notifier.h: * Macro used within debug dump functions to send output either to PVR_LOG or
gpu/gpu_rgx/m1.13ED5776728/services/server/include/pvr_notifier.h:#define _MTKPP_GPULOG_FW(...) MTKPP_LOG(g_use_id, __VA_ARGS__)
gpu/gpu_rgx/m1.13ED5776728/services/server/include/pvr_notifier.h:#define PVR_DUMPDEBUG_LOG(...)\
gpu/gpu_rgx/m1.13ED5776728/services/server/include/pvr_notifier.h:			MTKPP_LOG(g_use_id, __VA_ARGS__);\
gpu/gpu_rgx/m1.13ED5776728/services/server/include/pvr_notifier.h:#define PVR_DUMPDEBUG_LOG(...)                                \
gpu/gpu_rgx/m1.13ED5776728/services/server/include/pvr_notifier.h:			PVR_LOG((__VA_ARGS__));                           \
gpu/gpu_rgx/m1.13ED5776728/services/server/include/pvr_notifier.h:                                    PVR_LOG() will be used as the default
gpu/gpu_rgx/m1.13ED5776728/services/server/include/physmem.h:                 PMR_LOG2ALIGN_T uiLog2Contig,
gpu/gpu_rgx/m1.13ED5776728/services/server/include/htbserver.h:			 const HTB_LOGMODE_CTRL eLogMode,
gpu/gpu_rgx/m1.13ED5776728/services/server/include/htbserver.h:HTBLogKM(IMG_UINT32 PID, IMG_UINT64 ui64TimeStamp, HTB_LOG_SFids SF,
gpu/gpu_rgx/m1.13ED5776728/services/server/include/devicemem_server_utils.h:			PVR_LOG(("DevmemCPUCacheMode: Unknown CPU cache mode 0x%08x", ui32CPUCacheMode));
gpu/gpu_rgx/m1.13ED5776728/services/server/include/devicemem_server_utils.h:			PVR_LOG(("DevmemDeviceCacheMode: Unknown device cache mode 0x%08x", ui32DeviceCacheMode));
gpu/gpu_rgx/m1.13ED5776728/services/server/include/physmem_fwdedicatedmem.h:                                         PMR_LOG2ALIGN_T uiLog2Align,
gpu/gpu_rgx/m1.13ED5776728/services/server/include/physmem_tdfwmem.h:                                  PMR_LOG2ALIGN_T uiLog2Align,
gpu/gpu_rgx/m1.13ED5776728/services/server/include/pmr.h:typedef IMG_UINT32 PMR_LOG2ALIGN_T;
gpu/gpu_rgx/m1.13ED5776728/services/server/include/pmr.h:             PMR_LOG2ALIGN_T uiLog2ContiguityGuarantee,
gpu/gpu_rgx/m1.13ED5776728/services/server/include/pmr.h:             PMR_LOG2ALIGN_T *puiLog2Contig,
gpu/gpu_rgx/m1.13ED5776728/services/server/include/pmr.h:             PMR_LOG2ALIGN_T uiLog2Contig,
gpu/gpu_rgx/m1.13ED5776728/services/server/include/pmr.h:				IMG_DEVMEM_LOG2ALIGN_T uiLog2PageSize);
gpu/gpu_rgx/m1.13ED5776728/services/server/include/pmr.h:					IMG_DEVMEM_LOG2ALIGN_T uiLog2PageSize);
gpu/gpu_rgx/m1.13ED5776728/services/server/include/pmr.h:                   IMG_DEVMEM_LOG2ALIGN_T uiLog2PageSize,
gpu/gpu_rgx/m1.13ED5776728/services/server/include/pdump_km.h:			PVR_LOG_IF_ERROR(_eE, "PDumpPanic");\
gpu/gpu_rgx/m1.13ED5776728/services/server/include/pvrsrv.h:	POLL_FLAG_LOG_ERROR = 1, /* Log error on poll timeout */
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_bridge_k.c:	PVR_LOG_IF_ERROR(eError, "InitDMABUFBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_bridge_k.c:	PVR_LOG_GOTO_IF_ERROR(eError, "OSEventObjectCreate", error_);
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_bridge_k.c:		PVR_LOG_GOTO_IF_ERROR(eError, "DICreateEntry", error_);
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_bridge_k.c:	PVR_LOG_RETURN_IF_ERROR(eError, "DeinitDMABUFBridge");
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_bridge_k.c:			PVR_LOG(("%s: waiting for user threads (%d)", __func__,
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_bridge_k.c:			PVR_LOG(("%s: waiting for kernel threads (%d)", __func__,
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_bridge_k.c:				PVR_LOG(("%s: retried %u times, force abort",
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_procfs.c:	PVR_LOG_RETURN_IF_FALSE(psDFSFile != NULL, "psDFSFile is NULL", -EIO);
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_procfs.c:	PVR_LOG_RETURN_IF_FALSE(psDFSFile != NULL, "psDFSFile is NULL",
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_procfs.c:	PVR_LOG_RETURN_IF_FALSE(psDFSFile != NULL, "psDFSFile is NULL",
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_procfs.c:	PVR_LOG_RETURN_IF_FALSE(psIter->pfnWrite != NULL, "pfnWrite is NULL",
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_procfs.c:	PVR_LOG_RETURN_IF_FALSE(uiCount <= ui64Count, "uiCount too long", -EIO);
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_procfs.c:	PVR_LOG_GOTO_IF_FALSE(pcLocalBuffer != NULL, "OSAllocMem() failed",
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_procfs.c:	PVR_LOG_GOTO_IF_FALSE(i64Res == 0, "pvr_copy_from_user() failed",
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_procfs.c:	PVR_LOG_GOTO_IF_FALSE(i64Res >= 0, "pfnWrite failed", free_local_buffer_);
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_procfs.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(pvFile != NULL, "pvFile");
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_procfs.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(pvParentDir != NULL, "pvParentDir");
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_procfs.c:			PVR_LOG_GOTO_IF_INVALID_PARAM("eType", eError, return_);
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_procfs.c:	PVR_LOG_GOTO_IF_NOMEM(psFile, eError, return_);
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_procfs.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(pszName != NULL, "pszName");
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_procfs.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(ppvDir != NULL, "ppvDir");
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_procfs.c:	PVR_LOG_RETURN_IF_NOMEM(psNewDir, "OSAllocMem");
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/physmem_test.c:	PVR_LOG_RETURN_IF_NOMEM(psDeviceNode, "OSAllocZMem");
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/physmem_test.c:	PVR_LOG_GOTO_IF_ERROR(eError, "PVRSRVPhysMemHeapsInit", ErrorSysDevDeInit);
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/physmem_test.c:	PVR_LOG_RETURN_IF_NOMEM(apsDevPAddr, "OSAllocMem");
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/physmem_test.c:	PVR_LOG_GOTO_IF_NOMEM(pbValid, eError, ErrorFreePMRPageListMem);
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/physmem_test.c:	PVR_LOG_GOTO_IF_NOMEM(pcWriteBuffer, eError, ErrorFreePMRPageStateMem);
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/physmem_test.c:	PVR_LOG_GOTO_IF_NOMEM(pcReadBuffer, eError, ErrorFreeWriteBuffer);
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/physmem_test.c:	PVR_LOG_GOTO_IF_NOMEM(pui32MappingTable, eError, ErrorFreeReadBuffer);
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/physmem_test.c:			PVR_LOG_IF_ERROR(eError, "PMRReleaseKernelMappingData");
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/physmem_test.c:			PVR_LOG_IF_ERROR(eError, "PMRReleaseKernelMappingData");
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/physmem_test.c:		PVR_LOG_RETURN_IF_NOMEM(pcWriteBuffer, "OSAllocMem");
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/physmem_test.c:		PVR_LOG_GOTO_IF_NOMEM(pcReadBuffer, eError, ErrorFreeWriteBuffer);
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/physmem_test.c:	PVR_LOG_RETURN_IF_ERROR(eError, "PhysmemNewRamBackedPMR");
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/physmem_test.c:	PVR_LOG_GOTO_IF_ERROR(eError, "PMRLockSysPhysAddresses", ErrorUnrefPMR);
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/physmem_test.c:	PVR_LOG_GOTO_IF_ERROR(eError, "PMRAcquireKernelMappingData", ErrorUnlockPhysAddresses);
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/physmem_test.c:	PVR_LOG(("PhysMemTest: Passed."));
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/fwload.c:	PVR_LOG(("Digital signature for '%s' verified successfully.",
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/osfunc.c:		PVR_DUMPDEBUG_LOG("  %s : %s",
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/osfunc.c:	PVR_LOG_RETURN_IF_NOMEM(psMISRData, "psMISRData");
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/osfunc.c:	PVR_LOG_GOTO_IF_NOMEM(psOSThreadData, eError, fail_alloc);
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/osfunc.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(hEventObject, "hEventObject");
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/osfunc.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(hEventObject, "hEventObject");
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/osfunc.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(phOSEvent, "phOSEvent");
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/osfunc.c:	PVR_LOG_GOTO_IF_INVALID_PARAM(hEventObject, eError, error);
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/osfunc.c:	PVR_LOG_GOTO_IF_ERROR(eError, "LinuxEventObjectAdd", error);
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/osfunc.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(hOSEventKM, "hOSEventKM");
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/osfunc.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(hEventObject, "hEventObject");
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/osfunc.c:	PVR_DUMPDEBUG_LOG("OS kernel info: %s %s %s %s",
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/physmem_osmem_linux.c:#define PVR_MIN_PHYSMEM_CONTIG_ALLOC_LOG2PGSZ	RGX_HEAP_4KB_PAGE_SHIFT
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/physmem_osmem_linux.c:#define PVR_MAX_PHYSMEM_CONTIG_ALLOC_LOG2PGSZ	RGX_HEAP_2MB_PAGE_SHIFT
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/physmem_osmem_linux.c:		if (uiAlign > uiSize || uiAlign > (1 << PVR_MAX_PHYSMEM_CONTIG_ALLOC_LOG2PGSZ))
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/physmem_osmem_linux.c:		PVR_ASSERT(uiLog2AllocPageSize > PVR_MIN_PHYSMEM_CONTIG_ALLOC_LOG2PGSZ);
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_gputrace.c:	PVR_LOG_RETURN_IF_ERROR(eError, "OSLockCreate");
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_gputrace.c:	PVR_LOG_RETURN_IF_ERROR (eError, "OSLockCreate");
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_gputrace.c:	PVR_LOG_GOTO_IF_NOMEM(psData, eError, e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_gputrace.c:	PVR_LOG_GOTO_IF_ERROR(eError, "OSLockCreate", e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_gputrace.c:			PVR_LOG(("FTrace events from \"gpu\" group enabled"));
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_gputrace.c:			PVR_LOG(("FTrace events from \"rogue\" group enabled"));
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_gputrace.c:		PVR_LOG_GOTO_IF_ERROR(eError, "PVRSRVRGXCtrlHWPerfKM", err_out);
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_gputrace.c:	PVR_LOG_GOTO_IF_ERROR(eError, "TLClientOpenStream", err_out);
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_gputrace.c:	PVR_LOG_GOTO_IF_ERROR(eError, "PVRSRVRegisterCmdCompleteNotify", err_close_stream);
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_gputrace.c:		PVR_LOG_IF_ERROR(eError, "PVRSRVRGXCtrlHWPerfKM");
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_gputrace.c:		PVR_LOG_IF_ERROR(eError, "PVRSRVUnregisterCmdCompleteNotify");
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_gputrace.c:		PVR_LOG_IF_ERROR(eError, "TLClientCloseStream");
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_gputrace.c:		PVR_LOG_IF_ERROR(eError, "TLClientCloseStream");
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_gputrace.c:				PVR_LOG_ERROR(eError, "TLClientReleaseData");
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_gputrace.c:		PVR_LOG_ERROR(eError, "TLClientAcquireData");
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_debugfs.c:	PVR_LOG_RETURN_IF_FALSE(psINode != NULL && psINode->i_private != NULL,
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_debugfs.c:	PVR_LOG_RETURN_IF_FALSE(psDFSFile != NULL, "psDFSFile is NULL",
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_debugfs.c:	PVR_LOG_RETURN_IF_FALSE(psDFSFile != NULL, "psDFSFile is NULL",
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_debugfs.c:	PVR_LOG_RETURN_IF_FALSE(psIter->pfnWrite != NULL, "pfnWrite is NULL",
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_debugfs.c:	PVR_LOG_RETURN_IF_FALSE(uiCount <= ui64Count, "uiCount too long", -EIO);
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_debugfs.c:	PVR_LOG_GOTO_IF_FALSE(pcLocalBuffer != NULL, "OSAllocMem() failed",
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_debugfs.c:	PVR_LOG_GOTO_IF_FALSE(i64Res == 0, "pvr_copy_from_user() failed",
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_debugfs.c:	PVR_LOG_GOTO_IF_FALSE(i64Res >= 0, "pfnWrite failed", free_local_buffer_);
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_debugfs.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(pvFile != NULL, "pvFile");
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_debugfs.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(pvParentDir != NULL, "pvParentDir");
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_debugfs.c:			PVR_LOG_GOTO_IF_INVALID_PARAM("eType", eError, return_);
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_debugfs.c:	PVR_LOG_GOTO_IF_NOMEM(psFile, eError, return_);
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_debugfs.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(pszName != NULL, "pszName");
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_debugfs.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(ppvDir != NULL, "ppvDir");
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_debugfs.c:	PVR_LOG_RETURN_IF_NOMEM(psNewDir, "OSAllocMem");
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_debug.c:/******** BUFFERED LOG MESSAGES ********/
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_debug.c:	PVR_LOG_RETURN_IF_FALSE(psPVRSRVData != NULL, "psPVRSRVData is NULL", -1);
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_debug.c:	PVR_LOG_RETURN_IF_FALSE(ui64Offset <= (psDevInfo->ui32RegSize - 4),
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_debug.c:	PVR_LOG_RETURN_IF_FALSE(psPVRSRVData != NULL,
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_debug.c:	PVR_LOG_RETURN_IF_FALSE(ui64Count == 4 || ui64Count == 8,
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_debug.c:	PVR_LOG_RETURN_IF_FALSE(!(*pui64Pos & (ui64Count - 1)),
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_debug.c:	PVR_LOG_RETURN_IF_FALSE(psPVRSRVData != NULL,
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_debug.c:	PVR_LOG_RETURN_IF_FALSE(ui64Count == 4 || ui64Count == 8,
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/pvr_debug.c:	PVR_LOG_RETURN_IF_FALSE(!(*pui64Pos & (ui64Count - 1)),
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/event.c:	PVR_LOG_RETURN_IF_ERROR(OSLockCreate(&psLinuxEventObject->hLock), "OSLockCreate");
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/event.c:	PVR_LOG(("%s: EvObj(%p) schedule: Avoided(%u) Called(%u) ReturnedImmediately(%u) SleptFully(%u) SleptPartially(%u)",
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/event.c:	PVR_LOG(("%s: LINUX_EVENT_OBJECT_STATS disabled!", __func__));
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/km_apphint.c:	RGXFWIF_LOG_GROUP_NAME_VALUE_MAP
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/km_apphint.c:#define X(a, b) { #b, HTB_LOG_GROUP_FLAG(a) },
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/km_apphint.c:	HTB_LOG_SFGROUPLIST
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/km_apphint.c:	{ "all", HTB_LOGMODE_ALLPID},
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/km_apphint.c:	{ "restricted", HTB_LOGMODE_RESTRICTEDPID}
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/km_apphint.c:	PVR_DUMPDEBUG_LOG("  %s", group_name);
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/km_apphint.c:			PVR_DUMPDEBUG_LOG("    %s: <Error>",
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/km_apphint.c:			PVR_DUMPDEBUG_LOG("    %s: %s",
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/km_apphint.c:		PVR_DUMPDEBUG_LOG("    none");
gpu/gpu_rgx/m1.13ED5776728/services/server/env/linux/km_apphint.c:		PVR_DUMPDEBUG_LOG("------[ AppHint Settings ]------");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.h:			PVR_LOG_RETURN_IF_INVALID_PARAM(ui32OSID < RGX_NUM_OS_SUPPORTED, "ui32OSID");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.h:                                 PMR_LOG2ALIGN_T uiLog2Align,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.h:                                          PMR_LOG2ALIGN_T uiLog2Align,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxsignals.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetFirmwareAddress", fail_fwaddr);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	PVR_DUMPDEBUG_LOG("FW info: %d.%d @ %8d (%s) build options: 0x%08x",				\
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	PVR_LOG_RETURN_IF_ERROR(eError, "RGXPollMetaRegThroughSP");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	PVR_LOG_RETURN_IF_ERROR(eError, "RGXWriteWithSP");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	PVR_LOG_RETURN_IF_ERROR(eError, "RGXPollMetaRegThroughSP");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:			PVR_DUMPDEBUG_LOG("_ValidateWithSP: Mismatch while validating %s at offset 0x%x: CPU 0x%08x (%p), FW 0x%08x (%x)",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	PVR_DUMPDEBUG_LOG("Match between Host and Meta view of the %s", pszDesc);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_DUMPDEBUG_LOG("%sMatch between Host and MIPS views of the FW code", pszFormat);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_DUMPDEBUG_LOG("%sMismatch between Host and MIPS views of the FW code", pszFormat);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:				PVR_DUMPDEBUG_LOG("%s   At %d bytes, code should be 0x%x but it is instead 0x%x",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_DUMPDEBUG_LOG("%s    [%u] Name: %s Base address: " IMG_DEV_VIRTADDR_FMTSPEC
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_DUMPDEBUG_LOG("%s    [%u] Name: %s Base address: " IMG_DEV_VIRTADDR_FMTSPEC
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_DUMPDEBUG_LOG("%s        Whole allocation was %s", pszIndent, psResult->bMap ? "mapped": "unmapped");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_DUMPDEBUG_LOG("%s        Pages %u to %u (" IMG_DEV_VIRTADDR_FMTSPEC "-" IMG_DEV_VIRTADDR_FMTSPEC ") %s%s",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_DUMPDEBUG_LOG("%s    No results", pszIndent);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:typedef struct _FAULT_INFO_LOG_
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:} FAULT_INFO_LOG;
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:static FAULT_INFO_LOG gsFaultInfoLog = { 0 };
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_DUMPDEBUG_LOG("%sDevice memory history for page fault address " IMG_DEV_VIRTADDR_FMTSPEC
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_DUMPDEBUG_LOG("%sCould not find PID for device memory history on PC of the fault", pszIndent);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:			PVR_DUMPDEBUG_LOG("%s  %s:", pszIndent, pszWhich);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_DUMPDEBUG_LOG("%s  No matching Devmem History for fault address", pszIndent);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_DUMPDEBUG_LOG("%sNo live host MMU data available", pszIndent);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_DUMPDEBUG_LOG("%sPM faulted at PC address = 0x%016" IMG_UINT64_FMTSPECx, pszIndent, psFaultData->sLevelData[MMU_LEVEL_0].ui64Address);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:					PVR_DUMPDEBUG_LOG("%s%s for index %d = 0x%08x and is %s",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:					PVR_DUMPDEBUG_LOG("%s%s for index %d = 0x%016" IMG_UINT64_FMTSPECx " and is %s",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:				PVR_DUMPDEBUG_LOG("%s%s index (%d) out of bounds (%d)",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_DUMPDEBUG_LOG("%s - OK", pszBIFNames[eBankID]);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_DUMPDEBUG_LOG("%s%s - FAULT:",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:			PVR_DUMPDEBUG_LOG("%s  * MMU status (0x%016" IMG_UINT64_FMTSPECx "): PC = %d%s, Page Size = %d%s%s%s.",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:			PVR_DUMPDEBUG_LOG("%s  * Request (0x%016" IMG_UINT64_FMTSPECx
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_DUMPDEBUG_LOG("%sMMU (%s) - OK", pszIndent, pszMetaOrCore);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_DUMPDEBUG_LOG("%sMMU (%s) - FAULT:", pszIndent, pszMetaOrCore);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_DUMPDEBUG_LOG("%s  * MMU status (0x%016" IMG_UINT64_FMTSPECx "): PC = %d, %s 0x%010" IMG_UINT64_FMTSPECx ", %s (%s)%s%s%s%s.",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_DUMPDEBUG_LOG(INDENT "Cause exception: %s", pszException);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_DUMPDEBUG_LOG(INDENT "FDC interrupt pending");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_DUMPDEBUG_LOG(INDENT "Interrupt uses general interrupt vector");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_DUMPDEBUG_LOG(INDENT "Performance Counter Interrupt pending");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_DUMPDEBUG_LOG(INDENT "Unusable Coprocessor: %d", RGXMIPSFW_C0_CAUSE_UNUSABLE_UNIT(ui32Cause));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	PVR_DUMPDEBUG_LOG("DEBUG                        :");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_DUMPDEBUG_LOG(INDENT "Debug exception: %s", pszDException);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:			PVR_DUMPDEBUG_LOG(INDENT "%s", psDebugEntry->pszExplanation);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	PVR_DUMPDEBUG_LOG("DEPC                    :0x%08X", ui32DEPC);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:				PVR_DUMPDEBUG_LOG("Overlap between TLB entry %u and %u", i , j);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	PVR_DUMPDEBUG_LOG("%2u) VA 0x%08X (%3uk) -> PA0 0x%08" IMG_UINT64_FMTSPECx " %s%s%s, "
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_DUMPDEBUG_LOG("    Remap %2u : IN 0x%08X (%3uk) => OUT 0x%08" IMG_UINT64_FMTSPECx,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_DUMPDEBUG_LOG("    Remap %2u : IN 0x%08X (%3uk) => OUT 0x%08" IMG_UINT64_FMTSPECx,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:			PVR_DUMPDEBUG_LOG("FW-T%d Assert: %s (%s:%d)",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:			PVR_DUMPDEBUG_LOG("FW Fault %d: %s (%s:%d)",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:			PVR_DUMPDEBUG_LOG("            Data = 0x%08x, CRTimer = 0x%012"IMG_UINT64_FMTSPECx", OSTimer = %" IMG_UINT64_FMTSPEC ".%09" IMG_UINT64_FMTSPEC,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:			PVR_DUMPDEBUG_LOG("T%u polling %s (reg:0x%08X mask:0x%08X)",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	PVR_DUMPDEBUG_LOG("%s", pszLine);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:			PVR_DUMPDEBUG_LOG("DM %d (GP)", dm);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:				PVR_DUMPDEBUG_LOG("DM %d (HWRflags 0x%08x:%s)", dm, psFwSysData->aui32HWRRecoveryFlags[dm], sPerDmHwrDescription);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:				PVR_DUMPDEBUG_LOG("DM %d", dm);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:				PVR_DUMPDEBUG_LOG("  %s PID = %u, frame = %d, HWRTData = 0x%08X, EventStatus = 0x%08X%s",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:					PVR_DUMPDEBUG_LOG("  %s CRTimer = 0x%012"IMG_UINT64_FMTSPECx", OSTimer = %" IMG_UINT64_FMTSPEC ".%09" IMG_UINT64_FMTSPEC ", CyclesElapsed = %" IMG_INT64_FMTSPECd,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:					PVR_DUMPDEBUG_LOG("  %s CRTimer = 0x%012"IMG_UINT64_FMTSPECx", CyclesElapsed = %" IMG_INT64_FMTSPECd,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:						PVR_DUMPDEBUG_LOG("  %s PreResetTimeInCycles = %" IMG_INT64_FMTSPECd ", HWResetTimeInCycles = %" IMG_INT64_FMTSPECd ", FreelistReconTimeInCycles = %" IMG_INT64_FMTSPECd ", TotalRecoveryTimeInCycles = %" IMG_INT64_FMTSPECd,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:						PVR_DUMPDEBUG_LOG("  %s PreResetTimeInCycles = %" IMG_INT64_FMTSPECd ", HWResetTimeInCycles = %" IMG_INT64_FMTSPECd ", TotalRecoveryTimeInCycles = %" IMG_INT64_FMTSPECd,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:						PVR_DUMPDEBUG_LOG("    T%u polling %s (reg:0x%08X mask:0x%08X last:0x%08X)",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:							PVR_DUMPDEBUG_LOG("    MIPS TLB fault: BadVA = 0x%08X, EntryLo = 0x%08X"
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:								PVR_DUMPDEBUG_LOG("    Potential use-after-free detected");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:			PVR_DUMPDEBUG_LOG("MMU Pending page: Yes");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:				PVR_DUMPDEBUG_LOG("Cannot check address on PM cat base %u", ui32CatBase);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:				PVR_DUMPDEBUG_LOG("Checking device virtual address " IMG_DEV_VIRTADDR_FMTSPEC
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_DUMPDEBUG_LOG("RGX Virtualisation type: AutoVz with HW register support");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_DUMPDEBUG_LOG("RGX Virtualisation type: AutoVz with shared memory");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_DUMPDEBUG_LOG("RGX Virtualisation type: Hypervisor-assisted with static Fw heap allocation");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_DUMPDEBUG_LOG("RGX Virtualisation type: Hypervisor-assisted with dynamic Fw heap allocation");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_DUMPDEBUG_LOG("RGX firmware connection state: %s (Fw=%s; OS=%s)",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_DUMPDEBUG_LOG("RGX virtualisation watchdog timestamps (in GPU timer ticks): Fw=%u; OS=%u; diff(FW, OS) = %u",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:			PVR_DUMPDEBUG_LOG("RGX FW State: %s%s", pszState, pszReason);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:			PVR_DUMPDEBUG_LOG("RGX PHR configuration: (%d) %s", psFwSysData->ui32PHRModeMirror, sPHRConfigDescription);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_DUMPDEBUG_LOG("RGX FW State: %s%s (HWRState 0x%08x:%s)", pszState, pszReason, psFwSysData->ui32HWRStateFlags, sHwrStateDescription);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_DUMPDEBUG_LOG("RGX FW Power State: %s (APM %s: %d ok, %d denied, %d non-idle, %d retry, %d other, %d total. Latency: %u ms)",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_DUMPDEBUG_LOG("RGX DVFS: %u frequency changes. "
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:			PVR_DUMPDEBUG_LOG("          Previous frequencies: %u.%03u, %u.%03u, %u.%03u MHz (Sampled at "
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:			PVR_DUMPDEBUG_LOG("RGX FW OS %u - State: %s; Freelists: %s%s; Priority: %d; %s", ui32OSid,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_DUMPDEBUG_LOG("RGX FW State: Unavailable under Guest Mode of operation");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_DUMPDEBUG_LOG("RGX FW Power State: Unavailable under Guest Mode of operation");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_DUMPDEBUG_LOG("STATS[START]: RGXFWIF_STATS_FRAMEWORK_MAX=%d", RGXFWIF_STATS_FRAMEWORK_MAX);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:				PVR_DUMPDEBUG_LOG("STATS[%08x]:%s", ui32Index1, pszLine);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_DUMPDEBUG_LOG("STATS[END]");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	PVR_DUMPDEBUG_LOG("META Slave Port extra debug:");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_DUMPDEBUG_LOG("  * %s: 0x%8.8X", pszRegName, ui32RegVal);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_DUMPDEBUG_LOG("  * 0xA20[%d]: 0x%8.8X", ui32Idx, ui32RegVal);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:			PVR_DUMPDEBUG_LOG("  * 0x%X[%d]: 0x%8.8X", ui32RegAddr, ui32Idx, ui32RegVal);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:typedef struct _TRACEBUF_LOG_ {
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	RGXFW_LOG_SFids	eSFId;
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:} TRACEBUF_LOG;
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:static const TRACEBUF_LOG aLogDefinitions[] =
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:#define X(a, b, c, d, e) {RGXFW_LOG_CREATESFID(a,b,e), #c, d, e},
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	RGXFW_LOG_SFIDLIST
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	const TRACEBUF_LOG *psLogDef = &aLogDefinitions[0];
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		const TRACEBUF_LOG *psLogDef2;
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:					PVR_DUMPDEBUG_LOG("Integrity Check FAIL: %s has an unsupported type not recognized (fmt: %%%c). Please fix.",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:			PVR_DUMPDEBUG_LOG("Integrity Check FAIL: %s has %d arguments but only %d are specified. Please fix.",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:			PVR_DUMPDEBUG_LOG("Integrity Check FAIL: %s has %d arguments but a maximum of 20 are supported. Please fix.",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:			PVR_DUMPDEBUG_LOG("Integrity Check FAIL: %s id %x is not unique, there are %d more. Please fix.",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		if (psRGXFWIfTraceBufCtl->ui32LogType & RGXFWIF_LOG_TYPE_GROUP_MASK)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:			PVR_DUMPDEBUG_LOG("Debug log type: %s ( " RGXFWIF_LOG_ENABLED_GROUPS_LIST_PFSPEC ")",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:							  ((psRGXFWIfTraceBufCtl->ui32LogType & RGXFWIF_LOG_TYPE_TRACE)?("trace"):("tbi")),
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:							  RGXFWIF_LOG_ENABLED_GROUPS_LIST(psRGXFWIfTraceBufCtl->ui32LogType)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:			PVR_DUMPDEBUG_LOG("Debug log type: none");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:					if (ui32DataToId == RGXFW_SF_LAST  &&  RGXFW_LOG_VALIDID(ui32Data))
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:						PVR_DUMPDEBUG_LOG("WARNING: Unrecognized id (%x). From here on the trace might be wrong!", ui32Data);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:						PVR_DUMPDEBUG_LOG("ASSERTION %s failed at %s:%u",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:					PVR_DUMPDEBUG_LOG(szBuffer, ui64Timestamp, tid, groups[RGXFW_SF_GID(ui32Data)],
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:			PVR_DUMPDEBUG_LOG("%" IMG_UINT64_FMTSPEC ":POWMON  0x%08x 0x%08x  0x%08x 0x%08x",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	PVR_DUMPDEBUG_LOG("------[ RGX registers ]------");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	PVR_DUMPDEBUG_LOG("RGX Register Base Address (Linear):   0x%p", psDevInfo->pvRegsBaseKM);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	PVR_DUMPDEBUG_LOG("RGX Register Base Address (Physical): 0x%08lX", (unsigned long)psDevInfo->sRegsPhysBase.uiAddr);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:#define DDLOG32(R)      PVR_DUMPDEBUG_LOG(REG32_FMTSPEC, #R, OSReadHWReg32(pvRegsBaseKM, RGX_CR_##R));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:#define DDLOG64(R)      PVR_DUMPDEBUG_LOG(REG64_FMTSPEC, #R, OSReadHWReg64(pvRegsBaseKM, RGX_CR_##R));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:#define DDLOG32_DPX(R)  PVR_DUMPDEBUG_LOG(REG32_FMTSPEC, #R, OSReadHWReg32(pvRegsBaseKM, DPX_CR_##R));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:#define DDLOG64_DPX(R)  PVR_DUMPDEBUG_LOG(REG64_FMTSPEC, #R, OSReadHWReg64(pvRegsBaseKM, DPX_CR_##R));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:#define DDLOGVAL32(S,V) PVR_DUMPDEBUG_LOG(REG32_FMTSPEC, S, V);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG64(CORE_ID);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG32(CORE_ID);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG32(CORE_REVISION);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG32(DESIGNER_REV_FIELD1);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG32(DESIGNER_REV_FIELD2);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG64(CHANGESET_NUMBER);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG32(META_SP_MSLVIRQSTATUS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG64(CLK_CTRL);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG64(CLK_STATUS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG64(CLK_CTRL2);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG64(CLK_STATUS2);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG64(CLK_XTPLUS_CTRL);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG64(CLK_XTPLUS_STATUS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG32(EVENT_STATUS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG64(TIMER);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG64(MMU_FAULT_STATUS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG64(MMU_FAULT_STATUS_META);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG32(BIF_FAULT_BANK0_MMU_STATUS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG64(BIF_FAULT_BANK0_REQ_STATUS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG32(BIF_FAULT_BANK1_MMU_STATUS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG64(BIF_FAULT_BANK1_REQ_STATUS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG32(BIF_MMU_STATUS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG32(BIF_MMU_ENTRY);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG64(BIF_MMU_ENTRY_STATUS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG32(BIF_JONES_OUTSTANDING_READ);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG32(BIF_BLACKPEARL_OUTSTANDING_READ);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG32(BIF_DUST_OUTSTANDING_READ);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:			DDLOG32(BIF_STATUS_MMU);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:			DDLOG32(BIF_READS_EXT_STATUS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:			DDLOG32(BIF_READS_INT_STATUS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG32(BIFPM_STATUS_MMU);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG32(BIFPM_READS_EXT_STATUS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG32(BIFPM_READS_INT_STATUS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_DUMPDEBUG_LOG("Warning: BRN44871 is present");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG64(CONTEXT_MAPPING0);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG64(CONTEXT_MAPPING1);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG64(CONTEXT_MAPPING2);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG64(CONTEXT_MAPPING3);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG64(CONTEXT_MAPPING4);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG64(BIF_CAT_BASE_INDEX);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG64(BIF_CAT_BASE0);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG64(BIF_CAT_BASE1);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG64(BIF_CAT_BASE2);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG64(BIF_CAT_BASE3);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG64(BIF_CAT_BASE4);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG64(BIF_CAT_BASE5);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG64(BIF_CAT_BASE6);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG64(BIF_CAT_BASE7);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG32(BIF_CTRL_INVAL);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG32(BIF_CTRL);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG64(BIF_PM_CAT_BASE_VCE0);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG64(BIF_PM_CAT_BASE_TE0);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG64(BIF_PM_CAT_BASE_ALIST0);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG64(BIF_PM_CAT_BASE_VCE1);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG64(BIF_PM_CAT_BASE_TE1);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG64(BIF_PM_CAT_BASE_ALIST1);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG32(PERF_TA_PHASE);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG32(PERF_TA_CYCLE);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG32(PERF_3D_PHASE);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG32(PERF_3D_CYCLE);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOGVAL32("PERF_TA_OR_3D_CYCLE", ui32TAOr3DCycles);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOGVAL32("PERF_TA_AND_3D_CYCLE", ui32TAAnd3DCycles);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG32(PERF_COMPUTE_PHASE);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG32(PERF_COMPUTE_CYCLE);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG32(PM_PARTIAL_RENDER_ENABLE);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG32(ISP_RENDER);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG64(TLA_STATUS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG64(MCU_FENCE);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG32(VDM_CONTEXT_STORE_STATUS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG64(VDM_CONTEXT_STORE_TASK0);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG64(VDM_CONTEXT_STORE_TASK1);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG64(VDM_CONTEXT_STORE_TASK2);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG64(VDM_CONTEXT_RESUME_TASK0);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG64(VDM_CONTEXT_RESUME_TASK1);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG64(VDM_CONTEXT_RESUME_TASK2);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG32(ISP_CTL);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG32(ISP_STATUS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG32(MTS_INTCTX);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG32(MTS_BGCTX);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG32(MTS_BGCTX_COUNTED_SCHEDULE);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG32(MTS_SCHEDULE);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG32(MTS_GPU_INT_STATUS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG32(CDM_CONTEXT_STORE_STATUS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG64(CDM_CONTEXT_PDS0);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG64(CDM_CONTEXT_PDS1);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG64(CDM_TERMINATE_PDS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG64(CDM_TERMINATE_PDS1);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG64(CDM_CONTEXT_LOAD_PDS0);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG64(CDM_CONTEXT_LOAD_PDS1);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG32(JONES_IDLE);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	DDLOG32(SIDEKICK_IDLE);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG32(SLC_IDLE);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG32(SLC_STATUS0);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG64(SLC_STATUS1);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:			DDLOG64(SLC_STATUS2);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG32(SLC_CTRL_BYPASS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG64(SLC_CTRL_MISC);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG32(SLC3_IDLE);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG64(SLC3_STATUS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG32(SLC3_FAULT_STOP_STATUS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG32(SCRATCH0);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG32(SCRATCH1);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG32(SCRATCH2);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG32(SCRATCH3);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG32(SCRATCH4);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG32(SCRATCH5);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG32(SCRATCH6);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG32(SCRATCH7);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG32(SCRATCH8);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG32(SCRATCH9);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG32(SCRATCH10);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG32(SCRATCH11);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG32(SCRATCH12);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG32(SCRATCH13);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG32(SCRATCH14);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG32(SCRATCH15);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_LOG_GOTO_IF_ERROR(eError, "RGXReadWithSP", _METASPError);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOGVAL32("T0 TXENABLE", ui32RegVal);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_LOG_GOTO_IF_ERROR(eError, "RGXReadWithSP", _METASPError);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOGVAL32("T0 TXSTATUS", ui32RegVal);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_LOG_GOTO_IF_ERROR(eError, "RGXReadWithSP", _METASPError);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOGVAL32("T0 TXDEFR", ui32RegVal);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_LOG_GOTO_IF_ERROR(eError, "RGXReadMetaCoreReg", _METASPError);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOGVAL32("T0 PC", ui32RegVal);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_LOG_GOTO_IF_ERROR(eError, "RGXReadMetaCoreReg", _METASPError);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOGVAL32("T0 PCX", ui32RegVal);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_LOG_GOTO_IF_ERROR(eError, "RGXReadMetaCoreReg", _METASPError);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOGVAL32("T0 SP", ui32RegVal);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:			PVR_LOG_GOTO_IF_ERROR(eError, "RGXReadWithSP", _METASPError);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:			DDLOGVAL32("T1 TXENABLE", ui32RegVal);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:			PVR_LOG_GOTO_IF_ERROR(eError, "RGXReadWithSP", _METASPError);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:			DDLOGVAL32("T1 TXSTATUS", ui32RegVal);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:			PVR_LOG_GOTO_IF_ERROR(eError, "RGXReadWithSP", _METASPError);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:			DDLOGVAL32("T1 TXDEFR", ui32RegVal);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:			PVR_LOG_GOTO_IF_ERROR(eError, "RGXReadMetaCoreReg", _METASPError);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:			DDLOGVAL32("T1 PC", ui32RegVal);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:			PVR_LOG_GOTO_IF_ERROR(eError, "RGXReadMetaCoreReg", _METASPError);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:			DDLOGVAL32("T1 PCX", ui32RegVal);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:			PVR_LOG_GOTO_IF_ERROR(eError, "RGXReadMetaCoreReg", _METASPError);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:			DDLOGVAL32("T1 SP", ui32RegVal);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:			PVR_LOG_GOTO_IF_ERROR(eError, "RGXReadWithSP", _METASPError);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:			DDLOGVAL32("PERF_COUNT0", ui32RegVal);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:			PVR_LOG_GOTO_IF_ERROR(eError, "RGXReadWithSP", _METASPError);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:			DDLOGVAL32("PERF_COUNT1", ui32RegVal);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:				PVR_DUMPDEBUG_LOG("Failed to validate any FW code corruption");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:			PVR_DUMPDEBUG_LOG("Skipping FW code memory corruption checking as META is disabled");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG32(MIPS_ADDR_REMAP1_CONFIG1);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG64(MIPS_ADDR_REMAP1_CONFIG2);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG32(MIPS_ADDR_REMAP2_CONFIG1);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG64(MIPS_ADDR_REMAP2_CONFIG2);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG32(MIPS_ADDR_REMAP3_CONFIG1);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG64(MIPS_ADDR_REMAP3_CONFIG2);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG32(MIPS_ADDR_REMAP4_CONFIG1);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG64(MIPS_ADDR_REMAP4_CONFIG2);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG32(MIPS_ADDR_REMAP5_CONFIG1);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG64(MIPS_ADDR_REMAP5_CONFIG2);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG64(MIPS_WRAPPER_CONFIG);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		DDLOG32(MIPS_EXCEPTION_STATUS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:			PVR_DUMPDEBUG_LOG("---- [ MIPS internal state ] ----");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:				PVR_DUMPDEBUG_LOG("MIPS extra debug not available");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:				DDLOGVAL32("PC", sMIPSState.ui32ErrorEPC);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:				DDLOGVAL32("STATUS_REGISTER", sMIPSState.ui32StatusRegister);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:				DDLOGVAL32("CAUSE_REGISTER", sMIPSState.ui32CauseRegister);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:				DDLOGVAL32("BAD_REGISTER", sMIPSState.ui32BadRegister);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:				DDLOGVAL32("EPC", sMIPSState.ui32EPC);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:				DDLOGVAL32("SP", sMIPSState.ui32SP);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:				DDLOGVAL32("BAD_INSTRUCTION", sMIPSState.ui32BadInstr);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:					PVR_DUMPDEBUG_LOG("TLB                           :");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:								PVR_DUMPDEBUG_LOG("BRN63553 WA present with a valid TLB entry mapping address 0x0.");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:							PVR_DUMPDEBUG_LOG("Remap unmapped address => 0x%08X",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:						PVR_DUMPDEBUG_LOG("Failed to validate any FW code corruption");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:			PVR_DUMPDEBUG_LOG("--------------------------------");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_DUMPDEBUG_LOG("FW info: UNINITIALIZED");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_DUMPDEBUG_LOG("Mismatch between the number of Operating Systems supported by KM driver (%d) and FW (%d)",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	PVR_DUMPDEBUG_LOG("------[ RGX Device: Start ]------");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	PVR_DUMPDEBUG_LOG("------[ RGX Info ]------");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	PVR_DUMPDEBUG_LOG("MTK Version String: %s", MTK_DEBUG_VERSION_STR);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	PVR_DUMPDEBUG_LOG("RGX BVNC: %d.%d.%d.%d (%s)", psDevInfo->sDevFeatureCfg.ui32B, \
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	PVR_DUMPDEBUG_LOG("RGX Device State: %s", _RGXGetDebugDevStateString(psDeviceNode->eDevState));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	PVR_DUMPDEBUG_LOG("RGX Power State: %s", _RGXGetDebugDevPowerStateString(ePowerState));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:			PVR_DUMPDEBUG_LOG("RGX Kernel CCB WO:0x%X RO:0x%X",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:			PVR_DUMPDEBUG_LOG("RGX Firmware CCB WO:0x%X RO:0x%X",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	        PVR_DUMPDEBUG_LOG("RGX WorkEst CCB WO:0x%X RO:0x%X",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:				PVR_DUMPDEBUG_LOG("RGX Checkpoint CCB WO:0x%X RO:0x%X (Check State: FW=%#X, HOST=%#X)",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_DUMPDEBUG_LOG("RGX Kernel CCB commands executed = %d",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_DUMPDEBUG_LOG("RGX SLR: Forced UFO updates requested = %d",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:				PVR_DUMPDEBUG_LOG("RGX SLR: (most recent forced update was around %" IMG_UINT64_FMTSPEC ".%09" IMG_UINT64_FMTSPEC ")",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:				PVR_DUMPDEBUG_LOG("RGX SLR: (unable to force update as fence contained no sync checkpoints)");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:				PVR_DUMPDEBUG_LOG("RGX SLR:{%" IMG_UINT64_FMTSPEC ".%09" IMG_UINT64_FMTSPEC
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:			for (ui8Idx=0; ui8Idx<PVR_SLR_LOG_ENTRIES;ui8Idx++)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:					PVR_DUMPDEBUG_LOG("RGX SLR:[%" IMG_UINT64_FMTSPEC ".%09" IMG_UINT64_FMTSPEC
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_DUMPDEBUG_LOG("RGX SLR: Disabled");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:					PVR_DUMPDEBUG_LOG(MSG_IRQ_CNT_TYPE "%u: FW IRQ count = %u", ui32idx, ui32IrqCnt);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:						PVR_DUMPDEBUG_LOG("Last sampled IRQ count in LISR = %u", psDevInfo->aui32SampleIRQCount[ui32idx]);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_DUMPDEBUG_LOG("FW System config flags = 0x%08X (%s)", psFwSysData->ui32ConfigFlags, sFwSysFlagsDescription);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:		PVR_DUMPDEBUG_LOG("FW OS config flags = 0x%08X (%s)", psFwOsData->ui32FwOsConfigFlags, sFwOsFlagsDescription);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:			PVR_DUMPDEBUG_LOG(" (!) %s. No registers dumped", PVRSRV_VZ_MODE_IS(GUEST) ? "Guest Mode of operation" : "RGX power is down");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	PVR_DUMPDEBUG_LOG("------[ RGX FW Trace Info ]------");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:				if (psRGXFWIfTraceBufCtl->ui32LogType & RGXFWIF_LOG_TYPE_GROUP_MASK)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:					PVR_DUMPDEBUG_LOG("Debug log type: %s ( " RGXFWIF_LOG_ENABLED_GROUPS_LIST_PFSPEC ")",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:									  ((psRGXFWIfTraceBufCtl->ui32LogType & RGXFWIF_LOG_TYPE_TRACE)?("trace"):("tbi")),
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:									  RGXFWIF_LOG_ENABLED_GROUPS_LIST(psRGXFWIfTraceBufCtl->ui32LogType)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:					PVR_DUMPDEBUG_LOG("Debug log type: none");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:					PVR_DUMPDEBUG_LOG("RGX FW thread %d: Trace buffer not yet allocated",tid);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:				PVR_DUMPDEBUG_LOG("------[ RGX FW thread %d trace START ]------", tid);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:				PVR_DUMPDEBUG_LOG("FWT[traceptr]: %X", psRGXFWIfTraceBufCtl->sTraceBuf[tid].ui32TracePointer);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:				PVR_DUMPDEBUG_LOG("FWT[tracebufsize]: %X", psRGXFWIfTraceBufCtl->ui32TraceBufSizeInDWords);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:							PVR_DUMPDEBUG_LOG("FWT[%08x]: 00000000 ... 00000000", ui32LineOffset);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:							PVR_DUMPDEBUG_LOG("FWT[...]: %d lines were all zero", ui32CountLines);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:						PVR_DUMPDEBUG_LOG("FWT[%08x]:%s", ui32LineOffset, pszLine);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:					PVR_DUMPDEBUG_LOG("FWT[END]: %d lines were all zero", ui32CountLines);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:				PVR_DUMPDEBUG_LOG("------[ RGX FW thread %d trace END ]------", tid);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:				PVR_DUMPDEBUG_LOG("------[ Full CCB Status ]------");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:				PVR_DUMPDEBUG_LOG("------[ Stalled FWCtxs ]------");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdebug.c:	PVR_DUMPDEBUG_LOG("------[ RGX Device: End ]------");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxkicksync.c:									 ui32CCBAllocSizeLog2 ? ui32CCBAllocSizeLog2 : RGX_KICKSYNC_CCB_SIZE_LOG2,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxkicksync.c:									 ui32CCBMaxAllocSizeLog2 ? ui32CCBMaxAllocSizeLog2 : RGX_KICKSYNC_CCB_MAX_SIZE_LOG2,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxkicksync.c:		PVR_LOG(("%s: Unexpected error from RGXFWRequestCommonContextCleanUp (%s)",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxkicksync.c:			PVR_LOG_IF_ERROR(eError, "FWCommonContextSetFlags");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxkicksync.c:		PVR_LOG_RETURN_IF_FALSE(paui32ClientUpdateValue != NULL,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxmulticore.c:		PVR_LOG(("Multicore system has %u cores", ui32NumCores));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxmulticore.c:			PVR_LOG(("Configured for %u multicores", ui32NumCores));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxmulticore.c:					PVR_LOG(("Core %d has capabilities value 0x%x", i, (IMG_UINT32)(*pui64Caps) ));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxpower.c:					                              POLL_FLAG_LOG_ERROR);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxpower.c:				PVR_LOG(("MIPS TLB could not be initialised. Boot data info:"
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxpower.c:	PVR_LOG(("%s: FW reached boot stage %i/%i.",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxpower.c:								 POLL_FLAG_LOG_ERROR | POLL_FLAG_DEBUG_DUMP) != PVRSRV_OK)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxpower.c:	PVR_LOG(("MTS passed sideband tests"));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxpower.c:			                         POLL_FLAG_LOG_ERROR | POLL_FLAG_DEBUG_DUMP) != PVRSRV_OK)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxpower.c:			PVR_LOG_ERROR(eError, "PVRSRVPowerTryLock");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxinit.c:#define RGX_MMU_LOG2_PAGE_SIZE_4KB   (12)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxinit.c:#define RGX_MMU_LOG2_PAGE_SIZE_16KB  (14)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxinit.c:#define RGX_MMU_LOG2_PAGE_SIZE_64KB  (16)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxinit.c:#define RGX_MMU_LOG2_PAGE_SIZE_256KB (18)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxinit.c:#define RGX_MMU_LOG2_PAGE_SIZE_1MB   (20)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxinit.c:#define RGX_MMU_LOG2_PAGE_SIZE_2MB   (21)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxinit.c:		PVR_LOG(("OSGetKMAppHintUINT32(TestSLRInterval) ui32AppHintDefault=%d, psDevInfo->ui32TestSLRInterval=%d",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxinit.c:	PVR_LOG(("RGX Firmware image '%s' loaded", pszLoadedFwStr));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxinit.c:			PVR_LOG_GOTO_IF_ERROR(eError, "DevmemFindHeapByName", failed_to_find_heap);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxinit.c:		PVR_LOG_GOTO_IF_ERROR(eError, "PhysHeapRegionGetDevPAddr", failed_to_find_heap);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxinit.c:				PVR_LOG_GOTO_IF_ERROR(eError, "RGXFwRawHeapAllocMap", failed_to_find_heap);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxinit.c:		PVR_LOG_GOTO_IF_ERROR(eError, "PvzClientMapDevPhysHeap", failed_to_find_heap);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxinit.c:	IMG_DEVMEM_LOG2ALIGN_T uiLog2Align = OSGetPageShift();
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxinit.c:		uiLog2Align = RGXMIPSFW_LOG2_PAGE_SIZE_64K;
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxinit.c:			PVR_LOG(("(FAIL) RGXDevInitCompatCheck: Mismatch in Firmware and KM driver build options; "
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxinit.c:			PVR_LOG(("(FAIL) RGXDevInitCompatCheck: Mismatch in Firmware-side and KM driver build options; "
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxinit.c:		PVR_LOG(("(FAIL) RGXDevInitCompatCheck: Incompatible driver DDK version (%u.%u) / Firmware DDK version (%u.%u).",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxinit.c:		PVR_LOG(("(WARN) RGXDevInitCompatCheck: Different driver DDK build version (%d) / Firmware DDK build version (%d).",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxinit.c:			PVR_LOG(("(FAIL) %s: Incompatible compatibility struct version of driver (%u) and firmware (%u).",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxinit.c:			PVR_LOG(("(FAIL) RGXDevInitCompatCheck: Mismatch in KM driver BVNC (%u.%u.%u.%u) and Firmware BVNC (%u.%u.%u.%u)",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxinit.c:		PVR_LOG(("BVNC compatibility checks between driver and HW are disabled (AppHint override)"));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxinit.c:		PVR_LOG(("Compatibility checks: Ignoring fields: '%s%s%s%s' of HW BVNC.",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxinit.c:			PVR_LOG(("(FAIL) %s: Incompatible compatibility struct version of HW (%d) and FW (%d).",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxinit.c:			PVR_LOG(("(FAIL) RGXDevInitCompatCheck: Incompatible HW BVNC (%d.%d.%d.%d) and FW BVNC (%d.%d.%d.%d).",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxinit.c:		PVR_LOG(("RGXDevInitCompatCheck: Incompatible driver %s version (%d) / HW %s version (%d).",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxinit.c:			PVR_LOG(("%s: Reading RGX META register failed. Is the GPU correctly powered up? (%u)",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxinit.c:				RGXMIPSFW_TRAMPOLINE_LOG2_SEGMENT_SIZE,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxinit.c:		PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetFirmwareAddress:1", failFWCorememCodeMemDescFwAddr);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxinit.c:		PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetFirmwareAddress:2", failFWCorememDataMemDescFwAddr);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxinit.c:	*pui32Value &= RGXFWIF_LOG_TYPE_GROUP_MASK;
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxinit.c:		if (*pui32Value & RGXFWIF_LOG_TYPE_TRACE)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxinit.c:			BITMASK_SET(ui32Value, RGXFWIF_LOG_TYPE_TRACE);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxinit.c:		BITMASK_SET(ui32RGXFWLogType, RGXFWIF_LOG_TYPE_TRACE);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxinit.c:		BITMASK_UNSET(ui32RGXFWLogType, RGXFWIF_LOG_TYPE_TRACE);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxinit.c:	PVR_LOG_IF_ERROR(eError, "DeviceDepBridgeDeInit");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxinit.c:	PVR_LOG_IF_ERROR(eError, "HTBDeInit");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxinit.c:		PVR_LOG_GOTO_IF_ERROR(eError, "PhysHeapRegionGetDevPAddr", ErrorDeinit);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxinit.c:		PVR_LOG_GOTO_IF_ERROR(eError, "PhysHeapRegionGetCpuPAddr", ErrorDeinit);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxinit.c:		PVR_LOG_GOTO_IF_ERROR(eError, "PhysHeapRegionGetSize", ErrorDeinit);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxinit.c:		PVR_LOG_GOTO_IF_FALSE(uPhysheapSize >= ui64ExpectedHeapSize,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxinit.c:		PVR_LOG_GOTO_IF_ERROR(eError, "PVRSRVCreateRegionRA(FwMain)", ErrorDeinit);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxinit.c:		PVR_LOG_GOTO_IF_ERROR(eError, "PVRSRVCreateRegionRA(FwCfg)", ErrorDeinit);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxinit.c:			PVR_LOG_GOTO_IF_ERROR(eError, "PVRSRVCreateRegionRA(FwMMU)", ErrorDeinit);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxinit.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXHWPerfInit", e14);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxinit.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXDebugInit", e15);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxinit.c:	PVR_LOG_IF_ERROR(eError, "DeviceDepBridgeInit");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.h:#define MIN_SAFE_CCB_SIZE_LOG2         13  /* 8K (2 Pages) */
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.h:#define MAX_SAFE_CCB_SIZE_LOG2         18  /* 256K (64 Pages) */
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.h:#define RGX_TQ3D_CCB_SIZE_LOG2         PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_TQ3D
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.h:static_assert(RGX_TQ3D_CCB_SIZE_LOG2 >= MIN_SAFE_CCB_SIZE_LOG2 &&
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.h:	RGX_TQ3D_CCB_SIZE_LOG2 <= MAX_SAFE_CCB_SIZE_LOG2, "TQ3D CCB size is invalid");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.h:#define RGX_TQ3D_CCB_MAX_SIZE_LOG2		PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_TQ3D
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.h:static_assert(RGX_TQ3D_CCB_MAX_SIZE_LOG2 >= PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_TQ3D
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.h:	&& RGX_TQ3D_CCB_MAX_SIZE_LOG2 <= MAX_SAFE_CCB_SIZE_LOG2, "TQ3D max CCB size is invalid");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.h:#define RGX_TQ2D_CCB_SIZE_LOG2         PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_TQ2D
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.h:static_assert(RGX_TQ2D_CCB_SIZE_LOG2 >= MIN_SAFE_CCB_SIZE_LOG2 &&
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.h:	RGX_TQ2D_CCB_SIZE_LOG2 <= MAX_SAFE_CCB_SIZE_LOG2, "TQ2D CCB size is invalid");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.h:#define RGX_TQ2D_CCB_MAX_SIZE_LOG2		PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_TQ2D
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.h:static_assert(RGX_TQ2D_CCB_MAX_SIZE_LOG2 >= PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_TQ2D &&
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.h:	RGX_TQ2D_CCB_MAX_SIZE_LOG2 <= MAX_SAFE_CCB_SIZE_LOG2, "TQ2D max CCB size is invalid");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.h:#define RGX_CDM_CCB_SIZE_LOG2          PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_CDM
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.h:static_assert(RGX_CDM_CCB_SIZE_LOG2 >= MIN_SAFE_CCB_SIZE_LOG2 &&
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.h:	RGX_CDM_CCB_SIZE_LOG2 <= MAX_SAFE_CCB_SIZE_LOG2, "CDM CCB size is invalid");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.h:#define RGX_CDM_CCB_MAX_SIZE_LOG2		PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_CDM
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.h:static_assert(RGX_CDM_CCB_MAX_SIZE_LOG2 >= PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_CDM &&
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.h:	RGX_CDM_CCB_MAX_SIZE_LOG2 <= MAX_SAFE_CCB_SIZE_LOG2, "CDM max CCB size is invalid");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.h:#define RGX_TA_CCB_SIZE_LOG2           PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_TA
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.h:static_assert(RGX_TA_CCB_SIZE_LOG2 >= MIN_SAFE_CCB_SIZE_LOG2 &&
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.h:	RGX_TA_CCB_SIZE_LOG2 <= MAX_SAFE_CCB_SIZE_LOG2, "TA CCB size is invalid");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.h:#define RGX_TA_CCB_MAX_SIZE_LOG2		PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_TA
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.h:static_assert(RGX_TA_CCB_MAX_SIZE_LOG2 >= PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_TA &&
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.h:	RGX_TA_CCB_MAX_SIZE_LOG2 <= MAX_SAFE_CCB_SIZE_LOG2, "TA max CCB size is invalid");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.h:#define RGX_3D_CCB_SIZE_LOG2           PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_3D
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.h:static_assert(RGX_3D_CCB_SIZE_LOG2 >= MIN_SAFE_CCB_SIZE_LOG2 &&
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.h:	RGX_3D_CCB_SIZE_LOG2 <= MAX_SAFE_CCB_SIZE_LOG2, "3D CCB size is invalid");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.h:#define RGX_3D_CCB_MAX_SIZE_LOG2		PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_3D
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.h:static_assert(RGX_3D_CCB_MAX_SIZE_LOG2 >= PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_3D &&
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.h:	RGX_3D_CCB_MAX_SIZE_LOG2 <= MAX_SAFE_CCB_SIZE_LOG2, "3D max CCB size is invalid");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.h:#define RGX_KICKSYNC_CCB_SIZE_LOG2     PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_KICKSYNC
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.h:static_assert(RGX_KICKSYNC_CCB_SIZE_LOG2 >= MIN_SAFE_CCB_SIZE_LOG2 &&
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.h:	RGX_KICKSYNC_CCB_SIZE_LOG2 <= MAX_SAFE_CCB_SIZE_LOG2, "KickSync CCB size is invalid");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.h:#define RGX_KICKSYNC_CCB_MAX_SIZE_LOG2	PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_KICKSYNC
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.h:static_assert(RGX_KICKSYNC_CCB_MAX_SIZE_LOG2 >= PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_KICKSYNC &&
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.h:	RGX_KICKSYNC_CCB_MAX_SIZE_LOG2 <= MAX_SAFE_CCB_SIZE_LOG2, "KickSync max CCB size is invalid");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.h:#define RGX_TDM_CCB_SIZE_LOG2         PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_TDM
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.h:static_assert(RGX_TDM_CCB_SIZE_LOG2 >= MIN_SAFE_CCB_SIZE_LOG2 &&
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.h:	RGX_TDM_CCB_SIZE_LOG2 <= MAX_SAFE_CCB_SIZE_LOG2, "TDM CCB size is invalid");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.h:#define RGX_TDM_CCB_MAX_SIZE_LOG2		PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_TDM
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.h:static_assert(RGX_TDM_CCB_MAX_SIZE_LOG2 >= PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_TDM &&
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.h:	RGX_TDM_CCB_MAX_SIZE_LOG2 <= MAX_SAFE_CCB_SIZE_LOG2, "TDM max CCB size is invalid");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxpdump.c:	pui32Word[3] = ui32LogicalWidth << IMAGE_HEADER_WORD3_LOGICAL_WIDTH_SHIFT;
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxpdump.c:	pui32Word[4] = ui32LogicalHeight << IMAGE_HEADER_WORD4_LOGICAL_HEIGHT_SHIFT;
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxlayer_impl.c:				POLL_FLAG_LOG_ERROR) != PVRSRV_OK)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxlayer_impl.c:				POLL_FLAG_LOG_ERROR) != PVRSRV_OK)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxlayer_impl.c:				POLL_FLAG_LOG_ERROR) != PVRSRV_OK)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxlayer_impl.c:	PVR_LOG(("Starting fabric coherency test ....."));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxlayer_impl.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetFirmwareAddress", e2);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxlayer_impl.c:				PVR_LOG(("CPU:Write/GPU:Read Snoop Miss Test: starting [run #%u]", ui32OddEven));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxlayer_impl.c:				PVR_LOG(("GPU:Write/CPU:Read Snoop Miss Test: starting [run #%u]", ui32OddEven));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxlayer_impl.c:				PVR_LOG(("CPU:Write/GPU:Read Snoop Hit  Test: starting [run #%u]", ui32OddEven));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxlayer_impl.c:				PVR_LOG(("GPU:Write/CPU:Read Snoop Hit  Test: starting [run #%u]", ui32OddEven));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxlayer_impl.c:				PVR_LOG(("Internal error, exiting test"));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxlayer_impl.c:						PVR_LOG(("At Offset: %d, Expected: %x, Got: %x",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxlayer_impl.c:				PVR_LOG(("CPU:Write/GPU:Read Snoop Miss Test: completed [run #%u]: %s", ui32OddEven, bSubTestPassed ? "PASSED" : "FAILED"));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxlayer_impl.c:				PVR_LOG(("GPU:Write/CPU:Read Snoop Miss Test: completed [run #%u]: %s", ui32OddEven, bSubTestPassed ? "PASSED" : "FAILED"));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxlayer_impl.c:				PVR_LOG(("CPU:Write/GPU:Read Snoop Hit  Test: completed [run #%u]: %s", ui32OddEven, bSubTestPassed ? "PASSED" : "FAILED"));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxlayer_impl.c:				PVR_LOG(("GPU:Write/CPU:Read Snoop Hit  Test: completed [run #%u]: %s", ui32OddEven, bSubTestPassed ? "PASSED" : "FAILED"));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxlayer_impl.c:				PVR_LOG(("Internal error, exiting test"));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxlayer_impl.c:		PVR_LOG(("fabric coherency test: PASSED"));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxlayer_impl.c:		PVR_LOG(("fabric coherency test: FAILED"));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:	PVR_LOG_RETURN_IF_ERROR(eError, "OSLockCreate");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:	PVR_LOG_RETURN_VOID_IF_ERROR(eError, "RGXWaitForKCCBSlotUpdate");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetFirmwareAddress", e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:	PVR_LOG_GOTO_IF_ERROR(eError, "TLStreamCreate", e1);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:	PVR_LOG_IF_ERROR(eError, "TLStreamSetNotifStream");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXWaitForKCCBSlotUpdate", return_);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:		PVR_LOG_IF_ERROR(eError, "PVRSRVCreateHWPerfHostThread");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:		PVR_LOG_IF_ERROR(eError, "PVRSRVDestroyHWPerfHostThread");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:		PVR_LOG(("HWPerfHost deferred events buffer high-watermark / size: (%u / %u)",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:		PVR_LOG(("HWPerfHost deferred event retries: WaitForAtomicCtxPktHighWatermark(%u) "
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:	PVR_LOG_RETURN_IF_FALSE(ui32InfoPageIdx >= HWPERF_INFO_IDX_START &&
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:	PVR_LOG_RETURN_IF_FALSE((NULL != psDevInfo), "psDevInfo invalid", PVRSRV_ERROR_INVALID_PARAMS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:	PVR_LOG_RETURN_IF_FALSE((NULL != psDeviceNode), "psConnection invalid", PVRSRV_ERROR_INVALID_PARAMS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:	PVR_LOG_RETURN_IF_FALSE(ui32ArrayLen > 0, "ui32ArrayLen is 0",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:	PVR_LOG_RETURN_IF_FALSE(psBlockConfigs != NULL, "psBlockConfigs is NULL",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:	PVR_LOG_RETURN_IF_ERROR(eError, "DevmemFwAllocate");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetFirmwareAddress", fail1);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:	PVR_LOG_GOTO_IF_ERROR(eError, "DevmemAcquireCpuVirtAddr", fail2);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXScheduleCommandAndGetKCCBSlot", fail2);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXWaitForKCCBSlotUpdate", fail3);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:		PVR_LOG_RETURN_IF_ERROR(eError, "DevmemFwAllocate");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:		PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetFirmwareAddress", fail1);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:		PVR_LOG_GOTO_IF_ERROR(eError, "DevmemAcquireCpuVirtAddr", fail2);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXScheduleCommandAndGetKCCBSlot", fail3);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXWaitForKCCBSlotUpdate", fail3);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(psBlockIDs != NULL, "psBlockIDs");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(ui32ArrayLen <= RGXFWIF_HWPERF_CTRL_BLKS_MAX,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:	PVR_LOG_RETURN_IF_ERROR(eError, "RGXScheduleCommandAndGetKCCBSlot");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:	PVR_LOG_RETURN_IF_ERROR(eError, "RGXWaitForKCCBSlotUpdate");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:	PVR_LOG_GOTO_IF_ERROR(eError, "OSLockCreate", error);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:		PVR_LOG_IF_ERROR(eError, "PVRSRVCreateHWPerfHostThread");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:	PVR_LOG_RETURN_IF_ERROR(eError, "TLStreamCreate");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:	PVR_LOG_IF_ERROR(eError, "TLStreamSetNotifStream");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:	PVR_LOG_IF_ERROR(eError, "TLStreamMarkStreamOpen");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:	PVR_LOG_GOTO_IF_ERROR(eError, "OSInstallMISR", err_install_misr);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:	PVR_LOG_GOTO_IF_ERROR(eError, "OSSpinLockCreate", err_spinlock_create);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:			/* PVR_LOG/printk isn't recommended in atomic context. Perhaps we'll do
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:			//			PVR_LOG(("%s: No more space in deferred events buffer (%u/%u) W=%u,R=%u",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:		PVR_LOG_RETURN_IF_ERROR(eError, "TLClientOpenStream(RGX_HWPerf)");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:		PVR_LOG_RETURN_IF_ERROR(eError, "TLClientOpenStream(Host_HWPerf)");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXHWPerfLazyConnect", e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXHWPerfOpen", e1);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:		PVR_LOG_RETURN_IF_ERROR(eError, "PVRSRVRGXCtrlHWPerfKM");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:		PVR_LOG_RETURN_IF_ERROR(eError, "PVRSRVRGXCtrlHWPerfKM");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:	PVR_LOG_RETURN_IF_FALSE((NULL != psHWPerfConnection), "psHWPerfConnection invalid",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:	PVR_LOG_RETURN_IF_FALSE((0 != ui16NumCustomCounters), "uiNumBlocks invalid",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:	PVR_LOG_RETURN_IF_FALSE((NULL != pui32CustomCounterIDs),"asBlockConfigs invalid",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:	PVR_LOG_RETURN_IF_FALSE((!(ui16CustomBlockID > RGX_HWPERF_MAX_CUSTOM_BLKS)),"ui16CustomBlockID invalid",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:	PVR_LOG_RETURN_IF_FALSE((!(ui16NumCustomCounters > RGX_HWPERF_MAX_CUSTOM_CNTRS)),"ui16NumCustomCounters invalid",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:		PVR_LOG_RETURN_IF_ERROR(eError, "PVRSRVRGXCtrlCustHWPerfKM");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:		PVR_LOG_RETURN_IF_ERROR(eError, szFunctionString);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:		PVR_LOG_RETURN_IF_ERROR(eError, "TLClientAcquireData");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:				PVR_LOG_IF_ERROR(eError, "TLClientReleaseData");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:				PVR_LOG_IF_ERROR(eError, "TLClientCloseStream");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:	PVR_LOG_IF_ERROR(eError, "RGXHWPerfClose");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxhwperf.c:	PVR_LOG_IF_ERROR(eError, "RGXHWPerfFreeConnection");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxtransfer.c:	                                 ui32CCBAllocSizeLog2 ? ui32CCBAllocSizeLog2 : RGX_TQ3D_CCB_SIZE_LOG2,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxtransfer.c:	                                 ui32CCBMaxAllocSizeLog2 ? ui32CCBMaxAllocSizeLog2 : RGX_TQ3D_CCB_MAX_SIZE_LOG2,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxtransfer.c:	                                 ui32CCBAllocSizeLog2 ? ui32CCBAllocSizeLog2 : RGX_TQ2D_CCB_SIZE_LOG2,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxtransfer.c:	                                 ui32CCBMaxAllocSizeLog2 ? ui32CCBMaxAllocSizeLog2 : RGX_TQ2D_CCB_MAX_SIZE_LOG2,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxtransfer.c:		PVR_LOG(("%s: Unexpected error from RGXFWRequestCommonContextCleanUp (%s)",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxtransfer.c:		PVR_LOG(("%s: Unexpected error from RGXFWRequestCommonContextCleanUp (%s)",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxtransfer.c:		PVR_LOG_RETURN_IF_FALSE((paui32ClientUpdateCount != NULL),
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxtransfer.c:				PVR_LOG_RETURN_IF_FALSE(*papui32UpdateValue != NULL,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxtransfer.c:		HTBLOGK(HTB_SF_MAIN_KICK_3D,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxtransfer.c:		HTBLOGK(HTB_SF_MAIN_KICK_2D,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxtransfer.c:			PVR_LOG_IF_ERROR(eError, "FWCommonContextSetFlags eError");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxtransfer.c:			PVR_LOG_IF_ERROR(eError2, "FWCommonContextSetFlags eError2");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxstartstop.c:	IMG_UINT64 ui64RemapSettings = RGXMIPSFW_BOOT_REMAP_LOG2_SEGMENT_SIZE; /* Same for all remap registers */
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxstartstop.c:		ui64RemapSettings = RGXMIPSFW_TRAMPOLINE_LOG2_SEGMENT_SIZE;
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxtdmtransfer.c:			ui32CCBAllocSizeLog2 ? ui32CCBAllocSizeLog2 : RGX_TDM_CCB_SIZE_LOG2,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxtdmtransfer.c:			ui32CCBMaxAllocSizeLog2 ? ui32CCBMaxAllocSizeLog2 : RGX_TDM_CCB_MAX_SIZE_LOG2,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxtdmtransfer.c:		PVR_LOG(("%s: Unexpected error from RGXFWRequestCommonContextCleanUp (%s)",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxtdmtransfer.c:		PVR_LOG_RETURN_IF_FALSE(paui32ClientUpdateValue != NULL,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxtdmtransfer.c:		/* HTBLOGK(HTB_SF_MAIN_KICK_TDM, */
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxtdmtransfer.c:			PVR_LOG_IF_ERROR(eError, "FWCommonContextSetFlags");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxmipsmmuinit.c:	sRGXMMUPCEConfig.uiAddrLog2Align = (IMG_UINT32)RGXMIPSFW_LOG2_PAGE_SIZE_4K; /* Alignment of PD AND PC */
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxmipsmmuinit.c:	sRGXMMUTopLevelDevVAddrConfig.uiPTIndexShift = (IMG_UINT32)RGXMIPSFW_LOG2_PAGE_SIZE_4K;
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxmipsmmuinit.c:	sRGXMMUTopLevelDevVAddrConfig.uiNumEntriesPT = (RGX_NUM_OS_SUPPORTED << RGXMIPSFW_LOG2_PAGETABLE_SIZE_4K) >> RGXMIPSFW_LOG2_PTE_ENTRY_SIZE;
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxmipsmmuinit.c:	sRGXMMUPDEConfig_4KBDP.uiAddrLog2Align = (IMG_UINT32)RGXMIPSFW_LOG2_PAGE_SIZE_4K;
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxmipsmmuinit.c:	sRGXMMUPTEConfig_4KBDP.uiBytesPerEntry = 1 << RGXMIPSFW_LOG2_PTE_ENTRY_SIZE;
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxmipsmmuinit.c:	sRGXMMUPTEConfig_4KBDP.uiAddrLog2Align = (IMG_UINT32)RGXMIPSFW_LOG2_PAGE_SIZE_4K;
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxmipsmmuinit.c:	sRGXMMUDevVAddrConfig_4KBDP.uiNumEntriesPT = (RGX_NUM_OS_SUPPORTED << RGXMIPSFW_LOG2_PAGETABLE_SIZE_4K) >> RGXMIPSFW_LOG2_PTE_ENTRY_SIZE;
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxmipsmmuinit.c:	sRGXMMUPTEConfig_64KBDP.uiBytesPerEntry = 1 << RGXMIPSFW_LOG2_PTE_ENTRY_SIZE;
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxmipsmmuinit.c:	sRGXMMUPTEConfig_64KBDP.uiAddrLog2Align = (IMG_UINT32)RGXMIPSFW_LOG2_PAGE_SIZE_4K;
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxmipsmmuinit.c:	sRGXMMUDevVAddrConfig_64KBDP.uiPTIndexShift = (IMG_UINT32)RGXMIPSFW_LOG2_PAGE_SIZE_64K;
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxmipsmmuinit.c:	sRGXMMUDevVAddrConfig_64KBDP.uiNumEntriesPT = (RGX_NUM_OS_SUPPORTED << RGXMIPSFW_LOG2_PAGETABLE_SIZE_64K) >> RGXMIPSFW_LOG2_PTE_ENTRY_SIZE;
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxmipsmmuinit.c:	sRGXMMUDeviceAttributes.ui32BaseAlign = RGXMIPSFW_LOG2_PAGETABLE_SIZE_4K;
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxmipsmmuinit.c:	case RGXMIPSFW_LOG2_PAGE_SIZE_64K:
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxmipsmmuinit.c:	case RGXMIPSFW_LOG2_PAGE_SIZE_4K:
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxmipsmmuinit.c:	case RGXMIPSFW_LOG2_PAGE_SIZE_64K:
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxmipsmmuinit.c:	case RGXMIPSFW_LOG2_PAGE_SIZE_4K:
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxsrvinit.c:#define X(a, b) { #b, HTB_LOG_GROUP_FLAG(a) },
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxsrvinit.c:	HTB_LOG_SFGROUPLIST
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxsrvinit.c:static SRV_INIT_PARAM_UINT32_LOOKUP fwt_loggroup_tbl[] = { RGXFWIF_LOG_GROUP_NAME_VALUE_MAP };
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxsrvinit.c:		BITMASK_SET(ui32LogGroup, RGXFWIF_LOG_TYPE_TRACE);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxsrvinit.c:			if ((ui32LogGroup & RGXFWIF_LOG_TYPE_GROUP_MASK) == 0)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxsrvinit.c:				BITMASK_SET(ui32LogGroup, RGXFWIF_LOG_TYPE_GROUP_MAIN);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxsrvinit.c:			BITMASK_UNSET(ui32LogGroup, RGXFWIF_LOG_TYPE_TRACE);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxsrvinit.c:	ui32DeviceFlags |= psHints->bDisableFEDLogging ? RGXKM_DEVICE_STATE_DISABLE_DW_LOGGING_EN : 0;
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxsrvinit.c:	PVR_LOG_GOTO_IF_ERROR(eError, "DevmemAcquireCpuVirtAddr", cleanup_initfw);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxsrvinit.c:		PVR_LOG_GOTO_IF_ERROR(eError, "DevmemAcquireCpuVirtAddr", release_code);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxsrvinit.c:		PVR_LOG_GOTO_IF_ERROR(eError, "DevmemAcquireCpuVirtAddr", release_data);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxsrvinit.c:		PVR_LOG_GOTO_IF_ERROR(eError, "DevmemAcquireCpuVirtAddr", release_corememcode);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxsrvinit.c:	PVR_LOG_GOTO_IF_ERROR(eError, "DevmemAcquireCpuVirtAddr", failHWPerfCountersMemDescAqCpuVirt);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxsrvinit.c:		PVR_LOG(("AutoVz startup check: firmware is %s;",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxta3d.c:		PVR_LOG(("%s: Unexpected error from RGXFWRequestCommonContextCleanUp (%s)",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxta3d.c:		PVR_LOG(("%s: Unexpected error from RGXFWRequestCommonContextCleanUp (%s)",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxta3d.c:	PVR_LOG(("Freelist FWAddr 0x%08x, ID = %d, CheckSum 0x%016" IMG_UINT64_FMTSPECx,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxta3d.c:	PVR_LOG(("  Initial Memory block"));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxta3d.c:	PVR_LOG(("  Grow Memory blocks"));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxta3d.c:		PVR_LOG(("%s: Failed to allocate buffer to check freelist %p!",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxta3d.c:		PVR_LOG(("%s: Failed to get freelist data for freelist %p!",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxta3d.c:				PVR_LOG(("%s: Freelist consistency failure: FW addr: 0x%08X, Double entry found 0x%08x on idx: %d and %d of %d",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxta3d.c:		PVR_LOG(("%s: Checksum mismatch for freelist %p! Expected 0x%016" IMG_UINT64_FMTSPECx " calculated 0x%016" IMG_UINT64_FMTSPECx,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxta3d.c:		PVR_LOG(("%s: Sleeping for ever!", __func__));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxta3d.c:	PVR_LOG_IF_ERROR(eError, "RIWriteMEMDESCEntryKM");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxta3d.c:			PVR_LOG_IF_ERROR(eError, "RIDeleteMEMDESCEntryKM");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxta3d.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetFirmwareAddress:1", FWRTDataFwAddrError);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxta3d.c:	PVR_LOG_GOTO_IF_ERROR(eError, "Devmem AcquireCpuVirtAddr", FWRTDataCpuMapError);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxta3d.c:			PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetFirmwareAddress:2", FWAllocateRTArryFwAddrError);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxta3d.c:			PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetFirmwareAddress:3", FWAllocRTAccArryFwAddrError);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxta3d.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetFirmwareAddress", err_HWRTDataCommonFwAddr);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxta3d.c:	PVR_LOG_GOTO_IF_ERROR(eError, "DevmemAcquireCpuVirtAddr", err_HWRTDataCommonVA);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxta3d.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetFirmwareAddress", ErrorSetFwAddr);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxta3d.c:	PVR_LOG_GOTO_IF_ERROR(eError, "Devmem AcquireCpuVirtAddr", FWFreeListCpuMap);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxta3d.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetFirmwareAddress", ErrorSetFwAddr);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxta3d.c:			ui32CCBAllocSizeLog2 ? ui32CCBAllocSizeLog2 : RGX_TA_CCB_SIZE_LOG2,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxta3d.c:			ui32CCBMaxAllocSizeLog2 ? ui32CCBMaxAllocSizeLog2 : RGX_TA_CCB_MAX_SIZE_LOG2,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxta3d.c:			ui32CCBAllocSizeLog2 ? ui32CCBAllocSizeLog2 : RGX_3D_CCB_SIZE_LOG2,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxta3d.c:			ui32CCBMaxAllocSizeLog2 ? ui32CCBMaxAllocSizeLog2 : RGX_3D_CCB_MAX_SIZE_LOG2,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxta3d.c:		PVR_LOG_RETURN_IF_FALSE(paui32ClientTAFenceValue != NULL,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxta3d.c:		PVR_LOG_RETURN_IF_FALSE(paui32ClientTAUpdateValue != NULL,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxta3d.c:		PVR_LOG_RETURN_IF_FALSE(paui32Client3DUpdateValue != NULL,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxta3d.c:		HTBLOGK(HTB_SF_MAIN_KICK_TA,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxta3d.c:		HTBLOGK(HTB_SF_MAIN_KICK_3D,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxta3d.c:			PVR_LOG_IF_ERROR(eError, "FWCommonContextSetFlags eError");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxta3d.c:			PVR_LOG_IF_ERROR(eError2, "FWCommonContextSetFlags eError2");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbreakpoint.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetFirmwareAddress", unlock);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbreakpoint.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXScheduleCommandAndGetKCCBSlot", unlock);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbreakpoint.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXWaitForKCCBSlotUpdate", unlock);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbreakpoint.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetFirmwareAddress", unlock);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbreakpoint.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXScheduleCommandAndGetKCCBSlot", unlock);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbreakpoint.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXWaitForKCCBSlotUpdate", unlock);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbreakpoint.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetFirmwareAddress", unlock);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbreakpoint.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXScheduleCommandAndGetKCCBSlot", unlock);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbreakpoint.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXWaitForKCCBSlotUpdate", unlock);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbreakpoint.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetFirmwareAddress", unlock);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbreakpoint.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXScheduleCommandAndGetKCCBSlot", unlock);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbreakpoint.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXWaitForKCCBSlotUpdate", unlock);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbreakpoint.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXScheduleCommandAndGetKCCBSlot", unlock);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbreakpoint.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXWaitForKCCBSlotUpdate", unlock);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxmem.c:		PVR_LOG(("_RecordUnregisteredMemoryContext: Failed to get PC address for memory context"));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxmem.c:			PVR_LOG(("Failed to get PC address for memory context"));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxmem.c:		PVR_LOG(("Failed to get PC address for kernel memory context"));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxmem.c:			PVR_LOG(("Failed to get PC address for memory context"));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxmem.c:			PVR_LOG(("Failed to get PC address for kernel memory context"));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxcompute.c:									 ui32CCBAllocSizeLog2 ? ui32CCBAllocSizeLog2 : RGX_CDM_CCB_SIZE_LOG2,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxcompute.c:									 ui32CCBMaxAllocSizeLog2 ? ui32CCBMaxAllocSizeLog2 : RGX_CDM_CCB_MAX_SIZE_LOG2,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxcompute.c:		PVR_LOG(("%s: Unexpected error from RGXFWRequestCommonContextCleanUp (%s)",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxcompute.c:		PVR_LOG_RETURN_IF_FALSE(paui32ClientUpdateValue != NULL,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxcompute.c:	HTBLOGK(HTB_SF_MAIN_KICK_CDM,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxcompute.c:			PVR_LOG_IF_ERROR(eError, "FWCommonContextSetFlags");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.c:	PVR_LOG_IF_ERROR(eError, "RGXCCBPDumpDrainCCB");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.c:				PVR_LOG_RETURN_IF_ERROR(eError, "RGXPdumpDrainKCCB");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.c:		PVR_LOG(("Failed to acquire CCB space for %u byte command:", ui32CmdSize));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.c:	PVR_LOG(("%s: Client CCB (%s) watermark (%u) hit %d%% of its allocation size (%u)",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.c:	PVR_LOG(("GPU %s command buffer usage high (%u). This is not an error but the application may not run optimally.",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.c:	IMG_UINT32		ui32MinAllocSize = (1U << MIN_SAFE_CCB_SIZE_LOG2);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.c:	if ((ui32CCBSizeLog2 < MIN_SAFE_CCB_SIZE_LOG2) ||
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.c:		(ui32CCBSizeLog2 > MAX_SAFE_CCB_SIZE_LOG2))
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.c:		         ui32CCBSizeLog2, MIN_SAFE_CCB_SIZE_LOG2, MAX_SAFE_CCB_SIZE_LOG2));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.c:		(ui32CCBMaxSizeLog2 > MAX_SAFE_CCB_SIZE_LOG2))
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.c:		         ui32CCBMaxSizeLog2, ui32CCBSizeLog2, MAX_SAFE_CCB_SIZE_LOG2));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.c:		PVR_LOG(("CCBUtilisationInfo: GPU %s command buffer was full %d times out of %d. "
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.c:						PVR_LOG(("%s: Client CCB (%s) grow failed (%s)", __func__, psClientCCB->szName, PVRSRVGetErrorString(eErr)));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.c:					PVR_LOG(("%s: Client CCB (%s) grew to %u", __func__, psClientCCB->szName, psClientCCB->ui32Size));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.c:	PVR_DUMPDEBUG_LOG("FWCtx 0x%08X (%s)", sFWCommonContext.ui32Addr, psCurrentClientCCB->szName);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.c:		PVR_DUMPDEBUG_LOG("  `--<Empty>");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.c:		PVR_DUMPDEBUG_LOG("  %s--%s %s @ %u Int=%u Ext=%u",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.c:					PVR_DUMPDEBUG_LOG("  %s  %s--Addr:0x%08x Val=0x%08x %s",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.c:			PVR_DUMPDEBUG_LOG("FWCtx 0x%08X @ %d (%s) pending on %s:",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.c:				PVR_DUMPDEBUG_LOG("  Addr:0x%08x  Value=0x%08x",psUFOPtr[jj].puiAddrUFO.ui32Addr, psUFOPtr[jj].ui32Value);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.c:				PVR_DUMPDEBUG_LOG("  Addr:0x%08x Value(Host)=0x%08x Value(FW)=0x%08x",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.c:				PVR_DUMPDEBUG_LOG(" FWCtx 0x%08X fenced command is of type %s",sFWCommonContext.ui32Addr, _CCBCmdTypename(psCommandHeader->eCmdType));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.c:						PVR_DUMPDEBUG_LOG(" preventing %s:",_CCBCmdTypename(eCommandType));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.c:							PVR_DUMPDEBUG_LOG("  Addr:0x%08x  Value=0x%08x",psUFOPtr[jj].puiAddrUFO.ui32Addr, psUFOPtr[jj].ui32Value);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.c:							PVR_DUMPDEBUG_LOG("  Addr:0x%08x Value(Host)=0x%08x Value(FW)=0x%08x",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.c:					PVR_DUMPDEBUG_LOG(" FWCtx 0x%08X has no further commands",sFWCommonContext.ui32Addr);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.c:				PVR_DUMPDEBUG_LOG(" FWCtx 0x%08X has no further commands",sFWCommonContext.ui32Addr);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.c:				psDevInfo->psRGXFWIfFwOsData->ui8SLRLogWp = (psDevInfo->psRGXFWIfFwOsData->ui8SLRLogWp + 1) % PVR_SLR_LOG_ENTRIES;
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.c:			PVR_LOG(("Fence found on context 0x%x '%s' @ %d has %d UFOs",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.c:					PVR_LOG(("  %d/%d FWAddr 0x%x requires 0x%x (currently 0x%x)", jj+1,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.c:					PVR_LOG(("  %d/%d FWAddr 0x%x requires 0x%x", jj+1,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.c:				PVR_LOG_IF_ERROR(eErr, "SyncCheckpointDumpInfoOnStalledUFOs() call failed.");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.c:				PVR_LOG(("SLR disabled for FWCtx 0x%08X", psContext.ui32Addr));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxccb.c:					PVR_LOG(("Forced update command issued for FWCtx 0x%08X", sSignalFencesCmd.uCmdData.sForceUpdateData.psContext.ui32Addr));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdevice.h:#define RGXKM_DEVICE_STATE_DISABLE_DW_LOGGING_EN       (0x2) /*!< Used to disable the Devices Watchdog logging */
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdevice.h: * MTS can have is 255, therefore 512 (LOG2 = 9) is large enough to account for
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdevice.h:#define RETURN_DATA_ARRAY_SIZE_LOG2 (9)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdevice.h:#define RETURN_DATA_ARRAY_SIZE      ((1UL) << RETURN_DATA_ARRAY_SIZE_LOG2)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdevice.h:#define WORKLOAD_HASH_SIZE_LOG2		6
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxdevice.h:#define WORKLOAD_HASH_SIZE			((1UL) << WORKLOAD_HASH_SIZE_LOG2)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxmmuinit.c:	 * PAGE CATALOGUE (4 Byte):
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:#define RGXFWIF_KCCB_NUMCMDS_LOG2_GPUVIRT_WITHOUT_FEATURE  (6)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:#define RGXFWIF_KCCB_NUMCMDS_LOG2_DEFAULT                  (7)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:#define RGXFWIF_FWCCB_NUMCMDS_LOG2   (10)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:#define RGXFWIF_FWCCB_NUMCMDS_LOG2   (8)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:#define RGXFWIF_FWCCB_NUMCMDS_LOG2   (5)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:#define RGXFWIF_CHECKPOINTCCB_NUMCMDS_LOG2 (10)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:#define RGXFWIF_WORKEST_FWCCB_NUMCMDS_LOG2   (7)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetupFwAllocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetupFwAllocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_RETURN_IF_ERROR(eError, "RGXSetupFwAllocation");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetupFwAllocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:		PVR_LOG_GOTO_IF_ERROR(eError, "DevmemAcquireDevVirtAddr", failDevVAAcquire);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:		PVR_LOG_GOTO_IF_ERROR(eError, "DevmemDeviceCacheMode", failDevCacheMode);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:		PVR_LOG_GOTO_IF_ERROR(eError, "DevmemAcquireDevVirtAddr", failDevVAAcquire);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetFirmwareAddress:1", fail_cccbfwaddr);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetFirmwareAddress:2", fail_cccbctrlfwaddr);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetFirmwareAddress:3", fail_fwmemctxfwaddr);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:		PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetFirmwareAddress:4", fail_fwframeworkfwaddr);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:		PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetFirmwareAddress:5", fail_ctxstatefwaddr);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetFirmwareAddress:6", fail_fwcommonctxfwaddr);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetupFwAllocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetupFwAllocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:			&& (psTraceBufCtl->ui32LogType & ~RGXFWIF_LOG_TYPE_TRACE)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:			&& (psTraceBufCtl->ui32LogType & RGXFWIF_LOG_TYPE_GROUP_MASK))
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetupFwAllocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:		&& (psTraceBufCtl->ui32LogType & RGXFWIF_LOG_TYPE_TRACE)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:		&& (psTraceBufCtl->ui32LogType & RGXFWIF_LOG_TYPE_GROUP_MASK)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:		PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetupFwAllocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PDUMPCOMMENT("( MAIN Group Enable: 0x%08x)", RGXFWIF_LOG_TYPE_GROUP_MAIN);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PDUMPCOMMENT("( MTS Group Enable: 0x%08x)", RGXFWIF_LOG_TYPE_GROUP_MTS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PDUMPCOMMENT("( CLEANUP Group Enable: 0x%08x)", RGXFWIF_LOG_TYPE_GROUP_CLEANUP);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PDUMPCOMMENT("( CSW Group Enable: 0x%08x)", RGXFWIF_LOG_TYPE_GROUP_CSW);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PDUMPCOMMENT("( BIF Group Enable: 0x%08x)", RGXFWIF_LOG_TYPE_GROUP_BIF);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PDUMPCOMMENT("( PM Group Enable: 0x%08x)", RGXFWIF_LOG_TYPE_GROUP_PM);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PDUMPCOMMENT("( RTD Group Enable: 0x%08x)", RGXFWIF_LOG_TYPE_GROUP_RTD);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PDUMPCOMMENT("( SPM Group Enable: 0x%08x)", RGXFWIF_LOG_TYPE_GROUP_SPM);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PDUMPCOMMENT("( POW Group Enable: 0x%08x)", RGXFWIF_LOG_TYPE_GROUP_POW);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PDUMPCOMMENT("( HWR Group Enable: 0x%08x)", RGXFWIF_LOG_TYPE_GROUP_HWR);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PDUMPCOMMENT("( HWP Group Enable: 0x%08x)", RGXFWIF_LOG_TYPE_GROUP_HWP);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:		PDUMPCOMMENT("( DMA Group Enable: 0x%08x)", RGXFWIF_LOG_TYPE_GROUP_DMA);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PDUMPCOMMENT("( MISC Group Enable: 0x%08x)", RGXFWIF_LOG_TYPE_GROUP_MISC);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PDUMPCOMMENT("( DEBUG Group Enable: 0x%08x)", RGXFWIF_LOG_TYPE_GROUP_DEBUG);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_GOTO_IF_NOMEM(psFwSysInitScratch, eError, fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "Firmware Sys Init structure allocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "Fault read register setup", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:        PVR_LOG_IF_FALSE(psDVFSDeviceCfg->pasOPPTable, "RGXSetupFwSysData: Missing OPP Table");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetupFwAllocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:		if (ui32LogType & ~RGXFWIF_LOG_TYPE_MASK)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXTraceBufferInitOnDemandResources", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetupFwAllocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "Counter Buffer allocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "Firmware GCOV buffer allocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "TA Signature check setup", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "3D Signature check setup", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:		PVR_LOG_GOTO_IF_ERROR(eError, "TDM Signature check setup", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "Alignment checks setup", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:		PVR_LOG_GOTO_IF_ERROR(eError, "SLC3Fence memory allocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "PDVFS core clock rate memory setup", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:		PVR_LOG_GOTO_IF_ERROR(eError, "RGXTBIBufferInitOnDemandResources", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "GPU Utilisation Buffer ctl allocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "Firmware runtime configuration memory allocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "Firmware register user configuration structure allocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:		PVR_LOG_GOTO_IF_ERROR(eError, "RGXHWPerfInitOnDemandResources", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "Firmware HW Perf control struct allocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "Non-secure buffer allocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetFirmwareAddress:1", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "Secure buffer allocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetFirmwareAddress:2", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:		PVR_LOG_GOTO_IF_ERROR(eError, "RGXServerFeatureFlagsToHWPerfFlags", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	                                  (RGXFWIF_KCCB_NUMCMDS_LOG2_GPUVIRT_WITHOUT_FEATURE) : (RGXFWIF_KCCB_NUMCMDS_LOG2_DEFAULT);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "Firmware Connection Control structure allocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "Firmware Os Init structure allocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "HWR Info Buffer allocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "Sync primitive context allocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "Sync primitive allocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "Kernel CCB allocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "Kernel CCB return slot array allocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:						 RGXFWIF_FWCCB_NUMCMDS_LOG2,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "Firmware CCB allocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:						 RGXFWIF_CHECKPOINTCCB_NUMCMDS_LOG2,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "Checkpoint CCB allocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetupFwAllocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "Get Sync Prim FW address", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:						 RGXFWIF_WORKEST_FWCCB_NUMCMDS_LOG2,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "Workload Estimation Firmware CCB allocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "Setting up firmware os data", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:		PVR_LOG_GOTO_IF_ERROR(eError, "Setting up firmware system data", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:		case RGXFWIF_KCCB_CMD_LOGTYPE_UPDATE:
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_RETURN_IF_ERROR(eError, "PVRSRVWaitForValueKM");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:			PVR_LOG_IF_ERROR(eError, "DevmemPDumpDevmemPol32");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:									 POLL_FLAG_LOG_ERROR | POLL_FLAG_DEBUG_DUMP);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_RETURN_IF_FALSE(ui32CmdMemCopySize !=0, "RGXGetCmdMemCopySize failed", PVRSRV_ERROR_INVALID_CCB_COMMAND);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:			PVR_LOG_GOTO_IF_ERROR(eError, "RGXPdumpDrainKCCB", _RGXSendCommandRaw_Exit);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	HTBLOGK(HTB_SF_MAIN_KICK_UNCOUNTED);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:		HTBLOGK(HTB_SF_MAIN_FWCCB_CMD, psFwCCBCmd->eCmdType);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_RETURN_IF_ERROR(eError, "PVRSRVPowerLock");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:		PVR_LOG_GOTO_IF_ERROR(eError, "RGXSendCommandAndGetKCCBSlot", unlock);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:		PVR_LOG_IF_ERROR(eError, "RGXWaitForKCCBSlotUpdate");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_IF_ERROR(eError, "DevmemPDumpDevmemPol32");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:			PVR_LOG_GOTO_IF_ERROR(eError, "RGXScheduleCommand", return_);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:			PVR_LOG_GOTO_IF_ERROR(eError, "RGXWaitForKCCBSlotUpdate", return_);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:			POLL_FLAG_LOG_ERROR) != PVRSRV_OK)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:			POLL_FLAG_LOG_ERROR) != PVRSRV_OK)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:			POLL_FLAG_LOG_ERROR) != PVRSRV_OK)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:		PVR_LOG(("RGXCheckForStalledClientContexts: Failed to acquire hCCBStallCheckLock, returning..."));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:			PVR_LOG(("Possible stalled client RGX contexts detected: %s%s%s%s%s%s%s%s%s",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:			PVR_LOG(("Trying to identify stalled context...(%s) [%d]",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:				PVR_LOG(("No further stalled client contexts exist"));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:			PVR_LOG(("(FAIL) RGXDevInitCompatCheck: Mismatch in Firmware and client build options; "
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:			PVR_LOG(("(FAIL) RGXDevInitCompatCheck: Mismatch in Firmware and client build options; "
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_RETURN_IF_ERROR(eError, "PVRSRVCreateRegionRA");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxfwutils.c:	PVR_LOG_RETURN_IF_ERROR(eError, "DevmemFwAllocate");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbvnc.c:#define PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, szShortName, Feature)															\
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbvnc.c:		{ PVR_LOG(("%s %d", szShortName, psDevInfo->sDevFeatureCfg.ui32FeaturesValues[RGX_FEATURE_##Feature##_IDX])); }		\
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbvnc.c:		{ PVR_LOG(("%s N/A", szShortName)); }
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbvnc.c:	PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, "NC:       ", NUM_CLUSTERS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbvnc.c:	PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, "CSF:      ", CDM_CONTROL_STREAM_FORMAT);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbvnc.c:	PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, "FBCDCA:   ", FBCDC_ARCHITECTURE);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbvnc.c:	PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, "MCMB:     ", META_COREMEM_BANKS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbvnc.c:	PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, "MCMS:     ", META_COREMEM_SIZE);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbvnc.c:	PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, "MDMACnt:  ", META_DMA_CHANNEL_COUNT);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbvnc.c:	PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, "NIIP:     ", NUM_ISP_IPP_PIPES);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbvnc.c:	PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, "PBW:      ", PHYS_BUS_WIDTH);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbvnc.c:	PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, "STEArch:  ", SCALABLE_TE_ARCH);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbvnc.c:	PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, "SVCEA:    ", SCALABLE_VCE);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbvnc.c:	PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, "SLCBanks: ", SLC_BANKS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbvnc.c:	PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, "SLCCLS:   ", SLC_CACHE_LINE_SIZE_BITS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbvnc.c:	PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, "SLCSize:  ", SLC_SIZE_IN_BYTES);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbvnc.c:	PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, "VASB:     ", VIRTUAL_ADDRESS_SPACE_BITS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbvnc.c:	PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, "META:     ", META);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbvnc.c:				PVR_LOG(("%s", gaszFeaturesNoValuesNames[ui32IdOrNameIdx - 1]));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbvnc.c:				PVR_LOG(("ERN/BRN : %d", gaui64ErnsBrnsIDs[ui32IdOrNameIdx - 1]));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbvnc.c:				PVR_LOG(("Unknown ErnBrn bit: 0x%0" IMG_UINT64_FMTSPECx, ((IMG_UINT64)1 << (ui32IdOrNameIdx - 1))));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbvnc.c:	PVR_LOG(("BVNC module parameter honoured: %s", aszBVNCString));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbvnc.c:		PVR_LOG(("Read BVNC " RGX_BVNC_STR_FMTSPEC
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbvnc.c:		PVR_LOG_IF_FALSE((pui64Cfg != NULL), "Driver parameter BVNC configuration not found!");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbvnc.c:			PVR_LOG_RETURN_IF_ERROR(eError, "pfnPrePowerState ON");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbvnc.c:			PVR_LOG_RETURN_IF_ERROR(eError, "pfnPostPowerState ON");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbvnc.c:		PVR_LOG(("Read BVNC " RGX_BVNC_STR_FMTSPEC
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbvnc.c:			PVR_LOG_RETURN_IF_ERROR(eError, "pfnPrePowerState OFF");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbvnc.c:			PVR_LOG_RETURN_IF_ERROR(eError, "pfnPostPowerState OFF");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbvnc.c:			PVR_LOG_IF_FALSE((pui64Cfg != NULL), "HW device BVNC configuration not found!");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbvnc.c:			PVR_LOG_ERROR(PVRSRV_ERROR_DEVICE_REGISTER_FAILED, "CORE_ID register returns zero. Unknown BVNC");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbvnc.c:		PVR_LOG(("Reverting to compile time BVNC %s", RGX_BVNC_KM));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbvnc.c:		PVR_LOG_IF_FALSE((pui64Cfg != NULL), "Compile time BVNC configuration not found!");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbvnc.c:			PVR_LOG(("RGX Device registered with BVNC " RGX_BVNC_STR_FMTSPEC,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbvnc.c:			PVR_LOG(("RGX Device registered BVNC " RGX_BVNC_STR_FMTSPEC
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbvnc.c:		PVR_LOG(("RGX Device registered with BVNC " RGX_BVNC_STR_FMTSPEC,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbvnc.c:	PVR_LOG(("matchBVNC %d.%d.%d.%d",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rogue/rgxbvnc.c:		PVR_LOG(("CORE_ID%d returned %d.%d.%d.%d", i,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rgxworkest.c:		PVR_LOG_IF_ERROR(eError, "WorkEstCheckFirmwareCCB: WorkEstRetire failed");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rgxworkest.c:	PVR_LOG_RETURN_IF_FALSE(psDevInfo, "device info not available", eError);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rgxworkest.c:	PVR_LOG_RETURN_IF_FALSE(psWorkEstHostData, "host data not available", eError);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rgxworkest.c:	PVR_LOG_RETURN_IF_FALSE(psWorkloadMatchingData, "Workload Matching Data not available", eError);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rgxworkest.c:	PVR_LOG_RETURN_IF_FALSE(psWorkloadMatchingData->psHashLock, "hash lock not available", eError);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rgxworkest.c:	PVR_LOG_RETURN_IF_FALSE(psWorkloadMatchingData->psHashTable, "hash table not available", eError);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rgxworkest.c:	PVR_LOG_RETURN_IF_FALSE(psDevConfig->pfnSoCTimerRead, "SoC timer not available", eError);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rgxworkest.c:	PVR_LOG_RETURN_IF_ERROR(eError, "unable to access System Monotonic clock");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rgxworkest.c:	PVR_LOG_RETURN_IF_FALSE(psReturnCmd,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rgxworkest.c:	PVR_LOG_GOTO_IF_FALSE(psWorkEstHostData,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rgxworkest.c:	PVR_LOG_GOTO_IF_FALSE(psWorkloadMatchingData,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rgxworkest.c:	PVR_LOG_GOTO_IF_FALSE(psWorkloadMatchingData->psHashTable,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rgxworkest.c:	PVR_LOG_GOTO_IF_FALSE(psWorkloadMatchingData->psHashLock,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rgxworkest.c:		PVR_LOG(("WorkEstRetire: HASH_Insert failed"));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.h:			PVR_LOG_RETURN_IF_INVALID_PARAM(ui32OSID < RGX_NUM_OS_SUPPORTED, "ui32OSID");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.h:                                 PMR_LOG2ALIGN_T uiLog2Align,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.h:                                          PMR_LOG2ALIGN_T uiLog2Align,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxsignals.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetFirmwareAddress", fail_fwaddr);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	PVR_DUMPDEBUG_LOG("FW info: %d.%d @ %8d (%s) build options: 0x%08x",				\
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	PVR_LOG_RETURN_IF_ERROR(eError, "RGXPollMetaRegThroughSP");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	PVR_LOG_RETURN_IF_ERROR(eError, "RGXWriteWithSP");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	PVR_LOG_RETURN_IF_ERROR(eError, "RGXPollMetaRegThroughSP");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:			PVR_DUMPDEBUG_LOG("_ValidateWithSP: Mismatch while validating %s at offset 0x%x: CPU 0x%08x (%p), FW 0x%08x (%x)",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	PVR_DUMPDEBUG_LOG("Match between Host and Meta view of the %s", pszDesc);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		PVR_DUMPDEBUG_LOG("%s    [%u] Name: %s Base address: " IMG_DEV_VIRTADDR_FMTSPEC
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		PVR_DUMPDEBUG_LOG("%s    [%u] Name: %s Base address: " IMG_DEV_VIRTADDR_FMTSPEC
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		PVR_DUMPDEBUG_LOG("%s        Whole allocation was %s", pszIndent, psResult->bMap ? "mapped": "unmapped");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		PVR_DUMPDEBUG_LOG("%s        Pages %u to %u (" IMG_DEV_VIRTADDR_FMTSPEC "-" IMG_DEV_VIRTADDR_FMTSPEC ") %s%s",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		PVR_DUMPDEBUG_LOG("%s    No results", pszIndent);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:typedef struct _FAULT_INFO_LOG_
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:} FAULT_INFO_LOG;
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:static FAULT_INFO_LOG gsFaultInfoLog = { 0 };
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		PVR_DUMPDEBUG_LOG("%sDevice memory history for page fault address " IMG_DEV_VIRTADDR_FMTSPEC
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		PVR_DUMPDEBUG_LOG("%sCould not find PID for device memory history on PC of the fault", pszIndent);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:			PVR_DUMPDEBUG_LOG("%s  %s:", pszIndent, pszWhich);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		PVR_DUMPDEBUG_LOG("%s  No matching Devmem History for fault address", pszIndent);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		PVR_DUMPDEBUG_LOG("%sNo live host MMU data available", pszIndent);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		PVR_DUMPDEBUG_LOG("%sPM faulted at PC address = 0x%016" IMG_UINT64_FMTSPECx, pszIndent, psFaultData->sLevelData[MMU_LEVEL_0].ui64Address);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:					PVR_DUMPDEBUG_LOG("%s%s for index %d = 0x%08x and is %s",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:					PVR_DUMPDEBUG_LOG("%s%s for index %d = 0x%016" IMG_UINT64_FMTSPECx " and is %s",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:				PVR_DUMPDEBUG_LOG("%s%s index (%d) out of bounds (%d)",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		PVR_DUMPDEBUG_LOG("%sMMU (%s) - OK", pszIndent, pszMetaOrCore);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		PVR_DUMPDEBUG_LOG("%sMMU (%s) - FAULT:", pszIndent, pszMetaOrCore);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		PVR_DUMPDEBUG_LOG("%s  * MMU status (0x%016" IMG_UINT64_FMTSPECX " | 0x%08" IMG_UINT64_FMTSPECX "): PC = %d, %s 0x%010" IMG_UINT64_FMTSPECX ", %s(%s)%s%s%s%s.",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:			PVR_DUMPDEBUG_LOG("FW-T%d Assert: %s (%s:%d)",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:			PVR_DUMPDEBUG_LOG("FW Fault %d: %s (%s:%d)",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:			PVR_DUMPDEBUG_LOG("            Data = 0x%08x, CRTimer = 0x%012"IMG_UINT64_FMTSPECX", OSTimer = %" IMG_UINT64_FMTSPEC ".%09" IMG_UINT64_FMTSPEC,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:			PVR_DUMPDEBUG_LOG("T%u polling %s (reg:0x%08X mask:0x%08X)",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	PVR_DUMPDEBUG_LOG("%s", pszLine);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:			PVR_DUMPDEBUG_LOG("DM %d (GP)", dm);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:				PVR_DUMPDEBUG_LOG("DM %d (HWRflags 0x%08x:%s)", dm, psFwSysData->aui32HWRRecoveryFlags[dm], sPerDmHwrDescription);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:				PVR_DUMPDEBUG_LOG("DM %d", dm);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:				PVR_DUMPDEBUG_LOG("  %s PID = %u, frame = %d, HWRTData = 0x%08X, EventStatus = 0x%08X%s",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:					PVR_DUMPDEBUG_LOG("  HW error code = 0x%X: %s",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:					PVR_DUMPDEBUG_LOG("  %s CRTimer = 0x%012"IMG_UINT64_FMTSPECX", OSTimer = %" IMG_UINT64_FMTSPEC ".%09" IMG_UINT64_FMTSPEC ", CyclesElapsed = %" IMG_INT64_FMTSPECd,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:					PVR_DUMPDEBUG_LOG("  %s CRTimer = 0x%012"IMG_UINT64_FMTSPECX", CyclesElapsed = %" IMG_INT64_FMTSPECd,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:							PVR_DUMPDEBUG_LOG("  %s PreResetTimeInCycles = %" IMG_INT64_FMTSPECd ", HWResetTimeInCycles = %" IMG_INT64_FMTSPECd ", FreelistReconTimeInCycles = %" IMG_INT64_FMTSPECd ", TotalRecoveryTimeInCycles = %" IMG_INT64_FMTSPECd,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:						PVR_DUMPDEBUG_LOG("  %s PreResetTimeInCycles = %" IMG_INT64_FMTSPECd ", HWResetTimeInCycles = %" IMG_INT64_FMTSPECd ", TotalRecoveryTimeInCycles = %" IMG_INT64_FMTSPECd "",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:						PVR_DUMPDEBUG_LOG("    ECC fault GPU=0x%08x FW=0x%08x",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:						PVR_DUMPDEBUG_LOG("    T%u polling %s (reg:0x%08X mask:0x%08X last:0x%08X)",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:			PVR_DUMPDEBUG_LOG("MMU Pending page: Yes");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:				PVR_DUMPDEBUG_LOG("Cannot check address on PM cat base %u", ui32CatBase);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:				PVR_DUMPDEBUG_LOG("Checking device virtual address " IMG_DEV_VIRTADDR_FMTSPEC
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		PVR_DUMPDEBUG_LOG("RGX Virtualisation type: AutoVz with HW register support");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		PVR_DUMPDEBUG_LOG("RGX Virtualisation type: AutoVz with shared memory");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		PVR_DUMPDEBUG_LOG("RGX Virtualisation type: Hypervisor-assisted with static Fw heap allocation");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		PVR_DUMPDEBUG_LOG("RGX Virtualisation type: Hypervisor-assisted with dynamic Fw heap allocation");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		PVR_DUMPDEBUG_LOG("RGX firmware connection state: %s (Fw=%s; OS=%s)",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		PVR_DUMPDEBUG_LOG("RGX virtualisation watchdog timestamps (in GPU timer ticks): Fw=%u; OS=%u; diff(FW, OS) = %u",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:			PVR_DUMPDEBUG_LOG("RGX FW State: %s%s", pszState, pszReason);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:			PVR_DUMPDEBUG_LOG("RGX PHR configuration: (%d) %s", psFwSysData->ui32PHRModeMirror, sPHRConfigDescription);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		PVR_DUMPDEBUG_LOG("RGX FW State: %s%s (HWRState 0x%08x:%s)", pszState, pszReason, psFwSysData->ui32HWRStateFlags, sHwrStateDescription);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		PVR_DUMPDEBUG_LOG("RGX FW Power State: %s (APM %s: %d ok, %d denied, %d non-idle, %d retry, %d other, %d total. Latency: %u ms)",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		PVR_DUMPDEBUG_LOG("RGX DVFS: %u frequency changes. "
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:			PVR_DUMPDEBUG_LOG("          Previous frequencies: %u.%03u, %u.%03u, %u.%03u MHz (Sampled at "
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:			PVR_DUMPDEBUG_LOG("RGX FW OS %u - State: %s; Freelists: %s%s; Priority: %d; %s", ui32OSid,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		PVR_DUMPDEBUG_LOG("RGX FW State: Unavailable under Guest Mode of operation");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		PVR_DUMPDEBUG_LOG("RGX FW Power State: Unavailable under Guest Mode of operation");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		PVR_DUMPDEBUG_LOG("STATS[START]: RGXFWIF_STATS_FRAMEWORK_MAX=%d", RGXFWIF_STATS_FRAMEWORK_MAX);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:				PVR_DUMPDEBUG_LOG("STATS[%08x]:%s", ui32Index1, pszLine);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		PVR_DUMPDEBUG_LOG("STATS[END]");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	PVR_DUMPDEBUG_LOG("META Slave Port extra debug:");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		PVR_DUMPDEBUG_LOG("  * %s: 0x%8.8X", pszRegName, ui32RegVal);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		PVR_DUMPDEBUG_LOG("  * 0xA20[%d]: 0x%8.8X", ui32Idx, ui32RegVal);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:			PVR_DUMPDEBUG_LOG("  * 0x%X[%d]: 0x%8.8X", ui32RegAddr, ui32Idx, ui32RegVal);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:typedef struct _TRACEBUF_LOG_ {
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	RGXFW_LOG_SFids	eSFId;
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:} TRACEBUF_LOG;
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:static const TRACEBUF_LOG aLogDefinitions[] =
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:#define X(a, b, c, d, e) {RGXFW_LOG_CREATESFID(a,b,e), #c, d, e},
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	RGXFW_LOG_SFIDLIST
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	const TRACEBUF_LOG *psLogDef = &aLogDefinitions[0];
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		const TRACEBUF_LOG *psLogDef2;
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:					PVR_DUMPDEBUG_LOG("Integrity Check FAIL: %s has an unsupported type not recognized (fmt: %%%c). Please fix.",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:			PVR_DUMPDEBUG_LOG("Integrity Check FAIL: %s has %d arguments but only %d are specified. Please fix.",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:			PVR_DUMPDEBUG_LOG("Integrity Check FAIL: %s has %d arguments but a maximum of 20 are supported. Please fix.",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:			PVR_DUMPDEBUG_LOG("Integrity Check FAIL: %s id %x is not unique, there are %d more. Please fix.",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		if (psRGXFWIfTraceBufCtl->ui32LogType & RGXFWIF_LOG_TYPE_GROUP_MASK)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:			PVR_DUMPDEBUG_LOG("Debug log type: %s ( " RGXFWIF_LOG_ENABLED_GROUPS_LIST_PFSPEC ")",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:							  ((psRGXFWIfTraceBufCtl->ui32LogType & RGXFWIF_LOG_TYPE_TRACE)?("trace"):("tbi")),
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:							  RGXFWIF_LOG_ENABLED_GROUPS_LIST(psRGXFWIfTraceBufCtl->ui32LogType)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:			PVR_DUMPDEBUG_LOG("Debug log type: none");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:					if (ui32DataToId == RGXFW_SF_LAST  &&  RGXFW_LOG_VALIDID(ui32Data))
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:						PVR_DUMPDEBUG_LOG("WARNING: Unrecognized id (%x). From here on the trace might be wrong!", ui32Data);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:						PVR_DUMPDEBUG_LOG("ASSERTION %s failed at %s:%u",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:					PVR_DUMPDEBUG_LOG(szBuffer, ui64Timestamp, tid, groups[RGXFW_SF_GID(ui32Data)],
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:			PVR_DUMPDEBUG_LOG("%" IMG_UINT64_FMTSPEC ":POWMON  0x%08x 0x%08x  0x%08x 0x%08x",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:#define DDLOG32(R)      PVR_DUMPDEBUG_LOG(REG32_FMTSPEC, #R, OSReadHWReg32(pvRegsBaseKM, RGX_CR_##R));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:#define DDLOG64(R)      PVR_DUMPDEBUG_LOG(REG64_FMTSPEC, #R, OSReadHWReg64(pvRegsBaseKM, RGX_CR_##R));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:#define DDLOG32_DPX(R)  PVR_DUMPDEBUG_LOG(REG32_FMTSPEC, #R, OSReadHWReg32(pvRegsBaseKM, DPX_CR_##R));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:#define DDLOG64_DPX(R)  PVR_DUMPDEBUG_LOG(REG64_FMTSPEC, #R, OSReadHWReg64(pvRegsBaseKM, DPX_CR_##R));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:#define DDLOGVAL32(S,V) PVR_DUMPDEBUG_LOG(REG32_FMTSPEC, S, V);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:#define DDLOG32UNPACKED(R)      PVR_DUMPDEBUG_LOG(REG32_FMTSPEC, #R, OSReadHWReg32(pvRegsBaseKM, RGX_CR_##R##__META_REGISTER_UNPACKED_ACCESSES));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG64(CORE_ID);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG32(EVENT_STATUS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG64(TIMER);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG64(MMU_FAULT_STATUS1);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG64(MMU_FAULT_STATUS2);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG64(MMU_FAULT_STATUS_PM);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG64(MMU_FAULT_STATUS_META);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG64(SLC_STATUS1);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG64(SLC_STATUS2);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG64(SLC_STATUS_DEBUG);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG32(SPU_ENABLE);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG64(CONTEXT_MAPPING0);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG64(CONTEXT_MAPPING2);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG64(CONTEXT_MAPPING3);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG64(CONTEXT_MAPPING4);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG32(PERF_PHASE_2D);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG32(PERF_CYCLE_2D_TOTAL);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG32(PERF_PHASE_GEOM);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG32(PERF_CYCLE_GEOM_TOTAL);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG32(PERF_PHASE_FRAG);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG32(PERF_CYCLE_FRAG_TOTAL);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG32(PERF_CYCLE_GEOM_OR_FRAG_TOTAL);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG32(PERF_CYCLE_GEOM_AND_FRAG_TOTAL);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG32(PERF_PHASE_COMP);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG32(PERF_CYCLE_COMP_TOTAL);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG32(PM_PARTIAL_RENDER_ENABLE);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG32(ISP_RENDER);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG32(ISP_CTL);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG32(MTS_INTCTX);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG32(MTS_BGCTX);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG32(MTS_BGCTX_COUNTED_SCHEDULE);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG32(MTS_SCHEDULE);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG32(MTS_GPU_INT_STATUS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG32(CDM_CONTEXT_STORE_STATUS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG64(CDM_CONTEXT_PDS0);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG64(CDM_CONTEXT_PDS1);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG64(CDM_TERMINATE_PDS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG64(CDM_TERMINATE_PDS1);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG64(CDM_CONTEXT_LOAD_PDS0);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG64(CDM_CONTEXT_LOAD_PDS1);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG32(JONES_IDLE);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG32(SLC_IDLE);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG32(SLC_FAULT_STOP_STATUS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG64(SCRATCH0);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG64(SCRATCH1);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG64(SCRATCH2);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG64(SCRATCH3);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG64(SCRATCH4);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG64(SCRATCH5);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG64(SCRATCH6);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG64(SCRATCH7);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG64(SCRATCH8);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG64(SCRATCH9);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG64(SCRATCH10);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG64(SCRATCH11);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG64(SCRATCH12);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG64(SCRATCH13);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG64(SCRATCH14);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG64(SCRATCH15);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	DDLOG32(IRQ_OS0_EVENT_STATUS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:			DDLOG32UNPACKED(META_SP_MSLVIRQSTATUS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:			DDLOG32(META_SP_MSLVIRQSTATUS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		PVR_LOG_RETURN_IF_ERROR(eError, "RGXReadWithSP");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		DDLOGVAL32("T0 TXENABLE", ui32RegVal);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		PVR_LOG_RETURN_IF_ERROR(eError, "RGXReadWithSP");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		DDLOGVAL32("T0 TXSTATUS", ui32RegVal);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		PVR_LOG_RETURN_IF_ERROR(eError, "RGXReadWithSP");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		DDLOGVAL32("T0 TXDEFR", ui32RegVal);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		PVR_LOG_RETURN_IF_ERROR(eError, "RGXReadWithSP");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		DDLOGVAL32("T0 PC", ui32RegVal);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		PVR_LOG_RETURN_IF_ERROR(eError, "RGXReadWithSP");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		DDLOGVAL32("T0 PCX", ui32RegVal);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		PVR_LOG_RETURN_IF_ERROR(eError, "RGXReadWithSP");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		DDLOGVAL32("T0 SP", ui32RegVal);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:			PVR_LOG_RETURN_IF_ERROR(eError, "RGXReadWithSP");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:			DDLOGVAL32("T1 TXENABLE", ui32RegVal);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:			PVR_LOG_RETURN_IF_ERROR(eError, "RGXReadWithSP");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:			DDLOGVAL32("T1 TXSTATUS", ui32RegVal);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:			PVR_LOG_RETURN_IF_ERROR(eError, "RGXReadWithSP");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:			DDLOGVAL32("T1 TXDEFR", ui32RegVal);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:			PVR_LOG_RETURN_IF_ERROR(eError, "RGXReadWithSP");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:			DDLOGVAL32("T1 PC", ui32RegVal);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:			PVR_LOG_RETURN_IF_ERROR(eError, "RGXReadWithSP");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:			DDLOGVAL32("T1 PCX", ui32RegVal);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:			PVR_LOG_RETURN_IF_ERROR(eError, "RGXReadWithSP");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:			DDLOGVAL32("T1 SP", ui32RegVal);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:			PVR_LOG_RETURN_IF_ERROR(eError, "RGXReadWithSP");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:			DDLOGVAL32("META_CR_PERF_COUNT0", ui32RegVal);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:			PVR_LOG_RETURN_IF_ERROR(eError, "RGXReadWithSP");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:			DDLOGVAL32("META_CR_PERF_COUNT1", ui32RegVal);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:				PVR_DUMPDEBUG_LOG("Failed to validate any FW code corruption");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:			PVR_DUMPDEBUG_LOG("Skipping FW code memory corruption checking as META is disabled");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		PVR_DUMPDEBUG_LOG("FW info: UNINITIALIZED");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		PVR_DUMPDEBUG_LOG("Mismatch between the number of Operating Systems supported by KM driver (%d) and FW (%d)",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	PVR_DUMPDEBUG_LOG("------[ RGX Device: Start ]------");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	PVR_DUMPDEBUG_LOG("------[ RGX Info ]------");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	PVR_DUMPDEBUG_LOG("RGX BVNC: %d.%d.%d.%d (%s)", psDevInfo->sDevFeatureCfg.ui32B,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	PVR_DUMPDEBUG_LOG("RGX Device State: %s", _RGXGetDebugDevStateString(psDeviceNode->eDevState));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	PVR_DUMPDEBUG_LOG("RGX Power State: %s", _RGXGetDebugDevPowerStateString(ePowerState));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:			PVR_DUMPDEBUG_LOG("RGX Kernel CCB WO:0x%X RO:0x%X",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:			PVR_DUMPDEBUG_LOG("RGX Firmware CCB WO:0x%X RO:0x%X",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:				PVR_DUMPDEBUG_LOG("RGX Checkpoint CCB WO:0x%X RO:0x%X (Check State: FW=%#X, HOST=%#X)",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		PVR_DUMPDEBUG_LOG("RGX Kernel CCB commands executed = %d",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		PVR_DUMPDEBUG_LOG("RGX SLR: Forced UFO updates requested = %d",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:				PVR_DUMPDEBUG_LOG("RGX SLR: (most recent forced update was around %" IMG_UINT64_FMTSPEC ".%09" IMG_UINT64_FMTSPEC ")",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:				PVR_DUMPDEBUG_LOG("RGX SLR: (unable to force update as fence contained no sync checkpoints)");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:				PVR_DUMPDEBUG_LOG("RGX SLR:{%" IMG_UINT64_FMTSPEC ".%09" IMG_UINT64_FMTSPEC
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:			for (ui8Idx=0; ui8Idx<PVR_SLR_LOG_ENTRIES;ui8Idx++)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:					PVR_DUMPDEBUG_LOG("RGX SLR:[%" IMG_UINT64_FMTSPEC ".%09" IMG_UINT64_FMTSPEC
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		PVR_DUMPDEBUG_LOG("RGX SLR: Disabled");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:				PVR_DUMPDEBUG_LOG("RGX FW thread %u: FW IRQ count = %u, Last sampled IRQ count in LISR = %u",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:			PVR_DUMPDEBUG_LOG("RGX WorkEst CCB WO:0x%X RO:0x%X",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		PVR_DUMPDEBUG_LOG("FW System config flags = 0x%08X (%s)", psFwSysData->ui32ConfigFlags, sFwSysFlagsDescription);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		PVR_DUMPDEBUG_LOG("FW OS config flags = 0x%08X (%s)", psFwOsData->ui32FwOsConfigFlags, sFwOsFlagsDescription);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		PVR_DUMPDEBUG_LOG("------[ RGX registers ]------");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		PVR_DUMPDEBUG_LOG("RGX Register Base Address (Linear):   0x%p", psDevInfo->pvRegsBaseKM);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		PVR_DUMPDEBUG_LOG("RGX Register Base Address (Physical): 0x%08lX", (unsigned long)psDevInfo->sRegsPhysBase.uiAddr);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:		PVR_DUMPDEBUG_LOG(" (!) %s. No registers dumped", PVRSRV_VZ_MODE_IS(GUEST) ? "Guest Mode of operation" : "RGX power is down");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	PVR_DUMPDEBUG_LOG("------[ RGX FW Trace Info ]------");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:				if (psRGXFWIfTraceBufCtl->ui32LogType & RGXFWIF_LOG_TYPE_GROUP_MASK)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:					PVR_DUMPDEBUG_LOG("Debug log type: %s ( " RGXFWIF_LOG_ENABLED_GROUPS_LIST_PFSPEC ")",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:									  ((psRGXFWIfTraceBufCtl->ui32LogType & RGXFWIF_LOG_TYPE_TRACE)?("trace"):("tbi")),
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:									  RGXFWIF_LOG_ENABLED_GROUPS_LIST(psRGXFWIfTraceBufCtl->ui32LogType)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:					PVR_DUMPDEBUG_LOG("Debug log type: none");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:					PVR_DUMPDEBUG_LOG("RGX FW thread %d: Trace buffer not yet allocated",tid);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:				PVR_DUMPDEBUG_LOG("------[ RGX FW thread %d trace START ]------", tid);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:				PVR_DUMPDEBUG_LOG("FWT[traceptr]: %X", psRGXFWIfTraceBufCtl->sTraceBuf[tid].ui32TracePointer);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:				PVR_DUMPDEBUG_LOG("FWT[tracebufsize]: %X", psRGXFWIfTraceBufCtl->ui32TraceBufSizeInDWords);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:							PVR_DUMPDEBUG_LOG("FWT[%08x]: 00000000 ... 00000000", ui32LineOffset);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:							PVR_DUMPDEBUG_LOG("FWT[...]: %d lines were all zero", ui32CountLines);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:						PVR_DUMPDEBUG_LOG("FWT[%08x]:%s", ui32LineOffset, pszLine);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:					PVR_DUMPDEBUG_LOG("FWT[END]: %d lines were all zero", ui32CountLines);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:				PVR_DUMPDEBUG_LOG("------[ RGX FW thread %d trace END ]------", tid);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:				PVR_DUMPDEBUG_LOG("------[ Full CCB Status ]------");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:				PVR_DUMPDEBUG_LOG("------[ Stalled FWCtxs ]------");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdebug.c:	PVR_DUMPDEBUG_LOG("------[ RGX Device: End ]------");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxkicksync.c:									 ui32CCBAllocSizeLog2 ? ui32CCBAllocSizeLog2 : RGX_KICKSYNC_CCB_SIZE_LOG2,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxkicksync.c:									 ui32CCBMaxAllocSizeLog2 ? ui32CCBMaxAllocSizeLog2 : RGX_KICKSYNC_CCB_MAX_SIZE_LOG2,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxkicksync.c:		PVR_LOG(("%s: Unexpected error from RGXFWRequestCommonContextCleanUp (%s)",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxkicksync.c:			PVR_LOG_IF_ERROR(eError, "FWCommonContextSetFlags");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxkicksync.c:		PVR_LOG_RETURN_IF_FALSE(paui32ClientUpdateValue != NULL,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxmulticore.c:		PVR_LOG(("Multicore system has %u cores", ui32NumCores));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxmulticore.c:			PVR_LOG(("Configured for %u multicores", ui32NumCores));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxmulticore.c:					PVR_LOG(("Core %d has capabilities value 0x%x", i, (IMG_UINT32)(*pui64Caps) ));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxpower.c:										          POLL_FLAG_LOG_ERROR);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxpower.c:								 POLL_FLAG_LOG_ERROR | POLL_FLAG_DEBUG_DUMP) != PVRSRV_OK)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxpower.c:	PVR_LOG(("MTS passed sideband tests"));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxpower.c:			                         POLL_FLAG_LOG_ERROR | POLL_FLAG_DEBUG_DUMP) != PVRSRV_OK)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxpower.c:					PVR_LOG(("%s: FW reached boot stage %i/%i.",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxpower.c:			PVR_LOG_ERROR(eError, "PVRSRVPowerTryLock");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxinit.c:#define RGX_MMU_LOG2_PAGE_SIZE_4KB   (12)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxinit.c:#define RGX_MMU_LOG2_PAGE_SIZE_16KB  (14)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxinit.c:#define RGX_MMU_LOG2_PAGE_SIZE_64KB  (16)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxinit.c:#define RGX_MMU_LOG2_PAGE_SIZE_256KB (18)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxinit.c:#define RGX_MMU_LOG2_PAGE_SIZE_1MB   (20)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxinit.c:#define RGX_MMU_LOG2_PAGE_SIZE_2MB   (21)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxinit.c:	PVR_LOG(("AXI fabric coherency (RGX_CR_SOC_AXI): 0x%x", ui32DeviceFabricCoherency));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxinit.c:		PVR_LOG(("Downgrading device fabric coherency from %s to %s",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxinit.c:		PVR_LOG(("OSGetKMAppHintUINT32(TestSLRInterval) ui32AppHintDefault=%d, psDevInfo->ui32TestSLRInterval=%d",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxinit.c:	PVR_LOG(("RGX Firmware image '%s' loaded", pszLoadedFwStr));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxinit.c:			PVR_LOG_GOTO_IF_ERROR(eError, "DevmemFindHeapByName", failed_to_find_heap);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxinit.c:		PVR_LOG_GOTO_IF_ERROR(eError, "PhysHeapRegionGetDevPAddr", failed_to_find_heap);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxinit.c:				PVR_LOG_GOTO_IF_ERROR(eError, "RGXFwRawHeapAllocMap", failed_to_find_heap);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxinit.c:		PVR_LOG_GOTO_IF_ERROR(eError, "PvzClientMapDevPhysHeap", failed_to_find_heap);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxinit.c:	IMG_DEVMEM_LOG2ALIGN_T uiLog2Align = OSGetPageShift();
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxinit.c:			PVR_LOG(("(FAIL) RGXDevInitCompatCheck: Mismatch in Firmware and KM driver build options; "
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxinit.c:			PVR_LOG(("(FAIL) RGXDevInitCompatCheck: Mismatch in Firmware-side and KM driver build options; "
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxinit.c:		PVR_LOG(("(FAIL) RGXDevInitCompatCheck: Incompatible driver DDK version (%u.%u) / Firmware DDK revision (%u.%u).",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxinit.c:		PVR_LOG(("(WARN) RGXDevInitCompatCheck: Different driver DDK build version (%d) / Firmware DDK build version (%d).",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxinit.c:			PVR_LOG(("(FAIL) %s: Incompatible compatibility struct version of driver (%u) and firmware (%u).",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxinit.c:			PVR_LOG(("(FAIL) RGXDevInitCompatCheck: Mismatch in KM driver BVNC (%u.%u.%u.%u) and Firmware BVNC (%u.%u.%u.%u)",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxinit.c:		PVR_LOG(("BVNC compatibility checks between driver and HW are disabled (AppHint override)"));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxinit.c:		PVR_LOG(("Compatibility checks: Ignoring fields: '%s%s%s%s' of HW BVNC.",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxinit.c:			PVR_LOG(("(FAIL) %s: Incompatible compatibility struct version of HW (%d) and FW (%d).",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxinit.c:			PVR_LOG(("(FAIL) RGXDevInitCompatCheck: Incompatible HW BVNC (%d.%d.%d.%d) and FW BVNC (%d.%d.%d.%d).",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxinit.c:		PVR_LOG(("RGXDevInitCompatCheck: Incompatible driver %s version (%d) / HW %s version (%d).",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxinit.c:			PVR_LOG(("%s: Reading RGX META register failed. Is the GPU correctly powered up? (%u)",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxinit.c:		PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetFirmwareAddress:1", failFWCorememCodeMemDescFwAddr);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxinit.c:		PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetFirmwareAddress:2", failFWCorememDataMemDescFwAddr);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxinit.c:	*pui32Value &= RGXFWIF_LOG_TYPE_GROUP_MASK;
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxinit.c:		if (*pui32Value & RGXFWIF_LOG_TYPE_TRACE)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxinit.c:			BITMASK_SET(ui32Value, RGXFWIF_LOG_TYPE_TRACE);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxinit.c:		BITMASK_SET(ui32RGXFWLogType, RGXFWIF_LOG_TYPE_TRACE);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxinit.c:		BITMASK_UNSET(ui32RGXFWLogType, RGXFWIF_LOG_TYPE_TRACE);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxinit.c:	PVR_LOG_IF_ERROR(eError, "DeviceDepBridgeDeInit");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxinit.c:	PVR_LOG_IF_ERROR(eError, "HTBDeInit");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxinit.c:		PVR_LOG_GOTO_IF_ERROR(eError, "PhysHeapRegionGetDevPAddr", ErrorDeinit);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxinit.c:		PVR_LOG_GOTO_IF_ERROR(eError, "PhysHeapRegionGetCpuPAddr", ErrorDeinit);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxinit.c:		PVR_LOG_GOTO_IF_ERROR(eError, "PhysHeapRegionGetSize", ErrorDeinit);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxinit.c:		PVR_LOG_GOTO_IF_FALSE(uPhysheapSize >= ui64ExpectedHeapSize,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxinit.c:		PVR_LOG_GOTO_IF_ERROR(eError, "PVRSRVCreateRegionRA(FwMain)", ErrorDeinit);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxinit.c:		PVR_LOG_GOTO_IF_ERROR(eError, "PVRSRVCreateRegionRA(FwCfg)", ErrorDeinit);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxinit.c:			PVR_LOG_GOTO_IF_ERROR(eError, "PVRSRVCreateRegionRA(FwMMU)", ErrorDeinit);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxinit.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXHWPerfInit", e14);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxinit.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXDebugInit", e16);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxinit.c:	PVR_LOG_IF_ERROR(eError, "DeviceDepBridgeInit");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.h:#define MIN_SAFE_CCB_SIZE_LOG2         13  /* 8K (2 Pages) */
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.h:#define MAX_SAFE_CCB_SIZE_LOG2         18  /* 256K (64 Pages) */
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.h:#define RGX_TQ_CCB_SIZE_LOG2         PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_TQ2D
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.h:static_assert(RGX_TQ_CCB_SIZE_LOG2 >= MIN_SAFE_CCB_SIZE_LOG2 &&
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.h:	RGX_TQ_CCB_SIZE_LOG2 <= MAX_SAFE_CCB_SIZE_LOG2, "TQ CCB size is invalid");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.h:#define RGX_TQ_CCB_MAX_SIZE_LOG2     PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_TQ2D
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.h:static_assert(RGX_TQ_CCB_MAX_SIZE_LOG2 >= PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_TQ2D &&
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.h:	RGX_TQ_CCB_MAX_SIZE_LOG2 <= MAX_SAFE_CCB_SIZE_LOG2, "TQ max CCB size is invalid");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.h:#define RGX_CDM_CCB_SIZE_LOG2          PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_CDM
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.h:static_assert(RGX_CDM_CCB_SIZE_LOG2 >= MIN_SAFE_CCB_SIZE_LOG2 &&
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.h:	RGX_CDM_CCB_SIZE_LOG2 <= MAX_SAFE_CCB_SIZE_LOG2, "CDM CCB size is invalid");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.h:#define RGX_CDM_CCB_MAX_SIZE_LOG2		PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_CDM
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.h:static_assert(RGX_CDM_CCB_MAX_SIZE_LOG2 >= PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_CDM &&
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.h:	RGX_CDM_CCB_MAX_SIZE_LOG2 <= MAX_SAFE_CCB_SIZE_LOG2, "CDM max CCB size is invalid");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.h:#define RGX_TA_CCB_SIZE_LOG2           PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_TA
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.h:static_assert(RGX_TA_CCB_SIZE_LOG2 >= MIN_SAFE_CCB_SIZE_LOG2 &&
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.h:	RGX_TA_CCB_SIZE_LOG2 <= MAX_SAFE_CCB_SIZE_LOG2, "TA CCB size is invalid");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.h:#define RGX_TA_CCB_MAX_SIZE_LOG2		PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_TA
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.h:static_assert(RGX_TA_CCB_MAX_SIZE_LOG2 >= PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_TA &&
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.h:	RGX_TA_CCB_MAX_SIZE_LOG2 <= MAX_SAFE_CCB_SIZE_LOG2, "TA max CCB size is invalid");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.h:#define RGX_3D_CCB_SIZE_LOG2           PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_3D
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.h:static_assert(RGX_3D_CCB_SIZE_LOG2 >= MIN_SAFE_CCB_SIZE_LOG2 &&
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.h:	RGX_3D_CCB_SIZE_LOG2 <= MAX_SAFE_CCB_SIZE_LOG2, "3D CCB size is invalid");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.h:#define RGX_3D_CCB_MAX_SIZE_LOG2		PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_3D
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.h:static_assert(RGX_3D_CCB_MAX_SIZE_LOG2 >= PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_3D &&
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.h:	RGX_3D_CCB_MAX_SIZE_LOG2 <= MAX_SAFE_CCB_SIZE_LOG2, "3D max CCB size is invalid");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.h:#define RGX_KICKSYNC_CCB_SIZE_LOG2     PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_KICKSYNC
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.h:static_assert(RGX_KICKSYNC_CCB_SIZE_LOG2 >= MIN_SAFE_CCB_SIZE_LOG2 &&
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.h:	RGX_KICKSYNC_CCB_SIZE_LOG2 <= MAX_SAFE_CCB_SIZE_LOG2, "KickSync CCB size is invalid");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.h:#define RGX_KICKSYNC_CCB_MAX_SIZE_LOG2	PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_KICKSYNC
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.h:static_assert(RGX_KICKSYNC_CCB_MAX_SIZE_LOG2 >= PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_KICKSYNC &&
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.h:	RGX_KICKSYNC_CCB_MAX_SIZE_LOG2 <= MAX_SAFE_CCB_SIZE_LOG2, "KickSync max CCB size is invalid");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.h:#define RGX_TDM_CCB_SIZE_LOG2         PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_TDM
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.h:static_assert(RGX_TDM_CCB_SIZE_LOG2 >= MIN_SAFE_CCB_SIZE_LOG2 &&
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.h:	RGX_TDM_CCB_SIZE_LOG2 <= MAX_SAFE_CCB_SIZE_LOG2, "TDM CCB size is invalid");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.h:#define RGX_TDM_CCB_MAX_SIZE_LOG2		PVRSRV_RGX_LOG2_CLIENT_CCB_MAX_SIZE_TDM
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.h:static_assert(RGX_TDM_CCB_MAX_SIZE_LOG2 >= PVRSRV_RGX_LOG2_CLIENT_CCB_SIZE_TDM &&
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.h:	RGX_TDM_CCB_MAX_SIZE_LOG2 <= MAX_SAFE_CCB_SIZE_LOG2, "TDM max CCB size is invalid");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxpdump.c:	pui32Word[3] = ui32LogicalWidth << IMAGE_HEADER_WORD3_LOGICAL_WIDTH_SHIFT;
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxpdump.c:	pui32Word[4] = ui32LogicalHeight << IMAGE_HEADER_WORD4_LOGICAL_HEIGHT_SHIFT;
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxlayer_impl.c:		                         POLL_FLAG_LOG_ERROR) != PVRSRV_OK)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxlayer_impl.c:		                         POLL_FLAG_LOG_ERROR) != PVRSRV_OK)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxlayer_impl.c:		                         POLL_FLAG_LOG_ERROR) != PVRSRV_OK)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxlayer_impl.c:	PVR_LOG(("Starting fabric coherency test ....."));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxlayer_impl.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetFirmwareAddress:1", e2);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxlayer_impl.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetFirmwareAddress:2", e5);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxlayer_impl.c:						PVR_LOG(("At Offset: %d, Expected: %x, Got: %x",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxlayer_impl.c:				PVR_LOG(("CPU:Write/GPU:Read Snoop Miss Test: completed [run #%u]: %s",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxlayer_impl.c:				PVR_LOG(("GPU:Write/CPU:Read Snoop Miss Test: completed [run #%u]: %s",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxlayer_impl.c:				PVR_LOG(("CPU:Write/GPU:Read Snoop Hit Test: completed [run #%u]: %s",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxlayer_impl.c:				PVR_LOG(("GPU:Write/CPU:Read Snoop Hit Test: completed [run #%u]: %s",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxlayer_impl.c:				PVR_LOG(("Internal error, exiting test"));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxlayer_impl.c:		PVR_LOG(("fabric coherency test: PASSED"));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxlayer_impl.c:		PVR_LOG(("fabric coherency test: FAILED"));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxhwperf.c:	PVR_LOG_RETURN_IF_ERROR(eError, "OSLockCreate");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxhwperf.c:	PVR_LOG_RETURN_VOID_IF_ERROR(eError, "RGXWaitForKCCBSlotUpdate");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxhwperf.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetFirmwareAddress", e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxhwperf.c:	PVR_LOG_GOTO_IF_ERROR(eError, "TLStreamCreate", e1);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxhwperf.c:	PVR_LOG_IF_ERROR(eError, "TLStreamSetNotifStream");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxhwperf.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXWaitForKCCBSlotUpdate", return_);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxhwperf.c:		PVR_LOG_IF_ERROR(eError, "PVRSRVCreateHWPerfHostThread");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxhwperf.c:		PVR_LOG_IF_ERROR(eError, "PVRSRVDestroyHWPerfHostThread");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxhwperf.c:		PVR_LOG(("HWPerfHost deferred events buffer high-watermark / size: (%u / %u)",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxhwperf.c:		PVR_LOG(("HWPerfHost deferred event retries: WaitForAtomicCtxPktHighWatermark(%u) "
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxhwperf.c:	PVR_LOG_RETURN_IF_FALSE(ui32InfoPageIdx >= HWPERF_INFO_IDX_START &&
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxhwperf.c:	PVR_LOG_RETURN_IF_FALSE((NULL != psDevInfo), "psDevInfo invalid", PVRSRV_ERROR_INVALID_PARAMS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxhwperf.c:	PVR_LOG_RETURN_IF_FALSE((NULL != psDeviceNode), "psConnection invalid", PVRSRV_ERROR_INVALID_PARAMS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxhwperf.c:	PVR_LOG_RETURN_IF_ERROR(eError, "DevmemFwAllocate");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxhwperf.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetFirmwareAddress", fail1);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxhwperf.c:	PVR_LOG_GOTO_IF_ERROR(eError, "DevmemAcquireCpuVirtAddr", fail2);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxhwperf.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXScheduleCommandAndGetKCCBSlot", fail2);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxhwperf.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXWaitForKCCBSlotUpdate", fail3);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxhwperf.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(psBlockIDs != NULL, "psBlockIDs");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxhwperf.c:	PVR_LOG_RETURN_IF_ERROR(eError, "RGXScheduleCommandAndGetKCCBSlot");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxhwperf.c:	PVR_LOG_RETURN_IF_ERROR(eError, "RGXWaitForKCCBSlotUpdate");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxhwperf.c:	PVR_LOG_GOTO_IF_ERROR(eError, "OSLockCreate", error);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxhwperf.c:		PVR_LOG_IF_ERROR(eError, "PVRSRVCreateHWPerfHostThread");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxhwperf.c:	PVR_LOG_RETURN_IF_ERROR(eError, "TLStreamCreate");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxhwperf.c:	PVR_LOG_IF_ERROR(eError, "TLStreamSetNotifStream");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxhwperf.c:	PVR_LOG_IF_ERROR(eError, "TLStreamMarkStreamOpen");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxhwperf.c:	PVR_LOG_GOTO_IF_ERROR(eError, "OSInstallMISR", err_install_misr);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxhwperf.c:	PVR_LOG_GOTO_IF_ERROR(eError, "OSSpinLockCreate", err_spinlock_create);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxhwperf.c:			/* PVR_LOG/printk isn't recommended in atomic context. Perhaps we'll do
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxhwperf.c://			PVR_LOG(("%s: No more space in deferred events buffer (%u/%u) W=%u,R=%u",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxhwperf.c:		PVR_LOG_RETURN_IF_ERROR(eError, "TLClientOpenStream(RGX_HWPerf)");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxhwperf.c:		PVR_LOG_RETURN_IF_ERROR(eError, "TLClientOpenStream(Host_HWPerf)");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxhwperf.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXHWPerfLazyConnect", e0);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxhwperf.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXHWPerfOpen", e1);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxhwperf.c:		PVR_LOG_RETURN_IF_ERROR(eError, "PVRSRVRGXCtrlHWPerfKM");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxhwperf.c:		PVR_LOG_RETURN_IF_ERROR(eError, "PVRSRVRGXConfigureHWPerfBlocksKM");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxhwperf.c:		PVR_LOG_RETURN_IF_ERROR(eError, szFunctionString);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxhwperf.c:		PVR_LOG_RETURN_IF_ERROR(eError, "TLClientAcquireData");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxhwperf.c:				PVR_LOG_IF_ERROR(eError, "TLClientReleaseData");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxhwperf.c:				PVR_LOG_IF_ERROR(eError, "TLClientCloseStream");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxhwperf.c:	PVR_LOG_IF_ERROR(eError, "RGXHWPerfClose");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxhwperf.c:	PVR_LOG_IF_ERROR(eError, "RGXHWPerfFreeConnection");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxtdmtransfer.c:			ui32CCBAllocSizeLog2 ? ui32CCBAllocSizeLog2 : RGX_TDM_CCB_SIZE_LOG2,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxtdmtransfer.c:			ui32CCBMaxAllocSizeLog2 ? ui32CCBMaxAllocSizeLog2 : RGX_TDM_CCB_MAX_SIZE_LOG2,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxtdmtransfer.c:		PVR_LOG(("%s: Unexpected error from RGXFWRequestCommonContextCleanUp (%s)",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxtdmtransfer.c:		PVR_LOG_RETURN_IF_FALSE(paui32ClientUpdateValue != NULL,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxtdmtransfer.c:		/* HTBLOGK(HTB_SF_MAIN_KICK_TDM, */
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxtdmtransfer.c:			PVR_LOG_IF_ERROR(eError, "FWCommonContextSetFlags");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxsrvinit.c:#define X(a, b) { #b, HTB_LOG_GROUP_FLAG(a) },
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxsrvinit.c:	HTB_LOG_SFGROUPLIST
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxsrvinit.c:static SRV_INIT_PARAM_UINT32_LOOKUP fwt_loggroup_tbl[] = { RGXFWIF_LOG_GROUP_NAME_VALUE_MAP };
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxsrvinit.c:		BITMASK_SET(ui32LogGroup, RGXFWIF_LOG_TYPE_TRACE);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxsrvinit.c:			if ((ui32LogGroup & RGXFWIF_LOG_TYPE_GROUP_MASK) == 0)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxsrvinit.c:				BITMASK_SET(ui32LogGroup, RGXFWIF_LOG_TYPE_GROUP_MAIN);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxsrvinit.c:			BITMASK_UNSET(ui32LogGroup, RGXFWIF_LOG_TYPE_TRACE);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxsrvinit.c:	ui32DeviceFlags |= psHints->bDisableFEDLogging ? RGXKM_DEVICE_STATE_DISABLE_DW_LOGGING_EN : 0;
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxsrvinit.c:	PVR_LOG_GOTO_IF_ERROR(eError, "DevmemAcquireCpuVirtAddr", cleanup_initfw);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxsrvinit.c:	PVR_LOG_GOTO_IF_ERROR(eError, "DevmemAcquireCpuVirtAddr", release_code);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxsrvinit.c:		PVR_LOG_GOTO_IF_ERROR(eError, "DevmemAcquireCpuVirtAddr", release_data);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxsrvinit.c:		PVR_LOG_GOTO_IF_ERROR(eError, "DevmemAcquireCpuVirtAddr", release_corememcode);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxsrvinit.c:	PVR_LOG_GOTO_IF_ERROR(eError, "DevmemAcquireCpuVirtAddr", failHWPerfCountersMemDescAqCpuVirt);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxsrvinit.c:		PVR_LOG(("AutoVz startup check: firmware is %s;",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxta3d.c:		PVR_LOG(("%s: Unexpected error from RGXFWRequestCommonContextCleanUp (%s)",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxta3d.c:		PVR_LOG(("%s: Unexpected error from RGXFWRequestCommonContextCleanUp (%s)",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxta3d.c:	PVR_LOG(("Freelist FWAddr 0x%08x, ID = %d, CheckSum 0x%016" IMG_UINT64_FMTSPECx,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxta3d.c:	PVR_LOG(("  Initial Memory block"));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxta3d.c:	PVR_LOG(("  Grow Memory blocks"));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxta3d.c:		PVR_LOG(("%s: Failed to allocate buffer to check freelist %p!",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxta3d.c:		PVR_LOG(("%s: Failed to get freelist data for freelist %p!",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxta3d.c:				PVR_LOG(("%s: Freelist consistency failure: FW addr: 0x%08X, Double entry found 0x%08x on idx: %d and %d of %d",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxta3d.c:		PVR_LOG(("%s: Checksum mismatch for freelist %p! Expected 0x%016llx calculated 0x%016llx",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxta3d.c:		PVR_LOG(("%s: Sleeping for ever!", __func__));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxta3d.c:	PVR_LOG_IF_ERROR(eError, "RIWriteMEMDESCEntryKM");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxta3d.c:			PVR_LOG_IF_ERROR(eError, "RIDeleteMEMDESCEntryKM");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxta3d.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetFirmwareAddress:1", FWRTDataFwAddrError);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxta3d.c:	PVR_LOG_GOTO_IF_ERROR(eError, "Devmem AcquireCpuVirtAddr", FWRTDataCpuMapError);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxta3d.c:			PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetFirmwareAddress:2", FWAllocateRTArryFwAddrError);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxta3d.c:			PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetFirmwareAddress:3", FWAllocRTAccArryFwAddrError);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxta3d.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetFirmwareAddress", ErrorSetFwAddr);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxta3d.c:	PVR_LOG_GOTO_IF_ERROR(eError, "Devmem AcquireCpuVirtAddr", FWFreeListCpuMap);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxta3d.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetFirmwareAddress", ErrorSetFwAddr);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxta3d.c:									 ui32CCBAllocSizeLog2 ? ui32CCBAllocSizeLog2 : RGX_TA_CCB_SIZE_LOG2,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxta3d.c:									 ui32CCBMaxAllocSizeLog2 ? ui32CCBMaxAllocSizeLog2 : RGX_TA_CCB_MAX_SIZE_LOG2,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxta3d.c:									 ui32CCBAllocSizeLog2 ? ui32CCBAllocSizeLog2 : RGX_3D_CCB_SIZE_LOG2,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxta3d.c:									 ui32CCBMaxAllocSizeLog2 ? ui32CCBMaxAllocSizeLog2 : RGX_3D_CCB_MAX_SIZE_LOG2,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxta3d.c:		PVR_LOG_RETURN_IF_FALSE(paui32ClientTAFenceValue != NULL,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxta3d.c:		PVR_LOG_RETURN_IF_FALSE(paui32ClientTAUpdateValue != NULL,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxta3d.c:		PVR_LOG_RETURN_IF_FALSE(paui32Client3DUpdateValue != NULL,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxta3d.c:		HTBLOGK(HTB_SF_MAIN_KICK_TA,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxta3d.c:		HTBLOGK(HTB_SF_MAIN_KICK_3D,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxta3d.c:			PVR_LOG_IF_ERROR(eError, "FWCommonContextSetFlags eError");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxta3d.c:			PVR_LOG_IF_ERROR(eError2, "FWCommonContextSetFlags eError2");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxmem.c:		PVR_LOG(("_RecordUnregisteredMemoryContext: Failed to get PC address for memory context"));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxmem.c:			PVR_LOG(("Failed to get PC address for memory context"));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxmem.c:		PVR_LOG(("Failed to get PC address for kernel memory context"));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxmem.c:			PVR_LOG(("Failed to get PC address for memory context"));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxmem.c:			PVR_LOG(("Failed to get PC address for kernel memory context"));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxcompute.c:									 ui32CCBAllocSizeLog2 ? ui32CCBAllocSizeLog2 : RGX_CDM_CCB_SIZE_LOG2,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxcompute.c:									 ui32CCBMaxAllocSizeLog2 ? ui32CCBMaxAllocSizeLog2 : RGX_CDM_CCB_MAX_SIZE_LOG2,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxcompute.c:		PVR_LOG(("%s: Unexpected error from RGXFWRequestCommonContextCleanUp (%s)",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxcompute.c:		PVR_LOG_RETURN_IF_FALSE(paui32ClientUpdateValue != NULL,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxcompute.c:	HTBLOGK(HTB_SF_MAIN_KICK_CDM,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxcompute.c:			PVR_LOG_IF_ERROR(eError, "FWCommonContextSetFlags");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.c:	PVR_LOG_IF_ERROR(eError, "RGXCCBPDumpDrainCCB");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.c:				PVR_LOG_RETURN_IF_ERROR(eError, "RGXPdumpDrainKCCB");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.c:		PVR_LOG(("Failed to acquire CCB space for %u byte command:", ui32CmdSize));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.c:	PVR_LOG(("%s: Client CCB (%s) watermark (%u) hit %d%% of its allocation size (%u)",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.c:	PVR_LOG(("GPU %s command buffer usage high (%u). This is not an error but the application may not run optimally.",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.c:	IMG_UINT32		ui32MinAllocSize = (1U << MIN_SAFE_CCB_SIZE_LOG2);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.c:	if ((ui32CCBSizeLog2 < MIN_SAFE_CCB_SIZE_LOG2) ||
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.c:		(ui32CCBSizeLog2 > MAX_SAFE_CCB_SIZE_LOG2))
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.c:		         ui32CCBSizeLog2, MIN_SAFE_CCB_SIZE_LOG2, MAX_SAFE_CCB_SIZE_LOG2));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.c:		(ui32CCBMaxSizeLog2 > MAX_SAFE_CCB_SIZE_LOG2))
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.c:		         ui32CCBMaxSizeLog2, ui32CCBSizeLog2, MAX_SAFE_CCB_SIZE_LOG2));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.c:		PVR_LOG(("CCBUtilisationInfo: GPU %s command buffer was full %d times out of %d. "
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.c:						PVR_LOG(("%s: Client CCB (%s) grow failed (%s)", __func__, psClientCCB->szName, PVRSRVGetErrorString(eErr)));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.c:					PVR_LOG(("%s: Client CCB (%s) grew to %u", __func__, psClientCCB->szName, psClientCCB->ui32Size));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.c:	PVR_DUMPDEBUG_LOG("FWCtx 0x%08X (%s)", sFWCommonContext.ui32Addr,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.c:		PVR_DUMPDEBUG_LOG("  `--<Empty>");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.c:		PVR_DUMPDEBUG_LOG("  %s--%s %s @ %u Int=%u Ext=%u",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.c:					PVR_DUMPDEBUG_LOG("  %s  %s--Addr:0x%08x Val=0x%08x %s",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.c:			PVR_DUMPDEBUG_LOG("FWCtx 0x%08X @ %d (%s) pending on %s:",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.c:				PVR_DUMPDEBUG_LOG("  Addr:0x%08x  Value=0x%08x",psUFOPtr[jj].puiAddrUFO.ui32Addr, psUFOPtr[jj].ui32Value);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.c:				PVR_DUMPDEBUG_LOG("  Addr:0x%08x Value(Host)=0x%08x Value(FW)=0x%08x",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.c:				PVR_DUMPDEBUG_LOG(" FWCtx 0x%08X fenced command is of type %s",sFWCommonContext.ui32Addr, _CCBCmdTypename(psCommandHeader->eCmdType));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.c:						PVR_DUMPDEBUG_LOG(" preventing %s:",_CCBCmdTypename(eCommandType));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.c:							PVR_DUMPDEBUG_LOG("  Addr:0x%08x  Value=0x%08x",psUFOPtr[jj].puiAddrUFO.ui32Addr, psUFOPtr[jj].ui32Value);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.c:							PVR_DUMPDEBUG_LOG("  Addr:0x%08x Value(Host)=0x%08x Value(FW)=0x%08x",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.c:					PVR_DUMPDEBUG_LOG(" FWCtx 0x%08X has no further commands",sFWCommonContext.ui32Addr);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.c:				PVR_DUMPDEBUG_LOG(" FWCtx 0x%08X has no further commands",sFWCommonContext.ui32Addr);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.c:				psDevInfo->psRGXFWIfFwOsData->ui8SLRLogWp = (psDevInfo->psRGXFWIfFwOsData->ui8SLRLogWp + 1) % PVR_SLR_LOG_ENTRIES;
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.c:			PVR_LOG(("Fence found on context 0x%x '%s' @ %d has %d UFOs",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.c:					PVR_LOG(("  %d/%d FWAddr 0x%x requires 0x%x (currently 0x%x)", jj+1,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.c:					PVR_LOG(("  %d/%d FWAddr 0x%x requires 0x%x", jj+1,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.c:				PVR_LOG_IF_ERROR(eErr, "SyncCheckpointDumpInfoOnStalledUFOs() call failed.");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.c:				PVR_LOG(("SLR disabled for FWCtx 0x%08X", psContext.ui32Addr));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxccb.c:					PVR_LOG(("Forced update command issued for FWCtx 0x%08X", sSignalFencesCmd.uCmdData.sForceUpdateData.psContext.ui32Addr));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdevice.h:#define RGXKM_DEVICE_STATE_DISABLE_DW_LOGGING_EN       (0x2) /*!< Used to disable the Devices Watchdog logging */
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdevice.h: * MTS can have is 255, therefore 512 (LOG2 = 9) is large enough to account for
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdevice.h:#define RETURN_DATA_ARRAY_SIZE_LOG2 (9)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdevice.h:#define RETURN_DATA_ARRAY_SIZE      ((1UL) << RETURN_DATA_ARRAY_SIZE_LOG2)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdevice.h:#define WORKLOAD_HASH_SIZE_LOG2		6
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxdevice.h:#define WORKLOAD_HASH_SIZE			((1UL) << WORKLOAD_HASH_SIZE_LOG2)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxmmuinit.c:	 * PAGE CATALOGUE (4 Byte):
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:#define RGXFWIF_KCCB_NUMCMDS_LOG2    (7)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:#define RGXFWIF_FWCCB_NUMCMDS_LOG2   (10)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:#define RGXFWIF_FWCCB_NUMCMDS_LOG2   (8)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:#define RGXFWIF_FWCCB_NUMCMDS_LOG2   (5)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:#define RGXFWIF_CHECKPOINTCCB_NUMCMDS_LOG2 (10)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:#define RGXFWIF_WORKEST_FWCCB_NUMCMDS_LOG2   (7)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetupFwAllocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetupFwAllocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetupFwAllocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:		PVR_LOG_GOTO_IF_ERROR(eError, "DevmemAcquireDevVirtAddr", failDevVAAcquire);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:		PVR_LOG_GOTO_IF_ERROR(eError, "DevmemDeviceCacheMode", failDevCacheMode);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:		PVR_LOG_GOTO_IF_ERROR(eError, "DevmemAcquireDevVirtAddr", failDevVAAcquire);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetFirmwareAddress:1", fail_cccbfwaddr);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetFirmwareAddress:2", fail_cccbctrlfwaddr);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetFirmwareAddress:3", fail_fwmemctxfwaddr);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:		PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetFirmwareAddress:4", fail_ctxstatefwaddr);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetFirmwareAddress:5", fail_fwcommonctxfwaddr);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetupFwAllocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetupFwAllocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:		 && (psTraceBufCtl->ui32LogType & ~RGXFWIF_LOG_TYPE_TRACE)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:		 && (psTraceBufCtl->ui32LogType & RGXFWIF_LOG_TYPE_GROUP_MASK))
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetupFwAllocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:		&& (psTraceBufCtl->ui32LogType & RGXFWIF_LOG_TYPE_TRACE)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:		&& (psTraceBufCtl->ui32LogType & RGXFWIF_LOG_TYPE_GROUP_MASK)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:		PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetupFwAllocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "Power Monitoring Buffer allocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PDUMPCOMMENT("( MAIN Group Enable: 0x%08x)", RGXFWIF_LOG_TYPE_GROUP_MAIN);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PDUMPCOMMENT("( MTS Group Enable: 0x%08x)", RGXFWIF_LOG_TYPE_GROUP_MTS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PDUMPCOMMENT("( CLEANUP Group Enable: 0x%08x)", RGXFWIF_LOG_TYPE_GROUP_CLEANUP);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PDUMPCOMMENT("( CSW Group Enable: 0x%08x)", RGXFWIF_LOG_TYPE_GROUP_CSW);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PDUMPCOMMENT("( BIF Group Enable: 0x%08x)", RGXFWIF_LOG_TYPE_GROUP_BIF);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PDUMPCOMMENT("( PM Group Enable: 0x%08x)", RGXFWIF_LOG_TYPE_GROUP_PM);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PDUMPCOMMENT("( RTD Group Enable: 0x%08x)", RGXFWIF_LOG_TYPE_GROUP_RTD);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PDUMPCOMMENT("( SPM Group Enable: 0x%08x)", RGXFWIF_LOG_TYPE_GROUP_SPM);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PDUMPCOMMENT("( POW Group Enable: 0x%08x)", RGXFWIF_LOG_TYPE_GROUP_POW);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PDUMPCOMMENT("( HWR Group Enable: 0x%08x)", RGXFWIF_LOG_TYPE_GROUP_HWR);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PDUMPCOMMENT("( HWP Group Enable: 0x%08x)", RGXFWIF_LOG_TYPE_GROUP_HWP);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:		PDUMPCOMMENT("( DMA Group Enable: 0x%08x)", RGXFWIF_LOG_TYPE_GROUP_DMA);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PDUMPCOMMENT("( MISC Group Enable: 0x%08x)", RGXFWIF_LOG_TYPE_GROUP_MISC);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PDUMPCOMMENT("( DEBUG Group Enable: 0x%08x)", RGXFWIF_LOG_TYPE_GROUP_DEBUG);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_GOTO_IF_NOMEM(psFwSysInitScratch, eError, fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "Firmware Sys Init structure allocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "Fault read register setup", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:		PVR_LOG_IF_FALSE(psDVFSDeviceCfg->pasOPPTable, "RGXSetupFwSysData: Missing OPP Table");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetupFwAllocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:		if (ui32LogType & ~RGXFWIF_LOG_TYPE_MASK)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXTraceBufferInitOnDemandResources", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetupFwAllocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "Firmware GCOV buffer allocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "TDM Signature check setup", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "GEOM Signature check setup", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "3D Signature check setup", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "CDM Signature check setup", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "FBCDC/TRP Signature check setup", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "Alignment checks setup", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "SLC3Fence memory allocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "PDVFS core clock rate memory setup", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:		PVR_LOG_GOTO_IF_ERROR(eError, "RGXTBIBufferInitOnDemandResources", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "GPU Utilisation Buffer ctl allocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "Firmware runtime configuration memory allocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "Firmware register user configuration structure allocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:		PVR_LOG_GOTO_IF_ERROR(eError, "RGXHWPerfInitOnDemandResources", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:			PVR_LOG_GOTO_IF_ERROR(eError, "RGXPowmonBufferInitOnDemandResources", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "Firmware HW Perf control struct allocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "Non-secure buffer allocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetFirmwareAddress:1", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "Secure buffer allocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetFirmwareAddress:2", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:		PVR_LOG_GOTO_IF_ERROR(eError, "RGXServerFeatureFlagsToHWPerfFlags", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	                                  (RGXFWIF_KCCB_NUMCMDS_LOG2 - 1) : (RGXFWIF_KCCB_NUMCMDS_LOG2));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "Firmware Connection Control structure allocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "Firmware Os Init structure allocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "HWR Info Buffer allocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "Sync primitive context allocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "Sync primitive allocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "Kernel CCB allocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "Kernel CCB return slot array allocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:						 RGXFWIF_FWCCB_NUMCMDS_LOG2,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "Firmware CCB allocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:						 RGXFWIF_CHECKPOINTCCB_NUMCMDS_LOG2,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "Checkpoint CCB allocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXSetupFwAllocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "Get Sync Prim FW address", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:						 RGXFWIF_WORKEST_FWCCB_NUMCMDS_LOG2,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "Workload Estimation Firmware CCB allocation", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "Setting up firmware os data", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:		PVR_LOG_GOTO_IF_ERROR(eError, "Setting up firmware system data", fail);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:		case RGXFWIF_KCCB_CMD_LOGTYPE_UPDATE:
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_RETURN_IF_ERROR(eError, "PVRSRVWaitForValueKM");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:			PVR_LOG_IF_ERROR(eError, "DevmemPDumpDevmemPol32");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:									 POLL_FLAG_LOG_ERROR | POLL_FLAG_DEBUG_DUMP);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_RETURN_IF_FALSE(ui32CmdMemCopySize !=0, "RGXGetCmdMemCopySize failed", PVRSRV_ERROR_INVALID_CCB_COMMAND);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:			PVR_LOG_GOTO_IF_ERROR(eError, "RGXPdumpDrainKCCB", _RGXSendCommandRaw_Exit);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	HTBLOGK(HTB_SF_MAIN_KICK_UNCOUNTED);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:		HTBLOGK(HTB_SF_MAIN_FWCCB_CMD, psFwCCBCmd->eCmdType);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_RETURN_IF_ERROR(eError, "PVRSRVPowerLock");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:		PVR_LOG_GOTO_IF_ERROR(eError, "RGXSendCommandAndGetKCCBSlot", unlock);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:		PVR_LOG_IF_ERROR(eError, "RGXWaitForKCCBSlotUpdate");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_GOTO_IF_ERROR(eError, "RGXScheduleCommandAndGetKCCBSlot", fail_command);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_IF_ERROR(eError, "DevmemPDumpDevmemPol32");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:			PVR_LOG_GOTO_IF_ERROR(eError, "RGXScheduleCommand", return_);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:			PVR_LOG_GOTO_IF_ERROR(eError, "RGXWaitForKCCBSlotUpdate", return_);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	        POLL_FLAG_LOG_ERROR) != PVRSRV_OK)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	        POLL_FLAG_LOG_ERROR) != PVRSRV_OK)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:				POLL_FLAG_LOG_ERROR) != PVRSRV_OK)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:				POLL_FLAG_LOG_ERROR) != PVRSRV_OK)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:		PVR_LOG(("RGXCheckForStalledClientContexts: Failed to acquire hCCBStallCheckLock, returning..."));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:			PVR_LOG(("Possible stalled client RGX contexts detected: %s%s%s%s%s%s%s",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:			PVR_LOG(("Trying to identify stalled context...(%s) [%d]",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:				PVR_LOG(("No further stalled client contexts exist"));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:			PVR_LOG(("(FAIL) RGXDevInitCompatCheck: Mismatch in Firmware and client build options; "
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:			PVR_LOG(("(FAIL) RGXDevInitCompatCheck: Mismatch in Firmware and client build options; "
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_RETURN_IF_ERROR(eError, "PVRSRVCreateRegionRA");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxfwutils.c:	PVR_LOG_RETURN_IF_ERROR(eError, "DevmemFwAllocate");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxbvnc.c:#define PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, szShortName, Feature)															\
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxbvnc.c:		{ PVR_LOG(("%s %d", szShortName, psDevInfo->sDevFeatureCfg.ui32FeaturesValues[RGX_FEATURE_##Feature##_IDX])); }		\
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxbvnc.c:		{ PVR_LOG(("%s N/A", szShortName)); }
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxbvnc.c:	PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, "NC:       ", NUM_CLUSTERS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxbvnc.c:	PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, "FBCDCA:   ", FBCDC_ARCHITECTURE);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxbvnc.c:	PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, "MCMB:     ", META_COREMEM_BANKS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxbvnc.c:	PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, "MCMS:     ", META_COREMEM_SIZE);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxbvnc.c:	PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, "MDMACnt:  ", META_DMA_CHANNEL_COUNT);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxbvnc.c:	PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, "NIIP:     ", NUM_ISP_IPP_PIPES);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxbvnc.c:	PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, "NIPS:     ", NUM_ISP_PER_SPU);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxbvnc.c:	PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, "PPS:      ", PBE_PER_SPU);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxbvnc.c:	PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, "NSPU:     ", NUM_SPU);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxbvnc.c:	PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, "PBW:      ", PHYS_BUS_WIDTH);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxbvnc.c:	PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, "STEArch:  ", SCALABLE_TE_ARCH);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxbvnc.c:	PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, "SVCEA:    ", SCALABLE_VCE);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxbvnc.c:	PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, "SLCBanks: ", SLC_BANKS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxbvnc.c:	PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, "SLCCLS:   ", SLC_CACHE_LINE_SIZE_BITS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxbvnc.c:	PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, "SLCSize:  ", SLC_SIZE_IN_KILOBYTES);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxbvnc.c:	PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, "VASB:     ", VIRTUAL_ADDRESS_SPACE_BITS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxbvnc.c:	PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, "META:     ", META);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxbvnc.c:	PVR_LOG_DUMP_FEATURE_VALUE(psDevInfo, "NOSIDS:   ", NUM_OSIDS);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxbvnc.c:				PVR_LOG(("%s", gaszFeaturesNoValuesNames[ui32IdOrNameIdx - 1]));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxbvnc.c:				PVR_LOG(("ERN/BRN : %d", gaui64ErnsBrnsIDs[ui32IdOrNameIdx - 1]));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxbvnc.c:				PVR_LOG(("Unknown ErnBrn bit: 0x%0" IMG_UINT64_FMTSPECx, ((IMG_UINT64)1 << (ui32IdOrNameIdx - 1))));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxbvnc.c:	PVR_LOG(("BVNC module parameter honoured: %s", aszBVNCString));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxbvnc.c:		PVR_LOG(("Read BVNC " RGX_BVNC_STR_FMTSPEC
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxbvnc.c:		PVR_LOG_IF_FALSE((pui64Cfg != NULL), "Driver parameter BVNC configuration not found!");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxbvnc.c:			PVR_LOG_RETURN_IF_ERROR(eError, "pfnPrePowerState ON");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxbvnc.c:			PVR_LOG_RETURN_IF_ERROR(eError, "pfnPostPowerState ON");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxbvnc.c:		PVR_LOG(("Read BVNC " RGX_BVNC_STR_FMTSPEC
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxbvnc.c:			PVR_LOG_RETURN_IF_ERROR(eError, "pfnPrePowerState OFF");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxbvnc.c:			PVR_LOG_RETURN_IF_ERROR(eError, "pfnPostPowerState OFF");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxbvnc.c:		PVR_LOG_IF_FALSE((pui64Cfg != NULL), "HW device BVNC configuration not found!");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxbvnc.c:		PVR_LOG(("Reverting to compile time BVNC %s", RGX_BVNC_KM));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxbvnc.c:		PVR_LOG_IF_FALSE((pui64Cfg != NULL), "Compile time BVNC configuration not found!");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxbvnc.c:	PVR_LOG(("RGX Device registered with BVNC " RGX_BVNC_STR_FMTSPEC,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxbvnc.c:	PVR_LOG(("matchBVNC %d.%d.%d.%d",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/volcanic/rgxbvnc.c:		PVR_LOG(("CORE_ID%d returned %d.%d.%d.%d", i,
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rgxshader.c:	PVR_LOG(("RGX TQ shaders '%s' loaded", pszLoadedShaderStr));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rgxshader.c:		PVR_LOG(("%s: Unexpected error from PhysmemNewRamBackedPMR (%s)",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rgxshader.c:		PVR_LOG(("%s: Unexpected error from RIWritePMREntryWithOwnerKM (%s)",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rgxshader.c:		PVR_LOG(("%s: Unexpected error from PMR_WriteBytes (%s)",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rgxshader.c:		PVR_LOG(("%s: Unexpected error from PhysmemNewRamBackedPMR (%s)",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rgxshader.c:		PVR_LOG(("%s: Unexpected error from RIWritePMREntryWithOwnerKM (%s)",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rgxshader.c:		PVR_LOG(("%s: Unexpected error from PMR_WriteBytes (%s)",
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rgxfwtrace_strings.c:#define X(a, b, c, d, e) { RGXFW_LOG_CREATESFID(a,b,e), d },
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rgxfwtrace_strings.c:	RGXFW_LOG_SFIDLIST
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rgxfwdbg.c:	if (ui32RGXFWLogType & ~RGXFWIF_LOG_TYPE_MASK)
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rgxfwdbg.c:		sLogTypeUpdateCmd.eCmdType = RGXFWIF_KCCB_CMD_LOGTYPE_UPDATE;
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rgxfwdbg.c:		PVR_LOG_GOTO_IF_ERROR(eError, "RGXSendCommandAndGetKCCBSlot", unlock);
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rgxfwdbg.c:		PVR_LOG_IF_ERROR(eError, "RGXWaitForKCCBSlotUpdate");
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rgxfwdbg.c:	PVR_LOG(("---------------[ Begin Freelist Page List Dump ]------------------"));
gpu/gpu_rgx/m1.13ED5776728/services/server/devices/rgxfwdbg.c:	PVR_LOG(("----------------[ End Freelist Page List Dump ]-------------------"));
gpu/gpu_rgx/m1.13ED5776728/services/shared/common/devicemem.c:	PVR_LOG_GOTO_IF_ERROR(eError, "PhysHeapRegionGetDevPAddr", fail);
gpu/gpu_rgx/m1.13ED5776728/services/shared/common/devicemem.c:	PVR_LOG_GOTO_IF_ERROR(eError, "PMRLockSysPhysAddr", fail);
gpu/gpu_rgx/m1.13ED5776728/services/shared/common/devicemem.c:		PVR_LOG_IF_ERROR(eError, "PMR_DevPhysAddr");
gpu/gpu_rgx/m1.13ED5776728/services/shared/common/devicemem.c:		PVR_LOG_IF_ERROR(eError, "PMRUnlockSysPhysAddr");
gpu/gpu_rgx/m1.13ED5776728/services/shared/common/devicemem.c:	PVR_LOG_IF_ERROR(eError, "PMRUnlockSysPhysAddr");
gpu/gpu_rgx/m1.13ED5776728/services/shared/common/devicemem.c:	IMG_DEVMEM_LOG2ALIGN_T uiLog2DataPageSize;
gpu/gpu_rgx/m1.13ED5776728/services/shared/common/devicemem.c:	IMG_DEVMEM_LOG2ALIGN_T uiLog2ImportAlignment;
gpu/gpu_rgx/m1.13ED5776728/services/shared/common/devicemem.c:		PVR_LOG_RETURN_IF_ERROR(eError, "BridgeDevmemIntHeapDestroy");
gpu/gpu_rgx/m1.13ED5776728/services/shared/common/devicemem.c:		DEVMEM_LOG2ALIGN_T *puiLog2Contig)
gpu/gpu_rgx/m1.13ED5776728/services/shared/common/devicemem.c:	IMG_DEVMEM_LOG2ALIGN_T uiLog2Contig;
gpu/gpu_rgx/m1.13ED5776728/services/shared/common/devicemem.c:	IMG_DEVMEM_LOG2ALIGN_T uiLog2Contig = 0;
gpu/gpu_rgx/m1.13ED5776728/services/shared/common/devicemem.c:		PVR_LOG_ERROR(PVRSRV_ERROR_DEVICEMEM_NO_MAPPING, "DevmemGetDevVirtAddr");
gpu/gpu_rgx/m1.13ED5776728/services/shared/common/sync.c:	PVR_LOG_GOTO_IF_INVALID_PARAM(hArena, eError, e0);
gpu/gpu_rgx/m1.13ED5776728/services/shared/common/sync.c:	PVR_LOG_GOTO_IF_INVALID_PARAM(uSize == sizeof(IMG_UINT32), eError, e0);
gpu/gpu_rgx/m1.13ED5776728/services/shared/common/sync.c:	PVR_LOG_GOTO_IF_ERROR(eError, "AllocSyncPrimitiveBlock", fail_syncblockalloc);
gpu/gpu_rgx/m1.13ED5776728/services/shared/common/sync.c:			PVR_LOG_IF_ERROR(eError, "BridgeSyncFreeEvent");
gpu/gpu_rgx/m1.13ED5776728/services/shared/common/sync.c:	PVR_LOG_RETURN_IF_INVALID_PARAM(hSyncPrimContext, "hSyncPrimeContext");
gpu/gpu_rgx/m1.13ED5776728/services/shared/common/sync.c:		PVR_LOG_IF_ERROR(eError, "BridgeSyncAllocEvent");
gpu/gpu_rgx/m1.13ED5776728/services/shared/common/sync.c:	PVR_LOG_GOTO_IF_INVALID_PARAM(psSync, eError, err_out);
gpu/gpu_rgx/m1.13ED5776728/services/shared/common/sync.c:	PVR_LOG_GOTO_IF_INVALID_PARAM(psSync, eError, err_out);
gpu/gpu_rgx/m1.13ED5776728/services/shared/common/sync.c:	PVR_LOG_GOTO_IF_INVALID_PARAM(psSync, eError, err_out);
gpu/gpu_rgx/m1.13ED5776728/services/shared/common/sync.c:	PVR_LOG_GOTO_IF_INVALID_PARAM(psSync, eError, err_out);
gpu/gpu_rgx/m1.13ED5776728/services/shared/common/sync.c:	PVR_LOG_GOTO_IF_INVALID_PARAM(phBlock, eError, err_out);
gpu/gpu_rgx/m1.13ED5776728/services/shared/common/sync.c:	PVR_LOG_GOTO_IF_INVALID_PARAM(pui32Offset, eError, err_out);
gpu/gpu_rgx/m1.13ED5776728/services/shared/common/sync.c:	PVR_LOG_GOTO_IF_INVALID_PARAM(psSync, eError, err_out);
gpu/gpu_rgx/m1.13ED5776728/services/shared/common/sync.c:	PVR_LOG_IF_ERROR(eError, "BridgeSyncPrimPDump");
gpu/gpu_rgx/m1.13ED5776728/services/shared/common/sync.c:	PVR_LOG_IF_ERROR(eError, "BridgeSyncPrimPDumpValue");
gpu/gpu_rgx/m1.13ED5776728/services/shared/common/sync.c:	PVR_LOG_IF_ERROR(eError, "BridgeSyncPrimPDumpPol");
gpu/gpu_rgx/m1.13ED5776728/services/shared/common/sync.c:	PVR_LOG_IF_ERROR(eError, "BridgeSyncPrimPDumpCBP");
gpu/gpu_rgx/m1.13ED5776728/services/shared/common/ra.c:		  RA_LOG2QUANTUM_T uLog2Quantum,
gpu/gpu_rgx/m1.13ED5776728/services/shared/common/tlclient.c:	PVR_LOG_GOTO_IF_NOMEM(psSD, eError, e0);
gpu/gpu_rgx/m1.13ED5776728/services/shared/common/tlclient.c:		PVR_LOG_GOTO_IF_ERROR(eError, "BridgeTLOpenStream", e1);
gpu/gpu_rgx/m1.13ED5776728/services/shared/common/tlclient.c:	PVR_LOG_GOTO_IF_ERROR(eError, "DevmemMakeLocalImportHandle", e2);
gpu/gpu_rgx/m1.13ED5776728/services/shared/common/tlclient.c:	PVR_LOG_GOTO_IF_ERROR(eError, "DevmemImport", e3);
gpu/gpu_rgx/m1.13ED5776728/services/shared/common/tlclient.c:	PVR_LOG_GOTO_IF_ERROR(eError, "DevmemAcquireCpuVirtAddr", e4);
gpu/gpu_rgx/m1.13ED5776728/services/shared/common/tlclient.c:	PVR_LOG_IF_ERROR(eError, "BridgeTLCloseStream");
gpu/gpu_rgx/m1.13ED5776728/services/shared/common/tlclient.c:			PVR_LOG_ERROR(eError, "BridgeTLAcquireData");
gpu/gpu_rgx/m1.13ED5776728/services/shared/common/tlclient.c:	PVR_LOG_IF_ERROR(eError, "BridgeTLReleaseData");
gpu/gpu_rgx/m1.13ED5776728/services/shared/common/htbuffer.c:	HTB_LOGMODE_CTRL eLogPidMode,
gpu/gpu_rgx/m1.13ED5776728/services/shared/common/htbuffer.c:		HTB_LOG_SFids SF, va_list args)
gpu/gpu_rgx/m1.13ED5776728/services/shared/common/htbuffer.c:	IMG_UINT32 aui32Args[HTB_LOG_MAX_PARAMS + 1];	// Prevent KW False-positive
gpu/gpu_rgx/m1.13ED5776728/services/shared/common/htbuffer.c:	IMG_UINT32 aui32Args[HTB_LOG_MAX_PARAMS];
gpu/gpu_rgx/m1.13ED5776728/services/shared/common/htbuffer.c:	PVR_ASSERT(ui32NumArgs <= HTB_LOG_MAX_PARAMS);
gpu/gpu_rgx/m1.13ED5776728/services/shared/common/htbuffer.c:	ui32NumArgs = (ui32NumArgs>HTB_LOG_MAX_PARAMS) ?
gpu/gpu_rgx/m1.13ED5776728/services/shared/common/htbuffer.c:			HTB_LOG_MAX_PARAMS : ui32NumArgs;
gpu/gpu_rgx/m1.13ED5776728/services/shared/common/devicemem_utils.c:				PVR_LOG_IF_ERROR(eErr, "BridgePVRSRVUpdateOOMStats");
gpu/gpu_rgx/m1.13ED5776728/services/shared/common/devicemem_utils.c:			PVR_LOG_IF_ERROR(eErr, "BridgePVRSRVUpdateOOMStats");
gpu/gpu_rgx/m1.13ED5776728/services/shared/common/devicemem_utils.c:					PVR_LOG_IF_ERROR(eErr, "BridgePVRSRVUpdateOOMStats");
gpu/gpu_rgx/m1.13ED5776728/services/shared/include/htbuffer.h:#define HTBLOGK(SF, args...) do { if (HTB_GROUP_ENABLED(SF)) HTBLogSimple((IMG_HANDLE) NULL, SF, ## args); } while (0)
gpu/gpu_rgx/m1.13ED5776728/services/shared/include/htbuffer.h:#define HTBLOG(handle, SF, args...) do { if (HTB_GROUP_ENABLED(SF)) HTBLogSimple(handle, SF, ## args); } while (0)
gpu/gpu_rgx/m1.13ED5776728/services/shared/include/htbuffer.h:#define HTBLOG_PTR_BITS_HIGH(p) ((IMG_UINT32)((((IMG_UINT64)((uintptr_t)p))>>32)&0xffffffff))
gpu/gpu_rgx/m1.13ED5776728/services/shared/include/htbuffer.h:#define HTBLOG_PTR_BITS_LOW(p)  ((IMG_UINT32)(((IMG_UINT64)((uintptr_t)p))&0xffffffff))
gpu/gpu_rgx/m1.13ED5776728/services/shared/include/htbuffer.h:#define HTBLOG_U64_BITS_HIGH(u) ((IMG_UINT32)((u>>32)&0xffffffff))
gpu/gpu_rgx/m1.13ED5776728/services/shared/include/htbuffer.h:#define HTBLOG_U64_BITS_LOW(u)  ((IMG_UINT32)(u&0xffffffff))
gpu/gpu_rgx/m1.13ED5776728/services/shared/include/htbuffer.h:#if !defined(HTB_DEBUG_LOG_GROUP)
gpu/gpu_rgx/m1.13ED5776728/services/shared/include/htbuffer.h:#undef HTB_LOG_TYPE_DBG    /* No trace statements in this log group should be checked in */
gpu/gpu_rgx/m1.13ED5776728/services/shared/include/htbuffer.h:#define HTB_LOG_TYPE_DBG    __BUILDERROR__
gpu/gpu_rgx/m1.13ED5776728/services/shared/include/htbuffer_init.h:	HTB_LOGMODE_CTRL eLogMode,
gpu/gpu_rgx/m1.13ED5776728/services/shared/include/ra.h:typedef IMG_UINT32 RA_LOG2QUANTUM_T;
gpu/gpu_rgx/m1.13ED5776728/services/shared/include/ra.h:          RA_LOG2QUANTUM_T uLog2Quantum,
gpu/gpu_rgx/m1.13ED5776728/services/system/rogue/common/env/linux/dma_support.c:		PVR_LOG_IF_FALSE((IMG_FALSE), "Invalid parameter");
gpu/gpu_rgx/m1.13ED5776728/services/system/rogue/common/env/linux/dma_support.c:	PVR_LOG_RETURN_IF_FALSE((psDmaAlloc->pvVirtAddr), "DMA/CMA allocation failed", PVRSRV_ERROR_FAILED_TO_ALLOC_PAGES);
gpu/gpu_rgx/m1.13ED5776728/services/system/rogue/common/env/linux/dma_support.c:		PVR_LOG_IF_FALSE((IMG_FALSE), "Invalid parameter");
gpu/gpu_rgx/m1.13ED5776728/services/system/rogue/common/env/linux/dma_support.c:		PVR_LOG_IF_FALSE((IMG_FALSE), "Invalid parameter");
gpu/gpu_rgx/m1.13ED5776728/services/system/rogue/common/env/linux/dma_support.c:		PVR_LOG_IF_FALSE((IMG_FALSE), "Invalid parameter");
gpu/gpu_rgx/m1.13ED5776728/services/system/rogue/common/vmm_type_stub.c:	PVR_LOG_RETURN_IF_FALSE((NULL != psPvzConnection), "VMMCreatePvzConnection", PVRSRV_ERROR_INVALID_PARAMS);
gpu/gpu_rgx/m1.13ED5776728/services/system/rogue/common/vmm_type_stub.c:	PVR_LOG_IF_FALSE((NULL != psPvzConnection), "VMMDestroyPvzConnection");
gpu/gpu_rgx/m1.13ED5776728/services/system/rogue/rgx_mtk/sysinfo.h:#define MTK_LOGE(fmt, args...) pr_err(MTKPVR_TAG"[ERROR]"fmt, ##args)
gpu/gpu_rgx/m1.13ED5776728/services/system/rogue/rgx_mtk/sysinfo.h:#define MTK_LOGW(fmt, args...) pr_debug(MTKPVR_TAG"[WARNING]"fmt, ##args)
gpu/gpu_rgx/m1.13ED5776728/services/system/rogue/rgx_mtk/sysinfo.h:#define MTK_LOGI(fmt, args...) pr_info(MTKPVR_TAG"[INFO]"fmt, ##args)
gpu/gpu_rgx/m1.13ED5776728/services/system/rogue/rgx_mtk/sysinfo.h:#define MTK_LOGD(fmt, args...) pr_debug(MTKPVR_TAG"[DEBUG]"fmt, ##args)
gpu/gpu_rgx/m1.13ED5776728/services/system/rogue/rgx_mtk/mt6779/mtk_mfgsys.c:	ged_log_buf_print2(_mtk_ged_log, GED_LOG_ATTR_TIME, "BUCK_ON");
gpu/gpu_rgx/m1.13ED5776728/services/system/rogue/rgx_mtk/mt6779/mtk_mfgsys.c:	ged_log_buf_print2(_mtk_ged_log, GED_LOG_ATTR_TIME, "BUCK_OFF");
gpu/gpu_rgx/m1.13ED5776728/services/system/rogue/rgx_mtk/mt6779/mtk_mfgsys.c:					, GED_LOG_ATTR_TIME
gpu/gpu_rgx/m1.13ED5776728/services/system/rogue/rgx_mtk/mt6779/mtk_mfgsys.c:					, GED_LOG_ATTR_TIME
gpu/gpu_rgx/m1.13ED5776728/services/system/rogue/rgx_mtk/mt6779/mtk_mfgsys.c:			GED_LOG_BUF_TYPE_RINGBUFFER, "PowerLog", "ppL");
gpu/gpu_rgx/m1.13ED5776728/services/system/rogue/rgx_mtk/mtk_pp.c:void MTKPP_LOGTIME(enum MTKPP_ID id, const char *str)
gpu/gpu_rgx/m1.13ED5776728/services/system/rogue/rgx_mtk/mt6765/mtk_mfgsys.c:	ged_log_buf_print2(_mtk_ged_log, GED_LOG_ATTR_TIME, "BUCK_ON");
gpu/gpu_rgx/m1.13ED5776728/services/system/rogue/rgx_mtk/mt6765/mtk_mfgsys.c:	ged_log_buf_print2(_mtk_ged_log, GED_LOG_ATTR_TIME, "BUCK_OFF");
gpu/gpu_rgx/m1.13ED5776728/services/system/rogue/rgx_mtk/mt6765/mtk_mfgsys.c:			GED_LOG_BUF_TYPE_RINGBUFFER, "PowerLog", "ppL");
gpu/gpu_rgx/m1.13ED5776728/services/system/rogue/rgx_mtk/sysconfig.c:			PVR_LOG(("irq_res = 0x%x", (int)irq_res->start));
gpu/gpu_rgx/m1.13ED5776728/services/system/rogue/rgx_mtk/sysconfig.c:			PVR_LOG(("reg_res = 0x%x, 0x%x",
gpu/gpu_rgx/m1.13ED5776728/services/system/rogue/rgx_linux_tc/sysconfig.c:	PVR_DUMPDEBUG_LOG("------[ rgx_tc system debug ]------");
gpu/gpu_rgx/m1.13ED5776728/services/system/rogue/rgx_linux_tc/sysconfig.c:		PVR_DUMPDEBUG_LOG("Chip temperature: %d degrees C", tmp);
gpu/gpu_rgx/m1.13ED5776728/services/system/rogue/rgx_linux_tc/sysconfig.c:	PVR_DUMPDEBUG_LOG("PLL status: %x", pll);
gpu/gpu_rgx/m1.13ED5776728/services/system/volcanic/common/env/linux/dma_support.c:		PVR_LOG_RETURN_IF_FALSE((NULL != psDmaAlloc->pvVirtAddr), "dma_alloc_coherent() failed", PVRSRV_ERROR_FAILED_TO_ALLOC_PAGES);
gpu/gpu_rgx/m1.13ED5776728/services/system/volcanic/common/env/linux/dma_support.c:	PVR_LOG(("DMA: register I/O remap: VA: 0x%p, PA: 0x%llx, Size: 0x%llx",
gpu/gpu_rgx/m1.13ED5776728/services/system/volcanic/common/env/linux/dma_support.c:				PVR_LOG(("DMA: deregister I/O remap: VA: 0x%p, PA: 0x%llx, Size: 0x%llx",
gpu/gpu_rgx/m1.13ED5776728/services/system/volcanic/common/vmm_type_stub.c:	PVR_LOG_RETURN_IF_FALSE((NULL != psPvzConnection), "VMMCreatePvzConnection", PVRSRV_ERROR_INVALID_PARAMS);
gpu/gpu_rgx/m1.13ED5776728/services/system/volcanic/common/vmm_type_stub.c:	PVR_LOG_IF_FALSE((NULL != psPvzConnection), "VMMDestroyPvzConnection");
gpu/gpu_rgx/m1.13ED5776728/services/system/volcanic/rgx_linux_tc/sysconfig.c:	PVR_DUMPDEBUG_LOG("------[ rgx_tc system debug ]------");
gpu/gpu_rgx/m1.13ED5776728/services/system/volcanic/rgx_linux_tc/sysconfig.c:		PVR_DUMPDEBUG_LOG("Chip temperature: %d degrees C", tmp);
gpu/gpu_rgx/m1.13ED5776728/services/system/volcanic/rgx_linux_tc/sysconfig.c:	PVR_DUMPDEBUG_LOG("PLL status: %x", pll);
gpu/gpu_rgx/m1.13ED5776728/generated/rogue/rgxfwdbg_bridge/common_rgxfwdbg_bridge.h:#define PVRSRV_BRIDGE_RGXFWDBG_RGXFWDEBUGSETFWLOG			PVRSRV_BRIDGE_RGXFWDBG_CMD_FIRST+0
gpu/gpu_rgx/m1.13ED5776728/generated/rogue/rgxfwdbg_bridge/common_rgxfwdbg_bridge.h:typedef struct PVRSRV_BRIDGE_IN_RGXFWDEBUGSETFWLOG_TAG
gpu/gpu_rgx/m1.13ED5776728/generated/rogue/rgxfwdbg_bridge/common_rgxfwdbg_bridge.h:} __attribute__ ((packed)) PVRSRV_BRIDGE_IN_RGXFWDEBUGSETFWLOG;
gpu/gpu_rgx/m1.13ED5776728/generated/rogue/rgxfwdbg_bridge/common_rgxfwdbg_bridge.h:typedef struct PVRSRV_BRIDGE_OUT_RGXFWDEBUGSETFWLOG_TAG
gpu/gpu_rgx/m1.13ED5776728/generated/rogue/rgxfwdbg_bridge/common_rgxfwdbg_bridge.h:} __attribute__ ((packed)) PVRSRV_BRIDGE_OUT_RGXFWDEBUGSETFWLOG;
gpu/gpu_rgx/m1.13ED5776728/generated/rogue/rgxfwdbg_bridge/server_rgxfwdbg_bridge.c:			       PVRSRV_BRIDGE_IN_RGXFWDEBUGSETFWLOG *
gpu/gpu_rgx/m1.13ED5776728/generated/rogue/rgxfwdbg_bridge/server_rgxfwdbg_bridge.c:			       PVRSRV_BRIDGE_OUT_RGXFWDEBUGSETFWLOG *
gpu/gpu_rgx/m1.13ED5776728/generated/rogue/rgxfwdbg_bridge/server_rgxfwdbg_bridge.c:			      PVRSRV_BRIDGE_RGXFWDBG_RGXFWDEBUGSETFWLOG,
gpu/gpu_rgx/m1.13ED5776728/generated/rogue/rgxfwdbg_bridge/server_rgxfwdbg_bridge.c:				PVRSRV_BRIDGE_RGXFWDBG_RGXFWDEBUGSETFWLOG);
gpu/gpu_rgx/m1.13ED5776728/generated/rogue/htbuffer_bridge/server_htbuffer_bridge.c:		   PVRSRV_BRIDGE_IN_HTBLOG * psHTBLogIN,
gpu/gpu_rgx/m1.13ED5776728/generated/rogue/htbuffer_bridge/server_htbuffer_bridge.c:		   PVRSRV_BRIDGE_OUT_HTBLOG * psHTBLogOUT,
gpu/gpu_rgx/m1.13ED5776728/generated/rogue/htbuffer_bridge/server_htbuffer_bridge.c:	if (unlikely(psHTBLogIN->ui32NumArgs > HTB_LOG_MAX_PARAMS))
gpu/gpu_rgx/m1.13ED5776728/generated/rogue/htbuffer_bridge/server_htbuffer_bridge.c:	PVR_LOG_RETURN_IF_ERROR(OSLockCreate(&pHTBUFFERBridgeLock),
gpu/gpu_rgx/m1.13ED5776728/generated/rogue/htbuffer_bridge/server_htbuffer_bridge.c:			      PVRSRV_BRIDGE_HTBUFFER_HTBLOG, PVRSRVBridgeHTBLog,
gpu/gpu_rgx/m1.13ED5776728/generated/rogue/htbuffer_bridge/server_htbuffer_bridge.c:	PVR_LOG_RETURN_IF_ERROR(OSLockDestroy(pHTBUFFERBridgeLock),
gpu/gpu_rgx/m1.13ED5776728/generated/rogue/htbuffer_bridge/server_htbuffer_bridge.c:				PVRSRV_BRIDGE_HTBUFFER_HTBLOG);
gpu/gpu_rgx/m1.13ED5776728/generated/rogue/htbuffer_bridge/common_htbuffer_bridge.h:#define PVRSRV_BRIDGE_HTBUFFER_HTBLOG			PVRSRV_BRIDGE_HTBUFFER_CMD_FIRST+1
gpu/gpu_rgx/m1.13ED5776728/generated/rogue/htbuffer_bridge/common_htbuffer_bridge.h:typedef struct PVRSRV_BRIDGE_IN_HTBLOG_TAG
gpu/gpu_rgx/m1.13ED5776728/generated/rogue/htbuffer_bridge/common_htbuffer_bridge.h:} __attribute__ ((packed)) PVRSRV_BRIDGE_IN_HTBLOG;
gpu/gpu_rgx/m1.13ED5776728/generated/rogue/htbuffer_bridge/common_htbuffer_bridge.h:typedef struct PVRSRV_BRIDGE_OUT_HTBLOG_TAG
gpu/gpu_rgx/m1.13ED5776728/generated/rogue/htbuffer_bridge/common_htbuffer_bridge.h:} __attribute__ ((packed)) PVRSRV_BRIDGE_OUT_HTBLOG;
gpu/gpu_rgx/m1.13ED5776728/generated/rogue/pdumpctrl_bridge/server_pdumpctrl_bridge.c:	PVR_LOG_RETURN_IF_ERROR(OSLockCreate(&pPDUMPCTRLBridgeLock),
gpu/gpu_rgx/m1.13ED5776728/generated/rogue/pdumpctrl_bridge/server_pdumpctrl_bridge.c:	PVR_LOG_RETURN_IF_ERROR(OSLockDestroy(pPDUMPCTRLBridgeLock),
gpu/gpu_rgx/m1.13ED5776728/generated/rogue/devicememhistory_bridge/server_devicememhistory_bridge.c:	PVR_LOG_RETURN_IF_ERROR(OSLockCreate(&pDEVICEMEMHISTORYBridgeLock),
gpu/gpu_rgx/m1.13ED5776728/generated/rogue/devicememhistory_bridge/server_devicememhistory_bridge.c:	PVR_LOG_RETURN_IF_ERROR(OSLockDestroy(pDEVICEMEMHISTORYBridgeLock),
gpu/gpu_rgx/m1.13ED5776728/generated/rogue/cache_bridge/common_cache_bridge.h:#define PVRSRV_BRIDGE_CACHE_CACHEOPLOG			PVRSRV_BRIDGE_CACHE_CMD_FIRST+2
gpu/gpu_rgx/m1.13ED5776728/generated/rogue/cache_bridge/common_cache_bridge.h:typedef struct PVRSRV_BRIDGE_IN_CACHEOPLOG_TAG
gpu/gpu_rgx/m1.13ED5776728/generated/rogue/cache_bridge/common_cache_bridge.h:} __attribute__ ((packed)) PVRSRV_BRIDGE_IN_CACHEOPLOG;
gpu/gpu_rgx/m1.13ED5776728/generated/rogue/cache_bridge/common_cache_bridge.h:typedef struct PVRSRV_BRIDGE_OUT_CACHEOPLOG_TAG
gpu/gpu_rgx/m1.13ED5776728/generated/rogue/cache_bridge/common_cache_bridge.h:} __attribute__ ((packed)) PVRSRV_BRIDGE_OUT_CACHEOPLOG;
gpu/gpu_rgx/m1.13ED5776728/generated/rogue/cache_bridge/server_cache_bridge.c:		       PVRSRV_BRIDGE_IN_CACHEOPLOG * psCacheOpLogIN,
gpu/gpu_rgx/m1.13ED5776728/generated/rogue/cache_bridge/server_cache_bridge.c:		       PVRSRV_BRIDGE_OUT_CACHEOPLOG * psCacheOpLogOUT,
gpu/gpu_rgx/m1.13ED5776728/generated/rogue/cache_bridge/server_cache_bridge.c:			      PVRSRV_BRIDGE_CACHE_CACHEOPLOG,
gpu/gpu_rgx/m1.13ED5776728/generated/rogue/cache_bridge/server_cache_bridge.c:				PVRSRV_BRIDGE_CACHE_CACHEOPLOG);
gpu/gpu_rgx/m1.13ED5776728/generated/volcanic/rgxfwdbg_bridge/common_rgxfwdbg_bridge.h:#define PVRSRV_BRIDGE_RGXFWDBG_RGXFWDEBUGSETFWLOG			PVRSRV_BRIDGE_RGXFWDBG_CMD_FIRST+0
gpu/gpu_rgx/m1.13ED5776728/generated/volcanic/rgxfwdbg_bridge/common_rgxfwdbg_bridge.h:typedef struct PVRSRV_BRIDGE_IN_RGXFWDEBUGSETFWLOG_TAG
gpu/gpu_rgx/m1.13ED5776728/generated/volcanic/rgxfwdbg_bridge/common_rgxfwdbg_bridge.h:} __attribute__ ((packed)) PVRSRV_BRIDGE_IN_RGXFWDEBUGSETFWLOG;
gpu/gpu_rgx/m1.13ED5776728/generated/volcanic/rgxfwdbg_bridge/common_rgxfwdbg_bridge.h:typedef struct PVRSRV_BRIDGE_OUT_RGXFWDEBUGSETFWLOG_TAG
gpu/gpu_rgx/m1.13ED5776728/generated/volcanic/rgxfwdbg_bridge/common_rgxfwdbg_bridge.h:} __attribute__ ((packed)) PVRSRV_BRIDGE_OUT_RGXFWDEBUGSETFWLOG;
gpu/gpu_rgx/m1.13ED5776728/generated/volcanic/rgxfwdbg_bridge/server_rgxfwdbg_bridge.c:			       PVRSRV_BRIDGE_IN_RGXFWDEBUGSETFWLOG *
gpu/gpu_rgx/m1.13ED5776728/generated/volcanic/rgxfwdbg_bridge/server_rgxfwdbg_bridge.c:			       PVRSRV_BRIDGE_OUT_RGXFWDEBUGSETFWLOG *
gpu/gpu_rgx/m1.13ED5776728/generated/volcanic/rgxfwdbg_bridge/server_rgxfwdbg_bridge.c:			      PVRSRV_BRIDGE_RGXFWDBG_RGXFWDEBUGSETFWLOG,
gpu/gpu_rgx/m1.13ED5776728/generated/volcanic/rgxfwdbg_bridge/server_rgxfwdbg_bridge.c:				PVRSRV_BRIDGE_RGXFWDBG_RGXFWDEBUGSETFWLOG);
gpu/gpu_rgx/m1.13ED5776728/generated/volcanic/htbuffer_bridge/server_htbuffer_bridge.c:		   PVRSRV_BRIDGE_IN_HTBLOG * psHTBLogIN,
gpu/gpu_rgx/m1.13ED5776728/generated/volcanic/htbuffer_bridge/server_htbuffer_bridge.c:		   PVRSRV_BRIDGE_OUT_HTBLOG * psHTBLogOUT,
gpu/gpu_rgx/m1.13ED5776728/generated/volcanic/htbuffer_bridge/server_htbuffer_bridge.c:	if (unlikely(psHTBLogIN->ui32NumArgs > HTB_LOG_MAX_PARAMS))
gpu/gpu_rgx/m1.13ED5776728/generated/volcanic/htbuffer_bridge/server_htbuffer_bridge.c:	PVR_LOG_RETURN_IF_ERROR(OSLockCreate(&pHTBUFFERBridgeLock),
gpu/gpu_rgx/m1.13ED5776728/generated/volcanic/htbuffer_bridge/server_htbuffer_bridge.c:			      PVRSRV_BRIDGE_HTBUFFER_HTBLOG, PVRSRVBridgeHTBLog,
gpu/gpu_rgx/m1.13ED5776728/generated/volcanic/htbuffer_bridge/server_htbuffer_bridge.c:	PVR_LOG_RETURN_IF_ERROR(OSLockDestroy(pHTBUFFERBridgeLock),
gpu/gpu_rgx/m1.13ED5776728/generated/volcanic/htbuffer_bridge/server_htbuffer_bridge.c:				PVRSRV_BRIDGE_HTBUFFER_HTBLOG);
gpu/gpu_rgx/m1.13ED5776728/generated/volcanic/htbuffer_bridge/common_htbuffer_bridge.h:#define PVRSRV_BRIDGE_HTBUFFER_HTBLOG			PVRSRV_BRIDGE_HTBUFFER_CMD_FIRST+1
gpu/gpu_rgx/m1.13ED5776728/generated/volcanic/htbuffer_bridge/common_htbuffer_bridge.h:typedef struct PVRSRV_BRIDGE_IN_HTBLOG_TAG
gpu/gpu_rgx/m1.13ED5776728/generated/volcanic/htbuffer_bridge/common_htbuffer_bridge.h:} __attribute__ ((packed)) PVRSRV_BRIDGE_IN_HTBLOG;
gpu/gpu_rgx/m1.13ED5776728/generated/volcanic/htbuffer_bridge/common_htbuffer_bridge.h:typedef struct PVRSRV_BRIDGE_OUT_HTBLOG_TAG
gpu/gpu_rgx/m1.13ED5776728/generated/volcanic/htbuffer_bridge/common_htbuffer_bridge.h:} __attribute__ ((packed)) PVRSRV_BRIDGE_OUT_HTBLOG;
gpu/gpu_rgx/m1.13ED5776728/generated/volcanic/pdumpctrl_bridge/server_pdumpctrl_bridge.c:	PVR_LOG_RETURN_IF_ERROR(OSLockCreate(&pPDUMPCTRLBridgeLock),
gpu/gpu_rgx/m1.13ED5776728/generated/volcanic/pdumpctrl_bridge/server_pdumpctrl_bridge.c:	PVR_LOG_RETURN_IF_ERROR(OSLockDestroy(pPDUMPCTRLBridgeLock),
gpu/gpu_rgx/m1.13ED5776728/generated/volcanic/devicememhistory_bridge/server_devicememhistory_bridge.c:	PVR_LOG_RETURN_IF_ERROR(OSLockCreate(&pDEVICEMEMHISTORYBridgeLock),
gpu/gpu_rgx/m1.13ED5776728/generated/volcanic/devicememhistory_bridge/server_devicememhistory_bridge.c:	PVR_LOG_RETURN_IF_ERROR(OSLockDestroy(pDEVICEMEMHISTORYBridgeLock),
gpu/gpu_rgx/m1.13ED5776728/generated/volcanic/cache_bridge/common_cache_bridge.h:#define PVRSRV_BRIDGE_CACHE_CACHEOPLOG			PVRSRV_BRIDGE_CACHE_CMD_FIRST+2
gpu/gpu_rgx/m1.13ED5776728/generated/volcanic/cache_bridge/common_cache_bridge.h:typedef struct PVRSRV_BRIDGE_IN_CACHEOPLOG_TAG
gpu/gpu_rgx/m1.13ED5776728/generated/volcanic/cache_bridge/common_cache_bridge.h:} __attribute__ ((packed)) PVRSRV_BRIDGE_IN_CACHEOPLOG;
gpu/gpu_rgx/m1.13ED5776728/generated/volcanic/cache_bridge/common_cache_bridge.h:typedef struct PVRSRV_BRIDGE_OUT_CACHEOPLOG_TAG
gpu/gpu_rgx/m1.13ED5776728/generated/volcanic/cache_bridge/common_cache_bridge.h:} __attribute__ ((packed)) PVRSRV_BRIDGE_OUT_CACHEOPLOG;
gpu/gpu_rgx/m1.13ED5776728/generated/volcanic/cache_bridge/server_cache_bridge.c:		       PVRSRV_BRIDGE_IN_CACHEOPLOG * psCacheOpLogIN,
gpu/gpu_rgx/m1.13ED5776728/generated/volcanic/cache_bridge/server_cache_bridge.c:		       PVRSRV_BRIDGE_OUT_CACHEOPLOG * psCacheOpLogOUT,
gpu/gpu_rgx/m1.13ED5776728/generated/volcanic/cache_bridge/server_cache_bridge.c:			      PVRSRV_BRIDGE_CACHE_CACHEOPLOG,
gpu/gpu_rgx/m1.13ED5776728/generated/volcanic/cache_bridge/server_cache_bridge.c:				PVRSRV_BRIDGE_CACHE_CACHEOPLOG);
audio_scp/mtk-audio-scp-misc-driver.c:#define ASCP_NOLOG 1
audio_scp/mtk-audio-scp-misc-driver.c:#if ASCP_NOLOG
cameraisp/dpe/mt6765/camera_dpe.h:	DPE_CMD_DUMP_ISR_LOG,		/* Dump DPE ISR log */
cameraisp/dpe/mt6765/camera_dpe.h:#define DPE_DUMP_ISR_LOG	_IO(DPE_MAGIC, DPE_CMD_DUMP_ISR_LOG)
cameraisp/dpe/mt6765/camera_dpe.c:/* #define DPE_WAITIRQ_LOG  */
cameraisp/dpe/mt6765/camera_dpe.c:#define LOG_VRB(format,	args...)
cameraisp/dpe/mt6765/camera_dpe.c:#define LOG_ERR(format, args...)
cameraisp/dpe/mt6765/camera_dpe.c:#define LOG_INF(format, args...)
cameraisp/dpe/mt6765/camera_dpe.c:#define LOG_NOTICE(format, args...)
cameraisp/dpe/mt6765/camera_dpe.c:#define DPE_DBG_DBGLOG              (0x00000001)
cameraisp/dpe/mt6765/camera_dpe.c:#define DPE_DBG_INFLOG              (0x00000002)
cameraisp/dpe/mt6765/camera_dpe.c:enum _eLOG_TYPE {
cameraisp/dpe/mt6765/camera_dpe.c:	_LOG_DBG = 0,
cameraisp/dpe/mt6765/camera_dpe.c:	_LOG_INF = 1,
cameraisp/dpe/mt6765/camera_dpe.c:	_LOG_ERR = 2,
cameraisp/dpe/mt6765/camera_dpe.c:	_LOG_MAX = 3,
cameraisp/dpe/mt6765/camera_dpe.c:/* #define SV_LOG_STR_LEN NORMAL_STR_LEN */
cameraisp/dpe/mt6765/camera_dpe.c:#define LOG_PPNUM 2
cameraisp/dpe/mt6765/camera_dpe.c:struct SV_LOG_STR {
cameraisp/dpe/mt6765/camera_dpe.c:	unsigned int _cnt[LOG_PPNUM][_LOG_MAX];
cameraisp/dpe/mt6765/camera_dpe.c:	/* char   _str[_LOG_MAX][SV_LOG_STR_LEN]; */
cameraisp/dpe/mt6765/camera_dpe.c:	char *_str[LOG_PPNUM][_LOG_MAX];
cameraisp/dpe/mt6765/camera_dpe.c:static struct SV_LOG_STR gSvLog[DPE_IRQ_TYPE_AMOUNT];
cameraisp/dpe/mt6765/camera_dpe.c:/* for irq used,keep log until IRQ_LOG_PRINTER being involked, */
cameraisp/dpe/mt6765/camera_dpe.c:#define IRQ_LOG_KEEPER(irq, ppb, logT, fmt, ...)
cameraisp/dpe/mt6765/camera_dpe.c:#define IRQ_LOG_PRINTER(irq, ppb_in, logT_in)
cameraisp/dpe/mt6765/camera_dpe.c:#define IRQ_LOG_PRINTER(irq, ppb, logT)
cameraisp/dpe/mt6765/camera_dpe.c:LOG_INF("WaitIRQ Err,type:%d,urNum:%d,sta:%d,whReq:%d,PID:0x%x, RdReqIdx:%d\n",
cameraisp/dpe/mt6765/camera_dpe.c:LOG_INF("WaitIRQ Err,type:%d,urNum:%d, status:%d,whichReq:%d,ProcessID:0x%x\n",
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("ConfigDVEFrameByReqIdx don't support this mode.!!\n");
cameraisp/dpe/mt6765/camera_dpe.c:	/*LOG_ERR("ConfigDVERequest state machine error!!, */
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("ConfigDVERequest don't support this mode.!!\n");
cameraisp/dpe/mt6765/camera_dpe.c:	IRQ_LOG_KEEPER(DPE_IRQ_TYPE_INT_DPE_ST, m_CurrentPPB, _LOG_DBG,
cameraisp/dpe/mt6765/camera_dpe.c:			IRQ_LOG_KEEPER(DPE_IRQ_TYPE_INT_DPE_ST, m_CurrentPPB,
cameraisp/dpe/mt6765/camera_dpe.c:				_LOG_INF,
cameraisp/dpe/mt6765/camera_dpe.c:			IRQ_LOG_KEEPER(DPE_IRQ_TYPE_INT_DPE_ST, m_CurrentPPB,
cameraisp/dpe/mt6765/camera_dpe.c:				_LOG_DBG,
cameraisp/dpe/mt6765/camera_dpe.c:	IRQ_LOG_KEEPER(DPE_IRQ_TYPE_INT_DPE_ST, m_CurrentPPB, _LOG_ERR,
cameraisp/dpe/mt6765/camera_dpe.c:	IRQ_LOG_KEEPER(DPE_IRQ_TYPE_INT_DPE_ST, m_CurrentPPB, _LOG_DBG,
cameraisp/dpe/mt6765/camera_dpe.c:			IRQ_LOG_KEEPER(DPE_IRQ_TYPE_INT_DPE_ST, m_CurrentPPB,
cameraisp/dpe/mt6765/camera_dpe.c:				_LOG_INF,
cameraisp/dpe/mt6765/camera_dpe.c:			IRQ_LOG_KEEPER(DPE_IRQ_TYPE_INT_DPE_ST, m_CurrentPPB,
cameraisp/dpe/mt6765/camera_dpe.c:				_LOG_DBG,
cameraisp/dpe/mt6765/camera_dpe.c:	IRQ_LOG_KEEPER(DPE_IRQ_TYPE_INT_DPE_ST, m_CurrentPPB, _LOG_ERR,
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("ConfigWMFERequest don't support this mode.!!\n");
cameraisp/dpe/mt6765/camera_dpe.c:		/*LOG_ERR("ConfigWMFERequest state machine error!!, */
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("ConfigWMFERequest don't support this mode.!!\n");
cameraisp/dpe/mt6765/camera_dpe.c:	if (DPE_DBG_DBGLOG == (DPE_DBG_DBGLOG & DPEInfo.DebugMask)) {
cameraisp/dpe/mt6765/camera_dpe.c:		IRQ_LOG_KEEPER(DPE_IRQ_TYPE_INT_DPE_ST,
cameraisp/dpe/mt6765/camera_dpe.c:			m_CurrentPPB, _LOG_DBG,
cameraisp/dpe/mt6765/camera_dpe.c:			IRQ_LOG_KEEPER(DPE_IRQ_TYPE_INT_DPE_ST,
cameraisp/dpe/mt6765/camera_dpe.c:				m_CurrentPPB, _LOG_INF,
cameraisp/dpe/mt6765/camera_dpe.c:			IRQ_LOG_KEEPER(DPE_IRQ_TYPE_INT_DPE_ST,
cameraisp/dpe/mt6765/camera_dpe.c:				m_CurrentPPB, _LOG_DBG,
cameraisp/dpe/mt6765/camera_dpe.c:		IRQ_LOG_KEEPER(DPE_IRQ_TYPE_INT_DPE_ST,
cameraisp/dpe/mt6765/camera_dpe.c:			m_CurrentPPB, _LOG_ERR,
cameraisp/dpe/mt6765/camera_dpe.c:		IRQ_LOG_KEEPER(DPE_IRQ_TYPE_INT_DPE_ST,
cameraisp/dpe/mt6765/camera_dpe.c:			m_CurrentPPB, _LOG_DBG,
cameraisp/dpe/mt6765/camera_dpe.c:			IRQ_LOG_KEEPER(DPE_IRQ_TYPE_INT_DPE_ST,
cameraisp/dpe/mt6765/camera_dpe.c:			m_CurrentPPB, _LOG_INF,
cameraisp/dpe/mt6765/camera_dpe.c:			IRQ_LOG_KEEPER(DPE_IRQ_TYPE_INT_DPE_ST,
cameraisp/dpe/mt6765/camera_dpe.c:				m_CurrentPPB, _LOG_DBG,
cameraisp/dpe/mt6765/camera_dpe.c:		IRQ_LOG_KEEPER(DPE_IRQ_TYPE_INT_DPE_ST,
cameraisp/dpe/mt6765/camera_dpe.c:			m_CurrentPPB, _LOG_ERR,
cameraisp/dpe/mt6765/camera_dpe.c:	if (DPE_DBG_DBGLOG == (DPE_DBG_DBGLOG & DPEInfo.DebugMask)) {
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("- E.");
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("DVE Config Info\n");
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_DVE_CTRL_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_DVE_START_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_DVE_ORG_L_HORZ_BBOX_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_DVE_ORG_L_VERT_BBOX_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_DVE_ORG_R_HORZ_BBOX_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_DVE_ORG_R_VERT_BBOX_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_DVE_ORG_SIZE_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_DVE_ORG_SR_0_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_DVE_ORG_SR_1_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)((DPE_DVE_ORG_SV_HW)),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_DVE_CAND_NUM_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_DVE_CAND_SEL_0_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_DVE_CAND_SEL_1_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_DVE_CAND_SEL_2_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_DVE_CAND_TYPE_0_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_DVE_CAND_TYPE_1_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_DVE_RAND_LUT_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_DVE_GMV_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_DVE_DV_INI_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_DVE_BLK_VAR_CTRL_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_DVE_SMTH_LUMA_CTRL_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_DVE_SMTH_DV_CTRL_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_DVE_ORD_CTRL_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_DVE_TYPE_CTRL_0_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_DVE_TYPE_CTRL_1_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("DVE Debug Info\n");
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_DVE_DBG_INFO_00_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_DVE_DBG_INFO_01_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_DVE_DBG_INFO_02_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_DVE_DBG_INFO_03_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_DVE_DBG_INFO_04_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_DVE_DBG_INFO_05_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_DVE_DBG_INFO_06_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_DVE_DBG_INFO_07_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_DVE_DBG_INFO_08_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_DVE_DBG_INFO_09_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("WMFE Config Info\n");
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_START_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_CTRL_0_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_SIZE_0_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_IMGI_BASE_ADDR_0_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_IMGI_STRIDE_0_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_DPI_BASE_ADDR_0_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_DPI_STRIDE_0_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_TBLI_BASE_ADDR_0_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_TBLI_STRIDE_0_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n",
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_MASKI_STRIDE_0_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_DPO_BASE_ADDR_0_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_DPO_STRIDE_0_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_CTRL_1_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_SIZE_1_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_IMGI_BASE_ADDR_1_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_IMGI_STRIDE_1_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_DPI_BASE_ADDR_1_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_DPI_STRIDE_1_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_TBLI_BASE_ADDR_1_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_TBLI_STRIDE_1_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n",
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_MASKI_STRIDE_1_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_DPO_BASE_ADDR_1_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_DPO_STRIDE_1_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_CTRL_2_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_SIZE_2_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_IMGI_BASE_ADDR_2_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_IMGI_STRIDE_2_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_DPI_BASE_ADDR_2_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_DPI_STRIDE_2_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_TBLI_BASE_ADDR_2_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_TBLI_STRIDE_2_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n",
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_MASKI_STRIDE_2_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_DPO_BASE_ADDR_2_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_DPO_STRIDE_2_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_CTRL_3_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_SIZE_3_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_IMGI_BASE_ADDR_3_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_IMGI_STRIDE_3_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_DPI_BASE_ADDR_3_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_DPI_STRIDE_3_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_TBLI_BASE_ADDR_3_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_TBLI_STRIDE_3_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n",
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_MASKI_STRIDE_3_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_DPO_BASE_ADDR_3_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_DPO_STRIDE_3_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_CTRL_4_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_SIZE_4_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_IMGI_BASE_ADDR_4_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_IMGI_STRIDE_4_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_DPI_BASE_ADDR_4_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_DPI_STRIDE_4_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_TBLI_BASE_ADDR_4_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_TBLI_STRIDE_4_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n",
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_MASKI_STRIDE_4_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_DPO_BASE_ADDR_4_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_DPO_STRIDE_4_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("WMFE Debug Info\n");
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_DBG_INFO_00_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_DBG_INFO_01_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_DBG_INFO_02_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_DBG_INFO_03_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_DBG_INFO_04_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_DBG_INFO_05_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_DBG_INFO_06_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_DBG_INFO_07_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_DBG_INFO_08_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_WMFE_DBG_INFO_09_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_DMA_DBG_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_DMA_REQ_STATUS_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(DPE_DMA_RDY_STATUS_HW),
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("DVE:HWProcessIdx:%d, WriteIdx:%d, ReadIdx:%d\n",
cameraisp/dpe/mt6765/camera_dpe.c:		LOG_INF("DVE:ReqSte:%d,PID:0x%08X,callerID:0x%08X\n",
cameraisp/dpe/mt6765/camera_dpe.c:		LOG_INF("DVE:enqueReqNum:%d, FrameWRIdx:%d, FrameRDIdx:%d\n",
cameraisp/dpe/mt6765/camera_dpe.c:		LOG_INF
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("WMFE:HWProcessIdx:%d, WriteIdx:%d, ReadIdx:%d\n",
cameraisp/dpe/mt6765/camera_dpe.c:		LOG_INF("WMFE:ReqSte:%d, PID:0x%08X, callerID:0x%08X\n",
cameraisp/dpe/mt6765/camera_dpe.c:		LOG_INF("WMFE:,enqueReqNum:%d, FrameWRIdx:%d, FrameRDIdx:%d\n",
cameraisp/dpe/mt6765/camera_dpe.c:		LOG_INF
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("- X.");
cameraisp/dpe/mt6765/camera_dpe.c:		LOG_INF("cannot prepare and enable CG_IMGSYS_DPE clock\n");
cameraisp/dpe/mt6765/camera_dpe.c:		LOG_INF("DPE_ReadReg pRegIo->pData is NULL, Count:%d!!",
cameraisp/dpe/mt6765/camera_dpe.c:		LOG_INF("ERROR: DPE_ReadReg kmalloc failed, cnt:%d\n",
cameraisp/dpe/mt6765/camera_dpe.c:			LOG_INF("Wrong address(0x%p), DPE_BASE(0x%p)\n",
cameraisp/dpe/mt6765/camera_dpe.c:			LOG_INF("copy_to_user failed\n");
cameraisp/dpe/mt6765/camera_dpe.c:		LOG_INF("DPE_READ_REGISTER copy_from_user failed");
cameraisp/dpe/mt6765/camera_dpe.c:			LOG_INF("Wrong address(0x%p), DPE_BASE(0x%p)\n",
cameraisp/dpe/mt6765/camera_dpe.c:		LOG_INF("ERROR: pRegIo->pData is NULL or Count:%d\n",
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("ERROR: kmalloc failed,(process, pid, tgid)=(%s, %d, %d)\n",
cameraisp/dpe/mt6765/camera_dpe.c:		LOG_INF("copy_from_user failed\n");
cameraisp/dpe/mt6765/camera_dpe.c:LOG_INF("No Such Stats can be waited!!irq Type/User/Sts/Pid(0x%x/%d/0x%x/%d)\n",
cameraisp/dpe/mt6765/camera_dpe.c:#ifdef DPE_WAITIRQ_LOG
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("before wait_event! Timeout(%d), Clear(%d)\n",
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("Type(%d), IrqSta(0x%08X), WaitSta(0x%08X)\n",
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("urKey(%d), whReq(%d), PID(%d)\n",
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("DveIrqCnt(0x%08X),WmfeIrqCnt(0x%08X)\n",
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("WriteReqIdx(0x%08X),ReadReqIdx(0x%08X)\n",
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("ERRRR Timeout!Timeout(%d)\n", WaitIrq->Timeout);
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("Clear(%d),Type(%d),IrqSta(0x%08X), WaitSta(0x%08X)\n",
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("urKey(%d),whReq(%d),PID(%d)\n",
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("DveIrqCnt(0x%08X),WmfeIrqCnt(0x%08X)\n",
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("WriteReqIdx(0x%08X),ReadReqIdx(0x%08X)\n",
cameraisp/dpe/mt6765/camera_dpe.c:		LOG_INF("DPE_IRQ_WAIT_CLEAR Error,Type(%d),WaitStatus(0x%08X)",
cameraisp/dpe/mt6765/camera_dpe.c:#ifdef DPE_WAITIRQ_LOG
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("no Timeout!Timeout(%d)\n", WaitIrq->Timeout);
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("Clear(%d),Type(%d),IrqSta(0x%08X), WaitSta(0x%08X)\n",
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("urKey(%d),whReq(%d),PID(%d)\n",
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("DveIrqCnt(0x%08X),WmfeIrqCnt(0x%08X)\n",
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("WriteReqIdx(0x%08X),ReadReqIdx(0x%08X)\n",
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("private_data is NULL,(process, pid, tgid)=(%s, %d, %d)",
cameraisp/dpe/mt6765/camera_dpe.c:	case DPE_DUMP_ISR_LOG:
cameraisp/dpe/mt6765/camera_dpe.c:		m_CurrentPPB = (m_CurrentPPB + 1) % LOG_PPNUM;
cameraisp/dpe/mt6765/camera_dpe.c:		IRQ_LOG_PRINTER(DPE_IRQ_TYPE_INT_DPE_ST, currentPPB,
cameraisp/dpe/mt6765/camera_dpe.c:			_LOG_INF);
cameraisp/dpe/mt6765/camera_dpe.c:		IRQ_LOG_PRINTER(DPE_IRQ_TYPE_INT_DPE_ST, currentPPB,
cameraisp/dpe/mt6765/camera_dpe.c:			_LOG_ERR);
cameraisp/dpe/mt6765/camera_dpe.c:		LOG_INF("DPE_READ_REGISTER copy_from_user failed");
cameraisp/dpe/mt6765/camera_dpe.c:		LOG_INF("DPE_WRITE_REGISTER copy_from_user failed");
cameraisp/dpe/mt6765/camera_dpe.c:				LOG_INF("invalid type(%d)",
cameraisp/dpe/mt6765/camera_dpe.c:				LOG_INF("invalid userKey(%d),max(%d)\n",
cameraisp/dpe/mt6765/camera_dpe.c:				LOG_INF("force userkey = 0\n");
cameraisp/dpe/mt6765/camera_dpe.c:			LOG_INF("IRQ clear(%d),type(%d),userKey(%d)\n",
cameraisp/dpe/mt6765/camera_dpe.c:			LOG_INF("timeout(%d),status(%d)\n",
cameraisp/dpe/mt6765/camera_dpe.c:				LOG_INF("copy_to_user failed\n");
cameraisp/dpe/mt6765/camera_dpe.c:			LOG_INF("DPE_WAIT_IRQ copy_from_user failed");
cameraisp/dpe/mt6765/camera_dpe.c:				LOG_INF("invalid type(%d)",
cameraisp/dpe/mt6765/camera_dpe.c:				LOG_INF("errUserEnum(%d)",
cameraisp/dpe/mt6765/camera_dpe.c:		LOG_INF("DPE_CLEAR_IRQ copy_from_user failed\n");
cameraisp/dpe/mt6765/camera_dpe.c:			LOG_INF("DVE Enque Num is bigger than enqueNum:%d\n",
cameraisp/dpe/mt6765/camera_dpe.c:			LOG_INF("copy DVEConfig	from request is fail!!\n");
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("DVE en req ste error!!, ReqIdx:%d,ReqState:%d, CfgCnt:%d\n",
cameraisp/dpe/mt6765/camera_dpe.c:LOG_INF("No DVE Buf! WriteIdx(%d),ReqSta(%d),FrameWRIdx(%d),enqReqNum(%d)\n",
cameraisp/dpe/mt6765/camera_dpe.c:			LOG_INF("DVE enq done!,widx(%d),cfgcnt(%d)\n",
cameraisp/dpe/mt6765/camera_dpe.c:		LOG_INF("DPE_DVE_ENQUE copy_from_user failed\n");
cameraisp/dpe/mt6765/camera_dpe.c:LOG_INF("DEQ_NUM No Buf!,ReadIdx(%d),ReqSta(%d),FrameRDIdx(%d),enqReqNum(%d)\n",
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("DVE!idx(%d),deqNum(%d),ReadIdx,(%d),FRDIdx(%d),DveFSta(%d)\n",
cameraisp/dpe/mt6765/camera_dpe.c:		LOG_INF("DVE Request ReadIdx(%d)\n",
cameraisp/dpe/mt6765/camera_dpe.c:		LOG_INF
cameraisp/dpe/mt6765/camera_dpe.c:			LOG_INF("DPE_CMD_DVE_DEQUE_REQ copy_to_user failed\n");
cameraisp/dpe/mt6765/camera_dpe.c:		LOG_INF("DPE_CMD_DVE_DEQUE_REQ copy_from_user failed\n");
cameraisp/dpe/mt6765/camera_dpe.c:		LOG_INF("WMFE Enque Num is bigger than enqueNum:%d\n",
cameraisp/dpe/mt6765/camera_dpe.c:		LOG_INF("copy WMFEConfig from request is fail!!\n");
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("WMFE en req sta error!!,ReqIdx:%d,ReqState:%d,CfgCnt:%d\n",
cameraisp/dpe/mt6765/camera_dpe.c:LOG_INF("No Empty WMFE Buf!WriteIdx(%d),ReqSta(%d),FWRIdx(%d),enqReqNum(%d)\n",
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("WMFE enq done!,widx(%d),cfgcnt(%d)\n",
cameraisp/dpe/mt6765/camera_dpe.c:		LOG_INF("DPE_DVE_ENQUE copy_from_user failed\n");
cameraisp/dpe/mt6765/camera_dpe.c:LOG_INF("Deq No WMFE Buf,ReadIdx(%d),ReqSta(%d),FRDIdx(%d),enqReqNum(%d)\n",
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("WMFE!idx(%d),deqNum(%d),ReadIdx,(%d),FRDIdx(%d),FSts(%d)\n",
cameraisp/dpe/mt6765/camera_dpe.c:		LOG_INF
cameraisp/dpe/mt6765/camera_dpe.c:			LOG_INF("DPE_WMFE_DEQUE_REQ copy_to_user failed\n");
cameraisp/dpe/mt6765/camera_dpe.c:		LOG_INF("DPE_CMD_WMFE_DEQUE_REQ copy_from_user failed\n");
cameraisp/dpe/mt6765/camera_dpe.c:		LOG_INF("Unknown Cmd(%d)", Cmd);
cameraisp/dpe/mt6765/camera_dpe.c:		LOG_INF("Fail, Cmd(%d), Dir(%d), Type(%d), Nr(%d),Size(%d)\n",
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("Fail, Cmd(%d), Pid(%d),(process, pid, tgid)=(%s, %d, %d)",
cameraisp/dpe/mt6765/camera_dpe.c:		LOG_INF("no f_op !!!\n");
cameraisp/dpe/mt6765/camera_dpe.c:			LOG_INF("compat_get_DPE_read_register_data error!!!\n");
cameraisp/dpe/mt6765/camera_dpe.c:			LOG_INF("compat_put_DPE_read_register_data error!!!\n");
cameraisp/dpe/mt6765/camera_dpe.c:			LOG_INF("COMPAT_DPE_WRITE_REGISTER error!!!\n");
cameraisp/dpe/mt6765/camera_dpe.c:			LOG_INF("COMPAT_DPE_DVE_ENQUE_REQ error!!!\n");
cameraisp/dpe/mt6765/camera_dpe.c:			LOG_INF("COMPAT_DPE_DVE_ENQUE_REQ error!!!\n");
cameraisp/dpe/mt6765/camera_dpe.c:			LOG_INF("COMPAT_DPE_DVE_DEQUE_REQ error!!!\n");
cameraisp/dpe/mt6765/camera_dpe.c:			LOG_INF("COMPAT_DPE_DVE_DEQUE_REQ error!!!\n");
cameraisp/dpe/mt6765/camera_dpe.c:			LOG_INF("COMPAT_DPE_WMFE_ENQUE_REQ error!!!\n");
cameraisp/dpe/mt6765/camera_dpe.c:			LOG_INF("COMPAT_DPE_WMFE_ENQUE_REQ error!!!\n");
cameraisp/dpe/mt6765/camera_dpe.c:			LOG_INF("COMPAT_DPE_WMFE_DEQUE_REQ error!!!\n");
cameraisp/dpe/mt6765/camera_dpe.c:			LOG_INF("COMPAT_DPE_WMFE_DEQUE_REQ error!!!\n");
cameraisp/dpe/mt6765/camera_dpe.c:	case DPE_DUMP_ISR_LOG:
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("DPE open g_u4EnableClockCount: %d", g_u4EnableClockCount);
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("DPE release g_u4EnableClockCount: %d", g_u4EnableClockCount);
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("DPE_mmap: pVma->vm_pgoff(0x%lx)", pVma->vm_pgoff);
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("DPE_mmap: pfn(0x%x),phy(0x%lx)",
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("pVmapVma->vm_start(0x%lx)", pVma->vm_start);
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("pVma->vm_end(0x%lx),length(0x%lx)", pVma->vm_end, length);
cameraisp/dpe/mt6765/camera_dpe.c:		LOG_INF("mmap range error :module:0x%x length(0x%lx)",
cameraisp/dpe/mt6765/camera_dpe.c:		LOG_INF("mmap range error :DPE_REG_RANGE(0x%x)!",
cameraisp/dpe/mt6765/camera_dpe.c:		LOG_INF("Illegal starting HW addr for mmap!");
cameraisp/dpe/mt6765/camera_dpe.c:		LOG_INF("alloc_chrdev_region failed, %d", Ret);
cameraisp/dpe/mt6765/camera_dpe.c:		LOG_INF("cdev_alloc failed");
cameraisp/dpe/mt6765/camera_dpe.c:		LOG_INF("Attatch file operation failed, %d", Ret);
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("- E. DPE driver probe.");
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("nr_DPE_devs=%d, devnode(%s), map_addr=0x%lx\n", nr_DPE_devs,
cameraisp/dpe/mt6765/camera_dpe.c:			LOG_INF("nr_DPE_devs=%d,devnode(%s),irq=%d, ISR: %s\n",
cameraisp/dpe/mt6765/camera_dpe.c:			LOG_INF("No corresponding ISR!!\n");
cameraisp/dpe/mt6765/camera_dpe.c:			LOG_INF("nr_DPE_devs=%d, devnode(%s), irq=%d\n",
cameraisp/dpe/mt6765/camera_dpe.c:		LOG_INF("No IRQ!!: nr_DPE_devs=%d, devnode(%s), irq=%d\n",
cameraisp/dpe/mt6765/camera_dpe.c:			LOG_INF("cannot get CG_IMGSYS_DPE clock\n");
cameraisp/dpe/mt6765/camera_dpe.c:			LOG_INF("Unable to create class, err = %d", Ret);
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("- X. DPE driver probe.");
cameraisp/dpe/mt6765/camera_dpe.c:			LOG_INF("free father,reg_T(%d)\n", accessNode->reg_T);
cameraisp/dpe/mt6765/camera_dpe.c:				LOG_INF("break\n");
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("DPE suspend g_u4EnableClockCount: %d, g_u4DpeCnt: %d",
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("DPE resume g_u4EnableClockCount: %d, g_u4DpeCnt: %d",
cameraisp/dpe/mt6765/camera_dpe.c:				LOG_INF("scan decimal addr is wrong !!:%s",
cameraisp/dpe/mt6765/camera_dpe.c:				LOG_INF("scan hexadecimal addr is wrong !!:%s",
cameraisp/dpe/mt6765/camera_dpe.c:				LOG_INF("DPE Write Addr Error!!:%s",
cameraisp/dpe/mt6765/camera_dpe.c:				LOG_INF("scan decimal value is wrong !!:%s",
cameraisp/dpe/mt6765/camera_dpe.c:				LOG_INF("scan hexadecimal value	is wrong !!:%s",
cameraisp/dpe/mt6765/camera_dpe.c:				LOG_INF("DPE Write Value Error!!:%s\n",
cameraisp/dpe/mt6765/camera_dpe.c:			LOG_INF("Write Request - addr:0x%x, value:0x%x\n",
cameraisp/dpe/mt6765/camera_dpe.c:			LOG_INF("Write-Address Range exceeds the size of hw\n");
cameraisp/dpe/mt6765/camera_dpe.c:			LOG_INF("Write Request - addr:0x%x, value:0x%x\n",
cameraisp/dpe/mt6765/camera_dpe.c:			LOG_INF("scan decimal addr is wrong !!:%s", addrSzBuf);
cameraisp/dpe/mt6765/camera_dpe.c:				LOG_INF("scan hexadecimal addr is wrong !!:%s",
cameraisp/dpe/mt6765/camera_dpe.c:				LOG_INF("DPE Read Addr Error!!:%s",
cameraisp/dpe/mt6765/camera_dpe.c:			LOG_INF("Read Request - addr:0x%x,value:0x%x\n",
cameraisp/dpe/mt6765/camera_dpe.c:			LOG_INF("Write-Address Range exceeds the size of hw\n");
cameraisp/dpe/mt6765/camera_dpe.c:			LOG_INF("Write Request - addr:0x%x, value:0x%x\n",
cameraisp/dpe/mt6765/camera_dpe.c:		LOG_INF("platform_driver_register fail");
cameraisp/dpe/mt6765/camera_dpe.c:		LOG_INF("find mediatek,DPE node failed!!!\n");
cameraisp/dpe/mt6765/camera_dpe.c:		LOG_INF("unable to map ISP_DPE_BASE registers!!!\n");
cameraisp/dpe/mt6765/camera_dpe.c:		LOG_INF("[%s]: fail to mkdir /proc/dpe\n", __func__);
cameraisp/dpe/mt6765/camera_dpe.c:	     LOG_PPNUM)) {
cameraisp/dpe/mt6765/camera_dpe.c:			((DBG_PAGE + INF_PAGE + ERR_PAGE) + 1)) * LOG_PPNUM)) {
cameraisp/dpe/mt6765/camera_dpe.c:		LOG_INF("log mem not enough\n");
cameraisp/dpe/mt6765/camera_dpe.c:	for (i = 0; i < LOG_PPNUM; i++) {
cameraisp/dpe/mt6765/camera_dpe.c:		gSvLog[j]._str[i][_LOG_DBG] = (char *)tmp;
cameraisp/dpe/mt6765/camera_dpe.c:		gSvLog[j]._str[i][_LOG_INF] = (char *)tmp;
cameraisp/dpe/mt6765/camera_dpe.c:		gSvLog[j]._str[i][_LOG_ERR] = (char *)tmp;
cameraisp/dpe/mt6765/camera_dpe.c:	if (DPE_DBG_DBGLOG & DPEInfo.DebugMask)
cameraisp/dpe/mt6765/camera_dpe.c:		LOG_INF("DPE_ScheduleDveWork state machine error!!\n");
cameraisp/dpe/mt6765/camera_dpe.c:		LOG_INF("DveWriteIdx:%d, RequestState:%d\n",
cameraisp/dpe/mt6765/camera_dpe.c:		LOG_INF("DVE:bFound:%d, DveWriteIdx:%d, WriteIdx:%d\n",
cameraisp/dpe/mt6765/camera_dpe.c:		LOG_INF("DVE:gDveCnt:%d,RequestState:%d,HWIdx:%d\n",
cameraisp/dpe/mt6765/camera_dpe.c:	if (DPE_DBG_DBGLOG & DPEInfo.DebugMask)
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("ScheduleWmfeWork state machine error!!,WmfeWriteIdx:%d\n",
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("ScheduleWmfeWork state machine error!!,RequestState:%d\n",
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("WMFE:bFound:%d, WmfeWriteIdx:%d, WriteIdx:%d\n",
cameraisp/dpe/mt6765/camera_dpe.c:	LOG_INF("WMFE:gWfmeCnt:%d, RequestState:%d, HWIdx:%d\n",
cameraisp/dpe/mt6765/camera_dpe.c:			IRQ_LOG_KEEPER(DPE_IRQ_TYPE_INT_DPE_ST, m_CurrentPPB,
cameraisp/dpe/mt6765/camera_dpe.c:			_LOG_ERR,
cameraisp/dpe/mt6765/camera_dpe.c:		IRQ_LOG_KEEPER(DPE_IRQ_TYPE_INT_DPE_ST, m_CurrentPPB,
cameraisp/dpe/mt6765/camera_dpe.c:		_LOG_ERR,
cameraisp/dpe/mt6765/camera_dpe.c:	IRQ_LOG_KEEPER(DPE_IRQ_TYPE_INT_DPE_ST, m_CurrentPPB, _LOG_INF,
cameraisp/dpe/mt6765/camera_dpe.c:	IRQ_LOG_KEEPER(DPE_IRQ_TYPE_INT_DPE_ST, m_CurrentPPB, _LOG_INF,
cameraisp/dpe/mt6765/camera_dpe.c:	IRQ_LOG_KEEPER(DPE_IRQ_TYPE_INT_DPE_ST, m_CurrentPPB, _LOG_INF,
cameraisp/dpe/mt6765/camera_dpe.c:	IRQ_LOG_PRINTER(DPE_IRQ_TYPE_INT_DPE_ST, m_CurrentPPB, _LOG_DBG);
cameraisp/dpe/mt6765/camera_dpe.c:	IRQ_LOG_PRINTER(DPE_IRQ_TYPE_INT_DPE_ST, m_CurrentPPB, _LOG_INF);
cameraisp/dpe/mt6765/camera_dpe.c:	IRQ_LOG_PRINTER(DPE_IRQ_TYPE_INT_DPE_ST, m_CurrentPPB, _LOG_ERR);
cameraisp/src/mt6765/camera_isp.c:#define _K_LOG_ADJUST (1)//wait log owner rdy
cameraisp/src/mt6765/camera_isp.c:/*#define ENABLE_WAITIRQ_LOG*/       /* wait irq debug logs */
cameraisp/src/mt6765/camera_isp.c:/*#define ENABLE_STT_IRQ_LOG*/       /*show STT irq debug logs */
cameraisp/src/mt6765/camera_isp.c:struct ISP_TIME_LOG_STRUCT {
cameraisp/src/mt6765/camera_isp.c:	struct ISP_TIME_LOG_STRUCT             TimeLog;
cameraisp/src/mt6765/camera_isp.c:/* currently, _LOG_DBG only used at ipl_buf_ctrl to protect critical section */
cameraisp/src/mt6765/camera_isp.c:enum eLOG_TYPE {
cameraisp/src/mt6765/camera_isp.c:	_LOG_DBG = 0,
cameraisp/src/mt6765/camera_isp.c:	_LOG_INF = 1,
cameraisp/src/mt6765/camera_isp.c:	_LOG_ERR = 2,
cameraisp/src/mt6765/camera_isp.c:	_LOG_MAX = 3,
cameraisp/src/mt6765/camera_isp.c:/* #define SV_LOG_STR_LEN NORMAL_STR_LEN */
cameraisp/src/mt6765/camera_isp.c:#define LOG_PPNUM 2
cameraisp/src/mt6765/camera_isp.c:struct SV_LOG_STR {
cameraisp/src/mt6765/camera_isp.c:	unsigned int _cnt[LOG_PPNUM][_LOG_MAX];
cameraisp/src/mt6765/camera_isp.c:	/* char   _str[_LOG_MAX][SV_LOG_STR_LEN]; */
cameraisp/src/mt6765/camera_isp.c:	char *_str[LOG_PPNUM][_LOG_MAX];
cameraisp/src/mt6765/camera_isp.c:static struct SV_LOG_STR gSvLog[ISP_IRQ_TYPE_AMOUNT];
cameraisp/src/mt6765/camera_isp.c: *   for irq used,keep log until IRQ_LOG_PRINTER being involked,
cameraisp/src/mt6765/camera_isp.c: *   IRQ_LOG error log, PLEASE use
cameraisp/src/mt6765/camera_isp.c: *   "IRQ_LOG_KEEPER_PR_ERR" & "IRQ_LOG_PRINTER_PR_ERR"
cameraisp/src/mt6765/camera_isp.c:#define IRQ_LOG_KEEPER_T(sec, usec)
cameraisp/src/mt6765/camera_isp.c:#define IRQ_LOG_KEEPER(irq, ppb, logT, fmt, ...) 
cameraisp/src/mt6765/camera_isp.c:#define IRQ_LOG_KEEPER_PR_ERR(irq, ppb, logT, fmt, ...) 
cameraisp/src/mt6765/camera_isp.c:#define IRQ_LOG_KEEPER(irq, ppb, logT, fmt, args...) 
cameraisp/src/mt6765/camera_isp.c:#define IRQ_LOG_KEEPER_PR_ERR(irq, ppb, logT, fmt, args...) 
cameraisp/src/mt6765/camera_isp.c:#define IRQ_LOG_PRINTER(irq, ppb_in, logT_in)
cameraisp/src/mt6765/camera_isp.c:#define IRQ_LOG_PRINTER_PR_ERR(irq, ppb_in, logT_in)
cameraisp/src/mt6765/camera_isp.c:#define IRQ_LOG_PRINTER(irq, ppb, logT)
cameraisp/src/mt6765/camera_isp.c:#define IRQ_LOG_PRINTER_PR_ERR(irq, ppb, logT)
cameraisp/src/mt6765/camera_isp.c:	IRQ_LOG_KEEPER_PR_ERR(module, m_CurrentPPB, _LOG_ERR,
cameraisp/src/mt6765/camera_isp.c:		IRQ_LOG_KEEPER_PR_ERR(module, m_CurrentPPB, _LOG_ERR,
cameraisp/src/mt6765/camera_isp.c:		IRQ_LOG_KEEPER_PR_ERR(module, m_CurrentPPB, _LOG_ERR,
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_KEEPER_PR_ERR(module, m_CurrentPPB, _LOG_ERR,
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_KEEPER_PR_ERR(module, m_CurrentPPB, _LOG_ERR,
cameraisp/src/mt6765/camera_isp.c:		IRQ_LOG_KEEPER_PR_ERR(module, m_CurrentPPB, _LOG_ERR,
cameraisp/src/mt6765/camera_isp.c:		IRQ_LOG_KEEPER_PR_ERR(module, m_CurrentPPB, _LOG_ERR,
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_KEEPER_PR_ERR(module, m_CurrentPPB, _LOG_ERR,
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_KEEPER_PR_ERR(module, m_CurrentPPB, _LOG_ERR,
cameraisp/src/mt6765/camera_isp.c:#ifdef P2_DBG_LOG
cameraisp/src/mt6765/camera_isp.c:				IRQ_LOG_KEEPER(ISP_IRQ_TYPE_INT_DIP_A_ST, 0,
cameraisp/src/mt6765/camera_isp.c:				_LOG_DBG,
cameraisp/src/mt6765/camera_isp.c:#ifdef P2_DBG_LOG
cameraisp/src/mt6765/camera_isp.c:				IRQ_LOG_KEEPER(ISP_IRQ_TYPE_INT_DIP_A_ST, 0,
cameraisp/src/mt6765/camera_isp.c:				_LOG_DBG,
cameraisp/src/mt6765/camera_isp.c:		IRQ_LOG_PRINTER(ISP_IRQ_TYPE_INT_DIP_A_ST, 0, _LOG_DBG);
cameraisp/src/mt6765/camera_isp.c:#ifdef P2_DBG_LOG
cameraisp/src/mt6765/camera_isp.c:#ifdef P2_DBG_LOG
cameraisp/src/mt6765/camera_isp.c:#ifdef ENABLE_WAITIRQ_LOG
cameraisp/src/mt6765/camera_isp.c:#ifdef ENABLE_WAITIRQ_LOG
cameraisp/src/mt6765/camera_isp.c:#ifdef ENABLE_WAITIRQ_LOG
cameraisp/src/mt6765/camera_isp.c:#ifdef ENABLE_WAITIRQ_LOG
cameraisp/src/mt6765/camera_isp.c:#ifdef ENABLE_WAITIRQ_LOG
cameraisp/src/mt6765/camera_isp.c:#ifdef ENABLE_WAITIRQ_LOG
cameraisp/src/mt6765/camera_isp.c:	case ISP_DUMP_ISR_LOG:
cameraisp/src/mt6765/camera_isp.c:			m_CurrentPPB = (m_CurrentPPB + 1) % LOG_PPNUM;
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_PRINTER(DebugFlag[0], currentPPB, _LOG_INF);
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_PRINTER_PR_ERR(DebugFlag[0], currentPPB,
cameraisp/src/mt6765/camera_isp.c:						_LOG_ERR);
cameraisp/src/mt6765/camera_isp.c:	case ISP_VF_LOG:
cameraisp/src/mt6765/camera_isp.c:	case COMPAT_ISP_DUMP_ISR_LOG: {
cameraisp/src/mt6765/camera_isp.c:			filp->f_op->unlocked_ioctl(filp, ISP_DUMP_ISR_LOG,
cameraisp/src/mt6765/camera_isp.c:	case COMPAT_ISP_VF_LOG: {
cameraisp/src/mt6765/camera_isp.c:			filp->f_op->unlocked_ioctl(filp, ISP_VF_LOG,
cameraisp/src/mt6765/camera_isp.c:	#if (_K_LOG_ADJUST == 1)
cameraisp/src/mt6765/camera_isp.c:#ifdef KERNEL_LOG
cameraisp/src/mt6765/camera_isp.c:#if (_K_LOG_ADJUST == 1)
cameraisp/src/mt6765/camera_isp.c:	   ((DBG_PAGE + INF_PAGE + ERR_PAGE) + 1))*LOG_PPNUM)) {
cameraisp/src/mt6765/camera_isp.c:		      ((DBG_PAGE + INF_PAGE + ERR_PAGE) + 1))*LOG_PPNUM))
cameraisp/src/mt6765/camera_isp.c:	for (i = 0; i < LOG_PPNUM; i++) {
cameraisp/src/mt6765/camera_isp.c:			gSvLog[j]._str[i][_LOG_DBG] = (char *)tmp;
cameraisp/src/mt6765/camera_isp.c:			gSvLog[j]._str[i][_LOG_INF] = (char *)tmp;
cameraisp/src/mt6765/camera_isp.c:			gSvLog[j]._str[i][_LOG_ERR] = (char *)tmp;
cameraisp/src/mt6765/camera_isp.c:	#define PER_LINE_LOG_SIZE   10
cameraisp/src/mt6765/camera_isp.c:	/* uint32_t add[PER_LINE_LOG_SIZE]; */
cameraisp/src/mt6765/camera_isp.c:	uint32_t add[PER_LINE_LOG_SIZE];
cameraisp/src/mt6765/camera_isp.c:	uint32_t val[PER_LINE_LOG_SIZE];
cameraisp/src/mt6765/camera_isp.c:	for (i = 0; i < regCount; i += PER_LINE_LOG_SIZE) {
cameraisp/src/mt6765/camera_isp.c:		for (j = 0; j < PER_LINE_LOG_SIZE; j++) {
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_KEEPER_PR_ERR(module, m_CurrentPPB, _LOG_ERR,
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_KEEPER_PR_ERR(module, m_CurrentPPB, _LOG_ERR,
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_KEEPER_PR_ERR(module, m_CurrentPPB, _LOG_ERR,
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_KEEPER_PR_ERR(module, m_CurrentPPB, _LOG_ERR,
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_KEEPER_PR_ERR(module, m_CurrentPPB, _LOG_ERR,
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_KEEPER_PR_ERR(module, m_CurrentPPB, _LOG_ERR,
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_KEEPER_PR_ERR(module, m_CurrentPPB, _LOG_ERR,
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_KEEPER_PR_ERR(module, m_CurrentPPB, _LOG_ERR,
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_KEEPER_PR_ERR(module, m_CurrentPPB, _LOG_ERR,
cameraisp/src/mt6765/camera_isp.c:		IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:		IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:				IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:				IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:				IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:				IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:				IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:				IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:		IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:				IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_KEEPER_PR_ERR(module, m_CurrentPPB, _LOG_ERR,
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:#ifdef ENABLE_STT_IRQ_LOG /*STT addr*/
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:				IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:#ifdef ENABLE_STT_IRQ_LOG
cameraisp/src/mt6765/camera_isp.c:		IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:		IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:				IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_KEEPER_PR_ERR(module, m_CurrentPPB, _LOG_ERR,
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:#ifdef ENABLE_STT_IRQ_LOG /*STT addr*/
cameraisp/src/mt6765/camera_isp.c:			IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:				IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:#ifdef ENABLE_STT_IRQ_LOG
cameraisp/src/mt6765/camera_isp.c:		IRQ_LOG_KEEPER(module, m_CurrentPPB, _LOG_INF,
cameraisp/src/mt6765/camera_isp.c:	IRQ_LOG_PRINTER(ISP_IRQ_TYPE_INT_CAM_A_ST, m_CurrentPPB, _LOG_INF);
cameraisp/src/mt6765/camera_isp.c:	IRQ_LOG_PRINTER(ISP_IRQ_TYPE_INT_CAM_B_ST, m_CurrentPPB, _LOG_INF);
cameraisp/src/mt6765/camera_isp.c:	IRQ_LOG_PRINTER(ISP_IRQ_TYPE_INT_CAMSV_0_ST, m_CurrentPPB, _LOG_INF);
cameraisp/src/mt6765/camera_isp.c:	IRQ_LOG_PRINTER(ISP_IRQ_TYPE_INT_CAMSV_1_ST, m_CurrentPPB, _LOG_INF);
cameraisp/src/mt6765/camera_isp.c:	IRQ_LOG_PRINTER(ISP_IRQ_TYPE_INT_CAMSV_2_ST, m_CurrentPPB, _LOG_INF);
cameraisp/src/mt6765/camera_isp.c:	IRQ_LOG_PRINTER(ISP_IRQ_TYPE_INT_CAMSV_3_ST, m_CurrentPPB, _LOG_INF);
cameraisp/src/mt6765/camera_isp.c:	IRQ_LOG_PRINTER(ISP_IRQ_TYPE_INT_CAMSV_4_ST, m_CurrentPPB, _LOG_INF);
cameraisp/src/mt6765/camera_isp.c:	IRQ_LOG_PRINTER(ISP_IRQ_TYPE_INT_CAMSV_5_ST, m_CurrentPPB, _LOG_INF);
cameraisp/src/mt6765/camera_isp.c:	IRQ_LOG_PRINTER_PR_ERR(pWorkTable->module, m_CurrentPPB, _LOG_ERR);
cameraisp/src/mt6765/camera_isp.c:	IRQ_LOG_PRINTER(pWorkTable->module, m_CurrentPPB, _LOG_INF);
cameraisp/src/mt6765/inc/camera_isp.h:#define KERNEL_LOG
cameraisp/src/mt6765/inc/camera_isp.h:#define ISR_LOG_ON
cameraisp/src/mt6765/inc/camera_isp.h:	ISP_CMD_DUMP_ISR_LOG, /* dump isr log */
cameraisp/src/mt6765/inc/camera_isp.h:	ISP_CMD_VF_LOG, /* dbg only, prt log on kernel when vf_en is driven */
cameraisp/src/mt6765/inc/camera_isp.h:#define ISP_DUMP_ISR_LOG    \
cameraisp/src/mt6765/inc/camera_isp.h:	_IOWR(ISP_MAGIC, ISP_CMD_DUMP_ISR_LOG,    unsigned long)
cameraisp/src/mt6765/inc/camera_isp.h:#define ISP_VF_LOG                  \
cameraisp/src/mt6765/inc/camera_isp.h:	_IOW(ISP_MAGIC, ISP_CMD_VF_LOG,          unsigned char*)
cameraisp/src/mt6765/inc/camera_isp.h:#define COMPAT_ISP_DUMP_ISR_LOG       \
cameraisp/src/mt6765/inc/camera_isp.h:	_IOWR(ISP_MAGIC, ISP_CMD_DUMP_ISR_LOG,     compat_uptr_t)
cameraisp/src/mt6765/inc/camera_isp.h:#define COMPAT_ISP_VF_LOG             \
cameraisp/src/mt6765/inc/camera_isp.h:	_IOW(ISP_MAGIC, ISP_CMD_VF_LOG,            compat_uptr_t)
cameraisp/rsc/engine_request.c:#define LOG_VRB(format, args...)	
cameraisp/rsc/engine_request.c:#define LOG_DBG(format, args...)	
cameraisp/rsc/engine_request.c:#define LOG_INF(format, args...)
cameraisp/rsc/engine_request.c:#define LOG_WRN(format, args...)
cameraisp/rsc/engine_request.c:#define LOG_ERR(format, args...)
cameraisp/rsc/engine_request.c:		LOG_ERR("NULL frame(%p)", (void *)f);
cameraisp/rsc/engine_request.c:		LOG_INF("[%s] vmalloc failed", __func__);
cameraisp/rsc/engine_request.c:	LOG_INF("[%s]Engine struct total size is %zu", __func__, len);
cameraisp/rsc/engine_request.c:	LOG_DBG("[%s] engine running request(%d)\n", __func__, running);
cameraisp/rsc/engine_request.c:		LOG_ERR("No empty requests available.");
cameraisp/rsc/engine_request.c:		LOG_ERR("NULL req_enque_cb or req");
cameraisp/rsc/engine_request.c:		LOG_ERR("Failed to enque request, check cb");
cameraisp/rsc/engine_request.c:	LOG_DBG("request(%d) enqued with %d frames", r, fcnt);
cameraisp/rsc/engine_request.c:	LOG_DBG("[%s]waits for completion(%d).\n", __func__,
cameraisp/rsc/engine_request.c:	LOG_DBG("[%s]previous request completed, reset(%d).\n", __func__,
cameraisp/rsc/engine_request.c:	LOG_DBG("[%s] processing request(%d)\n", __func__, r);
cameraisp/rsc/engine_request.c:		LOG_DBG("[%s]No pending request(%d), state:%d\n", __func__,
cameraisp/rsc/engine_request.c:		LOG_DBG("[%s]complete(%d)\n", __func__,
cameraisp/rsc/engine_request.c:			LOG_DBG("[%s]Processing request(%d) of frame(%d)\n",
cameraisp/rsc/engine_request.c:				LOG_WRN("[%s]failed:frame %d of request %d",
cameraisp/rsc/engine_request.c:			LOG_DBG("[%s]No pending request(%d), state:%d\n",
cameraisp/rsc/engine_request.c:			LOG_DBG("[%s]complete(%d)\n", __func__,
cameraisp/rsc/engine_request.c:			LOG_WRN(
cameraisp/rsc/engine_request.c:			LOG_DBG(
cameraisp/rsc/engine_request.c:	LOG_DBG("[%s]Iterating request(%d) of frame(%d)\n",
cameraisp/rsc/engine_request.c:		LOG_DBG("[%s]Processing request(%d) of frame(%d)\n",
cameraisp/rsc/engine_request.c:			LOG_WRN("[%s]failed:frame %d of request %d",
cameraisp/rsc/engine_request.c:		LOG_WRN("[%s]already running frame %d of request %d",
cameraisp/rsc/engine_request.c:		LOG_DBG("[%s]complete(%d)\n", __func__,
cameraisp/rsc/engine_request.c:	LOG_DBG("complete_all done = %d\n", eng->req_handler_done.done);
cameraisp/rsc/engine_request.c:			LOG_ERR(
cameraisp/rsc/engine_request.c:		LOG_INF("[%s]request %d of frame %d finished.\n",
cameraisp/rsc/engine_request.c:			LOG_DBG("NULL req_feedback_cb");
cameraisp/rsc/engine_request.c:			LOG_ERR("Failed to feedback statistics, check cb");
cameraisp/rsc/engine_request.c:			LOG_INF(
cameraisp/rsc/engine_request.c:		LOG_ERR("[%s]Request(%d) NOT finished", __func__, r);
cameraisp/rsc/engine_request.c:			LOG_ERR("Frame(%d) NOT finised", f);
cameraisp/rsc/engine_request.c:	LOG_DBG("[%s]deque request(%d) has %d frames", __func__, r, *fcnt);
cameraisp/rsc/engine_request.c:		LOG_ERR("[%s]NULL req_deque_cb/req", __func__);
cameraisp/rsc/engine_request.c:		LOG_ERR("[%s]Failed to deque, check req_deque_cb", __func__);
cameraisp/rsc/engine_request.c:	LOG_ERR("[%s] +\n", __func__);
cameraisp/rsc/engine_request.c:		LOG_ERR("[%s]can't dump NULL engine", __func__);
cameraisp/rsc/engine_request.c:	LOG_ERR("req_ctl:wc:%d, gc:%d, ic:%d, rc:%d, data:%p\n",
cameraisp/rsc/engine_request.c:		LOG_ERR(
cameraisp/rsc/engine_request.c:			LOG_ERR("F[%d].state:%d, F[%d].state:%d\n",
cameraisp/rsc/engine_request.c:	LOG_ERR("[%s] -\n", __func__);
cameraisp/rsc/engine_request.c:	LOG_INF("engine_request module loaded");
cameraisp/rsc/engine_request.c:	LOG_INF("engine_request module unloaded");
cameraisp/rsc/isp_50/camera_rsc.c:#define LOG_VRB(format, args...)
cameraisp/rsc/isp_50/camera_rsc.c:#define LOG_DBG(format, args...)
cameraisp/rsc/isp_50/camera_rsc.c:#define LOG_DBG(format, args...)
cameraisp/rsc/isp_50/camera_rsc.c:#define LOG_INF(format, args...)
cameraisp/rsc/isp_50/camera_rsc.c:#define LOG_NOTICE(format, args...)
cameraisp/rsc/isp_50/camera_rsc.c:#define LOG_WRN(format, args...)
cameraisp/rsc/isp_50/camera_rsc.c:#define LOG_ERR(format, args...)
cameraisp/rsc/isp_50/camera_rsc.c:#define LOG_AST(format, args...)
cameraisp/rsc/isp_50/camera_rsc.c:#define RSC_DBG_DBGLOG (0x00000001)
cameraisp/rsc/isp_50/camera_rsc.c:#define RSC_DBG_INFLOG (0x00000002)
cameraisp/rsc/isp_50/camera_rsc.c:enum eLOG_TYPE {
cameraisp/rsc/isp_50/camera_rsc.c:	_LOG_DBG = 0,
cameraisp/rsc/isp_50/camera_rsc.c:	_LOG_INF = 1,
cameraisp/rsc/isp_50/camera_rsc.c:	_LOG_ERR = 2,
cameraisp/rsc/isp_50/camera_rsc.c:	_LOG_MAX = 3,
cameraisp/rsc/isp_50/camera_rsc.c:/* #define SV_LOG_STR_LEN NORMAL_STR_LEN */
cameraisp/rsc/isp_50/camera_rsc.c:#define LOG_PPNUM 2
cameraisp/rsc/isp_50/camera_rsc.c:struct SV_LOG_STR {
cameraisp/rsc/isp_50/camera_rsc.c:	unsigned int _cnt[LOG_PPNUM][_LOG_MAX];
cameraisp/rsc/isp_50/camera_rsc.c:	/* char   _str[_LOG_MAX][SV_LOG_STR_LEN]; */
cameraisp/rsc/isp_50/camera_rsc.c:	char *_str[LOG_PPNUM][_LOG_MAX];
cameraisp/rsc/isp_50/camera_rsc.c:} *PSV_LOG_STR;
cameraisp/rsc/isp_50/camera_rsc.c:static struct SV_LOG_STR gSvLog[RSC_IRQ_TYPE_AMOUNT];
cameraisp/rsc/isp_50/camera_rsc.c: *   for irq used,keep log until IRQ_LOG_PRINTER being involked,
cameraisp/rsc/isp_50/camera_rsc.c:#define IRQ_LOG_KEEPER(irq, ppb, logT, fmt, ...)
cameraisp/rsc/isp_50/camera_rsc.c:#define IRQ_LOG_KEEPER(irq, ppb, logT, fmt, ...)
cameraisp/rsc/isp_50/camera_rsc.c:#define IRQ_LOG_PRINTER(irq, ppb_in, logT_in)
cameraisp/rsc/isp_50/camera_rsc.c:#define IRQ_LOG_PRINTER(irq, ppb, logT)
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_ERR("EWIRQ,type:%d,u:%d,stat:%d,wReq:%d,PID:0x%x\n",
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_DBG("[0x%08X %08X],[0x%08X %08X],[0x%08X %08X],[0x%08X %08X]", \
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_ERR("[%s] request queued with  frame(%d)", __func__, f);
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_DBG("[%s] RSC_CTRL_REG:0x%x!\n", __func__,
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_DBG("[%s] RSC_SIZE_REG:0x%x!\n", __func__,
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_DBG("[%s] RSC_IMGI_C_BASE_ADDR_REG:0x%x!\n", __func__,
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_DBG("[%s] RSC_IMGI_C_STRIDE_REG:0x%x!\n", __func__,
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_DBG("[%s] RSC_IMGI_P_BASE_ADDR_REG:0x%x!\n", __func__,
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_DBG("[%s] RSC_IMGI_P_STRIDE_REG:0x%x!\n", __func__,
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_DBG("[%s] RSC_MVI_C_BASE_ADDR_REG:0x%x!\n", __func__,
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_DBG("[%s] RSC_MVI_C_STRIDE_REG:0x%x!\n", __func__,
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_DBG("[%s] RSC_MVO_BASE_ADDR_REG:0x%x!\n", __func__,
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_DBG("[%s] RSC_MVO_STRIDE_REG:0x%x!\n", __func__,
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_DBG("[%s] RSC_BVO_BASE_ADDR_REG:0x%x!\n", __func__,
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_DBG("[%s] RSC_BVO_STRIDE_REG:0x%x!\n", __func__,
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_DBG("[%s] RSC_APLI_C_BASE_ADDR_REG:0x%x!\n", __func__,
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_DBG("[%s] RSC_APLI_P_BASE_ADDR_REG:0x%x!\n", __func__,
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_DBG("[%s]request dequeued frame(%d/%d).", __func__, f,
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_ERR(
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_DBG(
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_DBG(
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_DBG(
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_DBG(
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_DBG(
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_DBG(
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_DBG(
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_DBG(
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_DBG(
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_DBG(
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_DBG(
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_DBG(
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_DBG(
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_DBG(
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_DBG("%s request sent to CMDQ driver", __func__);
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_DBG("RSC_CTRL_REG:0x%x!\n", pRscConfig->RSC_CTRL);
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_DBG("RSC_SIZE_REG:0x%x!\n", pRscConfig->RSC_SIZE);
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_DBG("RSC_IMGI_C_BASE_ADDR_REG:0x%x!\n",
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_DBG("RSC_IMGI_C_STRIDE_REG:0x%x!\n",
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_DBG("RSC_IMGI_P_BASE_ADDR_REG:0x%x!\n",
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_DBG("RSC_IMGI_P_STRIDE_REG:0x%x!\n",
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_DBG("RSC_MVI_C_BASE_ADDR_REG:0x%x!\n",
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_DBG("RSC_MVI_C_STRIDE_REG:0x%x!\n",
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_DBG("RSC_MVO_BASE_ADDR_REG:0x%x!\n",
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_DBG("RSC_MVO_STRIDE_REG:0x%x!\n",
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_DBG("RSC_BVO_BASE_ADDR_REG:0x%x!\n",
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_DBG("RSC_BVO_STRIDE_REG:0x%x!\n",
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_DBG("RSC_APLI_C_BASE_ADDR_REG:0x%x!\n",
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_DBG("RSC_APLI_P_BASE_ADDR_REG:0x%x!\n",
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_INF("+ PMQOS Bandwidth : %d MB/sec\n", dma_bandwidth);
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_DBG("- PMQOS Bandwidth : %d\n", 0);
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_INF("- E.");
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_INF("RSC Config Info\n");
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(RSC_CTRL_HW),
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(RSC_SIZE_HW),
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(RSC_IMGI_C_BASE_ADDR_HW),
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(RSC_IMGI_C_STRIDE_HW),
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(RSC_IMGI_P_BASE_ADDR_HW),
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(RSC_IMGI_P_STRIDE_HW),
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(RSC_MVI_BASE_ADDR_HW),
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(RSC_MVI_STRIDE_HW),
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(RSC_APLI_C_BASE_ADDR_HW),
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(RSC_APLI_P_BASE_ADDR_HW),
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(RSC_MVO_BASE_ADDR_HW),
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(RSC_MVO_STRIDE_HW),
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(RSC_BVO_BASE_ADDR_HW),
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(RSC_BVO_STRIDE_HW),
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_INF("RSC Debug Info\n");
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(RSC_DBG_INFO_00_HW),
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(RSC_DBG_INFO_01_HW),
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(RSC_DBG_INFO_02_HW),
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(RSC_DBG_INFO_03_HW),
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(RSC_DBG_INFO_04_HW),
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(RSC_DBG_INFO_05_HW),
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(RSC_DBG_INFO_06_HW),
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(RSC_DMA_DBG_HW),
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(RSC_DMA_REQ_STATUS_HW),
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(RSC_DMA_RDY_STATUS_HW),
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(RSC_DMA_DMA_ERR_CTRL_HW),
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(RSC_DMA_RSCI_ERR_STAT_HW),
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(RSC_DMA_RSCO_ERR_STAT_HW),
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_INF("[0x%08X %08X]\n", (unsigned int)(RSC_DCM_STAUS_HW),
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_INF("- X.");
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_ERR("cannot prepare and enable CG_IMGSYS_RSC clock\n");
cameraisp/rsc/isp_50/camera_rsc.c:/* LOG_DBG("clock enbled. g_u4EnableClockCount: %d.", g_u4EnableClockCount); */
cameraisp/rsc/isp_50/camera_rsc.c:		/* LOG_DBG("Dpe clock disabled. g_u4EnableClockCount: %d.",
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_DBG("- E.");
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_DBG(" RSC Reset start!\n");
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_DBG("Curr UserCount(%d) users exist", RSCInfo.UserCount);
cameraisp/rsc/isp_50/camera_rsc.c:			LOG_DBG("RSC resetting...\n");
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_DBG(" RSC Reset end!\n");
cameraisp/rsc/isp_50/camera_rsc.c:			LOG_ERR("get_user failed");
cameraisp/rsc/isp_50/camera_rsc.c:			LOG_ERR(
cameraisp/rsc/isp_50/camera_rsc.c:			LOG_ERR("put_user failed");
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_DBG("- E.\n");
cameraisp/rsc/isp_50/camera_rsc.c:			LOG_DBG("Addr(0x%lx), Val(0x%x)\n",
cameraisp/rsc/isp_50/camera_rsc.c:			LOG_ERR("wrong address(0x%lx)\n",
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_DBG("Data(0x%p), Count(%d)\n", (pRegIo->pData),
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_DBG(
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_ERR("ERROR: pRegIo->pData is NULL or Count:%d\n",
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_ERR("copy_from_user failed\n");
cameraisp/rsc/isp_50/camera_rsc.c:				LOG_DBG(
cameraisp/rsc/isp_50/camera_rsc.c:		/* LOG_DBG(
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_ERR(
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_ERR(
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_ERR(
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_ERR(
cameraisp/rsc/isp_50/camera_rsc.c:				LOG_ERR(
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_WRN("private_data NULL,(process, pid, tgid)=(%s, %d, %d)",
cameraisp/rsc/isp_50/camera_rsc.c:	case RSC_DUMP_ISR_LOG:
cameraisp/rsc/isp_50/camera_rsc.c:			m_CurrentPPB = (m_CurrentPPB + 1) % LOG_PPNUM;
cameraisp/rsc/isp_50/camera_rsc.c:			IRQ_LOG_PRINTER(RSC_IRQ_TYPE_INT_RSC_ST, currentPPB,
cameraisp/rsc/isp_50/camera_rsc.c:								_LOG_INF);
cameraisp/rsc/isp_50/camera_rsc.c:			IRQ_LOG_PRINTER(RSC_IRQ_TYPE_INT_RSC_ST, currentPPB,
cameraisp/rsc/isp_50/camera_rsc.c:								_LOG_ERR);
cameraisp/rsc/isp_50/camera_rsc.c:				LOG_ERR(
cameraisp/rsc/isp_50/camera_rsc.c:				LOG_ERR(
cameraisp/rsc/isp_50/camera_rsc.c:					LOG_ERR("invalid type(%d)",
cameraisp/rsc/isp_50/camera_rsc.c:					LOG_ERR(
cameraisp/rsc/isp_50/camera_rsc.c:				LOG_INF(
cameraisp/rsc/isp_50/camera_rsc.c:					LOG_ERR("copy_to_user failed\n");
cameraisp/rsc/isp_50/camera_rsc.c:				LOG_ERR("RSC_WAIT_IRQ copy_from_user failed");
cameraisp/rsc/isp_50/camera_rsc.c:				LOG_DBG("RSC_CLEAR_IRQ Type(%d)",
cameraisp/rsc/isp_50/camera_rsc.c:					LOG_ERR("invalid type(%d)",
cameraisp/rsc/isp_50/camera_rsc.c:					LOG_ERR("errUserEnum(%d)",
cameraisp/rsc/isp_50/camera_rsc.c:				LOG_DBG(
cameraisp/rsc/isp_50/camera_rsc.c:				LOG_ERR(
cameraisp/rsc/isp_50/camera_rsc.c:						LOG_ERR(
cameraisp/rsc/isp_50/camera_rsc.c:					LOG_DBG(
cameraisp/rsc/isp_50/camera_rsc.c:					LOG_ERR(
cameraisp/rsc/isp_50/camera_rsc.c:				LOG_ERR(
cameraisp/rsc/isp_50/camera_rsc.c:				/* LOG_DBG(
cameraisp/rsc/isp_50/camera_rsc.c:						LOG_DBG("RSC enque done!!\n");
cameraisp/rsc/isp_50/camera_rsc.c:						LOG_DBG("RSC enque frame!!\n");
cameraisp/rsc/isp_50/camera_rsc.c:					LOG_ERR(
cameraisp/rsc/isp_50/camera_rsc.c:				LOG_ERR("ConfigRSC Not Support\n");
cameraisp/rsc/isp_50/camera_rsc.c:				LOG_ERR("RSC_ENQUE copy_from_user failed\n");
cameraisp/rsc/isp_50/camera_rsc.c:				LOG_DBG("RSC_ENQNUE_NUM:%d, pid:%d\n",
cameraisp/rsc/isp_50/camera_rsc.c:					LOG_ERR(
cameraisp/rsc/isp_50/camera_rsc.c:					LOG_ERR(
cameraisp/rsc/isp_50/camera_rsc.c:				LOG_DBG("Config RSC Request!!\n");
cameraisp/rsc/isp_50/camera_rsc.c:					LOG_DBG("direct request_handler\n");
cameraisp/rsc/isp_50/camera_rsc.c:				LOG_ERR(
cameraisp/rsc/isp_50/camera_rsc.c:				LOG_DBG("RSC_DEQUE_NUM(%d)\n", dequeNum);
cameraisp/rsc/isp_50/camera_rsc.c:				LOG_ERR(
cameraisp/rsc/isp_50/camera_rsc.c:				LOG_ERR("RSC_DEQUE_NUM copy_to_user failed\n");
cameraisp/rsc/isp_50/camera_rsc.c:					LOG_DBG("RSC ReadIdx(%d)\n",
cameraisp/rsc/isp_50/camera_rsc.c:					LOG_ERR(
cameraisp/rsc/isp_50/camera_rsc.c:				LOG_ERR("RSC_DEQUE No Buf: (%d)(%d)(%d)(%d)\n",
cameraisp/rsc/isp_50/camera_rsc.c:					LOG_ERR("NULL ptr:RscReq.m_pRscConfig");
cameraisp/rsc/isp_50/camera_rsc.c:					LOG_ERR
cameraisp/rsc/isp_50/camera_rsc.c:					LOG_ERR("RSC_DEQUE_REQ RscReq fail\n");
cameraisp/rsc/isp_50/camera_rsc.c:				LOG_ERR("RSC_CMD_RSC_DEQUE_REQ failed\n");
cameraisp/rsc/isp_50/camera_rsc.c:			LOG_ERR("Unknown Cmd(%d)", Cmd);
cameraisp/rsc/isp_50/camera_rsc.c:			LOG_ERR("Cmd(%d),Dir(%d),Typ(%d),Nr(%d),Size(%d)\n",
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_ERR("Fail Cmd(%d), Pid(%d), (proc, pid, tgid)=(%s, %d, %d)",
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_ERR("no f_op !!!\n");
cameraisp/rsc/isp_50/camera_rsc.c:				LOG_INF("compat_get_read_register_data err.\n");
cameraisp/rsc/isp_50/camera_rsc.c:				LOG_INF("compat_put_read_register_data err.\n");
cameraisp/rsc/isp_50/camera_rsc.c:				LOG_INF("COMPAT_RSC_WRITE_REGISTER error!!!\n");
cameraisp/rsc/isp_50/camera_rsc.c:				LOG_INF("COMPAT_RSC_ENQUE_REQ error!!!\n");
cameraisp/rsc/isp_50/camera_rsc.c:				LOG_INF("COMPAT_RSC_ENQUE_REQ error!!!\n");
cameraisp/rsc/isp_50/camera_rsc.c:				LOG_INF("COMPAT_RSC_DEQUE_REQ error!!!\n");
cameraisp/rsc/isp_50/camera_rsc.c:				LOG_INF("COMPAT_RSC_DEQUE_REQ error!!!\n");
cameraisp/rsc/isp_50/camera_rsc.c:	case RSC_DUMP_ISR_LOG:
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_DBG("- E. UserCount: %d.", RSCInfo.UserCount);
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_DBG("kmalloc failed, (proc, pid, tgid)=(%s, %d, %d)",
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_DBG("Cur Usr(%d), (proc, pid, tgid)=(%s, %d, %d), exist",
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_DBG("Cur Usr(%d), (proc, pid, tgid)=(%s, %d, %d), 1st user",
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_INF("RSC open g_u4EnableClockCount: %d", g_u4EnableClockCount);
cameraisp/rsc/isp_50/camera_rsc.c:/*#define KERNEL_LOG*/
cameraisp/rsc/isp_50/camera_rsc.c:#ifdef KERNEL_LOG
cameraisp/rsc/isp_50/camera_rsc.c:	RSCInfo.DebugMask = (RSC_DBG_INT | RSC_DBG_DBGLOG | RSC_DBG_WRITE_REG);
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_DBG("- X. Ret: %d. UserCount: %d.", Ret, RSCInfo.UserCount);
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_DBG("- E. UserCount: %d.", RSCInfo.UserCount);
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_DBG("Cur UsrCnt(%d), (proc, pid, tgid)=(%s, %d, %d), exist",
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_INF("Curr UsrCnt(%d), (process, pid, tgid)=(%s, %d, %d), last user",
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_DBG("RSC release g_u4EnableClockCount: %d", g_u4EnableClockCount);
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_DBG("- X. UserCount: %d.", RSCInfo.UserCount);
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_INF(
cameraisp/rsc/isp_50/camera_rsc.c:			LOG_ERR("mmap err:mod:0x%x len(0x%lx),REG_RANGE(0x%x)!",
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_ERR("Illegal starting HW addr for mmap!");
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_DBG("- E.");
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_DBG("- E.");
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_ERR("alloc_chrdev_region failed, %d", Ret);
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_ERR("cdev_alloc failed");
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_ERR("Attatch file operation failed, %d", Ret);
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_DBG("- X.");
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_INF("- E. RSC driver probe.\n");
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_INF("nr_RSC_devs=%d, devnode(%s), map_addr=0x%lx\n", nr_RSC_devs,
cameraisp/rsc/isp_50/camera_rsc.c:				LOG_INF(
cameraisp/rsc/isp_50/camera_rsc.c:			LOG_INF("No ISR:nr_RSC_devs=%d, devnode(%s), irq=%d\n",
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_INF("No IRQ!!: nr_RSC_devs=%d, devnode(%s), irq=%d\n",
cameraisp/rsc/isp_50/camera_rsc.c:			LOG_ERR("cannot get CG_IMGSYS_RSC clock\n");
cameraisp/rsc/isp_50/camera_rsc.c:			LOG_ERR("Unable to create class, err = %d", Ret);
cameraisp/rsc/isp_50/camera_rsc.c:			LOG_ERR("NULL RSC-CMDQ-WQ\n");
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_INF("- X. RSC driver probe.");
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_DBG("- E.");
cameraisp/rsc/isp_50/camera_rsc.c:			LOG_INF("free father,reg_T(%d)\n", accessNode->reg_T);
cameraisp/rsc/isp_50/camera_rsc.c:				LOG_INF("break\n");
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_DBG("bPass1_On_In_Resume_TG1(%d)\n", bPass1_On_In_Resume_TG1);
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_INF("%s:g_u4EnableClockCount(%d) g_SuspendCnt(%d).\n", __func__,
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_DBG("bPass1_On_In_Resume_TG1(%d).\n", bPass1_On_In_Resume_TG1);
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_INF("%s:g_u4EnableClockCount(%d) g_SuspendCnt(%d).\n", __func__,
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_DBG("calling %s()\n", __func__);
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_DBG("calling %s()\n", __func__);
cameraisp/rsc/isp_50/camera_rsc.c:				LOG_ERR("scan decimal addr is wrong !!:%s",
cameraisp/rsc/isp_50/camera_rsc.c:				LOG_ERR("hex address only:%s", addrSzBuf);
cameraisp/rsc/isp_50/camera_rsc.c:					LOG_ERR("error hex addr:%s", addrSzBuf);
cameraisp/rsc/isp_50/camera_rsc.c:				LOG_INF("RSC Write Addr Error!!:%s", addrSzBuf);
cameraisp/rsc/isp_50/camera_rsc.c:				LOG_ERR("scan decimal value is wrong !!:%s",
cameraisp/rsc/isp_50/camera_rsc.c:				LOG_ERR("HEX address only :%s", valSzBuf);
cameraisp/rsc/isp_50/camera_rsc.c:					LOG_ERR("error hex val:%s", valSzBuf);
cameraisp/rsc/isp_50/camera_rsc.c:				LOG_INF("RSC Write Value Error!!:%s\n",
cameraisp/rsc/isp_50/camera_rsc.c:			LOG_INF("Write Request - addr:0x%x, value:0x%x\n", addr,
cameraisp/rsc/isp_50/camera_rsc.c:			LOG_INF
cameraisp/rsc/isp_50/camera_rsc.c:				LOG_ERR("scan decimal addr is wrong !!:%s",
cameraisp/rsc/isp_50/camera_rsc.c:				LOG_ERR("HEX address only :%s", addrSzBuf);
cameraisp/rsc/isp_50/camera_rsc.c:					LOG_ERR("hex addr err:%s", addrSzBuf);
cameraisp/rsc/isp_50/camera_rsc.c:				LOG_INF("RSC Read Addr Error!!:%s", addrSzBuf);
cameraisp/rsc/isp_50/camera_rsc.c:			LOG_INF("Read Request - addr:0x%x,value:0x%x\n", addr,
cameraisp/rsc/isp_50/camera_rsc.c:			LOG_INF
cameraisp/rsc/isp_50/camera_rsc.c:	/* LOG_DBG("RSC_ClockOnCallback"); */
cameraisp/rsc/isp_50/camera_rsc.c:	/* LOG_DBG("+CmdqEn:%d", g_u4EnableClockCount); */
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_DBG("%s", __func__);
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_DBG("%s", __func__);
cameraisp/rsc/isp_50/camera_rsc.c:	/* LOG_DBG("RSC_ClockOffCallback"); */
cameraisp/rsc/isp_50/camera_rsc.c:	/* LOG_DBG("-CmdqEn:%d", g_u4EnableClockCount); */
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_DBG("- E.");
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_ERR("platform_driver_register fail");
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_ERR("find mediatek,RSC node failed!!!\n");
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_ERR("unable to map ISP_RSC_BASE registers!!!\n");
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_DBG("ISP_RSC_BASE: %lx\n", ISP_RSC_BASE);
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_ERR("[%s]: fail to mkdir /proc/rsc\n", __func__);
cameraisp/rsc/isp_50/camera_rsc.c:		((DBG_PAGE + INF_PAGE + ERR_PAGE) + 1)) * LOG_PPNUM)) {
cameraisp/rsc/isp_50/camera_rsc.c:			 ((DBG_PAGE + INF_PAGE + ERR_PAGE) + 1)) * LOG_PPNUM)) {
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_ERR("log mem not enough\n");
cameraisp/rsc/isp_50/camera_rsc.c:	for (i = 0; i < LOG_PPNUM; i++) {
cameraisp/rsc/isp_50/camera_rsc.c:			gSvLog[j]._str[i][_LOG_DBG] = (char *)tmp;
cameraisp/rsc/isp_50/camera_rsc.c:			gSvLog[j]._str[i][_LOG_INF] = (char *)tmp;
cameraisp/rsc/isp_50/camera_rsc.c:			gSvLog[j]._str[i][_LOG_ERR] = (char *)tmp;
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_DBG("register rsc callback for CMDQ");
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_DBG("- X. Ret: %d.", Ret);
cameraisp/rsc/isp_50/camera_rsc.c:	LOG_DBG("- E.");
cameraisp/rsc/isp_50/camera_rsc.c:	if (RSC_DBG_DBGLOG & RSCInfo.DebugMask)
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_DBG("- E.");
cameraisp/rsc/isp_50/camera_rsc.c:		LOG_DBG("[%s]no more requests", __func__);
cameraisp/rsc/isp_50/camera_rsc.c:	IRQ_LOG_KEEPER(
cameraisp/rsc/isp_50/camera_rsc.c:		RSC_IRQ_TYPE_INT_RSC_ST, m_CurrentPPB, _LOG_INF,
cameraisp/rsc/isp_50/camera_rsc.c:	/* IRQ_LOG_KEEPER(RSC_IRQ_TYPE_INT_RSC_ST, m_CurrentPPB, _LOG_INF,
cameraisp/rsc/isp_50/camera_rsc.c:	IRQ_LOG_PRINTER(RSC_IRQ_TYPE_INT_RSC_ST, m_CurrentPPB, _LOG_DBG);
cameraisp/rsc/isp_50/camera_rsc.c:	IRQ_LOG_PRINTER(RSC_IRQ_TYPE_INT_RSC_ST, m_CurrentPPB, _LOG_INF);
cameraisp/rsc/isp_50/camera_rsc.c:	IRQ_LOG_PRINTER(RSC_IRQ_TYPE_INT_RSC_ST, m_CurrentPPB, _LOG_ERR);
cameraisp/rsc/isp_50/camera_rsc.h:#define KERNEL_LOG		/* enable debug log flag if defined */
cameraisp/rsc/isp_50/camera_rsc.h:	RSC_CMD_DUMP_ISR_LOG,	/* Dump RSC ISR log */
cameraisp/rsc/isp_50/camera_rsc.h:#define RSC_DUMP_ISR_LOG    _IO(RSC_MAGIC, RSC_CMD_DUMP_ISR_LOG)
cameraisp/fdvt/4.0/camera_fdvt.c:#define LOG_VRB(format, args...)
cameraisp/fdvt/4.0/camera_fdvt.c:#define LOG_DBG(format, args...)
cameraisp/fdvt/4.0/camera_fdvt.c:#define LOG_INF(format, args...)
cameraisp/fdvt/4.0/camera_fdvt.c:#define LOG_WRN(format, args...)
cameraisp/fdvt/4.0/camera_fdvt.c:#define LOG_ERR(format, args...)
cameraisp/fdvt/4.0/camera_fdvt.c:#define LOG_AST(format, args...)
cameraisp/fdvt/4.0/camera_fdvt.c:		LOG_ERR("cannot prepare and enable CG_IMGSYS_FDVT clock\n");
cameraisp/fdvt/4.0/camera_fdvt.c:	LOG_DBG("FDVT REG:\n ********************\n");
cameraisp/fdvt/4.0/camera_fdvt.c:		LOG_DBG("+0x%x 0x%x\n", u4Index, u4RegValue);
cameraisp/fdvt/4.0/camera_fdvt.c:		LOG_DBG("Null input argrment\n");
cameraisp/fdvt/4.0/camera_fdvt.c:		LOG_DBG("pREGIO is NULL!\n");
cameraisp/fdvt/4.0/camera_fdvt.c:		LOG_DBG("Abnormal Register Count!\n");
cameraisp/fdvt/4.0/camera_fdvt.c:		LOG_DBG("ioctl copy from user failed\n");
cameraisp/fdvt/4.0/camera_fdvt.c:		LOG_DBG("ioctl copy from user failed\n");
cameraisp/fdvt/4.0/camera_fdvt.c:	/* LOG_DBG("Count = %d\n", pREGIO->u4Count); */
cameraisp/fdvt/4.0/camera_fdvt.c:		/*LOG_DBG("Write: FDVT[0x%03lx](0x%08lx) = 0x%08lx\n",*/
cameraisp/fdvt/4.0/camera_fdvt.c:		/* LOG_DBG("Error: Writing Addr(0x%8x) Excess FDVT Range!*/
cameraisp/fdvt/4.0/camera_fdvt.c:		LOG_DBG("Null input argrment\n");
cameraisp/fdvt/4.0/camera_fdvt.c:		LOG_DBG("Buffer Size Exceeded!\n");
cameraisp/fdvt/4.0/camera_fdvt.c:		LOG_DBG("copy_from_user failed\n");
cameraisp/fdvt/4.0/camera_fdvt.c:			/*LOG_DBG("Read  addr/val: 0x%08x/0x%08x\n",*/
cameraisp/fdvt/4.0/camera_fdvt.c:		/*LOG_DBG("Error: Reading Addr(0x%8x) Excess FDVT Range!*/
cameraisp/fdvt/4.0/camera_fdvt.c:		LOG_DBG("copy_to_user failed\n");
cameraisp/fdvt/4.0/camera_fdvt.c:		LOG_ERR("wait_event_interruptible_timeout timeout, %d, %d\n",
cameraisp/fdvt/4.0/camera_fdvt.c:	/*LOG_DBG("[FDVT] IRQ : 0x%8x\n",g_FDVTIRQ);*/
cameraisp/fdvt/4.0/camera_fdvt.c:		LOG_ERR("interrupted by system signal,return value(%d)\n",
cameraisp/fdvt/4.0/camera_fdvt.c:		LOG_ERR("wait_event_interruptible Not FDVT, %d, %d\n",
cameraisp/fdvt/4.0/camera_fdvt.c:		LOG_DBG("Buffer Size Exceeded!\n");
cameraisp/fdvt/4.0/camera_fdvt.c:				LOG_DBG(" ioctl copy from user failed\n");
cameraisp/fdvt/4.0/camera_fdvt.c:			/* LOG_DBG(" ioctlnot write command\n"); */
cameraisp/fdvt/4.0/camera_fdvt.c:		/* LOG_DBG(" ioctl command = NONE\n"); */
cameraisp/fdvt/4.0/camera_fdvt.c:		LOG_DBG("[FDVT] FDVT_INIT_CMD\n");
cameraisp/fdvt/4.0/camera_fdvt.c:		/* LOG_DBG("[FDVT] FDVTIOC_STARTFD_CMD\n"); */
cameraisp/fdvt/4.0/camera_fdvt.c:		/* LOG_DBG("[FDVT] FDVT_WaitIRQ\n"); */
cameraisp/fdvt/4.0/camera_fdvt.c:		/* LOG_DBG("[FDVT] FDVT set FD config\n"); */
cameraisp/fdvt/4.0/camera_fdvt.c:			LOG_DBG("Set FD HW register fail");
cameraisp/fdvt/4.0/camera_fdvt.c:		/* LOG_DBG("[FDVT] FDVT set SD config\n"); */
cameraisp/fdvt/4.0/camera_fdvt.c:			LOG_DBG("Set SD HW register fail");
cameraisp/fdvt/4.0/camera_fdvt.c:		/* LOG_DBG("[FDVT] FDVT read FD config\n"); */
cameraisp/fdvt/4.0/camera_fdvt.c:		LOG_DBG("[FDVT] FDVT_DUMPREG\n");
cameraisp/fdvt/4.0/camera_fdvt.c:		LOG_DBG("[FDVT][ERROR] FDVT_ioctl default case\n");
cameraisp/fdvt/4.0/camera_fdvt.c:	/* LOG_DBG("[FDVT] FDVT IOCtrol out\n"); */
cameraisp/fdvt/4.0/camera_fdvt.c:			LOG_DBG("copy_to_user failed\n");
cameraisp/fdvt/4.0/camera_fdvt.c:	LOG_DBG("[FDVT_DEBUG] FDVT_open\n");
cameraisp/fdvt/4.0/camera_fdvt.c:		LOG_DBG("Opened, return -EBUSY\n");
cameraisp/fdvt/4.0/camera_fdvt.c:		LOG_DBG("pBuff is not null\n");
cameraisp/fdvt/4.0/camera_fdvt.c:		LOG_DBG("pread_buf is not null\n");
cameraisp/fdvt/4.0/camera_fdvt.c:		LOG_DBG(" ioctl allocate mem failed\n");
cameraisp/fdvt/4.0/camera_fdvt.c:		LOG_DBG(" ioctl allocate mem ok\n");
cameraisp/fdvt/4.0/camera_fdvt.c:		LOG_DBG(" ioctl allocate mem failed\n");
cameraisp/fdvt/4.0/camera_fdvt.c:		LOG_DBG(" ioctl allocate mem ok\n");
cameraisp/fdvt/4.0/camera_fdvt.c: *	LOG_DBG("[FDVT_DEBUG] FDVT_flush\n");
cameraisp/fdvt/4.0/camera_fdvt.c:	LOG_DBG("[FDVT_DEBUG] FDVT_release\n");
cameraisp/fdvt/4.0/camera_fdvt.c:		LOG_ERR("find IMGSYS_CONFIG node failed!!!\n");
cameraisp/fdvt/4.0/camera_fdvt.c:		LOG_ERR("unable to map IMGSYS_CONFIG_BASE registers!!!\n");
cameraisp/fdvt/4.0/camera_fdvt.c:	LOG_DBG("[FDVT_DEBUG] IMGSYS_CONFIG_BASE: %lx\n",
cameraisp/fdvt/4.0/camera_fdvt.c:		LOG_ERR("find CAMSYS_CONFIG node failed!!!\n");
cameraisp/fdvt/4.0/camera_fdvt.c:		LOG_ERR("unable to map CAMSYS_CONFIG_BASE registers!!!\n");
cameraisp/fdvt/4.0/camera_fdvt.c:	LOG_DBG("[FDVT_DEBUG] CAMSYS_CONFIG_BASE: %lx\n",
cameraisp/fdvt/4.0/camera_fdvt.c:	LOG_INF("FDVT PROBE!!!\n");
cameraisp/fdvt/4.0/camera_fdvt.c:	LOG_DBG("[FDVT_DEBUG] FDVT_probe\n");
cameraisp/fdvt/4.0/camera_fdvt.c:		LOG_INF("DT, i=%d, map_addr=0x%lx\n", i, gFDVT_Reg[i]);
cameraisp/fdvt/4.0/camera_fdvt.c:		LOG_INF("DT, i=%d, map_irq=%d\n", i, fdvt_dev->irq[i]);
cameraisp/fdvt/4.0/camera_fdvt.c:		LOG_DBG("[FDVT_DEBUG]Can't get major number for FDVT device\n");
cameraisp/fdvt/4.0/camera_fdvt.c:		LOG_DBG("[FDVT_DEBUG] Attatch file operation failed\n");
cameraisp/fdvt/4.0/camera_fdvt.c:		LOG_DBG("[FDVT_DEBUG][ERROR] error to request FDVT irq\n");
cameraisp/fdvt/4.0/camera_fdvt.c:		LOG_DBG("[FDVT_DEBUG] success to request FDVT irq\n");
cameraisp/fdvt/4.0/camera_fdvt.c:		LOG_ERR("cannot get CG_IMGSYS_FDVT clock\n");
cameraisp/fdvt/4.0/camera_fdvt.c:	LOG_DBG("[FDVT_DEBUG] FDVT_probe Done\n");
cameraisp/fdvt/4.0/camera_fdvt.c:	LOG_DBG("[FDVT_DEBUG] FDVT_driver_exit\n");
cameraisp/fdvt/4.0/camera_fdvt.c:		LOG_INF("[FDVT_DEBUG] FDVT_suspend\n");
cameraisp/fdvt/4.0/camera_fdvt.c:		LOG_INF("[FDVT_DEBUG] FDVT_resume\n");
cameraisp/fdvt/4.0/camera_fdvt.c:	/* LOG_DBG("[FDVT_DEBUG] FDVT_suspend\n"); */
cameraisp/fdvt/4.0/camera_fdvt.c:	/* LOG_DBG("[FDVT_DEBUG] FDVT_suspend\n"); */
cameraisp/fdvt/4.0/camera_fdvt.c:	LOG_DBG("[FDVT_DEBUG] FDVT_driver_init\n");
cameraisp/fdvt/4.0/camera_fdvt.c:		LOG_DBG("[FDVT_DEBUG][ERROR] failed to register FDVT Driver\n");
cameraisp/fdvt/4.0/camera_fdvt.c:	LOG_DBG("[FDVT_DEBUG] FDVT_driver_init Done\n");
cameraisp/fdvt/4.0/camera_fdvt.c:	LOG_DBG("[FDVT_DEBUG] FDVT_driver_exit\n");
cameraisp/dip/isp_50/camera_dip.c:#define _K_LOG_ADJUST (1)
cameraisp/dip/isp_50/camera_dip.c:#define LOG_VRB(format, args...) 
cameraisp/dip/isp_50/camera_dip.c:#define LOG_DBG(format, args...)
cameraisp/dip/isp_50/camera_dip.c:#define LOG_DBG(format, args...)
cameraisp/dip/isp_50/camera_dip.c:#define LOG_INF(format, args...)
cameraisp/dip/isp_50/camera_dip.c:#define LOG_NOTICE(format, args...)
cameraisp/dip/isp_50/camera_dip.c:#define LOG_WRN(format, args...)
cameraisp/dip/isp_50/camera_dip.c:#define LOG_ERR(format, args...)
cameraisp/dip/isp_50/camera_dip.c:#define LOG_AST(format, args...)
cameraisp/dip/isp_50/camera_dip.c:struct DIP_TIME_LOG_STRUCT {
cameraisp/dip/isp_50/camera_dip.c:	struct DIP_TIME_LOG_STRUCT	TimeLog;
cameraisp/dip/isp_50/camera_dip.c:enum _eLOG_TYPE {
cameraisp/dip/isp_50/camera_dip.c:	_LOG_DBG = 0,
cameraisp/dip/isp_50/camera_dip.c:	_LOG_INF = 1,
cameraisp/dip/isp_50/camera_dip.c:	_LOG_ERR = 2,
cameraisp/dip/isp_50/camera_dip.c:	_LOG_MAX = 3,
cameraisp/dip/isp_50/camera_dip.c:} eLOG_TYPE;
cameraisp/dip/isp_50/camera_dip.c:enum _eLOG_OP {
cameraisp/dip/isp_50/camera_dip.c:	_LOG_INIT = 0,
cameraisp/dip/isp_50/camera_dip.c:	_LOG_RST = 1,
cameraisp/dip/isp_50/camera_dip.c:	_LOG_ADD = 2,
cameraisp/dip/isp_50/camera_dip.c:	_LOG_PRT = 3,
cameraisp/dip/isp_50/camera_dip.c:	_LOG_GETCNT = 4,
cameraisp/dip/isp_50/camera_dip.c:	_LOG_OP_MAX = 5
cameraisp/dip/isp_50/camera_dip.c:} eLOG_OP;
cameraisp/dip/isp_50/camera_dip.c:/* #define SV_LOG_STR_LEN NORMAL_STR_LEN */
cameraisp/dip/isp_50/camera_dip.c:#define LOG_PPNUM 2
cameraisp/dip/isp_50/camera_dip.c:struct SV_LOG_STR {
cameraisp/dip/isp_50/camera_dip.c:	unsigned int _cnt[LOG_PPNUM][_LOG_MAX];
cameraisp/dip/isp_50/camera_dip.c:	/* char   _str[_LOG_MAX][SV_LOG_STR_LEN]; */
cameraisp/dip/isp_50/camera_dip.c:	char *_str[LOG_PPNUM][_LOG_MAX];
cameraisp/dip/isp_50/camera_dip.c:static struct SV_LOG_STR gSvLog[DIP_IRQ_TYPE_AMOUNT];
cameraisp/dip/isp_50/camera_dip.c: *   for irq used,keep log until IRQ_LOG_PRINTER being involked,
cameraisp/dip/isp_50/camera_dip.c:#define IRQ_LOG_KEEPER_T(sec, usec)
cameraisp/dip/isp_50/camera_dip.c:#define IRQ_LOG_KEEPER(irq, ppb, logT, fmt, ...)
cameraisp/dip/isp_50/camera_dip.c:#define IRQ_LOG_KEEPER(irq, ppb, logT, fmt, args...)
cameraisp/dip/isp_50/camera_dip.c:#define IRQ_LOG_PRINTER(irq, ppb_in, logT_in)
cameraisp/dip/isp_50/camera_dip.c:#define IRQ_LOG_PRINTER(irq, ppb, logT)
cameraisp/dip/isp_50/camera_dip.c:		LOG_ERR("cannot prepare and enable DIP_IMG_LARB5 clock\n");
cameraisp/dip/isp_50/camera_dip.c:		LOG_ERR("cannot prepare and enable DIP_IMG_DIP clock\n");
cameraisp/dip/isp_50/camera_dip.c:		/* LOG_DBG("Camera clock enbled. G_u4DipEnClkCnt: %d.", */
cameraisp/dip/isp_50/camera_dip.c:		/*LOG_INF("CCF:prepare_enable clk");*/
cameraisp/dip/isp_50/camera_dip.c:		/* LOG_DBG("Camera clock disabled. G_u4DipEnClkCnt: %d.", */
cameraisp/dip/isp_50/camera_dip.c:		/*LOG_INF("CCF:disable_unprepare clk\n");*/
cameraisp/dip/isp_50/camera_dip.c:	LOG_DBG("- E.\n");
cameraisp/dip/isp_50/camera_dip.c:	LOG_DBG(" Reset module(%d), IMGSYS clk gate(0x%x)\n",
cameraisp/dip/isp_50/camera_dip.c:		LOG_ERR("Not support reset module:%d\n", module);
cameraisp/dip/isp_50/camera_dip.c:		LOG_INF("DIP_ReadReg pRegIo->pData is NULL, Count:%d!!",
cameraisp/dip/isp_50/camera_dip.c:		LOG_INF("ERROR: DIP_ReadReg kmalloc failed, cnt:%d\n",
cameraisp/dip/isp_50/camera_dip.c:				LOG_INF("Wrong address(0x%p)\n",
cameraisp/dip/isp_50/camera_dip.c:				LOG_INF("DIP_BASE(0x%p), Addr(0x%lx)\n",
cameraisp/dip/isp_50/camera_dip.c:			LOG_INF("copy_to_user failed\n");
cameraisp/dip/isp_50/camera_dip.c:		LOG_INF("DIP_READ_REGISTER copy_from_user failed");
cameraisp/dip/isp_50/camera_dip.c:		LOG_ERR("Unsupported module(%x) !!!\n", module);
cameraisp/dip/isp_50/camera_dip.c:		LOG_DBG("- E.\n");
cameraisp/dip/isp_50/camera_dip.c:		LOG_DBG("module(%d), base(0x%lx), Addr(0x%lx), Val(0x%x)\n",
cameraisp/dip/isp_50/camera_dip.c:			LOG_ERR("wrong address(0x%lx)\n",
cameraisp/dip/isp_50/camera_dip.c:		LOG_DBG("Data(0x%p), Count(%d)\n",
cameraisp/dip/isp_50/camera_dip.c:		LOG_INF("ERROR: pRegIo->pData is NULL or Count:%d\n",
cameraisp/dip/isp_50/camera_dip.c:	LOG_INF("ERROR: kmalloc failed, (process, pid, tgid)=(%s, %d, %d)\n",
cameraisp/dip/isp_50/camera_dip.c:		LOG_INF("copy_from_user failed\n");
cameraisp/dip/isp_50/camera_dip.c:		LOG_ERR("pMemInfo is NULL!!\n");
cameraisp/dip/isp_50/camera_dip.c:		LOG_ERR("dip_p2_ion_client is NULL!!\n");
cameraisp/dip/isp_50/camera_dip.c:		LOG_ERR("fail to alloc ion buffer, ret=%d\n", ret);
cameraisp/dip/isp_50/camera_dip.c:		LOG_ERR("fail to map va of buffer!\n");
cameraisp/dip/isp_50/camera_dip.c:		LOG_ERR("fail to config ion buffer, ret=%d\n", ret);
cameraisp/dip/isp_50/camera_dip.c:		LOG_ERR("pMemInfo is NULL!!\n");
cameraisp/dip/isp_50/camera_dip.c:		LOG_ERR("pDumpTuningBufStruct->BytesofBufferSize error");
cameraisp/dip/isp_50/camera_dip.c:		LOG_ERR("NULL pDumpBufStruct->pBuffer");
cameraisp/dip/isp_50/camera_dip.c:			LOG_ERR("tpipe size error");
cameraisp/dip/isp_50/camera_dip.c:				LOG_ERR("g_pTpipeBuffer:0x%pK is not NULL!!",
cameraisp/dip/isp_50/camera_dip.c:				LOG_ERR("copy g_pTpipeBuffer failed\n");
cameraisp/dip/isp_50/camera_dip.c:		LOG_ERR("g_pTpipeBuffer kmalloc failed,g_bIonBufAllocated:%d\n",
cameraisp/dip/isp_50/camera_dip.c:		LOG_INF("copy dumpbuf::0x%p tpipebuf:0x%p is done!!\n",
cameraisp/dip/isp_50/camera_dip.c:			LOG_ERR("tuning buf size error, size:0x%x",
cameraisp/dip/isp_50/camera_dip.c:				LOG_ERR("g_TuningBuffer:0x%pK is not NULL!!",
cameraisp/dip/isp_50/camera_dip.c:				LOG_ERR("copy g_pTuningBuffer failed\n");
cameraisp/dip/isp_50/camera_dip.c:			LOG_ERR("ERROR: g_TuningBuffer kmalloc failed\n");
cameraisp/dip/isp_50/camera_dip.c:		LOG_INF("copy dumpbuf::0x%p tuningbuf:0x%p is done!!\n",
cameraisp/dip/isp_50/camera_dip.c:			LOG_ERR("vir dip buffer size error, size:0x%x",
cameraisp/dip/isp_50/camera_dip.c:				LOG_ERR("g_pVirDIPBuffer:0x%pK is not NULL!!",
cameraisp/dip/isp_50/camera_dip.c:				LOG_ERR("copy g_pVirDIPBuffer failed\n");
cameraisp/dip/isp_50/camera_dip.c:			LOG_ERR("ERROR: g_pVirDIPBuffer kmalloc failed\n");
cameraisp/dip/isp_50/camera_dip.c:		LOG_INF("copy dumpbuf::0x%p virdipbuf:0x%p is done!!\n",
cameraisp/dip/isp_50/camera_dip.c:			LOG_ERR("cmdq buffer size error, size:0x%x",
cameraisp/dip/isp_50/camera_dip.c:				LOG_ERR("g_pCmdqBuffer:0x%pK is not NULL!!",
cameraisp/dip/isp_50/camera_dip.c:				LOG_ERR("copy g_pCmdqBuffer failed\n");
cameraisp/dip/isp_50/camera_dip.c:			LOG_ERR("ERROR: g_pCmdqBuffer kmalloc failed\n");
cameraisp/dip/isp_50/camera_dip.c:		LOG_INF("copy dumpbuf::0x%p cmdqbuf:0x%p is done!!\n",
cameraisp/dip/isp_50/camera_dip.c:		LOG_ERR("error dump buffer cmd:%d", pDumpBufStruct->DumpCmd);
cameraisp/dip/isp_50/camera_dip.c:			LOG_INF("DumpBufferField:0x%x,g_bUserBufIsReady:%d!!\n",
cameraisp/dip/isp_50/camera_dip.c:		LOG_ERR("NULL pMemInfoStruct->MemVa");
cameraisp/dip/isp_50/camera_dip.c:		LOG_INF("set tpipe memory info is done!!\n");
cameraisp/dip/isp_50/camera_dip.c:		LOG_INF("set comq memory info is done!!\n");
cameraisp/dip/isp_50/camera_dip.c:		LOG_ERR("error set memory info cmd:%d",
cameraisp/dip/isp_50/camera_dip.c:		LOG_ERR("Wrong List tag(%d)\n", listTag);
cameraisp/dip/isp_50/camera_dip.c:		LOG_ERR("property err(%d)\n", param.property);
cameraisp/dip/isp_50/camera_dip.c:		LOG_ERR("property err(%d)\n", param.property);
cameraisp/dip/isp_50/camera_dip.c:		/* LOG_INF("check bf(%d_0x%x_0x%x/%d_%d)", */
cameraisp/dip/isp_50/camera_dip.c:			/* LOG_INF("check bf(%d_0x%x_0x%x / %d_%d) ", */
cameraisp/dip/isp_50/camera_dip.c:			/* LOG_INF("check bf(%d_0x%x_0x%x / %d_%d) ", */
cameraisp/dip/isp_50/camera_dip.c:		LOG_ERR("property err(%d)\n", param.property);
cameraisp/dip/isp_50/camera_dip.c:			LOG_ERR("pty(%d), F/L(%d_%d,%d), dCQ(%d,%d)\n",
cameraisp/dip/isp_50/camera_dip.c:			LOG_ERR("RF/C/L(%d,%d,%d), sts(%d,%d,%d)\n",
cameraisp/dip/isp_50/camera_dip.c:		LOG_ERR("p2 frame package list is full, enque Fail.");
cameraisp/dip/isp_50/camera_dip.c:#ifdef P2_DBG_LOG
cameraisp/dip/isp_50/camera_dip.c:			IRQ_LOG_KEEPER(DIP_IRQ_TYPE_INT_DIP_A_ST, 0, _LOG_DBG,
cameraisp/dip/isp_50/camera_dip.c:#ifdef P2_DBG_LOG
cameraisp/dip/isp_50/camera_dip.c:			IRQ_LOG_KEEPER(DIP_IRQ_TYPE_INT_DIP_A_ST, 0, _LOG_DBG,
cameraisp/dip/isp_50/camera_dip.c:		IRQ_LOG_PRINTER(DIP_IRQ_TYPE_INT_DIP_A_ST, 0, _LOG_DBG);
cameraisp/dip/isp_50/camera_dip.c:		LOG_ERR("Do not find match buffer(pty/pid/cid: %d/0x%x/0x%x)",
cameraisp/dip/isp_50/camera_dip.c:		LOG_ERR("Wait Deque fail, idx(%d), pty(%d),pID(0x%x),cID(0x%x)",
cameraisp/dip/isp_50/camera_dip.c:			LOG_ERR("be stopped, restime(%d)", restTime);
cameraisp/dip/isp_50/camera_dip.c:			LOG_DBG("dq cm(%d),pID(0x%x),cID(0x%x)\n",
cameraisp/dip/isp_50/camera_dip.c:			LOG_ERR("Match index 2 fail(%d_0x%x_0x%x_%d, %d_%d)",
cameraisp/dip/isp_50/camera_dip.c:			LOG_ERR("Match index 1 fail(%d_0x%x_0x%x_%d, %d_%d)",
cameraisp/dip/isp_50/camera_dip.c:	/*LOG_INF("DIP_P2_BUFQUE_CTRL_WAIT_FRAME, */
cameraisp/dip/isp_50/camera_dip.c:			LOG_ERR("could not find match buffer restTime(%d)",
cameraisp/dip/isp_50/camera_dip.c:			LOG_ERR("pty/pID/cID (%d/0x%x/0x%x),idx(%d)",
cameraisp/dip/isp_50/camera_dip.c:			LOG_ERR("be stopped, restime(%d)", restTime);
cameraisp/dip/isp_50/camera_dip.c:#ifdef P2_DBG_LOG
cameraisp/dip/isp_50/camera_dip.c:		LOG_INF("DIP_P2_BUFQUE_CTRL_WAIT_FRAME\n");
cameraisp/dip/isp_50/camera_dip.c:		LOG_INF("after pty/pID/cID (%d/0x%x/0x%x),idx(%d)\n",
cameraisp/dip/isp_50/camera_dip.c:#ifdef P2_DBG_LOG
cameraisp/dip/isp_50/camera_dip.c:			LOG_DBG("Frame is alreay dequeued, return user\n");
cameraisp/dip/isp_50/camera_dip.c:			LOG_DBG("pd(%d/0x%x/0x%x), idx(%d)\n",
cameraisp/dip/isp_50/camera_dip.c:				LOG_DBG("=pd(%d/0x%x/0x%x_%d)wait(%d s)=\n",
cameraisp/dip/isp_50/camera_dip.c:			LOG_ERR("Dequeue Buffer fail, rT(%d),idx(%d),pty(%d)\n",
cameraisp/dip/isp_50/camera_dip.c:			LOG_ERR("pID(0x%x),cID(0x%x)\n",
cameraisp/dip/isp_50/camera_dip.c:				LOG_ERR("be stopped, restime(%d)", restTime);
cameraisp/dip/isp_50/camera_dip.c:			LOG_DBG("Dequeue Buffer ok, rT(%d),idx(%d), pty(%d)\n",
cameraisp/dip/isp_50/camera_dip.c:			LOG_DBG("pID(0x%x), cID(0x%x)\n",
cameraisp/dip/isp_50/camera_dip.c:		LOG_ERR("do not support this ctrl cmd(%d)", param.ctrl);
cameraisp/dip/isp_50/camera_dip.c:	LOG_INF("type(%d)userKey(%d)St(0x%x)",
cameraisp/dip/isp_50/camera_dip.c:		LOG_ERR("FLUSH_IRQ: type error(%d)", irqinfo->Type);
cameraisp/dip/isp_50/camera_dip.c:		LOG_ERR("FLUSH_IRQ: userkey error(%d)",
cameraisp/dip/isp_50/camera_dip.c:	LOG_WRN("private_data is NULL,(process, pid, tgid) = (%s, %d, %d)\n",
cameraisp/dip/isp_50/camera_dip.c:			LOG_ERR("get DIP_WAKELOCK_CTRL from user fail\n");
cameraisp/dip/isp_50/camera_dip.c:					LOG_DBG("wakelock enable!!\n");
cameraisp/dip/isp_50/camera_dip.c:					LOG_DBG("wakelock disable!!\n");
cameraisp/dip/isp_50/camera_dip.c:			LOG_ERR("get hwmodule from user fail\n");
cameraisp/dip/isp_50/camera_dip.c:			LOG_ERR("copy_from_user failed\n");
cameraisp/dip/isp_50/camera_dip.c:			LOG_ERR("copy_from_user failed\n");
cameraisp/dip/isp_50/camera_dip.c:				LOG_ERR("invalid type(%d)\n", IrqInfo.Type);
cameraisp/dip/isp_50/camera_dip.c:			LOG_ERR("invalid usrKey(%d),max(%d),force usrkey = 0\n",
cameraisp/dip/isp_50/camera_dip.c:#ifdef ENABLE_WAITIRQ_LOG
cameraisp/dip/isp_50/camera_dip.c:			LOG_INF("IRQ type(%d), userKey(%d), timeout(%d)\n",
cameraisp/dip/isp_50/camera_dip.c:			LOG_INF("userkey(%d), status(%d)\n",
cameraisp/dip/isp_50/camera_dip.c:			LOG_ERR("copy_from_user failed\n");
cameraisp/dip/isp_50/camera_dip.c:		LOG_DBG("DIP_CLEAR_IRQ Type(%d)\n", ClearIrq.Type);
cameraisp/dip/isp_50/camera_dip.c:			LOG_ERR("invalid type(%d)\n", ClearIrq.Type);
cameraisp/dip/isp_50/camera_dip.c:			LOG_ERR("errUserEnum(%d)", ClearIrq.EventInfo.UserKey);
cameraisp/dip/isp_50/camera_dip.c:		LOG_DBG("DIP_CLEAR_IRQ:Type(%d),Status(0x%x),IrqStatus(0x%x)\n",
cameraisp/dip/isp_50/camera_dip.c:		LOG_ERR("copy_from_user failed\n");
cameraisp/dip/isp_50/camera_dip.c:			LOG_ERR("invalid userKey(%d), max(%d)\n",
cameraisp/dip/isp_50/camera_dip.c:			LOG_ERR("invalid type(%d), max(%d)\n",
cameraisp/dip/isp_50/camera_dip.c:			LOG_ERR("copy_from_user failed\n");
cameraisp/dip/isp_50/camera_dip.c:			/* LOG_DBG("FBC kernel debug level = %x\n", */
cameraisp/dip/isp_50/camera_dip.c:			LOG_ERR("copy_from_user failed\n");
cameraisp/dip/isp_50/camera_dip.c:			LOG_ERR("DIP_GET_DUMP_INFO copy to user fail");
cameraisp/dip/isp_50/camera_dip.c:			LOG_ERR("DIP_DUMP_BUFFER copy_from_user failed\n");
cameraisp/dip/isp_50/camera_dip.c:			LOG_ERR("DIP_SET_MEM_INFO copy_from_user failed\n");
cameraisp/dip/isp_50/camera_dip.c:		LOG_ERR("Unknown Cmd(%d)\n", Cmd);
cameraisp/dip/isp_50/camera_dip.c:	LOG_ERR("Fail, Cmd(%d), Pid(%d),(process, pid, tgid) = (%s, %d, %d)\n",
cameraisp/dip/isp_50/camera_dip.c:			LOG_INF("compat_get_dip_read_register_data error!!!\n");
cameraisp/dip/isp_50/camera_dip.c:			LOG_INF("compat_put_dip_read_register_data error!!!\n");
cameraisp/dip/isp_50/camera_dip.c:			LOG_INF("COMPAT_DIP_WRITE_REGISTER error!!!\n");
cameraisp/dip/isp_50/camera_dip.c:			LOG_INF("COMPAT_DIP_DUMP_BUFFER error!!!\n");
cameraisp/dip/isp_50/camera_dip.c:			LOG_INF("COMPAT_DIP_SET_MEM_INFO error!!!\n");
cameraisp/dip/isp_50/camera_dip.c:	LOG_DBG("- E. UserCount: %d.\n", IspInfo.UserCount);
cameraisp/dip/isp_50/camera_dip.c:	LOG_ERR("ERROR: kmalloc failed, (process, pid, tgid) = (%s, %d, %d)\n",
cameraisp/dip/isp_50/camera_dip.c:		LOG_DBG("Curr UserCount(%d)\n", IspInfo.UserCount);
cameraisp/dip/isp_50/camera_dip.c:		LOG_DBG("(process, pid, tgid) = (%s, %d, %d), users exist\n",
cameraisp/dip/isp_50/camera_dip.c:	#if (_K_LOG_ADJUST == 1)
cameraisp/dip/isp_50/camera_dip.c:		LOG_DBG("Curr UserCount(%d)\n",	IspInfo.UserCount);
cameraisp/dip/isp_50/camera_dip.c:		LOG_DBG("(process, pid, tgid)=(%s, %d, %d)\n",
cameraisp/dip/isp_50/camera_dip.c:		LOG_DBG("log_limit_line(%d), first user\n", i);
cameraisp/dip/isp_50/camera_dip.c:		LOG_DBG("Curr UserCount(%d)\n", IspInfo.UserCount);
cameraisp/dip/isp_50/camera_dip.c:		LOG_DBG("(process, pid, tgid)=(%s, %d, %d), first user\n",
cameraisp/dip/isp_50/camera_dip.c:		LOG_ERR("invalid dip_p2_ion_client client!\n");
cameraisp/dip/isp_50/camera_dip.c:	LOG_DBG("dip open G_u4DipEnClkCnt: %d\n", G_u4DipEnClkCnt);
cameraisp/dip/isp_50/camera_dip.c:#ifdef KERNEL_LOG
cameraisp/dip/isp_50/camera_dip.c:	LOG_INF("- X. Ret: %d. UserCount: %d, G_u4DipEnClkCnt: %d.\n",
cameraisp/dip/isp_50/camera_dip.c:	LOG_DBG("- E. UserCount: %d.\n", IspInfo.UserCount);
cameraisp/dip/isp_50/camera_dip.c:	/* LOG_DBG("UserCount(%d)",IspInfo.UserCount); */
cameraisp/dip/isp_50/camera_dip.c:		LOG_DBG("Curr UserCount(%d)\n", IspInfo.UserCount);
cameraisp/dip/isp_50/camera_dip.c:		LOG_DBG("(process, pid, tgid)=(%s, %d, %d), users exist\n",
cameraisp/dip/isp_50/camera_dip.c:#if (_K_LOG_ADJUST == 1)
cameraisp/dip/isp_50/camera_dip.c:	LOG_DBG("Curr UserCount(%d), (process, pid, tgid) = (%s, %d, %d)\n",
cameraisp/dip/isp_50/camera_dip.c:	LOG_DBG("log_limit_line(%d), last user\n",
cameraisp/dip/isp_50/camera_dip.c:		LOG_ERR("dip_p2_ion_client is NULL!!\n");
cameraisp/dip/isp_50/camera_dip.c:	LOG_DBG("dip release G_u4DipEnClkCnt: %d", G_u4DipEnClkCnt);
cameraisp/dip/isp_50/camera_dip.c:	LOG_INF("- X. UserCount: %d. G_u4DipEnClkCnt: %d",
cameraisp/dip/isp_50/camera_dip.c:	/*LOG_DBG("- E.");*/
cameraisp/dip/isp_50/camera_dip.c:	/*LOG_INF("DIP_mmap: vm_pgoff(0x%lx),pfn(0x%x),phy(0x%lx), */
cameraisp/dip/isp_50/camera_dip.c:		LOG_ERR("mmap range error\n");
cameraisp/dip/isp_50/camera_dip.c:		LOG_ERR("module(0x%x),length(0x%lx),DIP_REG_RANGE(0x%x)!\n",
cameraisp/dip/isp_50/camera_dip.c:		LOG_ERR("Illegal starting HW addr for mmap!\n");
cameraisp/dip/isp_50/camera_dip.c:	LOG_DBG("- E.");
cameraisp/dip/isp_50/camera_dip.c:	LOG_DBG("- E.\n");
cameraisp/dip/isp_50/camera_dip.c:		LOG_ERR("alloc_chrdev_region failed, %d\n", Ret);
cameraisp/dip/isp_50/camera_dip.c:		LOG_ERR("cdev_alloc failed\n");
cameraisp/dip/isp_50/camera_dip.c:		LOG_ERR("Attatch file operation failed, %d\n", Ret);
cameraisp/dip/isp_50/camera_dip.c:	LOG_DBG("- X.\n");
cameraisp/dip/isp_50/camera_dip.c:	LOG_INF("- E. DIP driver probe.\n");
cameraisp/dip/isp_50/camera_dip.c:		LOG_INF("pDev is NULL");
cameraisp/dip/isp_50/camera_dip.c:		LOG_INF("Unable to allocate dip_devs\n");
cameraisp/dip/isp_50/camera_dip.c:		LOG_INF("Unable to allocate dip_devs\n");
cameraisp/dip/isp_50/camera_dip.c:		LOG_INF("Unable to ioremap registers\n");
cameraisp/dip/isp_50/camera_dip.c:		LOG_INF("of_iomap fail, nr_dip_devs=%d, devnode(%s).\n",
cameraisp/dip/isp_50/camera_dip.c:	LOG_INF("nr_dip_devs=%d, devnode(%s), map_addr=0x%lx\n",
cameraisp/dip/isp_50/camera_dip.c:			LOG_INF("get irq flags from DTS fail!!\n");
cameraisp/dip/isp_50/camera_dip.c:			LOG_INF("request_irq fail\n");
cameraisp/dip/isp_50/camera_dip.c:			LOG_INF("nr_dip_devs=%d,devnode(%s),irq=%d,ISR: %s\n",
cameraisp/dip/isp_50/camera_dip.c:			LOG_INF("nr_dip_devs=%d,devnode(%s),irq=%d,ISR: %s\n",
cameraisp/dip/isp_50/camera_dip.c:			LOG_INF("No corresponding ISR!!\n");
cameraisp/dip/isp_50/camera_dip.c:			LOG_INF("nr_dip_devs=%d, devnode(%s), irq=%d\n",
cameraisp/dip/isp_50/camera_dip.c:		LOG_INF("No IRQ!!: nr_dip_devs=%d, devnode(%s), irq=%d\n",
cameraisp/dip/isp_50/camera_dip.c:			LOG_INF("register char failed");
cameraisp/dip/isp_50/camera_dip.c:			LOG_ERR("Unable to create class, err = %d\n", Ret);
cameraisp/dip/isp_50/camera_dip.c:			LOG_INF("Failed to create device: /dev/%s, err = %d",
cameraisp/dip/isp_50/camera_dip.c:			LOG_ERR("cannot get DIP_IMG_LARB5 clock\n");
cameraisp/dip/isp_50/camera_dip.c:			LOG_ERR("cannot get DIP_IMG_DIP clock\n");
cameraisp/dip/isp_50/camera_dip.c:	LOG_INF("- X. DIP driver probe.\n");
cameraisp/dip/isp_50/camera_dip.c:	LOG_DBG("- E.");
cameraisp/dip/isp_50/camera_dip.c:			LOG_INF("free father,reg_T(%d)\n", accessNode->reg_T);
cameraisp/dip/isp_50/camera_dip.c:				LOG_INF("break\n");
cameraisp/dip/isp_50/camera_dip.c:	LOG_INF("DIP suspend G_u4DipEnClkCnt: %d, g_u4DipCnt: %d",
cameraisp/dip/isp_50/camera_dip.c:	LOG_INF("DIP resume G_u4DipEnClkCnt: %d, g_u4DipCnt: %d",
cameraisp/dip/isp_50/camera_dip.c:	LOG_INF("dip p2 ke dump start!! g_bDumpPhyDIPBuf:%d\n",
cameraisp/dip/isp_50/camera_dip.c:	LOG_INF("g_bDumpPhyDIPBuf:%d, g_tdriaddr:0x%x, g_cmdqaddr:0x%x\n",
cameraisp/dip/isp_50/camera_dip.c:		LOG_INF("g_pPhyDIPBuffer:(0x%pK)\n", g_pPhyDIPBuffer);
cameraisp/dip/isp_50/camera_dip.c:	LOG_INF("dip p2 ke dump end\n");
cameraisp/dip/isp_50/camera_dip.c:LOG_INF("dip p2 ne dump start!g_bUserBufIsReady:%d, g_bIonBufferAllocated:%d\n",
cameraisp/dip/isp_50/camera_dip.c:LOG_INF("dip p2 g_bDumpPhyB:%d, tdriadd:0x%x, imgiadd:0x%x,dmgiadd:0x%x\n",
cameraisp/dip/isp_50/camera_dip.c:		LOG_INF("g_pPhyDIPBuffer:(0x%pK)\n", g_pPhyDIPBuffer);
cameraisp/dip/isp_50/camera_dip.c:	LOG_INF("dip p2 ne dump end\n");
cameraisp/dip/isp_50/camera_dip.c:	LOG_DBG("- E. Magic: %d", DIP_MAGIC);
cameraisp/dip/isp_50/camera_dip.c:		LOG_ERR("platform_driver_register fail");
cameraisp/dip/isp_50/camera_dip.c:		LOG_ERR("find mmsys_config node failed!!!\n");
cameraisp/dip/isp_50/camera_dip.c:		LOG_ERR("unable to map DIP_MMSYS_CONFIG_BASE registers!!!\n");
cameraisp/dip/isp_50/camera_dip.c:	LOG_DBG("DIP_MMSYS_CONFIG_BASE: %p\n", DIP_MMSYS_CONFIG_BASE);
cameraisp/dip/isp_50/camera_dip.c:		LOG_ERR("[%s]: fail to mkdir /proc/isp_p2\n", __func__);
cameraisp/dip/isp_50/camera_dip.c:		((DBG_PAGE + INF_PAGE + ERR_PAGE) + 1)) * LOG_PPNUM)) {
cameraisp/dip/isp_50/camera_dip.c:			((DBG_PAGE + INF_PAGE + ERR_PAGE) + 1)) * LOG_PPNUM))
cameraisp/dip/isp_50/camera_dip.c:		LOG_ERR("mem not enough\n");
cameraisp/dip/isp_50/camera_dip.c:	for (i = 0; i < LOG_PPNUM; i++) {
cameraisp/dip/isp_50/camera_dip.c:			gSvLog[j]._str[i][_LOG_DBG] = (char *)tmp;
cameraisp/dip/isp_50/camera_dip.c:			gSvLog[j]._str[i][_LOG_INF] = (char *)tmp;
cameraisp/dip/isp_50/camera_dip.c:			gSvLog[j]._str[i][_LOG_ERR] = (char *)tmp;
cameraisp/dip/isp_50/camera_dip.c:	LOG_DBG("register dip callback for MDP");
cameraisp/dip/isp_50/camera_dip.c:	LOG_DBG("register dip callback for GCE");
cameraisp/dip/isp_50/camera_dip.c:	LOG_DBG("- X. Ret: %d.", Ret);
cameraisp/dip/isp_50/camera_dip.c:	LOG_DBG("- E.");
cameraisp/dip/isp_50/camera_dip.c:	LOG_DBG("Un-register dip callback for GCE");
cameraisp/dip/isp_50/camera_dip.c:	/* LOG_DBG("DIP_MDPClockOnCallback"); */
cameraisp/dip/isp_50/camera_dip.c:	/*LOG_DBG("+MDPEn:%d", G_u4DipEnClkCnt);*/
cameraisp/dip/isp_50/camera_dip.c:	LOG_DBG("DIP_MDPDumpCallback");
cameraisp/dip/isp_50/camera_dip.c:	LOG_DBG("DIP_MDPResetCallback");
cameraisp/dip/isp_50/camera_dip.c:	/* LOG_DBG("DIP_MDPClockOffCallback"); */
cameraisp/dip/isp_50/camera_dip.c:	/*LOG_DBG("-MDPEn:%d", G_u4DipEnClkCnt);*/
cameraisp/dip/isp_50/camera_dip.c:	LOG_DBG("+,taskID(%d)", taskID);
cameraisp/dip/isp_50/camera_dip.c:	LOG_DBG("-,*regCount(%d)", *regCount);
cameraisp/dip/isp_50/camera_dip.c:	#define PER_LINE_LOG_SIZE   10
cameraisp/dip/isp_50/camera_dip.c:	/* uint32_t add[PER_LINE_LOG_SIZE]; */
cameraisp/dip/isp_50/camera_dip.c:	uint32_t add[PER_LINE_LOG_SIZE];
cameraisp/dip/isp_50/camera_dip.c:	uint32_t val[PER_LINE_LOG_SIZE];
cameraisp/dip/isp_50/camera_dip.c:	LOG_DBG("End taskID(%d),regCount(%d)", taskID, regCount);
cameraisp/dip/isp_50/camera_dip.c:	for (i = 0; i < regCount; i += PER_LINE_LOG_SIZE) {
cameraisp/dip/isp_50/camera_dip.c:		for (j = 0; j < PER_LINE_LOG_SIZE; j++) {
cameraisp/dip/isp_50/camera_dip.c:		LOG_DBG("[0x%08x,0x%08x][0x%08x,0x%08x][0x%08x,0x%08x]\n",
cameraisp/dip/isp_50/camera_dip.c:		LOG_DBG("[0x%08x,0x%08x][0x%08x,0x%08x]\n",
cameraisp/dip/isp_50/camera_dip.c:		LOG_DBG("[0x%08x,0x%08x][0x%08x,0x%08x][0x%08x,0x%08x]\n",
cameraisp/dip/isp_50/camera_dip.c:		LOG_DBG("[0x%08x,0x%08x][0x%08x,0x%08x]\n",
cameraisp/dip/isp_50/camera_dip.c:	LOG_DBG("kk:tpipePA(0x%x), ctlStart(0x%x)", tpipePA, ctlStart);
cameraisp/dip/isp_50/camera_dip.c:			LOG_ERR("invalid dip_p2_ion_client client!\n");
cameraisp/dip/isp_50/camera_dip.c:		LOG_DBG("ctlStart(0x%x),tpipePA(0x%x)", ctlStart, tpipePA);
cameraisp/dip/isp_50/camera_dip.c:				LOG_DBG("[idx(%d)]%08X-%08X-%08X-%08X-%08X",
cameraisp/dip/isp_50/camera_dip.c:				LOG_DBG("%08X-%08X-%08X-%08X-%08X\n",
cameraisp/dip/isp_50/camera_dip.c:	/*LOG_DBG("DIP_Irq_DIP_A:%d\n", Irq);*/
cameraisp/dip/isp_50/camera_dip.c:	/* LOG_DBG("DIP_Irq_DIP_A:%d, reg 0x%p : 0x%x, */
cameraisp/dip/isp_50/camera_dip.c:	IRQ_LOG_PRINTER(pWorkTable->module, m_CurrentPPB, _LOG_ERR);
cameraisp/dip/isp_50/camera_dip.c:	IRQ_LOG_PRINTER(pWorkTable->module, m_CurrentPPB, _LOG_INF);
cameraisp/dip/isp_50/camera_dip.h:#define KERNEL_LOG
cameraisp/dip/isp_50/camera_dip.h:#define ISR_LOG_ON
cameraisp/wpe/isp_50/inc/camera_wpe.h:	WPE_CMD_DUMP_ISR_LOG,     /* Dump WPE ISR log */
cameraisp/wpe/isp_50/inc/camera_wpe.h:#define WPE_DUMP_ISR_LOG    _IO(WPE_MAGIC, WPE_CMD_DUMP_ISR_LOG)
cameraisp/wpe/isp_50/camera_wpe.c:/* #define WPE_WAITIRQ_LOG  */
cameraisp/wpe/isp_50/camera_wpe.c:#define LOG_VRB(format,	args...) 
cameraisp/wpe/isp_50/camera_wpe.c:#define LOG_DBG(format, args...) 
cameraisp/wpe/isp_50/camera_wpe.c:#define LOG_DBG(format, args...)
cameraisp/wpe/isp_50/camera_wpe.c:#define LOG_INF(format, args...) 
cameraisp/wpe/isp_50/camera_wpe.c:#define LOG_NOTICE(format, args...) 
cameraisp/wpe/isp_50/camera_wpe.c:#define LOG_WRN(format, args...) 
cameraisp/wpe/isp_50/camera_wpe.c:#define LOG_ERR(format, args...) 
cameraisp/wpe/isp_50/camera_wpe.c:#define LOG_AST(format, args...) 
cameraisp/wpe/isp_50/camera_wpe.c:#define WPE_DBG_DBGLOG              (0x00000001)
cameraisp/wpe/isp_50/camera_wpe.c:#define WPE_DBG_INFLOG              (0x00000002)
cameraisp/wpe/isp_50/camera_wpe.c:enum _eLOG_TYPE {
cameraisp/wpe/isp_50/camera_wpe.c:	_LOG_DBG = 0,
cameraisp/wpe/isp_50/camera_wpe.c:	_LOG_INF = 1,
cameraisp/wpe/isp_50/camera_wpe.c:	_LOG_ERR = 2,
cameraisp/wpe/isp_50/camera_wpe.c:	_LOG_MAX = 3,
cameraisp/wpe/isp_50/camera_wpe.c:/* #define SV_LOG_STR_LEN NORMAL_STR_LEN */
cameraisp/wpe/isp_50/camera_wpe.c:#define LOG_PPNUM 2
cameraisp/wpe/isp_50/camera_wpe.c:struct SV_LOG_STR {
cameraisp/wpe/isp_50/camera_wpe.c:	unsigned int _cnt[LOG_PPNUM][_LOG_MAX];
cameraisp/wpe/isp_50/camera_wpe.c:	/* char   _str[_LOG_MAX][SV_LOG_STR_LEN]; */
cameraisp/wpe/isp_50/camera_wpe.c:	char *_str[LOG_PPNUM][_LOG_MAX];
cameraisp/wpe/isp_50/camera_wpe.c:static struct SV_LOG_STR gSvLog[WPE_IRQ_TYPE_AMOUNT];
cameraisp/wpe/isp_50/camera_wpe.c: *    for irq used,keep log until IRQ_LOG_PRINTER being involked,
cameraisp/wpe/isp_50/camera_wpe.c:#define IRQ_LOG_KEEPER(irq, ppb, logT, fmt, ...)
cameraisp/wpe/isp_50/camera_wpe.c:#define IRQ_LOG_PRINTER(irq, ppb_in, logT_in)
cameraisp/wpe/isp_50/camera_wpe.c:#define IRQ_LOG_PRINTER(irq, ppb, logT)
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_ERR
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_ERR
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG(
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_ERR(
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_ERR("Not support GCE mode.!!\n");
cameraisp/wpe/isp_50/camera_wpe.c:			/* LOG_DBG("ConfigWPE idx j:%d\n",j); */
cameraisp/wpe/isp_50/camera_wpe.c:				LOG_ERR(
cameraisp/wpe/isp_50/camera_wpe.c:			 *      LOG_ERR(
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("No any WPE Request in Ring!!\n");
cameraisp/wpe/isp_50/camera_wpe.c:			LOG_DBG("idx j:%d\n", j);
cameraisp/wpe/isp_50/camera_wpe.c:			LOG_ERR(
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("No any WPE Request in Ring!!\n");
cameraisp/wpe/isp_50/camera_wpe.c:			IRQ_LOG_KEEPER(WPE_IRQ_TYPE_INT_WPE_ST, m_CurrentPPB,
cameraisp/wpe/isp_50/camera_wpe.c:				_LOG_DBG,
cameraisp/wpe/isp_50/camera_wpe.c:					IRQ_LOG_KEEPER(WPE_IRQ_TYPE_INT_WPE_ST,
cameraisp/wpe/isp_50/camera_wpe.c:						m_CurrentPPB, _LOG_INF,
cameraisp/wpe/isp_50/camera_wpe.c:					IRQ_LOG_KEEPER(WPE_IRQ_TYPE_INT_WPE_ST,
cameraisp/wpe/isp_50/camera_wpe.c:						m_CurrentPPB, _LOG_DBG,
cameraisp/wpe/isp_50/camera_wpe.c:			IRQ_LOG_KEEPER(WPE_IRQ_TYPE_INT_WPE_ST,
cameraisp/wpe/isp_50/camera_wpe.c:					m_CurrentPPB, _LOG_ERR,
cameraisp/wpe/isp_50/camera_wpe.c:			IRQ_LOG_KEEPER(WPE_IRQ_TYPE_INT_WPE_ST,
cameraisp/wpe/isp_50/camera_wpe.c:				m_CurrentPPB, _LOG_DBG,
cameraisp/wpe/isp_50/camera_wpe.c:					IRQ_LOG_KEEPER(WPE_IRQ_TYPE_INT_WPE_ST,
cameraisp/wpe/isp_50/camera_wpe.c:						m_CurrentPPB, _LOG_INF,
cameraisp/wpe/isp_50/camera_wpe.c:					IRQ_LOG_KEEPER(WPE_IRQ_TYPE_INT_WPE_ST,
cameraisp/wpe/isp_50/camera_wpe.c:						m_CurrentPPB, _LOG_DBG,
cameraisp/wpe/isp_50/camera_wpe.c:			IRQ_LOG_KEEPER(WPE_IRQ_TYPE_INT_WPE_ST, m_CurrentPPB,
cameraisp/wpe/isp_50/camera_wpe.c:					_LOG_ERR,
cameraisp/wpe/isp_50/camera_wpe.c:	if (WPE_DBG_DBGLOG == (WPE_DBG_DBGLOG & WPEInfo.DebugMask)) {
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("ConfigWPEHW Start!\n");
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_CTL_MOD_EN:0x%x!\n", pWPEConfig->WPE_CTL_MOD_EN);
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_CTL_DMA_EN:0x%x!\n", pWPEConfig->WPE_CTL_DMA_EN);
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_CTL_CFG:0x%x!\n", pWPEConfig->WPE_CTL_CFG);
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_CTL_FMT_SEL:0x%x!\n", pWPEConfig->WPE_CTL_FMT_SEL);
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_CTL_INT_EN:0x%x!\n", pWPEConfig->WPE_CTL_INT_EN);
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_CTL_INT_STATUS:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_CTL_INT_STATUSX:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_CTL_TDR_TILE:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_CTL_TDR_DBG_STATUS:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_CTL_TDR_TCM_EN:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_CTL_SW_CTL:0x%x!\n", pWPEConfig->WPE_CTL_SW_CTL);
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_CTL_SPARE0:0x%x!\n", pWPEConfig->WPE_CTL_SPARE0);
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_CTL_SPARE1:0x%x!\n", pWPEConfig->WPE_CTL_SPARE1);
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_CTL_SPARE2:0x%x!\n", pWPEConfig->WPE_CTL_SPARE2);
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_CTL_DONE_SEL:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_CTL_DBG_SET:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_CTL_DBG_PORT:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_CTL_DATE_CODE:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_CTL_PROJ_CODE:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_CTL_WPE_DCM_DIS:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_CTL_DMA_DCM_DIS:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_CTL_WPE_DCM_STATUS:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_CTL_DMA_DCM_STATUS:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_CTL_WPE_REQ_STATUS:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_CTL_DMA_REQ_STATUS:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_CTL_WPE_RDY_STATUS:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_CTL_DMA_RDY_STATUS:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_VGEN_CTL:0x%x!\n", pWPEConfig->WPE_VGEN_CTL);
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_VGEN_IN_IMG:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_VGEN_OUT_IMG:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_VGEN_HORI_STEP:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_VGEN_VERT_STEP:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_VGEN_HORI_INT_OFST_REG :0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_VGEN_HORI_SUB_OFST:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_VGEN_VERT_INT_OFST:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_VGEN_VERT_SUB_OFST:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_VGEN_POST_CTL:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_VGEN_POST_COMP_X:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_VGEN_POST_COMP_Y:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_VGEN_MAX_VEC:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_VFIFO_CTL:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_CFIFO_CTL:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_RWCTL_CTL:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_CACHI_SPECIAL_FUN_EN:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_C24_TILE_EDGE:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_MDP_CROP_X:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_MDP_CROP_Y:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_ISPCROP_CON1:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_ISPCROP_CON2:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_PSP_CTL:0x%x!\n", pWPEConfig->WPE_PSP_CTL);
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_PSP2_CTL:0x%x!\n", pWPEConfig->WPE_PSP2_CTL);
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_ADDR_GEN_SOFT_RSTSTAT_0:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_ADDR_GEN_BASE_ADDR_0:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_ADDR_GEN_OFFSET_ADDR_0:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_ADDR_GEN_STRIDE_0:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_CACHI_CON_0:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_CACHI_CON2_0:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_CACHI_CON3_0:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_ADDR_GEN_ERR_CTRL_0:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_ADDR_GEN_ERR_STAT_0:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_ADDR_GEN_RSV1_0:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_ADDR_GEN_DEBUG_SEL_0:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_ADDR_GEN_SOFT_RSTSTAT_1:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_ADDR_GEN_BASE_ADDR_1:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_ADDR_GEN_OFFSET_ADDR_1:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_ADDR_GEN_STRIDE_1:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_CACHI_CON_1:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_CACHI_CON2_1_REG :0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_CACHI_CON3_1:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_ADDR_GEN_ERR_CTRL_1:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_ADDR_GEN_ERR_STAT_1:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_ADDR_GEN_RSV1_1:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_ADDR_GEN_DEBUG_SEL_1:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_ADDR_GEN_SOFT_RSTSTAT_2:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_ADDR_GEN_BASE_ADDR_2:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_ADDR_GEN_OFFSET_ADDR_2:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_ADDR_GEN_STRIDE_2:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_CACHI_CON_2:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_CACHI_CON2_2_REG :0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_CACHI_CON3_2:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_ADDR_GEN_ERR_CTRL_2:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_ADDR_GEN_ERR_STAT_2:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_ADDR_GEN_RSV1_2:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_ADDR_GEN_DEBUG_SEL_2:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_ADDR_GEN_SOFT_RSTSTAT_3:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_ADDR_GEN_BASE_ADDR_3:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_ADDR_GEN_OFFSET_ADDR_3:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_ADDR_GEN_STRIDE_3:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_CACHI_CON_3:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_CACHI_CON2_3_REG :0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_CACHI_CON3_3:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_ADDR_GEN_ERR_CTRL_3:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_ADDR_GEN_ERR_STAT_3:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_ADDR_GEN_RSV1_3:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_ADDR_GEN_DEBUG_SEL_3:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_DMA_SOFT_RSTSTAT:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_TDRI_BASE_ADDR:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_TDRI_OFST_ADDR:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_TDRI_XSIZE:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_VERTICAL_FLIP_EN:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_DMA_SOFT_RESET:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_LAST_ULTRA_EN:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_SPECIAL_FUN_EN:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_WPEO_BASE_ADDR:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_WPEO_OFST_ADDR:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_WPEO_XSIZE:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_WPEO_YSIZE:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_WPEO_STRIDE:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_WPEO_CON:0x%x!\n", pWPEConfig->WPE_WPEO_CON);
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_WPEO_CON2:0x%x!\n", pWPEConfig->WPE_WPEO_CON2);
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_WPEO_CON3:0x%x!\n", pWPEConfig->WPE_WPEO_CON3);
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_WPEO_CROP:0x%x!\n", pWPEConfig->WPE_WPEO_CROP);
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_MSKO_BASE_ADDR:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_MSKO_OFST_ADDR:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_MSKO_XSIZE:0x%x!\n", pWPEConfig->WPE_MSKO_XSIZE);
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_MSKO_YSIZE:0x%x!\n", pWPEConfig->WPE_MSKO_YSIZE);
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_MSKO_STRIDE:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_MSKO_CON:0x%x!\n", pWPEConfig->WPE_MSKO_CON);
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_MSKO_CON2:0x%x!\n", pWPEConfig->WPE_MSKO_CON2);
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_MSKO_CON3:0x%x!\n", pWPEConfig->WPE_MSKO_CON3);
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_MSKO_CROP:0x%x!\n", pWPEConfig->WPE_MSKO_CROP);
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_VECI_BASE_ADDR:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_VECI_OFST_ADDR:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_VECI_XSIZE:0x%x!\n", pWPEConfig->WPE_VECI_XSIZE);
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_VECI_YSIZE:0x%x!\n", pWPEConfig->WPE_VECI_YSIZE);
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_VECI_STRIDE:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_VECI_CON:0x%x!\n", pWPEConfig->WPE_VECI_CON);
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_VECI_CON2:0x%x!\n", pWPEConfig->WPE_VECI_CON2);
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_VECI_CON3:0x%x!\n", pWPEConfig->WPE_VECI_CON3);
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_VEC2I_BASE_ADDR:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_VEC2I_OFST_ADDR:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_VEC2I_XSIZE:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_VEC2I_YSIZE:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_VEC2I_STRIDE:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_VEC2I_CON:0x%x!\n", pWPEConfig->WPE_VEC2I_CON);
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_VEC2I_CON2:0x%x!\n", pWPEConfig->WPE_VEC2I_CON2);
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_VEC2I_CON3:0x%x!\n", pWPEConfig->WPE_VEC2I_CON3);
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_VEC3I_BASE_ADDR:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_VEC3I_OFST_ADDR:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_VEC3I_XSIZE:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_VEC3I_YSIZE:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_VEC3I_STRIDE:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_VEC3I_CON:0x%x!\n", pWPEConfig->WPE_VEC3I_CON);
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_VEC3I_CON2:0x%x!\n", pWPEConfig->WPE_VEC3I_CON2);
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_VEC3I_CON3:0x%x!\n", pWPEConfig->WPE_VEC3I_CON3);
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_DMA_ERR_CTRL_REG :0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_WPEO_ERR_STAT:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_MSKO_ERR_STAT:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_VECI_ERR_STAT:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_VEC2I_ERR_STAT:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_VEC3I_ERR_STAT:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_DMA_DEBUG_ADDR:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("WPE_DMA_DEBUG_SEL:0x%x!\n",
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_INF("- E.");
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_INF("WPE Config Info\n");
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_INF("[0x%08X %08X] [0x%08X %08X] [0x%08X %08X] [0x%08X %08X]\n",
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_INF("[0x%08X %08X] [0x%08X %08X] [0x%08X %08X] [0x%08X %08X]\n",
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_INF(
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_INF("[0x%08X %08X] [0x%08X %08X] [0x%08X %08X] [0x%08X %08X]\n",
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_INF("[0x%08X %08X] [0x%08X %08X] [0x%08X %08X] [0x%08X %08X]\n",
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_INF("[0x%08X %08X] [0x%08X %08X] [0x%08X %08X] [0x%08X %08X]\n",
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_INF("[0x%08X %08X] [0x%08X %08X] [0x%08X %08X] [0x%08X %08X]\n",
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_INF(
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_INF(
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_INF(
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_INF(
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_INF(
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_INF("[0x%08X %08X] [0x%08X %08X] [0x%08X %08X] [0x%08X %08X]\n",
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_INF(
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_INF("[0x%08X %08X] [0x%08X %08X] [0x%08X %08X] [0x%08X %08X]\n",
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_INF("[0x%08X %08X] [0x%08X %08X] [0x%08X %08X] [0x%08X %08X]\n",
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_INF("[0x%08X %08X] [0x%08X %08X] [0x%08X %08X] [0x%08X %08X]\n",
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_INF("[0x%08X %08X] [0x%08X %08X] [0x%08X %08X] [0x%08X %08X]\n",
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_INF(
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_INF(
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_INF(
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_INF(
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_INF(
cameraisp/wpe/isp_50/camera_wpe.c:			LOG_INF(
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_INF("- X.");
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_ERR("cannot prepare CG_IMGSYS_WPE_A clock\n");
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_ERR("cannot prepare CG_IMGSYS_WPE_B clock\n");
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_ERR("cannot prepare CG_IMGSYS_WPE_A clock\n");
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_ERR("cannot prepare CG_IMGSYS_WPE_B clock\n");
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_ERR("cannot prepare CG_IMGSYS_WPE_A clock\n");
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_ERR("cannot prepare CG_IMGSYS_WPE_B clock\n");
cameraisp/wpe/isp_50/camera_wpe.c:		/* LOG_DBG("Dpe clock enbled. g_u4EnableClockCount: %d."*/
cameraisp/wpe/isp_50/camera_wpe.c:		/* LOG_DBG("Dpe clock disabled. g_u4EnableClockCount: %d.",*/
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_INF("- E.");
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_INF(" WPE Reset start!\n");
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_INF("Curr UserCount(%d) users exist", WPEInfo.UserCount);
cameraisp/wpe/isp_50/camera_wpe.c:			LOG_INF("WPE A resetting...\n");
cameraisp/wpe/isp_50/camera_wpe.c:			LOG_INF("WPE B resetting...\n");
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_INF(" WPE Reset end!\n");
cameraisp/wpe/isp_50/camera_wpe.c:			LOG_ERR("get_user failed");
cameraisp/wpe/isp_50/camera_wpe.c:			LOG_ERR(
cameraisp/wpe/isp_50/camera_wpe.c:		/* LOG_ERR("[KernelRDReg]addr(0x%x),value()0x%x\n",*/
cameraisp/wpe/isp_50/camera_wpe.c:			LOG_ERR("put_user failed");
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("- E.\n");
cameraisp/wpe/isp_50/camera_wpe.c:			LOG_DBG("Addr(0x%lx), Val(0x%x)\n",
cameraisp/wpe/isp_50/camera_wpe.c:			LOG_ERR("wrong address(0x%lx)\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_ERR(
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("Data(0x%p), Count(%d)\n",
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG(
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_ERR("copy_from_user failed\n");
cameraisp/wpe/isp_50/camera_wpe.c:				LOG_ERR(
cameraisp/wpe/isp_50/camera_wpe.c:		/* LOG_DBG("WARNING: Clear(%d), Type(%d):
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_ERR(
cameraisp/wpe/isp_50/camera_wpe.c:#ifdef WPE_WAITIRQ_LOG
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_INF(
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_INF(
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_INF(
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG(
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_ERR(
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_ERR(
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_ERR(
cameraisp/wpe/isp_50/camera_wpe.c:				LOG_ERR(
cameraisp/wpe/isp_50/camera_wpe.c:#ifdef WPE_WAITIRQ_LOG
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_INF(
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_INF(
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_INF(
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_DBG("WPE:WPE_GetFrameState\n");
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_DBG("WPE: Leave WPE_GetFrameState\n");
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_ERR(
cameraisp/wpe/isp_50/camera_wpe.c:	case WPE_DUMP_ISR_LOG:
cameraisp/wpe/isp_50/camera_wpe.c:			m_CurrentPPB = (m_CurrentPPB + 1) % LOG_PPNUM;
cameraisp/wpe/isp_50/camera_wpe.c:			IRQ_LOG_PRINTER(WPE_IRQ_TYPE_INT_WPE_ST,
cameraisp/wpe/isp_50/camera_wpe.c:				currentPPB, _LOG_INF);
cameraisp/wpe/isp_50/camera_wpe.c:			IRQ_LOG_PRINTER(WPE_IRQ_TYPE_INT_WPE_ST,
cameraisp/wpe/isp_50/camera_wpe.c:				currentPPB, _LOG_ERR);
cameraisp/wpe/isp_50/camera_wpe.c:				LOG_ERR(
cameraisp/wpe/isp_50/camera_wpe.c:				LOG_ERR(
cameraisp/wpe/isp_50/camera_wpe.c:					LOG_ERR("invalid type(%d)",
cameraisp/wpe/isp_50/camera_wpe.c:					LOG_ERR(
cameraisp/wpe/isp_50/camera_wpe.c:				LOG_INF(
cameraisp/wpe/isp_50/camera_wpe.c:					LOG_ERR("copy_to_user failed\n");
cameraisp/wpe/isp_50/camera_wpe.c:				LOG_ERR("WPE_WAIT_IRQ copy_from_user failed");
cameraisp/wpe/isp_50/camera_wpe.c:				LOG_DBG("WPE_CLEAR_IRQ Type(%d)",
cameraisp/wpe/isp_50/camera_wpe.c:					LOG_ERR("invalid type(%d)",
cameraisp/wpe/isp_50/camera_wpe.c:					LOG_ERR("errUserEnum(%d)",
cameraisp/wpe/isp_50/camera_wpe.c:				LOG_DBG(
cameraisp/wpe/isp_50/camera_wpe.c:				LOG_ERR(
cameraisp/wpe/isp_50/camera_wpe.c:						LOG_ERR(
cameraisp/wpe/isp_50/camera_wpe.c:					LOG_DBG("WPE_ENQNUE_NUM:%d\n",
cameraisp/wpe/isp_50/camera_wpe.c:					LOG_ERR(
cameraisp/wpe/isp_50/camera_wpe.c:				LOG_ERR(
cameraisp/wpe/isp_50/camera_wpe.c:				/* LOG_DBG("WPE_CLEAR_IRQ:
cameraisp/wpe/isp_50/camera_wpe.c:						LOG_DBG("WPE enque done!!\n");
cameraisp/wpe/isp_50/camera_wpe.c:						LOG_DBG("WPE enque frame!!\n");
cameraisp/wpe/isp_50/camera_wpe.c:					LOG_ERR(
cameraisp/wpe/isp_50/camera_wpe.c:				LOG_INF("ConfigWPE!!\n");
cameraisp/wpe/isp_50/camera_wpe.c:					LOG_DBG("ConfigWPE\n");
cameraisp/wpe/isp_50/camera_wpe.c:					LOG_INF("WPE HW is busy!!\n");
cameraisp/wpe/isp_50/camera_wpe.c:				LOG_ERR("WPE_WPE_ENQ copy_from_user failed\n");
cameraisp/wpe/isp_50/camera_wpe.c:				LOG_DBG(
cameraisp/wpe/isp_50/camera_wpe.c:					LOG_ERR(
cameraisp/wpe/isp_50/camera_wpe.c:					LOG_ERR(
cameraisp/wpe/isp_50/camera_wpe.c:					LOG_INF(
cameraisp/wpe/isp_50/camera_wpe.c:					LOG_ERR(
cameraisp/wpe/isp_50/camera_wpe.c:				LOG_DBG("ConfigWPE Request!!\n");
cameraisp/wpe/isp_50/camera_wpe.c:				LOG_ERR(
cameraisp/wpe/isp_50/camera_wpe.c:				LOG_DBG("WPE_DEQUE_NUM(%d)\n", dequeNum);
cameraisp/wpe/isp_50/camera_wpe.c:				LOG_ERR(
cameraisp/wpe/isp_50/camera_wpe.c:				LOG_ERR(
cameraisp/wpe/isp_50/camera_wpe.c:					LOG_DBG("WPE ReadIdx(%d)\n",
cameraisp/wpe/isp_50/camera_wpe.c:					LOG_ERR(
cameraisp/wpe/isp_50/camera_wpe.c:				LOG_ERR(
cameraisp/wpe/isp_50/camera_wpe.c:					LOG_DBG("WPE_DEQUE_NUM(%d)\n",
cameraisp/wpe/isp_50/camera_wpe.c:					LOG_ERR(
cameraisp/wpe/isp_50/camera_wpe.c:						LOG_ERR(
cameraisp/wpe/isp_50/camera_wpe.c:				LOG_DBG(
cameraisp/wpe/isp_50/camera_wpe.c:					LOG_ERR(
cameraisp/wpe/isp_50/camera_wpe.c:					LOG_ERR(
cameraisp/wpe/isp_50/camera_wpe.c:				LOG_ERR(
cameraisp/wpe/isp_50/camera_wpe.c:					LOG_DBG(
cameraisp/wpe/isp_50/camera_wpe.c:					LOG_ERR(
cameraisp/wpe/isp_50/camera_wpe.c:						LOG_ERR(
cameraisp/wpe/isp_50/camera_wpe.c:				LOG_INF(
cameraisp/wpe/isp_50/camera_wpe.c:					LOG_ERR(
cameraisp/wpe/isp_50/camera_wpe.c:					LOG_ERR(
cameraisp/wpe/isp_50/camera_wpe.c:				LOG_ERR(
cameraisp/wpe/isp_50/camera_wpe.c:				LOG_DBG(
cameraisp/wpe/isp_50/camera_wpe.c:				LOG_ERR(
cameraisp/wpe/isp_50/camera_wpe.c:			LOG_DBG("WPE_wait_event_interruptible_timeout\n");
cameraisp/wpe/isp_50/camera_wpe.c:				LOG_ERR("WPE_WAIT_DEQUE failed\n");
cameraisp/wpe/isp_50/camera_wpe.c:			LOG_ERR("Unknown Cmd(%d)", Cmd);
cameraisp/wpe/isp_50/camera_wpe.c:			LOG_ERR(
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_ERR(
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_ERR("no f_op !!!\n");
cameraisp/wpe/isp_50/camera_wpe.c:				LOG_INF(
cameraisp/wpe/isp_50/camera_wpe.c:				LOG_INF(
cameraisp/wpe/isp_50/camera_wpe.c:				LOG_INF("COMPAT_WPE_WRITE_REGISTER error!!!\n");
cameraisp/wpe/isp_50/camera_wpe.c:				LOG_INF("COMPAT_WPE_WPE_ENQUE_REQ error!!!\n");
cameraisp/wpe/isp_50/camera_wpe.c:				LOG_INF("COMPAT_WPE_WPE_ENQUE_REQ error!!!\n");
cameraisp/wpe/isp_50/camera_wpe.c:				LOG_INF("COMPAT_WPE_WPE_DEQUE_REQ error!!!\n");
cameraisp/wpe/isp_50/camera_wpe.c:				LOG_INF("COMPAT_WPE_WPE_DEQUE_REQ error!!!\n");
cameraisp/wpe/isp_50/camera_wpe.c:				LOG_INF("COMPAT_WPE_WPE_DEQUE_DONE error!!!\n");
cameraisp/wpe/isp_50/camera_wpe.c:				LOG_INF("COMPAT_WPE_WPE_DEQUE_REQ error!!!\n");
cameraisp/wpe/isp_50/camera_wpe.c:	case WPE_DUMP_ISR_LOG:
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_DBG("- E. UserCount: %d.", WPEInfo.UserCount);
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG(
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG(
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG(
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_INF("WPE open g_u4EnableClockCount: %d", g_u4EnableClockCount);
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_DBG("- X. Ret: %d. UserCount: %d.", Ret, WPEInfo.UserCount);
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_DBG("- E. UserCount: %d.", WPEInfo.UserCount);
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG(
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_DBG(
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_INF("WPE release g_u4EnableClockCount: %d", g_u4EnableClockCount);
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_DBG("- X. UserCount: %d.", WPEInfo.UserCount);
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_INF("mmap:pVma->vm_pgoff(0x%lx),pfn(0x%x),phy(0x%lx)\n",
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_INF(
cameraisp/wpe/isp_50/camera_wpe.c:			LOG_ERR(
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_ERR("Illegal starting HW addr for mmap!");
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_DBG("- E.");
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_DBG("- E.");
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_ERR("alloc_chrdev_region failed, %d", Ret);
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_ERR("cdev_alloc failed");
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_ERR("Attatch file operation failed, %d", Ret);
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_DBG("- X.");
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_INF("- E. WPE driver probe.");
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_ERR(&pDev->dev, "[ERROR]pDev is NULL");
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_ERR(&pDev->dev, "[ERROR]Unable to allocate WPE_devs\n");
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_ERR(&pDev->dev,
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_INF("nr_WPE_devs=%d, devnode(%s), map_addr=0x%lx\n", nr_WPE_devs,
cameraisp/wpe/isp_50/camera_wpe.c:			LOG_ERR(&pDev->dev, "get irq flags from DTS fail!!\n");
cameraisp/wpe/isp_50/camera_wpe.c:					LOG_ERR(&pDev->dev,
cameraisp/wpe/isp_50/camera_wpe.c:				LOG_INF(
cameraisp/wpe/isp_50/camera_wpe.c:			LOG_INF(
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_INF("No IRQ!!: nr_WPE_devs=%d, devnode(%s), irq=%d\n",
cameraisp/wpe/isp_50/camera_wpe.c:			LOG_ERR(&pDev->dev, "[ERROR]register char failed");
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_INF("devm_clk_get WPE_CLK_IMG_WPE_A");
cameraisp/wpe/isp_50/camera_wpe.c:			LOG_ERR("cannot get CG_IMGSYS_WPE_A clock\n");
cameraisp/wpe/isp_50/camera_wpe.c:			LOG_ERR("Unable to create class, err = %d", Ret);
cameraisp/wpe/isp_50/camera_wpe.c:			LOG_ERR(&pDev->dev,
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_INF("devm_clk_get WPE_CLK_IMG_WPE_B");
cameraisp/wpe/isp_50/camera_wpe.c:			LOG_ERR("cannot get CG_IMGSYS_WPE_B clock\n");
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_INF("- X. WPE driver probe.");
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_DBG("- E.");
cameraisp/wpe/isp_50/camera_wpe.c:			LOG_INF("free father,reg_T(%d)\n", accessNode->reg_T);
cameraisp/wpe/isp_50/camera_wpe.c:				LOG_INF("break\n");
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_DBG("bPass1_On_In_Resume_TG1(%d)\n", bPass1_On_In_Resume_TG1);
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_DBG("bPass1_On_In_Resume_TG1(%d).\n", bPass1_On_In_Resume_TG1);
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_DBG("calling %s()\n", __func__);
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_DBG("WPE suspend g_u4EnableClockCount: %d, g_u4WpeCnt: %d",
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_DBG("calling %s()\n", __func__);
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_DBG("WPE resume g_u4EnableClockCount: %d, g_u4WpeCnt: %d",
cameraisp/wpe/isp_50/camera_wpe.c:				LOG_ERR("scan decimal addr is wrong !!:%s",
cameraisp/wpe/isp_50/camera_wpe.c:					LOG_ERR(
cameraisp/wpe/isp_50/camera_wpe.c:				LOG_INF("WPE Write Addr Error!!:%s", addrSzBuf);
cameraisp/wpe/isp_50/camera_wpe.c:				LOG_ERR(
cameraisp/wpe/isp_50/camera_wpe.c:					LOG_ERR(
cameraisp/wpe/isp_50/camera_wpe.c:				LOG_INF("WPE Write Value Error!!:%s\n",
cameraisp/wpe/isp_50/camera_wpe.c:			LOG_INF("Write Request - addr:0x%x, value:0x%x\n",
cameraisp/wpe/isp_50/camera_wpe.c:			LOG_INF(
cameraisp/wpe/isp_50/camera_wpe.c:				LOG_ERR("scan decimal addr is wrong !!:%s",
cameraisp/wpe/isp_50/camera_wpe.c:					LOG_ERR(
cameraisp/wpe/isp_50/camera_wpe.c:				LOG_INF("WPE Read Addr Error!!:%s", addrSzBuf);
cameraisp/wpe/isp_50/camera_wpe.c:			LOG_INF("Read Request - addr:0x%x,value:0x%x\n",
cameraisp/wpe/isp_50/camera_wpe.c:			LOG_INF(
cameraisp/wpe/isp_50/camera_wpe.c:	/* LOG_DBG("WPE_ClockOnCallback"); */
cameraisp/wpe/isp_50/camera_wpe.c:	/* LOG_DBG("+CmdqEn:%d", g_u4EnableClockCount); */
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_DBG("DumpCallback");
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_DBG("ResetCallback");
cameraisp/wpe/isp_50/camera_wpe.c:	/* LOG_DBG("WPE_ClockOffCallback"); */
cameraisp/wpe/isp_50/camera_wpe.c:	/* LOG_DBG("-CmdqEn:%d", g_u4EnableClockCount); */
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_INF("- E.");
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_ERR("platform_driver_register fail");
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_ERR("find mediatek,WPE node failed!!!\n");
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_ERR("unable to map ISP_WPE_BASE registers!!!\n");
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_DBG("ISP_WPE_BASE: %lx\n", ISP_WPE_BASE);
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_ERR("[%s]: fail to mkdir /proc/wpe\n", __func__);
cameraisp/wpe/isp_50/camera_wpe.c:	    ((DBG_PAGE + INF_PAGE + ERR_PAGE) + 1)) * LOG_PPNUM)) {
cameraisp/wpe/isp_50/camera_wpe.c:			 LOG_PPNUM)) {
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_ERR("log mem not enough\n");
cameraisp/wpe/isp_50/camera_wpe.c:	for (i = 0; i < LOG_PPNUM; i++) {
cameraisp/wpe/isp_50/camera_wpe.c:			gSvLog[j]._str[i][_LOG_DBG] = (char *)tmp;
cameraisp/wpe/isp_50/camera_wpe.c:			gSvLog[j]._str[i][_LOG_INF] = (char *)tmp;
cameraisp/wpe/isp_50/camera_wpe.c:			gSvLog[j]._str[i][_LOG_ERR] = (char *)tmp;
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_DBG("register wpe callback for CMDQ");
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_DBG("- X. Ret: %d.", Ret);
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_DBG("- E.");
cameraisp/wpe/isp_50/camera_wpe.c:	if (WPE_DBG_DBGLOG & WPEInfo.DebugMask)
cameraisp/wpe/isp_50/camera_wpe.c:		LOG_DBG("- E.");
cameraisp/wpe/isp_50/camera_wpe.c:	LOG_INF("WPE INTERRUPT Handler reads WPE_INT_STATUS(0x%x)\n",
cameraisp/wpe/isp_50/camera_wpe.c:				IRQ_LOG_KEEPER(WPE_IRQ_TYPE_INT_WPE_ST,
cameraisp/wpe/isp_50/camera_wpe.c:					m_CurrentPPB, _LOG_ERR,
cameraisp/wpe/isp_50/camera_wpe.c:	IRQ_LOG_KEEPER(WPE_IRQ_TYPE_INT_WPE_ST, m_CurrentPPB, _LOG_INF,
cameraisp/wpe/isp_50/camera_wpe.c:	/* IRQ_LOG_KEEPER(WPE_IRQ_TYPE_INT_WPE_ST, m_CurrentPPB, _LOG_INF,
cameraisp/wpe/isp_50/camera_wpe.c:	IRQ_LOG_PRINTER(WPE_IRQ_TYPE_INT_WPE_ST, m_CurrentPPB, _LOG_DBG);
cameraisp/wpe/isp_50/camera_wpe.c:	IRQ_LOG_PRINTER(WPE_IRQ_TYPE_INT_WPE_ST, m_CurrentPPB, _LOG_INF);
cameraisp/wpe/isp_50/camera_wpe.c:	IRQ_LOG_PRINTER(WPE_IRQ_TYPE_INT_WPE_ST, m_CurrentPPB, _LOG_ERR);
cmdq/v3/cmdq_record.c:		CMDQ_LOG(
cmdq/v3/cmdq_record.c:			cmdq_append_command_pkt(handle->pkt, CMDQ_CODE_LOGIC,
cmdq/v3/cmdq_record.c:				(4 << 21) | (CMDQ_LOGIC_ASSIGN << 16) |
cmdq/v3/cmdq_record.c:		CMDQ_LOG("Can not find the offset of desired instruction\n");
cmdq/v3/cmdq_record.c:		CMDQ_LOG("REC: not enough SRAM:%u to create delay:%zu\n",
cmdq/v3/cmdq_record.c:	CMDQ_LOG("overwrite delay function with cpr_offset = %u\n",
cmdq/v3/cmdq_record.c:	CMDQ_VARIABLE *arg_a, CMDQ_VARIABLE arg_b, enum CMDQ_LOGIC_ENUM s_op,
cmdq/v3/cmdq_record.c:		cmdq_append_command_pkt(handle->pkt, CMDQ_CODE_LOGIC,
cmdq/v3/cmdq_record.c:		CMDQ_LOGIC_ASSIGN, arg_c);
cmdq/v3/cmdq_record.c:		CMDQ_LOGIC_ADD, arg_c);
cmdq/v3/cmdq_record.c:		CMDQ_LOGIC_SUBTRACT, arg_c);
cmdq/v3/cmdq_record.c:		CMDQ_LOGIC_MULTIPLY, arg_c);
cmdq/v3/cmdq_record.c:		CMDQ_LOGIC_XOR, arg_c);
cmdq/v3/cmdq_record.c:		CMDQ_LOGIC_NOT, 0);
cmdq/v3/cmdq_record.c:		CMDQ_LOGIC_OR, arg_c);
cmdq/v3/cmdq_record.c:		CMDQ_LOGIC_AND, arg_c);
cmdq/v3/cmdq_record.c:		CMDQ_LOGIC_LEFT_SHIFT, arg_c);
cmdq/v3/cmdq_record.c:		CMDQ_LOGIC_RIGHT_SHIFT, arg_c);
cmdq/v3/cmdq_record.c:		if (op != CMDQ_CODE_LOGIC || op_jump !=
cmdq/v3/cmdq_sec_gp.c:	CMDQ_LOG("[SEC]TEE is ready\n");
cmdq/v3/cmdq_sec_gp.c:		CMDQ_LOG("[WARN][SEC]allocate_wsm: err:0x%x size:%u\n",
cmdq/v3/cmdq_sec_gp.c:		CMDQ_LOG("[SEC]allocate_wsm: status:0x%x wsm:0x%p size:%u\n",
cmdq/v3/cmdq_sec_gp.c:		CMDQ_LOG("[WARN][SEC]allocate_wsm: err:0x%x size_ex:%u\n",
cmdq/v3/cmdq_sec_gp.c:		CMDQ_LOG("[SEC]allocate_wsm: status:0x%x wsm:0x%p size ex:%u\n",
cmdq/v3/cmdq_sec_gp.c:		TEEC_LOGIN_PUBLIC, NULL, NULL, &ret_origin);
cmdq/v3/cmdq_def.h:#ifdef CONFIG_FUCK_MTK_LOG
cmdq/v3/cmdq_sec.c:	CMDQ_LOG("FILL:CANCEL_TASK: task:0x%p thread:%d cookie:%d\n",
cmdq/v3/cmdq_sec.c:	cmdq_pkt_logic_command(task->pkt, CMDQ_LOGIC_ADD, CMDQ_THR_SPR_IDX1,
cmdq/v3/cmdq_sec.c:		CMDQ_LOG(
cmdq/v3/cmdq_sec.c:	CMDQ_LOG("%s\n", __func__);
cmdq/v3/cmdq_sec.c:				CMDQ_LOG(
cmdq/v3/cmdq_sec.c:				CMDQ_LOG("task_list[%d]]:0x%p\n", i, task);
cmdq/v3/cmdq_sec.c:		CMDQ_LOG("secure thread irq:%d\n", bit);
cmdq/v3/cmdq_sec.c:	CMDQ_LOG("%s enter", __func__);
cmdq/v3/cmdq_helper_ext.c:	case CMDQ_CODE_LOGIC:
cmdq/v3/cmdq_helper_ext.c:	case CMDQ_CODE_LOGIC:
cmdq/v3/cmdq_helper_ext.c:	CMDQ_LOG("%s notifier:0x%p\n", __func__, notifier);
cmdq/v3/cmdq_helper_ext.c:	case CMDQ_CODE_LOGIC:
cmdq/v3/cmdq_helper_ext.c:		return "LOGIC";
cmdq/v3/cmdq_helper_ext.c:	case CMDQ_LOGIC_ASSIGN:
cmdq/v3/cmdq_helper_ext.c:	case CMDQ_LOGIC_ADD:
cmdq/v3/cmdq_helper_ext.c:	case CMDQ_LOGIC_SUBTRACT:
cmdq/v3/cmdq_helper_ext.c:	case CMDQ_LOGIC_MULTIPLY:
cmdq/v3/cmdq_helper_ext.c:	case CMDQ_LOGIC_XOR:
cmdq/v3/cmdq_helper_ext.c:	case CMDQ_LOGIC_NOT:
cmdq/v3/cmdq_helper_ext.c:	case CMDQ_LOGIC_OR:
cmdq/v3/cmdq_helper_ext.c:	case CMDQ_LOGIC_AND:
cmdq/v3/cmdq_helper_ext.c:	case CMDQ_LOGIC_LEFT_SHIFT:
cmdq/v3/cmdq_helper_ext.c:	case CMDQ_LOGIC_RIGHT_SHIFT:
cmdq/v3/cmdq_helper_ext.c:	case CMDQ_CODE_LOGIC:
cmdq/v3/cmdq_helper_ext.c:			if (s_op == CMDQ_LOGIC_ASSIGN) {
cmdq/v3/cmdq_helper_ext.c:			} else if (s_op == CMDQ_LOGIC_NOT) {
cmdq/v3/cmdq_helper_ext.c:	bool logLevel = (cmdq_ctx.logLevel & (1 << CMDQ_LOG_LEVEL_MSG)) ?
cmdq/v3/cmdq_helper_ext.c:		(1 << CMDQ_LOG_LEVEL_FULL_ERROR)) ? (1) : (0);
cmdq/v3/cmdq_helper_ext.c:	return cmdq_ctx.logLevel & (1 << CMDQ_LOG_LEVEL_PMQOS);
cmdq/v3/cmdq_helper_ext.c:	return cmdq_ctx.logLevel & (1 << CMDQ_LOG_LEVEL_SECURE);
cmdq/v3/cmdq_helper_ext.c:		CMDQ_LOG(
cmdq/v3/cmdq_helper_ext.c:		CMDQ_LOG("======Dump SRAM: size (%d) SRAM command START\n",
cmdq/v3/cmdq_helper_ext.c:		CMDQ_LOG("======Dump SRAM command END\n");
cmdq/v3/cmdq_helper_ext.c:			CMDQ_LOG(
cmdq/v3/cmdq_helper_ext.c:			CMDQ_LOG(
cmdq/v3/cmdq_helper_ext.c:		CMDQ_LOG(
cmdq/v3/cmdq_helper_ext.c:		CMDQ_LOG(
cmdq/v3/cmdq_helper_ext.c:		CMDQ_LOG(
cmdq/v3/cmdq_helper_ext.c:		CMDQ_LOG(
cmdq/v3/cmdq_helper_ext.c:		CMDQ_LOG(
cmdq/v3/cmdq_helper_ext.c:			CMDQ_LOG(
cmdq/v3/cmdq_helper_ext.c:			CMDQ_LOG("[DelayThread]sram task size:%u free:%u\n",
cmdq/v3/cmdq_helper_ext.c:	CMDQ_LOG(
cmdq/v3/cmdq_helper_ext.c:	CMDQ_LOG("[DTS] Prefetch Thread Count:%d/%u\n",
cmdq/v3/cmdq_helper_ext.c:	CMDQ_LOG("[DTS] Prefetch Size of Thread:\n");
cmdq/v3/cmdq_helper_ext.c:		CMDQ_LOG("	Thread[%d]:%d\n",
cmdq/v3/cmdq_helper_ext.c:	CMDQ_LOG("Enable GCE Ultra ability");
cmdq/v3/cmdq_helper_ext.c:	CMDQ_LOG("Set AddOn Subsys:msb:0x%08x mask:0x%08x id:%d\n",
cmdq/v3/cmdq_helper_ext.c:	if (value == CMDQ_LOG_LEVEL_NORMAL) {
cmdq/v3/cmdq_helper_ext.c:		/* Only print CMDQ ERR and CMDQ LOG */
cmdq/v3/cmdq_helper_ext.c:		cmdq_ctx.logLevel = CMDQ_LOG_LEVEL_NORMAL;
cmdq/v3/cmdq_helper_ext.c:	} else if (value < CMDQ_LOG_LEVEL_MAX) {
cmdq/v3/cmdq_helper_ext.c:		if (value < 0 || value > CMDQ_LOG_LEVEL_MAX)
cmdq/v3/cmdq_helper_ext.c:		CMDQ_LOG("Record:%s\n", buf);
cmdq/v3/cmdq_helper_ext.c:			CMDQ_LOG(
cmdq/v3/cmdq_helper_ext.c:	CMDQ_LOG("%s engine:0x%llx\n", __func__, engine_flag);
cmdq/v3/cmdq_helper_ext.c:	if ((p_cmd_assign[1] >> 24) == CMDQ_CODE_LOGIC &&
cmdq/v3/cmdq_helper_ext.c:		CMDQ_LOGIC_ASSIGN &&
cmdq/v3/cmdq_helper_ext.c:		CMDQ_LOG("overwrite: original index:%d, change to PA:%pa\n",
cmdq/v3/cmdq_helper_ext.c:	if ((p_cmd_logic[1] >> 24) == CMDQ_CODE_LOGIC &&
cmdq/v3/cmdq_helper_ext.c:		((p_cmd_logic[1] >> 16) & 0x1F) == CMDQ_LOGIC_ASSIGN) {
cmdq/v3/cmdq_helper_ext.c:		CMDQ_LOG(
cmdq/v3/cmdq_helper_ext.c:	CMDQ_LOG("%s usage:%d exec thread:0x%x\n",
cmdq/v3/cmdq_helper_ext.c:		CMDQ_LOG(
cmdq/v3/cmdq_helper_ext.c:			CMDQ_LOG("loop task finish:0x%p pkt:0x%p\n",
cmdq/v3/cmdq_helper_ext.c:		CMDQ_LOG(
cmdq/v3/cmdq_helper_ext.c:				CMDQ_LOG(
cmdq/v3/cmdq_helper_ext.c:		CMDQ_LOG("chan %d 0x%p dev:0x%p\n",
cmdq/v3/cmdq_helper_ext.c:	CMDQ_LOG("available thread pool:%s max:%u\n",
cmdq/v3/cmdq_helper_ext.c:			CMDQ_LOG(
cmdq/v3/cmdq_helper_ext.c:	CMDQ_LOG("CMDQ driver late init begin\n");
cmdq/v3/cmdq_test.c:		CMDQ_LOG("=============== INIFINITE Wait ===============\n");
cmdq/v3/cmdq_test.c:		CMDQ_LOG("=============== INIFINITE JUMP ===============\n");
cmdq/v3/cmdq_test.c:		CMDQ_LOG("=============== POLL INIFINITE ===============\n");
cmdq/v3/cmdq_test.c:		CMDQ_LOG("=============== INVALID INSTR ===============\n");
cmdq/v3/cmdq_test.c:		CMDQ_LOG("======= INVALID INSTR: UNKNOWN OP(0x%x) =======\n",
cmdq/v3/cmdq_test.c:	CMDQ_LOG("callback() with data=0x%08lx\n", data);
cmdq/v3/cmdq_test.c:		CMDQ_LOG("create pkt:%2d 0x%p done thread:%d\n",
cmdq/v3/cmdq_test.c:		CMDQ_LOG("======== wait task[%2d] 0x%p ========\n",
cmdq/v3/cmdq_test.c:	CMDQ_LOG("%s start loop thread:%d handle:0x%p pkt:0x%p\n",
cmdq/v3/cmdq_test.c:	CMDQ_LOG("%s stop timer\n", __func__);
cmdq/v3/cmdq_test.c:	CMDQ_LOG("handle:0x%p buf size:%zu size:%zu avail:%zu\n",
cmdq/v3/cmdq_test.c:	CMDQ_LOG("handle:0x%p buf size:%zu size:%zu avail:%zu\n",
cmdq/v3/cmdq_test.c:			CMDQ_LOG("%s, timeout case in secure path\n",
cmdq/v3/cmdq_test.c:	CMDQ_LOG("MSDC_VA_BASE:  VA:0x%lx, PA:%pa\n", MSDC_VA_BASE,
cmdq/v3/cmdq_test.c:	CMDQ_LOG("AUDIO_VA_BASE: VA:0x%lx, PA:%pa\n", AUDIO_VA_BASE,
cmdq/v3/cmdq_test.c:	CMDQ_LOG("UART0: VA:0x%lx, PA:%pa\n", UART0_VA_BASE, &UART0_PA_BASE);
cmdq/v3/cmdq_test.c:		CMDQ_LOG("TEST SUCCESS: MSDC_SW_DBG_OUT 0x%08x == 0x%08x\n",
cmdq/v3/cmdq_test.c:		CMDQ_LOG(
cmdq/v3/cmdq_test.c:	CMDQ_LOG("Before AUDIO_VA = 0x%08x=====\n", data);
cmdq/v3/cmdq_test.c:	CMDQ_LOG("after AUDIO_VA = 0x%08x=====\n", data);
cmdq/v3/cmdq_test.c:		CMDQ_LOG("TEST SUCCESS: AUDIO_VA 0x%08x == 0x%08x\n",
cmdq/v3/cmdq_test.c:		CMDQ_LOG("TEST SUCCESS: UAR0_BUS_VA = 0x%08x\n", data);
cmdq/v3/cmdq_test.c:	CMDQ_LOG("Before UAR0_BUS_VA = 0x%08x=====\n", data);
cmdq/v3/cmdq_test.c:	CMDQ_LOG("after UAR0_BUS_VA = 0x%08x=====\n", data);
cmdq/v3/cmdq_test.c:		CMDQ_LOG("TEST SUCCESS: UAR0_BUS_VA = 0x%08x\n", data);
cmdq/v3/cmdq_test.c:	CMDQ_LOG("ALLOC:%pa\n", &pa);
cmdq/v3/cmdq_test.c:	CMDQ_LOG("value 0:0x%08x\n", value);
cmdq/v3/cmdq_test.c:	CMDQ_LOG("value 1:0x%08x\n", value);
cmdq/v3/cmdq_test.c:	CMDQ_LOG("value 2:0x%08x\n", value);
cmdq/v3/cmdq_test.c:	CMDQ_LOG("value 3:0x%08x\n", value);
cmdq/v3/cmdq_test.c:	CMDQ_LOG("value 4:0x%08x\n", value);
cmdq/v3/cmdq_test.c:	CMDQ_LOG("value 80:0x%08x\n", value);
cmdq/v3/cmdq_test.c:	CMDQ_LOG("cmdqCoreFreeWriteAddress, pa:0, it's a error case\n");
cmdq/v3/cmdq_test.c:	CMDQ_LOG("cmdqCoreFreeWriteAddress, pa:%pa it's a ok case\n", &pa);
cmdq/v3/cmdq_test.c:	CMDQ_LOG("srcGPR(%x):0x%llx\n", srcRegId, value64);
cmdq/v3/cmdq_test.c:	CMDQ_LOG("dstGPR(%x):0x%08x\n", dstRegId, value);
cmdq/v3/cmdq_test.c:		CMDQ_LOG("testcase_cmdqBackupWriteSlot OK!!!!!\n");
cmdq/v3/cmdq_test.c:		CMDQ_LOG("backup slot %d = 0x%08x\n", i, value);
cmdq/v3/cmdq_test.c:			CMDQ_LOG("slot[%d] = 0x%08x\n", i, value);
cmdq/v3/cmdq_test.c:	CMDQ_LOG("poll value is 0x%08x\n", poll_value);
cmdq/v3/cmdq_test.c:	CMDQ_LOG("poll mask is 0x%08x\n", poll_mask);
cmdq/v3/cmdq_test.c:	CMDQ_LOG("use_mmsys_dummy is %u\n", use_mmsys_dummy);
cmdq/v3/cmdq_test.c:	CMDQ_LOG("target value is 0x%08x\n", value);
cmdq/v3/cmdq_test.c:	CMDQ_LOG("set reg=%lx to val=%x\n", dummy_va,
cmdq/v3/cmdq_test.c:	CMDQ_LOG("flush mdp desc va:0x%p size:%u\n",
cmdq/v3/cmdq_test.c:		CMDQ_LOG("pid:%d flush:%6d\n", current->pid, i);
cmdq/v3/cmdq_test.c:			CMDQ_LOG("set token:%d to 1\n",
cmdq/v3/cmdq_test.c:	CMDQ_LOG("=========== secure primary path ===========\n");
cmdq/v3/cmdq_test.c:	CMDQ_LOG("=========== secure sub path ===========\n");
cmdq/v3/cmdq_test.c:	CMDQ_LOG("=========== disp secure primary path ===========\n");
cmdq/v3/cmdq_test.c:	CMDQ_LOG("%s, engine:0x%llx it's a engine clock test case\n",
cmdq/v3/cmdq_test.c:	CMDQ_LOG("set reg=%lx to val=%x\n", dummy_va,
cmdq/v3/cmdq_test.c:			CMDQ_LOG(
cmdq/v3/cmdq_test.c:			CMDQ_LOG(
cmdq/v3/cmdq_test.c:			CMDQ_LOG(
cmdq/v3/cmdq_test.c:		CMDQ_LOG("stop monitor thread\n");
cmdq/v3/cmdq_test.c:		CMDQ_LOG("[MONITOR] reach MAX monitor number:%d force flush\n",
cmdq/v3/cmdq_test.c:			CMDQ_LOG("start monitor thread\n");
cmdq/v3/cmdq_test.c:	CMDQ_LOG("monitor after delay: (%d)ms, start polling again\n",
cmdq/v3/cmdq_test.c:	CMDQ_LOG(
cmdq/v3/cmdq_test.c:		CMDQ_LOG("stop polling monitor thread: regAddr:0x%08llx\n",
cmdq/v3/cmdq_test.c:	CMDQ_LOG(
cmdq/v3/cmdq_test.c:			CMDQ_LOG("Acquire resource fail: it's expected!\n");
cmdq/v3/cmdq_test.c:			CMDQ_LOG("Acquire resource success: it's expected!\n");
cmdq/v3/cmdq_test.c:	CMDQ_LOG("duration time, %u, ns\n", duration_time);
cmdq/v3/cmdq_test.c:	CMDQ_LOG("track_task: engine:0x%08llx\n", handle->engineFlag);
cmdq/v3/cmdq_test.c:		CMDQ_LOG("%s, init kthread_run failed!\n", __func__);
cmdq/v3/cmdq_test.c:			CMDQ_LOG("%s, thread id:%d init kthread_run failed!\n",
cmdq/v3/cmdq_test.c:			CMDQ_LOG("%s, thread id:%d init kthread_run failed!\n",
cmdq/v3/cmdq_test.c:	CMDQ_LOG("TEST TPR before: 0x%08x, after: 0x%08x\n",
cmdq/v3/cmdq_test.c:	CMDQ_LOG("TEST delay API duration time, %u, ns\n", duration_time);
cmdq/v3/cmdq_test.c:		CMDQ_LOG("basic_delay test passed!\n");
cmdq/v3/cmdq_test.c:		CMDQ_LOG("expect:(%u), result:(%u), tolerance(%u)\n",
cmdq/v3/cmdq_test.c:	CMDQ_LOG("copy data source:\n");
cmdq/v3/cmdq_test.c:	print_hex_dump(KERN_ERR, "[CMDQ][LOG]", DUMP_PREFIX_ADDRESS, 16, 4,
cmdq/v3/cmdq_test.c:		CMDQ_LOG("wrote value is 0x%08x\n", value);
cmdq/v3/cmdq_test.c:		CMDQ_LOG("Round#%d wait result:0x%08x = %u ns\n",
cmdq/v3/cmdq_test.c:		CMDQ_LOG("Round#%d wait loop count:%u\n", round, loop_count);
cmdq/v3/cmdq_test.c:		CMDQ_LOG("Round#%d TPR before:0x%08x after:0x%08x %u ns\n",
cmdq/v3/cmdq_test.c:	CMDQ_LOG("%s expect wait: 50~150ms, real wait:%dms\n",
cmdq/v3/cmdq_test.c:	CMDQ_LOG("%s expect timeout: 200ms, real wait:%dms\n",
cmdq/v3/cmdq_test.c:		CMDQ_LOG("1. read x:0x%08x read_y:0x%08x\n",
cmdq/v3/cmdq_test.c:		CMDQ_LOG("2. read x:0x%08x read_y:0x%08x\n",
cmdq/v3/cmdq_test.c:		CMDQ_LOG(
cmdq/v3/cmdq_test.c:			CMDQ_LOG("%s, timeout case in secure path\n",
cmdq/v3/cmdq_test.c:			CMDQ_LOG("%s, timeout case in secure path\n",
cmdq/v3/cmdq_test.c:	CMDQ_LOG("%s START with test_prefetch:%d\n", __func__, test_prefetch);
cmdq/v3/cmdq_test.c:	CMDQ_LOG("verify END behavior with command size:%d\n", cmd_size);
cmdq/v3/cmdq_test.c:	CMDQ_LOG("Step0: PC:%pa\n", &pa);
cmdq/v3/cmdq_test.c:	CMDQ_LOG("Step1: PC:%pa result:%d\n", &pa, read_result);
cmdq/v3/cmdq_test.c:	CMDQ_LOG("Step2: PC:%pa result:%d\n", &pa, read_result);
cmdq/v3/cmdq_test.c:	CMDQ_LOG("Step3: PC:%pa\n", &pa);
cmdq/v3/cmdq_test.c:		CMDQ_LOG("[WARNING] thread %d suspend not effective\n",
cmdq/v3/cmdq_test.c:		CMDQ_LOG("Flush test round #%u\n", index);
cmdq/v3/cmdq_test.c:		CMDQ_LOG("TEST SUCCESS: start:%u end:%u dur:%u mask:0x%08x\n",
cmdq/v3/cmdq_test.c:		CMDQ_LOG("reset GCE thread %d failed\n", thread_id);
cmdq/v3/cmdq_test.c:	CMDQ_LOG("%s spr:0x%x 0x%x 0x%x 0x%x dummy:0x%x\n",
cmdq/v3/cmdq_test.c:	CMDQ_LOG("%s value:%u\n", __func__, value);
cmdq/v3/cmdq_test.c:		CMDQ_LOG("[SUCCESS]slot = 0x%08x SUCCESS\n", result);
cmdq/v3/cmdq_test.c:	CMDQ_LOG(
cmdq/v3/cmdq_test.c:		CMDQ_LOG(
cmdq/v3/cmdq_test.c:		CMDQ_LOG(
cmdq/v3/cmdq_test.c:	CMDQ_LOG(
cmdq/v3/cmdq_test.c:			CMDQ_LOG(
cmdq/v3/cmdq_test.c:	CMDQ_LOG("%s va:0x%lx pa:0x%lx mask:0x%08x\n",
cmdq/v3/cmdq_test.c:	CMDQ_LOG("%s start loop thread:%d pkt:0x%p\n",
cmdq/v3/cmdq_test.c:	CMDQ_LOG("%s stop timer\n", __func__);
cmdq/v3/cmdq_test.c:	CMDQ_LOG("%s threaded:%s\n", __func__, threaded ? "true" : "false");
cmdq/v3/cmdq_test.c:	CMDQ_LOG("pkt:0x%p buf size:%zu size:%zu avail:%zu\n",
cmdq/v3/cmdq_test.c:	CMDQ_LOG("%s poll value:0x%08x poll mask:0x%08x use mmsys:%s\n",
cmdq/v3/cmdq_test.c:	CMDQ_LOG("target value is 0x%08x\n", value);
cmdq/v3/cmdq_test.c:	CMDQ_LOG("%s poll value:0x%08x poll mask:0x%08x use mmsys:%s\n",
cmdq/v3/cmdq_test.c:		CMDQ_LOG("target value is 0x%08x cost time:%d cpu:%llu\n",
cmdq/v3/cmdq_test.c:	CMDQ_LOG("%s GCE PA:%pa\n", __func__, &thread->gce_pa);
cmdq/v3/cmdq_test.c:	CMDQ_LOG("pkt:0x%p buf:0x%p\n", pkt, buf);
cmdq/v3/cmdq_test.c:	CMDQ_LOG("use gce write tpr to:0x%p(%pa) and 0x%p\n",
cmdq/v3/cmdq_test.c:	cmdq_pkt_logic_command(pkt, CMDQ_LOGIC_ADD, CMDQ_GPR_CNT_ID + reg_gpr,
cmdq/v3/cmdq_test.c:		CMDQ_LOG("%s sleep cost time:%u (%u %u) cpu:%llu\n",
cmdq/v3/cmdq_test.c:	CMDQ_LOG("pkt:0x%p buf:0x%p\n", pkt, buf);
cmdq/v3/cmdq_test.c:	CMDQ_LOG("use gce write tpr to:0x%p(%pa) and 0x%p\n",
cmdq/v3/cmdq_test.c:		CMDQ_LOG("sleep cost time:%u (%u %u %u) cpu:%llu\n",
cmdq/v3/cmdq_test.c:		CMDQ_LOG("FPGA Verify Start!\n");
cmdq/v3/cmdq_test.c:		CMDQ_LOG("FPGA Verify Done!\n");
cmdq/v3/cmdq_test.c:		CMDQ_LOG(
cmdq/v3/cmdq_test.c:	CMDQ_LOG("[TESTCASE]CONFIG: gCmdqTestSecure:%d testType:%lld\n",
cmdq/v3/cmdq_test.c:	CMDQ_LOG("[TESTCASE]CONFIG PARAMETER: [1]:%lld [2]:%lld [3]:%lld\n",
cmdq/v3/cmdq_prof.c:	case CMDQ_CODE_LOGIC:
cmdq/v3/cmdq_prof.c:	CMDQ_LOG("NAME, COUNT, least HW exec cycle\n");
cmdq/v3/cmdq_prof.c:		CMDQ_LOG("%d:%11s, %d, %3d\n",
cmdq/v3/cmdq_prof.c:	CMDQ_LOG("=====================================\n");
cmdq/v3/cmdq_prof.c:	CMDQ_LOG("estimated least HW exec time(ns): %6d\n", totalNS);
cmdq/v3/cmdq_prof.c:	CMDQ_LOG("***each HW cycle spends time(ns): %6d\n",
cmdq/v3/cmdq_prof.c:	CMDQ_LOG(
cmdq/v3/cmdq_device.c:	CMDQ_LOG("DEV: VA ref(%s):0x%lx\n", ref_name, VA);
cmdq/v3/cmdq_device.c:		CMDQ_LOG("[WARN]clock module does not support:%s\n", clkName);
cmdq/v3/cmdq_device.c:		CMDQ_LOG("DEV: PA ref(%s): start:%pa\n",
cmdq/v3/cmdq_device.c:			CMDQ_LOG("(%s) msb:0x%08x, %d, 0x%08x\n",
cmdq/v3/cmdq_device.c:			CMDQ_LOG("%s = %d\n", dts_name, eventValue);
cmdq/v3/cmdq_device.c:			CMDQ_LOG("%s = %d\n", event_name, eventValue);
cmdq/v3/cmdq_device.c:		CMDQ_LOG("free CPR size:%u thread:%u\n",
cmdq/v3/cmdq_device.c:		CMDQ_LOG(
cmdq/v3/cmdq_driver.c:		CMDQ_LOG("[warn]secure task without secure handle\n");
cmdq/v3/cmdq_driver.c:		CMDQ_LOG("[warn]job wait and close cost:%lluus handle:0x%p\n",
cmdq/v3/cmdq_driver.c:	CMDQ_LOG("CMDQ driver probe begin\n");
cmdq/v3/cmdq_driver.c:	CMDQ_LOG("CMDQ driver probe end\n");
cmdq/v3/cmdq_driver.c:	CMDQ_LOG("%s ignore\n", __func__);
cmdq/v3/cmdq_driver.c:	CMDQ_LOG("%s ignore\n", __func__);
cmdq/v3/cmdq_driver.c:	CMDQ_LOG("%s begin\n", __func__);
cmdq/v3/cmdq_driver.c:	CMDQ_LOG("%s end\n", __func__);
cmdq/v3/cmdq_driver.c:	CMDQ_LOG("%s CMDQ driver init begin\n", __func__);
cmdq/v3/cmdq_driver.c:	CMDQ_LOG("CMDQ driver init end\n");
cmdq/v3/cmdq_driver.c:	CMDQ_LOG("CMDQ driver exit begin\n");
cmdq/v3/cmdq_driver.c:	CMDQ_LOG("CMDQ driver exit end\n");
cmdq/v3/cmdq_helper_ext.h:#define CMDQ_LOG(string, args...)
cmdq/v3/cmdq_helper_ext.h:enum CMDQ_LOG_LEVEL_ENUM {
cmdq/v3/cmdq_helper_ext.h:	CMDQ_LOG_LEVEL_NORMAL = 0,
cmdq/v3/cmdq_helper_ext.h:	CMDQ_LOG_LEVEL_MSG = 1,
cmdq/v3/cmdq_helper_ext.h:	CMDQ_LOG_LEVEL_FULL_ERROR = 2,
cmdq/v3/cmdq_helper_ext.h:	CMDQ_LOG_LEVEL_EXTENSION = 3,
cmdq/v3/cmdq_helper_ext.h:	CMDQ_LOG_LEVEL_PMQOS = 4,
cmdq/v3/cmdq_helper_ext.h:	CMDQ_LOG_LEVEL_SECURE = 5,
cmdq/v3/cmdq_helper_ext.h:	CMDQ_LOG_LEVEL_MAX	/* ALWAYS keep at the end */
cmdq/v3/cmdq_mdp_common.c:#define CMDQ_LOG_PMQOS(string, args...)
cmdq/v3/cmdq_mdp_common.c:			CMDQ_LOG("[Res]Client is already lend, event:%d\n",
cmdq/v3/cmdq_mdp_common.c:			CMDQ_LOG("[Res]available CB func is NULL, event:%d\n",
cmdq/v3/cmdq_mdp_common.c:	CMDQ_LOG("[Res]Init resource engine:%u event:%u\n",
cmdq/v3/cmdq_mdp_common.c:		CMDQ_LOG("[Res]resource clock engine:0x%llx enable:%s\n",
cmdq/v3/cmdq_mdp_common.c:			CMDQ_LOG("[Res]release CB func is NULL, event:%d\n",
cmdq/v3/cmdq_mdp_common.c:			CMDQ_LOG(
cmdq/v3/cmdq_mdp_common.c:		CMDQ_LOG(
cmdq/v3/cmdq_mdp_common.c:			CMDQ_LOG(
cmdq/v3/cmdq_mdp_common.c:				CMDQ_LOG(
cmdq/v3/cmdq_mdp_common.c:	CMDQ_LOG("%s start:%d, %d\n", __func__,
cmdq/v3/cmdq_mdp_common.c:		CMDQ_LOG("sec[%u](i:%u,t:%u,h:%#llx,b:%#x,o:%#x,s:%d,p:%d)\n",
cmdq/v3/cmdq_mdp_common.c:		CMDQ_LOG("[M] change meta[%u] (%u, %u, %#x, %#x, %#x)\n", idx,
cmdq/v3/cmdq_mdp_common.c:	CMDQ_LOG("%s %llx\n", __func__, handle->engineFlag);
cmdq/v3/cmdq_mdp_common.c:	CMDQ_LOG("%s finalize\n", __func__);
cmdq/v3/cmdq_mdp_common.c:	CMDQ_LOG("%s flush impl\n", __func__);
cmdq/v3/cmdq_mdp_common.c:		CMDQ_LOG(
cmdq/v3/cmdq_mdp_common.c:		CMDQ_LOG("[warn]wait flush result cost:%lluus handle:0x%p\n",
cmdq/v3/cmdq_mdp_common.c:		CMDQ_LOG(
cmdq/v3/cmdq_mdp_common.c:	CMDQ_LOG("%s\n", __func__);
cmdq/v3/cmdq_mdp_common.c:	CMDQ_LOG_PMQOS("enter %s with handle:0x%p engine:0x%llx thread:%u\n",
cmdq/v3/cmdq_mdp_common.c:	CMDQ_LOG_PMQOS(
cmdq/v3/cmdq_mdp_common.c:			CMDQ_LOG_PMQOS(
cmdq/v3/cmdq_mdp_common.c:	CMDQ_LOG_PMQOS(
cmdq/v3/cmdq_mdp_common.c:	CMDQ_LOG_PMQOS("enter %s handle:0x%p engine:0x%llx\n", __func__,
cmdq/v3/cmdq_mdp_common.c:	CMDQ_LOG_PMQOS("enter %s with handle:0x%p engine:0x%llx\n", __func__,
cmdq/v3/cmdq_mdp_common.c:			CMDQ_LOG_PMQOS(
cmdq/v3/cmdq_mdp_common.c:	CMDQ_LOG_PMQOS(
cmdq/v3/cmdq_mdp_common.c:	CMDQ_LOG_PMQOS("enter %s with handle:0x%p engine:0x%llx\n", __func__,
smi/mmdvfs_mgr_v2.c:#define pr_fmt(fmt) "[" MMDVFS_LOG_TAG "]" fmt
smi/variant/smi_variant.c:#define SMI_LOG_TAG "SMI"
smi/mmdvfs_mgr_v3.c:#define pr_fmt(fmt) "[" MMDVFS_LOG_TAG "]" fmt
smi/Makefile:APPLY_CLK_LOG := false
smi/Makefile:ifeq (true, $(APPLY_CLK_LOG))
smi/Makefile:ccflags-y += -DAPPLY_CLK_LOG
smi/mmdvfs_internal.h:#define MMDVFS_LOG_TAG	"MMDVFS"
smi/mmdvfs_pmqos.c:#ifdef APPLY_CLK_LOG
smi/mmdvfs_pmqos.c:#ifdef APPLY_CLK_LOG
smi/mmdvfs_pmqos.c:#ifdef APPLY_CLK_LOG
smi/mmdvfs_pmqos.c:#ifdef APPLY_CLK_LOG
audio_ipi/audio_ipi_dummy.c:#define AIPI_NOLOG 1
audio_ipi/audio_ipi_dummy.c:#if AIPI_NOLOG
audio_ipi/common/utility/audio_log.h:#ifndef AUDIO_LOG_H
audio_ipi/common/utility/audio_log.h:#define AUDIO_LOG_H
audio_ipi/common/utility/audio_log.h:#define AIPI_NOLOG 1
audio_ipi/common/utility/audio_log.h:#if AIPI_NOLOG
audio_ipi/common/utility/audio_log.h:#ifndef AUD_LOG_V
audio_ipi/common/utility/audio_log.h:#define AUD_LOG_V(x...)
audio_ipi/common/utility/audio_log.h:#define AUD_LOG_V(x...)
audio_ipi/common/utility/audio_log.h:#ifndef AUD_LOG_D
audio_ipi/common/utility/audio_log.h:#define AUD_LOG_D pr_debug
audio_ipi/common/utility/audio_log.h:#ifndef AUD_LOG_W
audio_ipi/common/utility/audio_log.h:#define AUD_LOG_W
audio_ipi/common/utility/audio_log.h:#ifndef AUD_LOG_E
audio_ipi/common/utility/audio_log.h:#define AUD_LOG_E pr_notice
audio_ipi/common/utility/audio_log.h:#endif /* end of AUDIO_LOG_H */
audio_ipi/common/utility/audio_assert.h:#define AIPI_NOLOG 1
audio_ipi/common/utility/audio_assert.h:#if AIPI_NOLOG
audio_ipi/common/framework/audio_ipi_dma.c:#define DUMP_REGION(LOG_F, description, p_region, count) \
audio_ipi/common/framework/audio_ipi_dma.c:			LOG_F( \
audio_ipi/common/framework/audio_ringbuf.c:#define AIPI_NOLOG 1
audio_ipi/common/framework/audio_ringbuf.c:#if AIPI_NOLOG
audio_ipi/common/framework/audio_ringbuf.c:#ifdef LOG_TAG
audio_ipi/common/framework/audio_ringbuf.c:#undef LOG_TAG
audio_ipi/common/framework/audio_ringbuf.c:#define LOG_TAG "audio_ringbuf"
audio_ipi/common/framework/audio_ringbuf.c:#define DUMP_RINGBUF(LOG_F, description, rb, count)
audio_ipi/common/framework/audio_ipi_driver.c:	AUD_LOG_V("cmd = %u, arg = %lu", cmd, arg);
audio_ipi/common/framework/audio_ipi_queue.c:	AUD_LOG_V(
audio_ipi/common/framework/audio_ipi_queue.c:	AUD_LOG_V(
audio_ipi/common/framework/audio_ipi_queue.c:	AUD_LOG_V("task %d, pop msg: 0x%x, idx_r = %d, idx_w = %d",
audio_ipi/common/framework/audio_ipi_queue.c:	AUD_LOG_V("=> queue status(%d/%d)",
audio_ipi/common/framework/adsp_ipi_queue.c:#define AIPI_NOLOG 1
audio_ipi/common/framework/adsp_ipi_queue.c:#if AIPI_NOLOG
audio_ipi/common/framework/audio_messenger_ipi.h:#define AIPI_NOLOG 1
audio_ipi/common/framework/audio_messenger_ipi.h:#if AIPI_NOLOG
audio_ipi/common/framework/audio_messenger_ipi.c:#define AIPI_NOLOG 1
audio_ipi/common/framework/audio_messenger_ipi.c:#if AIPI_NOLOG
audio_ipi/common/framework/audio_messenger_ipi.c:	AUD_LOG_V("data = %p, len = %u", data, len);
audio_ipi/common/framework/audio_messenger_ipi.c:		AUD_LOG_E("handler = NULL, return");
audio_ipi/common/tasks/spkprotect/audio_spkprotect_msg_id.h:	SPK_IPI_MSG_A2D_LIB_LOG_ON,
audio_ipi/common/tasks/spkprotect/audio_ipi_client_spkprotect.c:			AUD_LOG_E(
audio_ipi/common/tasks/spkprotect/audio_ipi_client_spkprotect.c:	AUD_LOG_D("%s(), dump_queue = %p\n", __func__, dump_queue);
audio_ipi/common/tasks/spkprotect/audio_ipi_client_spkprotect.c:	AUD_LOG_D("%s(), dump_queue = %p\n", __func__, dump_queue);
audio_ipi/common/tasks/spkprotect/audio_ipi_client_spkprotect.c:				AUD_LOG_W("%s(), %s file open error: %ld\n",
audio_ipi/common/tasks/spkprotect/audio_ipi_client_spkprotect.c:				AUD_LOG_W("%s(), %s file open error: %ld\n",
audio_ipi/common/tasks/spkprotect/audio_ipi_client_spkprotect.c:				AUD_LOG_V("pcm_dump = %p writedata = %d\n",
audio_ipi/common/tasks/spkprotect/audio_ipi_client_spkprotect.c:				AUD_LOG_V("pcm_dump = %p writedata = %d\n",
audio_ipi/common/tasks/spkprotect/audio_ipi_client_spkprotect.c:			AUD_LOG_V(
audio_ipi/common/tasks/spkprotect/audio_ipi_client_spkprotect.c:	AUD_LOG_D("spkprotect_dump_kthread exit\n");
audio_ipi/common/tasks/call/audio_speech_msg_id.h:	IPI_MSG_A2D_LIB_LOG_ON,
audio_ipi/mt6765/audio_ipi_platform.c:#define AIPI_NOLOG 1
audio_ipi/mt6765/audio_ipi_platform.c:#if AIPI_NOLOG
